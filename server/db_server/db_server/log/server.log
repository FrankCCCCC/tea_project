2020-01-28T12:37:37.367Z Local: 1/28/2020, 8:37:37 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:37:37.403Z Local: 1/28/2020, 8:37:37 PM command: DO, rowCount: null 
2020-01-28T12:37:37.423Z Local: 1/28/2020, 8:37:37 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:37:37.426Z Local: 1/28/2020, 8:37:37 PM command: DO, rowCount: null 
2020-01-28T12:37:37.456Z Local: 1/28/2020, 8:37:37 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T12:37:37.460Z Local: 1/28/2020, 8:37:37 PM command: CREATE, rowCount: null 
2020-01-28T12:37:37.477Z Local: 1/28/2020, 8:37:37 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T12:37:37.481Z Local: 1/28/2020, 8:37:37 PM command: SELECT, rowCount: 1 
2020-01-28T12:37:37.490Z Local: 1/28/2020, 8:37:37 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:37:37.494Z Local: 1/28/2020, 8:37:37 PM command: SELECT, rowCount: 3 
2020-01-28T12:37:37.504Z Local: 1/28/2020, 8:37:37 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T12:37:37.506Z Local: 1/28/2020, 8:37:37 PM command: SELECT, rowCount: 10 
2020-01-28T12:37:37.508Z Local: 1/28/2020, 8:37:37 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T12:37:37.511Z Local: 1/28/2020, 8:37:37 PM command: SELECT, rowCount: 10 
2020-01-28T12:37:37.541Z Local: 1/28/2020, 8:37:37 PM command: SELECT, rowCount: 1 
2020-01-28T12:37:37.554Z Local: 1/28/2020, 8:37:37 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T12:37:37.572Z Local: 1/28/2020, 8:37:37 PM command: CREATE, rowCount: null 
2020-01-28T12:37:37.597Z Local: 1/28/2020, 8:37:37 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T12:37:37.602Z Local: 1/28/2020, 8:37:37 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T12:37:37.626Z Local: 1/28/2020, 8:37:37 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:37:37.630Z Local: 1/28/2020, 8:37:37 PM command: SELECT, rowCount: 3 
2020-01-28T12:37:37.640Z Local: 1/28/2020, 8:37:37 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T12:37:37.650Z Local: 1/28/2020, 8:37:37 PM command: SELECT, rowCount: 40 
2020-01-28T12:37:37.658Z Local: 1/28/2020, 8:37:37 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T12:37:37.663Z Local: 1/28/2020, 8:37:37 PM command: SELECT, rowCount: 40 
2020-01-28T12:37:37.678Z Local: 1/28/2020, 8:37:37 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T12:37:37.681Z Local: 1/28/2020, 8:37:37 PM command: SELECT, rowCount: 1 
2020-01-28T12:47:14.752Z Local: 1/28/2020, 8:47:14 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:47:14.780Z Local: 1/28/2020, 8:47:14 PM command: DO, rowCount: null 
2020-01-28T12:47:14.783Z Local: 1/28/2020, 8:47:14 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:47:14.785Z Local: 1/28/2020, 8:47:14 PM command: DO, rowCount: null 
2020-01-28T12:47:14.787Z Local: 1/28/2020, 8:47:14 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T12:47:14.789Z Local: 1/28/2020, 8:47:14 PM command: CREATE, rowCount: null 
2020-01-28T12:47:14.792Z Local: 1/28/2020, 8:47:14 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T12:47:14.796Z Local: 1/28/2020, 8:47:14 PM command: SELECT, rowCount: 1 
2020-01-28T12:47:14.798Z Local: 1/28/2020, 8:47:14 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:47:14.803Z Local: 1/28/2020, 8:47:14 PM command: SELECT, rowCount: 3 
2020-01-28T12:47:14.810Z Local: 1/28/2020, 8:47:14 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T12:47:14.812Z Local: 1/28/2020, 8:47:14 PM command: SELECT, rowCount: 10 
2020-01-28T12:47:14.815Z Local: 1/28/2020, 8:47:14 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T12:47:14.818Z Local: 1/28/2020, 8:47:14 PM command: SELECT, rowCount: 10 
2020-01-28T12:47:14.829Z Local: 1/28/2020, 8:47:14 PM command: SELECT, rowCount: 1 
2020-01-28T12:47:14.846Z Local: 1/28/2020, 8:47:14 PM command: SELECT, rowCount: 2 
2020-01-28T12:47:14.863Z Local: 1/28/2020, 8:47:14 PM Error: error: invalid input syntax for integer: "NaN" 
2020-01-28T12:47:16.869Z Local: 1/28/2020, 8:47:16 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T12:47:16.900Z Local: 1/28/2020, 8:47:16 PM command: CREATE, rowCount: null 
2020-01-28T12:47:16.902Z Local: 1/28/2020, 8:47:16 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T12:47:16.905Z Local: 1/28/2020, 8:47:16 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T12:47:16.907Z Local: 1/28/2020, 8:47:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:47:16.910Z Local: 1/28/2020, 8:47:16 PM command: SELECT, rowCount: 3 
2020-01-28T12:47:16.916Z Local: 1/28/2020, 8:47:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T12:47:16.919Z Local: 1/28/2020, 8:47:16 PM command: SELECT, rowCount: 40 
2020-01-28T12:47:16.921Z Local: 1/28/2020, 8:47:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T12:47:16.924Z Local: 1/28/2020, 8:47:16 PM command: SELECT, rowCount: 40 
2020-01-28T12:47:16.943Z Local: 1/28/2020, 8:47:16 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T12:47:16.946Z Local: 1/28/2020, 8:47:16 PM command: SELECT, rowCount: 1 
2020-01-28T12:48:07.553Z Local: 1/28/2020, 8:48:07 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:48:07.584Z Local: 1/28/2020, 8:48:07 PM command: DO, rowCount: null 
2020-01-28T12:48:07.596Z Local: 1/28/2020, 8:48:07 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:48:07.604Z Local: 1/28/2020, 8:48:07 PM command: DO, rowCount: null 
2020-01-28T12:48:07.626Z Local: 1/28/2020, 8:48:07 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T12:48:07.631Z Local: 1/28/2020, 8:48:07 PM command: CREATE, rowCount: null 
2020-01-28T12:48:07.647Z Local: 1/28/2020, 8:48:07 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T12:48:07.651Z Local: 1/28/2020, 8:48:07 PM command: SELECT, rowCount: 1 
2020-01-28T12:48:07.668Z Local: 1/28/2020, 8:48:07 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:48:07.673Z Local: 1/28/2020, 8:48:07 PM command: SELECT, rowCount: 3 
2020-01-28T12:48:07.682Z Local: 1/28/2020, 8:48:07 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T12:48:07.691Z Local: 1/28/2020, 8:48:07 PM command: SELECT, rowCount: 10 
2020-01-28T12:48:07.700Z Local: 1/28/2020, 8:48:07 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T12:48:07.702Z Local: 1/28/2020, 8:48:07 PM command: SELECT, rowCount: 10 
2020-01-28T12:48:07.732Z Local: 1/28/2020, 8:48:07 PM command: SELECT, rowCount: 1 
2020-01-28T12:48:07.752Z Local: 1/28/2020, 8:48:07 PM command: SELECT, rowCount: 2 
2020-01-28T12:48:07.773Z Local: 1/28/2020, 8:48:07 PM Error: error: invalid input syntax for integer: "NaN" 
2020-01-28T12:48:09.779Z Local: 1/28/2020, 8:48:09 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T12:48:09.801Z Local: 1/28/2020, 8:48:09 PM command: CREATE, rowCount: null 
2020-01-28T12:48:09.803Z Local: 1/28/2020, 8:48:09 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T12:48:09.806Z Local: 1/28/2020, 8:48:09 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T12:48:09.809Z Local: 1/28/2020, 8:48:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:48:09.812Z Local: 1/28/2020, 8:48:09 PM command: SELECT, rowCount: 3 
2020-01-28T12:48:09.821Z Local: 1/28/2020, 8:48:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T12:48:09.835Z Local: 1/28/2020, 8:48:09 PM command: SELECT, rowCount: 40 
2020-01-28T12:48:09.845Z Local: 1/28/2020, 8:48:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T12:48:09.849Z Local: 1/28/2020, 8:48:09 PM command: SELECT, rowCount: 40 
2020-01-28T12:48:09.865Z Local: 1/28/2020, 8:48:09 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T12:48:09.867Z Local: 1/28/2020, 8:48:09 PM command: SELECT, rowCount: 1 
2020-01-28T12:49:46.514Z Local: 1/28/2020, 8:49:46 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:49:46.546Z Local: 1/28/2020, 8:49:46 PM command: DO, rowCount: null 
2020-01-28T12:49:46.569Z Local: 1/28/2020, 8:49:46 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:49:46.582Z Local: 1/28/2020, 8:49:46 PM command: DO, rowCount: null 
2020-01-28T12:49:46.601Z Local: 1/28/2020, 8:49:46 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T12:49:46.613Z Local: 1/28/2020, 8:49:46 PM command: CREATE, rowCount: null 
2020-01-28T12:49:46.624Z Local: 1/28/2020, 8:49:46 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T12:49:46.627Z Local: 1/28/2020, 8:49:46 PM command: SELECT, rowCount: 1 
2020-01-28T12:49:46.646Z Local: 1/28/2020, 8:49:46 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:49:46.656Z Local: 1/28/2020, 8:49:46 PM command: SELECT, rowCount: 3 
2020-01-28T12:49:46.664Z Local: 1/28/2020, 8:49:46 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T12:49:46.667Z Local: 1/28/2020, 8:49:46 PM command: SELECT, rowCount: 10 
2020-01-28T12:49:46.682Z Local: 1/28/2020, 8:49:46 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T12:49:46.684Z Local: 1/28/2020, 8:49:46 PM command: SELECT, rowCount: 10 
2020-01-28T12:49:46.705Z Local: 1/28/2020, 8:49:46 PM command: SELECT, rowCount: 1 
2020-01-28T12:49:46.714Z Local: 1/28/2020, 8:49:46 PM command: SELECT, rowCount: 2 
2020-01-28T12:49:46.719Z Local: 1/28/2020, 8:49:46 PM command: SELECT, rowCount: 2 
2020-01-28T12:49:48.726Z Local: 1/28/2020, 8:49:48 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T12:49:48.747Z Local: 1/28/2020, 8:49:48 PM command: CREATE, rowCount: null 
2020-01-28T12:49:48.749Z Local: 1/28/2020, 8:49:48 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T12:49:48.751Z Local: 1/28/2020, 8:49:48 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T12:49:48.753Z Local: 1/28/2020, 8:49:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:49:48.756Z Local: 1/28/2020, 8:49:48 PM command: SELECT, rowCount: 3 
2020-01-28T12:49:48.758Z Local: 1/28/2020, 8:49:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T12:49:48.761Z Local: 1/28/2020, 8:49:48 PM command: SELECT, rowCount: 40 
2020-01-28T12:49:48.764Z Local: 1/28/2020, 8:49:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T12:49:48.767Z Local: 1/28/2020, 8:49:48 PM command: SELECT, rowCount: 40 
2020-01-28T12:49:48.786Z Local: 1/28/2020, 8:49:48 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T12:49:48.789Z Local: 1/28/2020, 8:49:48 PM command: SELECT, rowCount: 1 
2020-01-28T12:50:44.637Z Local: 1/28/2020, 8:50:44 PM command: SELECT, rowCount: 2 
2020-01-28T12:51:04.624Z Local: 1/28/2020, 8:51:04 PM command: SELECT, rowCount: 2 
2020-01-28T12:51:24.833Z Local: 1/28/2020, 8:51:24 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:51:24.869Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 2 
2020-01-28T12:51:24.878Z Local: 1/28/2020, 8:51:24 PM command: DO, rowCount: null 
2020-01-28T12:51:24.882Z Local: 1/28/2020, 8:51:24 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:51:24.883Z Local: 1/28/2020, 8:51:24 PM command: DO, rowCount: null 
2020-01-28T12:51:24.885Z Local: 1/28/2020, 8:51:24 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T12:51:24.888Z Local: 1/28/2020, 8:51:24 PM command: CREATE, rowCount: null 
2020-01-28T12:51:24.896Z Local: 1/28/2020, 8:51:24 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T12:51:24.898Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 1 
2020-01-28T12:51:24.900Z Local: 1/28/2020, 8:51:24 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:51:24.907Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 3 
2020-01-28T12:51:24.909Z Local: 1/28/2020, 8:51:24 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T12:51:24.912Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 10 
2020-01-28T12:51:24.914Z Local: 1/28/2020, 8:51:24 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T12:51:24.916Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 10 
2020-01-28T12:51:24.923Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 1 
2020-01-28T12:51:24.927Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 2 
2020-01-28T12:51:24.940Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 2 
2020-01-28T12:51:24.949Z Local: 1/28/2020, 8:51:24 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T12:51:24.970Z Local: 1/28/2020, 8:51:24 PM command: CREATE, rowCount: null 
2020-01-28T12:51:24.973Z Local: 1/28/2020, 8:51:24 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T12:51:24.976Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T12:51:24.977Z Local: 1/28/2020, 8:51:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:51:24.980Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 3 
2020-01-28T12:51:24.983Z Local: 1/28/2020, 8:51:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T12:51:24.987Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 40 
2020-01-28T12:51:24.989Z Local: 1/28/2020, 8:51:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T12:51:24.993Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 40 
2020-01-28T12:51:24.996Z Local: 1/28/2020, 8:51:24 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T12:51:24.998Z Local: 1/28/2020, 8:51:24 PM command: SELECT, rowCount: 1 
2020-01-28T12:52:33.727Z Local: 1/28/2020, 8:52:33 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:52:33.760Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 2 
2020-01-28T12:52:33.764Z Local: 1/28/2020, 8:52:33 PM command: DO, rowCount: null 
2020-01-28T12:52:33.768Z Local: 1/28/2020, 8:52:33 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T12:52:33.771Z Local: 1/28/2020, 8:52:33 PM command: DO, rowCount: null 
2020-01-28T12:52:33.773Z Local: 1/28/2020, 8:52:33 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T12:52:33.776Z Local: 1/28/2020, 8:52:33 PM command: CREATE, rowCount: null 
2020-01-28T12:52:33.778Z Local: 1/28/2020, 8:52:33 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T12:52:33.786Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 1 
2020-01-28T12:52:33.788Z Local: 1/28/2020, 8:52:33 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:52:33.792Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 3 
2020-01-28T12:52:33.796Z Local: 1/28/2020, 8:52:33 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T12:52:33.798Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 10 
2020-01-28T12:52:33.800Z Local: 1/28/2020, 8:52:33 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T12:52:33.802Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 10 
2020-01-28T12:52:33.818Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 1 
2020-01-28T12:52:33.821Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 2 
2020-01-28T12:52:33.831Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 2 
2020-01-28T12:52:33.834Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 2 
2020-01-28T12:52:33.835Z Local: 1/28/2020, 8:52:33 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T12:52:33.854Z Local: 1/28/2020, 8:52:33 PM command: CREATE, rowCount: null 
2020-01-28T12:52:33.858Z Local: 1/28/2020, 8:52:33 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T12:52:33.862Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T12:52:33.864Z Local: 1/28/2020, 8:52:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T12:52:33.867Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 3 
2020-01-28T12:52:33.869Z Local: 1/28/2020, 8:52:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T12:52:33.872Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 40 
2020-01-28T12:52:33.874Z Local: 1/28/2020, 8:52:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T12:52:33.878Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 40 
2020-01-28T12:52:33.882Z Local: 1/28/2020, 8:52:33 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T12:52:33.884Z Local: 1/28/2020, 8:52:33 PM command: SELECT, rowCount: 1 
2020-01-28T12:54:39.074Z Local: 1/28/2020, 8:54:39 PM command: INSERT, rowCount: 1 
2020-01-28T12:54:57.498Z Local: 1/28/2020, 8:54:57 PM command: INSERT, rowCount: 1 
2020-01-28T12:55:30.986Z Local: 1/28/2020, 8:55:30 PM command: INSERT, rowCount: 1 
2020-01-28T13:39:38.905Z Local: 1/28/2020, 9:39:38 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T13:39:38.960Z Local: 1/28/2020, 9:39:38 PM command: DO, rowCount: null 
2020-01-28T13:39:38.965Z Local: 1/28/2020, 9:39:38 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T13:39:38.966Z Local: 1/28/2020, 9:39:38 PM command: DO, rowCount: null 
2020-01-28T13:39:38.968Z Local: 1/28/2020, 9:39:38 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T13:39:38.978Z Local: 1/28/2020, 9:39:38 PM command: INSERT, rowCount: 1 
2020-01-28T13:39:38.980Z Local: 1/28/2020, 9:39:38 PM command: CREATE, rowCount: null 
2020-01-28T13:39:38.982Z Local: 1/28/2020, 9:39:38 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T13:39:38.994Z Local: 1/28/2020, 9:39:38 PM command: SELECT, rowCount: 1 
2020-01-28T13:39:38.998Z Local: 1/28/2020, 9:39:38 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T13:39:39.003Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 3 
2020-01-28T13:39:39.007Z Local: 1/28/2020, 9:39:39 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T13:39:39.010Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 14 
2020-01-28T13:39:39.012Z Local: 1/28/2020, 9:39:39 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T13:39:39.014Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 14 
2020-01-28T13:39:39.023Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 1 
2020-01-28T13:39:39.028Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 2 
2020-01-28T13:39:39.035Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 2 
2020-01-28T13:39:39.038Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 2 
2020-01-28T13:39:39.048Z Local: 1/28/2020, 9:39:39 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T13:39:39.067Z Local: 1/28/2020, 9:39:39 PM command: CREATE, rowCount: null 
2020-01-28T13:39:39.071Z Local: 1/28/2020, 9:39:39 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T13:39:39.074Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T13:39:39.076Z Local: 1/28/2020, 9:39:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T13:39:39.079Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 3 
2020-01-28T13:39:39.081Z Local: 1/28/2020, 9:39:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T13:39:39.085Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 40 
2020-01-28T13:39:39.086Z Local: 1/28/2020, 9:39:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T13:39:39.090Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 40 
2020-01-28T13:39:39.094Z Local: 1/28/2020, 9:39:39 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T13:39:39.096Z Local: 1/28/2020, 9:39:39 PM command: SELECT, rowCount: 1 
2020-01-28T13:40:51.778Z Local: 1/28/2020, 9:40:51 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T13:40:51.803Z Local: 1/28/2020, 9:40:51 PM command: DO, rowCount: null 
2020-01-28T13:40:51.808Z Local: 1/28/2020, 9:40:51 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T13:40:51.810Z Local: 1/28/2020, 9:40:51 PM command: DO, rowCount: null 
2020-01-28T13:40:51.813Z Local: 1/28/2020, 9:40:51 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T13:40:51.822Z Local: 1/28/2020, 9:40:51 PM command: INSERT, rowCount: 1 
2020-01-28T13:40:51.823Z Local: 1/28/2020, 9:40:51 PM command: CREATE, rowCount: null 
2020-01-28T13:40:51.826Z Local: 1/28/2020, 9:40:51 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T13:40:51.844Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 1 
2020-01-28T13:40:51.868Z Local: 1/28/2020, 9:40:51 PM command: INSERT, rowCount: 1 
2020-01-28T13:40:51.870Z Local: 1/28/2020, 9:40:51 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T13:40:51.874Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 3 
2020-01-28T13:40:51.883Z Local: 1/28/2020, 9:40:51 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T13:40:51.886Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 16 
2020-01-28T13:40:51.887Z Local: 1/28/2020, 9:40:51 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T13:40:51.890Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 16 
2020-01-28T13:40:51.896Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 1 
2020-01-28T13:40:51.899Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 2 
2020-01-28T13:40:51.920Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 2 
2020-01-28T13:40:51.923Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 2 
2020-01-28T13:40:51.934Z Local: 1/28/2020, 9:40:51 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T13:40:51.953Z Local: 1/28/2020, 9:40:51 PM command: CREATE, rowCount: null 
2020-01-28T13:40:51.955Z Local: 1/28/2020, 9:40:51 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T13:40:51.959Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T13:40:51.961Z Local: 1/28/2020, 9:40:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T13:40:51.964Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 3 
2020-01-28T13:40:51.967Z Local: 1/28/2020, 9:40:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T13:40:51.970Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 40 
2020-01-28T13:40:51.972Z Local: 1/28/2020, 9:40:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T13:40:51.975Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 40 
2020-01-28T13:40:51.980Z Local: 1/28/2020, 9:40:51 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T13:40:51.982Z Local: 1/28/2020, 9:40:51 PM command: SELECT, rowCount: 1 
2020-01-28T14:51:46.939Z Local: 1/28/2020, 10:51:46 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T14:51:47.001Z Local: 1/28/2020, 10:51:47 PM Sending 1 rows to ::1 with  
2020-01-28T14:51:46.999Z Local: 1/28/2020, 10:51:46 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T15:07:48.941Z Local: 1/28/2020, 11:07:48 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:07:49.013Z Local: 1/28/2020, 11:07:49 PM command: DO, rowCount: null 
2020-01-28T15:07:49.018Z Local: 1/28/2020, 11:07:49 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:07:49.019Z Local: 1/28/2020, 11:07:49 PM command: DO, rowCount: null 
2020-01-28T15:07:49.021Z Local: 1/28/2020, 11:07:49 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T15:07:49.026Z Local: 1/28/2020, 11:07:49 PM command: CREATE, rowCount: null 
2020-01-28T15:07:49.031Z Local: 1/28/2020, 11:07:49 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T15:07:49.058Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 1 
2020-01-28T15:07:49.096Z Local: 1/28/2020, 11:07:49 PM command: INSERT, rowCount: 1 
2020-01-28T15:07:49.098Z Local: 1/28/2020, 11:07:49 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:07:49.103Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 3 
2020-01-28T15:07:49.108Z Local: 1/28/2020, 11:07:49 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T15:07:49.112Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 17 
2020-01-28T15:07:49.114Z Local: 1/28/2020, 11:07:49 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T15:07:49.117Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 17 
2020-01-28T15:07:49.126Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 1 
2020-01-28T15:07:49.133Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 2 
2020-01-28T15:07:49.149Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 2 
2020-01-28T15:07:49.152Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 2 
2020-01-28T15:07:49.154Z Local: 1/28/2020, 11:07:49 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T15:07:49.173Z Local: 1/28/2020, 11:07:49 PM command: CREATE, rowCount: null 
2020-01-28T15:07:49.176Z Local: 1/28/2020, 11:07:49 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T15:07:49.179Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T15:07:49.181Z Local: 1/28/2020, 11:07:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:07:49.185Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 3 
2020-01-28T15:07:49.187Z Local: 1/28/2020, 11:07:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T15:07:49.191Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 40 
2020-01-28T15:07:49.192Z Local: 1/28/2020, 11:07:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T15:07:49.197Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 40 
2020-01-28T15:07:49.200Z Local: 1/28/2020, 11:07:49 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T15:07:49.201Z Local: 1/28/2020, 11:07:49 PM command: SELECT, rowCount: 1 
2020-01-28T15:31:33.713Z Local: 1/28/2020, 11:31:33 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:31:33.785Z Local: 1/28/2020, 11:31:33 PM command: DO, rowCount: null 
2020-01-28T15:31:33.789Z Local: 1/28/2020, 11:31:33 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:31:33.791Z Local: 1/28/2020, 11:31:33 PM command: DO, rowCount: null 
2020-01-28T15:31:33.793Z Local: 1/28/2020, 11:31:33 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T15:31:33.798Z Local: 1/28/2020, 11:31:33 PM command: CREATE, rowCount: null 
2020-01-28T15:31:33.802Z Local: 1/28/2020, 11:31:33 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T15:31:33.835Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 1 
2020-01-28T15:31:33.867Z Local: 1/28/2020, 11:31:33 PM command: INSERT, rowCount: 1 
2020-01-28T15:31:33.869Z Local: 1/28/2020, 11:31:33 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:31:33.874Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 3 
2020-01-28T15:31:33.876Z Local: 1/28/2020, 11:31:33 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T15:31:33.882Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 18 
2020-01-28T15:31:33.884Z Local: 1/28/2020, 11:31:33 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T15:31:33.887Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 18 
2020-01-28T15:31:33.896Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 1 
2020-01-28T15:31:33.901Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 2 
2020-01-28T15:31:33.910Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 2 
2020-01-28T15:31:33.921Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 2 
2020-01-28T15:31:33.925Z Local: 1/28/2020, 11:31:33 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T15:31:33.947Z Local: 1/28/2020, 11:31:33 PM command: CREATE, rowCount: null 
2020-01-28T15:31:33.950Z Local: 1/28/2020, 11:31:33 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T15:31:33.953Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T15:31:33.954Z Local: 1/28/2020, 11:31:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:31:33.958Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 3 
2020-01-28T15:31:33.962Z Local: 1/28/2020, 11:31:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T15:31:33.966Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 40 
2020-01-28T15:31:33.967Z Local: 1/28/2020, 11:31:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T15:31:33.970Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 40 
2020-01-28T15:31:33.974Z Local: 1/28/2020, 11:31:33 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T15:31:33.975Z Local: 1/28/2020, 11:31:33 PM command: SELECT, rowCount: 1 
2020-01-28T15:32:04.357Z Local: 1/28/2020, 11:32:04 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:32:04.392Z Local: 1/28/2020, 11:32:04 PM command: DO, rowCount: null 
2020-01-28T15:32:04.392Z Local: 1/28/2020, 11:32:04 PM Created Producer type 
2020-01-28T15:32:04.393Z Local: 1/28/2020, 11:32:04 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:32:04.395Z Local: 1/28/2020, 11:32:04 PM command: DO, rowCount: null 
2020-01-28T15:32:04.396Z Local: 1/28/2020, 11:32:04 PM Created Spec type 
2020-01-28T15:32:04.396Z Local: 1/28/2020, 11:32:04 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T15:32:04.398Z Local: 1/28/2020, 11:32:04 PM command: CREATE, rowCount: null 
2020-01-28T15:32:04.399Z Local: 1/28/2020, 11:32:04 PM Created items_table 
2020-01-28T15:32:04.400Z Local: 1/28/2020, 11:32:04 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T15:32:36.484Z Local: 1/28/2020, 11:32:36 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:32:36.517Z Local: 1/28/2020, 11:32:36 PM command: DO, rowCount: null 
2020-01-28T15:32:36.521Z Local: 1/28/2020, 11:32:36 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:32:36.522Z Local: 1/28/2020, 11:32:36 PM command: DO, rowCount: null 
2020-01-28T15:32:36.525Z Local: 1/28/2020, 11:32:36 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T15:32:36.526Z Local: 1/28/2020, 11:32:36 PM command: CREATE, rowCount: null 
2020-01-28T15:32:36.533Z Local: 1/28/2020, 11:32:36 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T15:32:36.538Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 1 
2020-01-28T15:32:36.556Z Local: 1/28/2020, 11:32:36 PM command: INSERT, rowCount: 1 
2020-01-28T15:32:36.558Z Local: 1/28/2020, 11:32:36 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:32:36.562Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 3 
2020-01-28T15:32:36.572Z Local: 1/28/2020, 11:32:36 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T15:32:36.575Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 19 
2020-01-28T15:32:36.576Z Local: 1/28/2020, 11:32:36 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T15:32:36.578Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 19 
2020-01-28T15:32:36.585Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 1 
2020-01-28T15:32:36.589Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 2 
2020-01-28T15:32:36.598Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 2 
2020-01-28T15:32:36.601Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 2 
2020-01-28T15:32:36.614Z Local: 1/28/2020, 11:32:36 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T15:32:36.634Z Local: 1/28/2020, 11:32:36 PM command: CREATE, rowCount: null 
2020-01-28T15:32:36.637Z Local: 1/28/2020, 11:32:36 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T15:32:36.639Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T15:32:36.641Z Local: 1/28/2020, 11:32:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:32:36.643Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 3 
2020-01-28T15:32:36.648Z Local: 1/28/2020, 11:32:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T15:32:36.653Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 40 
2020-01-28T15:32:36.654Z Local: 1/28/2020, 11:32:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T15:32:36.660Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 40 
2020-01-28T15:32:36.661Z Local: 1/28/2020, 11:32:36 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T15:32:36.663Z Local: 1/28/2020, 11:32:36 PM command: SELECT, rowCount: 1 
2020-01-28T15:33:27.505Z Local: 1/28/2020, 11:33:27 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T15:33:27.527Z Local: 1/28/2020, 11:33:27 PM command: SELECT, rowCount: 1 
2020-01-28T15:33:27.557Z Local: 1/28/2020, 11:33:27 PM Sending 1 rows to ::1 with  
2020-01-28T15:35:42.950Z Local: 1/28/2020, 11:35:42 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:35:42.980Z Local: 1/28/2020, 11:35:42 PM command: DO, rowCount: null 
2020-01-28T15:35:42.985Z Local: 1/28/2020, 11:35:42 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:35:42.986Z Local: 1/28/2020, 11:35:42 PM command: DO, rowCount: null 
2020-01-28T15:35:42.988Z Local: 1/28/2020, 11:35:42 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T15:35:42.990Z Local: 1/28/2020, 11:35:42 PM command: CREATE, rowCount: null 
2020-01-28T15:35:42.997Z Local: 1/28/2020, 11:35:42 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T15:35:43.013Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 1 
2020-01-28T15:35:43.054Z Local: 1/28/2020, 11:35:43 PM command: INSERT, rowCount: 1 
2020-01-28T15:35:43.056Z Local: 1/28/2020, 11:35:43 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:35:43.059Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 3 
2020-01-28T15:35:43.061Z Local: 1/28/2020, 11:35:43 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T15:35:43.064Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 20 
2020-01-28T15:35:43.066Z Local: 1/28/2020, 11:35:43 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T15:35:43.069Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 20 
2020-01-28T15:35:43.072Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 1 
2020-01-28T15:35:43.088Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 2 
2020-01-28T15:35:43.102Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 2 
2020-01-28T15:35:43.105Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 2 
2020-01-28T15:35:43.109Z Local: 1/28/2020, 11:35:43 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T15:35:43.130Z Local: 1/28/2020, 11:35:43 PM command: CREATE, rowCount: null 
2020-01-28T15:35:43.133Z Local: 1/28/2020, 11:35:43 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T15:35:43.136Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T15:35:43.138Z Local: 1/28/2020, 11:35:43 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:35:43.140Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 3 
2020-01-28T15:35:43.143Z Local: 1/28/2020, 11:35:43 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T15:35:43.147Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 40 
2020-01-28T15:35:43.148Z Local: 1/28/2020, 11:35:43 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T15:35:43.151Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 40 
2020-01-28T15:35:43.156Z Local: 1/28/2020, 11:35:43 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T15:35:43.158Z Local: 1/28/2020, 11:35:43 PM command: SELECT, rowCount: 1 
2020-01-28T15:36:16.168Z Local: 1/28/2020, 11:36:16 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:36:16.199Z Local: 1/28/2020, 11:36:16 PM command: DO, rowCount: null 
2020-01-28T15:36:16.202Z Local: 1/28/2020, 11:36:16 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:36:16.203Z Local: 1/28/2020, 11:36:16 PM command: DO, rowCount: null 
2020-01-28T15:36:16.206Z Local: 1/28/2020, 11:36:16 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T15:36:16.209Z Local: 1/28/2020, 11:36:16 PM command: CREATE, rowCount: null 
2020-01-28T15:36:16.216Z Local: 1/28/2020, 11:36:16 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T15:36:16.219Z Local: 1/28/2020, 11:36:16 PM command: SELECT, rowCount: 1 
2020-01-28T15:36:16.243Z Local: 1/28/2020, 11:36:16 PM command: INSERT, rowCount: 1 
2020-01-28T15:36:16.244Z Local: 1/28/2020, 11:36:16 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:36:16.248Z Local: 1/28/2020, 11:36:16 PM command: SELECT, rowCount: 3 
2020-01-28T15:36:16.249Z Local: 1/28/2020, 11:36:16 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T15:36:16.253Z Local: 1/28/2020, 11:36:16 PM command: SELECT, rowCount: 21 
2020-01-28T15:36:16.255Z Local: 1/28/2020, 11:36:16 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T15:36:16.259Z Local: 1/28/2020, 11:36:16 PM command: SELECT, rowCount: 21 
2020-01-28T15:36:16.265Z Local: 1/28/2020, 11:36:16 PM command: SELECT, rowCount: 1 
2020-01-28T15:36:16.268Z Local: 1/28/2020, 11:36:16 PM command: SELECT, rowCount: 2 
2020-01-28T15:36:16.281Z Local: 1/28/2020, 11:36:16 PM command: SELECT, rowCount: 2 
2020-01-28T15:36:16.284Z Local: 1/28/2020, 11:36:16 PM command: SELECT, rowCount: 2 
2020-01-28T15:36:20.302Z Local: 1/28/2020, 11:36:20 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T15:36:20.327Z Local: 1/28/2020, 11:36:20 PM command: CREATE, rowCount: null 
2020-01-28T15:36:20.330Z Local: 1/28/2020, 11:36:20 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T15:36:20.333Z Local: 1/28/2020, 11:36:20 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T15:36:20.334Z Local: 1/28/2020, 11:36:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:36:20.339Z Local: 1/28/2020, 11:36:20 PM command: SELECT, rowCount: 3 
2020-01-28T15:36:20.341Z Local: 1/28/2020, 11:36:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T15:36:20.345Z Local: 1/28/2020, 11:36:20 PM command: SELECT, rowCount: 40 
2020-01-28T15:36:20.347Z Local: 1/28/2020, 11:36:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T15:36:20.350Z Local: 1/28/2020, 11:36:20 PM command: SELECT, rowCount: 40 
2020-01-28T15:36:20.353Z Local: 1/28/2020, 11:36:20 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T15:36:20.355Z Local: 1/28/2020, 11:36:20 PM command: SELECT, rowCount: 1 
2020-01-28T15:37:52.102Z Local: 1/28/2020, 11:37:52 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:37:52.132Z Local: 1/28/2020, 11:37:52 PM command: DO, rowCount: null 
2020-01-28T15:37:52.136Z Local: 1/28/2020, 11:37:52 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:37:52.138Z Local: 1/28/2020, 11:37:52 PM command: DO, rowCount: null 
2020-01-28T15:37:52.141Z Local: 1/28/2020, 11:37:52 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T15:37:52.147Z Local: 1/28/2020, 11:37:52 PM command: CREATE, rowCount: null 
2020-01-28T15:37:52.149Z Local: 1/28/2020, 11:37:52 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T15:37:52.153Z Local: 1/28/2020, 11:37:52 PM command: SELECT, rowCount: 1 
2020-01-28T15:37:52.180Z Local: 1/28/2020, 11:37:52 PM command: INSERT, rowCount: 1 
2020-01-28T15:37:52.182Z Local: 1/28/2020, 11:37:52 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:37:52.185Z Local: 1/28/2020, 11:37:52 PM command: SELECT, rowCount: 3 
2020-01-28T15:37:52.187Z Local: 1/28/2020, 11:37:52 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T15:37:52.196Z Local: 1/28/2020, 11:37:52 PM command: SELECT, rowCount: 22 
2020-01-28T15:37:52.198Z Local: 1/28/2020, 11:37:52 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T15:37:52.201Z Local: 1/28/2020, 11:37:52 PM command: SELECT, rowCount: 22 
2020-01-28T15:37:52.208Z Local: 1/28/2020, 11:37:52 PM command: SELECT, rowCount: 1 
2020-01-28T15:37:52.211Z Local: 1/28/2020, 11:37:52 PM command: SELECT, rowCount: 2 
2020-01-28T15:37:52.231Z Local: 1/28/2020, 11:37:52 PM command: SELECT, rowCount: 2 
2020-01-28T15:37:52.234Z Local: 1/28/2020, 11:37:52 PM command: SELECT, rowCount: 2 
2020-01-28T15:37:56.252Z Local: 1/28/2020, 11:37:56 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T15:37:56.276Z Local: 1/28/2020, 11:37:56 PM command: CREATE, rowCount: null 
2020-01-28T15:37:56.279Z Local: 1/28/2020, 11:37:56 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T15:37:56.281Z Local: 1/28/2020, 11:37:56 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T15:37:56.283Z Local: 1/28/2020, 11:37:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:37:56.287Z Local: 1/28/2020, 11:37:56 PM command: SELECT, rowCount: 3 
2020-01-28T15:37:56.290Z Local: 1/28/2020, 11:37:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T15:37:56.294Z Local: 1/28/2020, 11:37:56 PM command: SELECT, rowCount: 40 
2020-01-28T15:37:56.296Z Local: 1/28/2020, 11:37:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T15:37:56.300Z Local: 1/28/2020, 11:37:56 PM command: SELECT, rowCount: 40 
2020-01-28T15:37:56.302Z Local: 1/28/2020, 11:37:56 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T15:37:56.304Z Local: 1/28/2020, 11:37:56 PM command: SELECT, rowCount: 1 
2020-01-28T15:39:07.699Z Local: 1/28/2020, 11:39:07 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:39:07.730Z Local: 1/28/2020, 11:39:07 PM command: DO, rowCount: null 
2020-01-28T15:39:07.734Z Local: 1/28/2020, 11:39:07 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T15:39:07.736Z Local: 1/28/2020, 11:39:07 PM command: DO, rowCount: null 
2020-01-28T15:39:07.739Z Local: 1/28/2020, 11:39:07 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T15:39:07.742Z Local: 1/28/2020, 11:39:07 PM command: CREATE, rowCount: null 
2020-01-28T15:39:07.748Z Local: 1/28/2020, 11:39:07 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T15:39:07.751Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 1 
2020-01-28T15:39:07.777Z Local: 1/28/2020, 11:39:07 PM command: INSERT, rowCount: 1 
2020-01-28T15:39:07.779Z Local: 1/28/2020, 11:39:07 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:39:07.782Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 3 
2020-01-28T15:39:07.783Z Local: 1/28/2020, 11:39:07 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T15:39:07.787Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 23 
2020-01-28T15:39:07.789Z Local: 1/28/2020, 11:39:07 PM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T15:39:07.792Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 23 
2020-01-28T15:39:07.797Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 1 
2020-01-28T15:39:07.804Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 2 
2020-01-28T15:39:07.814Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 2 
2020-01-28T15:39:07.817Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 2 
2020-01-28T15:39:07.830Z Local: 1/28/2020, 11:39:07 PM SELECT COUNT(*) FROM items_table; 
2020-01-28T15:39:07.851Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 1 
2020-01-28T15:39:07.853Z Local: 1/28/2020, 11:39:07 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T15:39:07.889Z Local: 1/28/2020, 11:39:07 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T15:39:07.908Z Local: 1/28/2020, 11:39:07 PM command: CREATE, rowCount: null 
2020-01-28T15:39:07.912Z Local: 1/28/2020, 11:39:07 PM SELECT COUNT(*) FROM posts_table; 
2020-01-28T15:39:07.914Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T15:39:07.916Z Local: 1/28/2020, 11:39:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T15:39:07.919Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 3 
2020-01-28T15:39:07.933Z Local: 1/28/2020, 11:39:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T15:39:07.937Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 40 
2020-01-28T15:39:07.938Z Local: 1/28/2020, 11:39:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T15:39:07.942Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 40 
2020-01-28T15:39:07.945Z Local: 1/28/2020, 11:39:07 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T15:39:07.947Z Local: 1/28/2020, 11:39:07 PM command: SELECT, rowCount: 1 
2020-01-28T17:25:22.648Z Local: 1/29/2020, 1:25:22 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T17:25:22.725Z Local: 1/29/2020, 1:25:22 AM command: DO, rowCount: null 
2020-01-28T17:25:22.728Z Local: 1/29/2020, 1:25:22 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T17:25:22.729Z Local: 1/29/2020, 1:25:22 AM command: DO, rowCount: null 
2020-01-28T17:25:22.732Z Local: 1/29/2020, 1:25:22 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T17:25:22.736Z Local: 1/29/2020, 1:25:22 AM command: CREATE, rowCount: null 
2020-01-28T17:25:22.740Z Local: 1/29/2020, 1:25:22 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T17:25:22.771Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 1 
2020-01-28T17:25:22.804Z Local: 1/29/2020, 1:25:22 AM command: INSERT, rowCount: 1 
2020-01-28T17:25:22.806Z Local: 1/29/2020, 1:25:22 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T17:25:22.813Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 3 
2020-01-28T17:25:22.816Z Local: 1/29/2020, 1:25:22 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T17:25:22.820Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 24 
2020-01-28T17:25:22.821Z Local: 1/29/2020, 1:25:22 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T17:25:22.825Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 24 
2020-01-28T17:25:22.833Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 1 
2020-01-28T17:25:22.836Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 2 
2020-01-28T17:25:22.846Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 2 
2020-01-28T17:25:22.857Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 2 
2020-01-28T17:25:22.868Z Local: 1/29/2020, 1:25:22 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T17:25:22.889Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 1 
2020-01-28T17:25:22.890Z Local: 1/29/2020, 1:25:22 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T17:25:22.912Z Local: 1/29/2020, 1:25:22 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T17:25:22.931Z Local: 1/29/2020, 1:25:22 AM command: CREATE, rowCount: null 
2020-01-28T17:25:22.935Z Local: 1/29/2020, 1:25:22 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T17:25:22.938Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T17:25:22.939Z Local: 1/29/2020, 1:25:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T17:25:22.944Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 3 
2020-01-28T17:25:22.955Z Local: 1/29/2020, 1:25:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T17:25:22.959Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 40 
2020-01-28T17:25:22.961Z Local: 1/29/2020, 1:25:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T17:25:22.965Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 40 
2020-01-28T17:25:22.966Z Local: 1/29/2020, 1:25:22 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T17:25:22.968Z Local: 1/29/2020, 1:25:22 AM command: SELECT, rowCount: 1 
2020-01-28T18:11:39.978Z Local: 1/29/2020, 2:11:39 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:11:40.048Z Local: 1/29/2020, 2:11:40 AM command: DO, rowCount: null 
2020-01-28T18:11:40.052Z Local: 1/29/2020, 2:11:40 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:11:40.054Z Local: 1/29/2020, 2:11:40 AM command: DO, rowCount: null 
2020-01-28T18:11:40.056Z Local: 1/29/2020, 2:11:40 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:11:40.061Z Local: 1/29/2020, 2:11:40 AM command: CREATE, rowCount: null 
2020-01-28T18:11:40.064Z Local: 1/29/2020, 2:11:40 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:11:40.091Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 1 
2020-01-28T18:11:40.124Z Local: 1/29/2020, 2:11:40 AM command: INSERT, rowCount: 1 
2020-01-28T18:11:40.126Z Local: 1/29/2020, 2:11:40 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:11:40.132Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 3 
2020-01-28T18:11:40.137Z Local: 1/29/2020, 2:11:40 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:11:40.140Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 25 
2020-01-28T18:11:40.142Z Local: 1/29/2020, 2:11:40 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:11:40.145Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 25 
2020-01-28T18:11:40.153Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 1 
2020-01-28T18:11:40.161Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 2 
2020-01-28T18:11:40.176Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 2 
2020-01-28T18:11:40.179Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 2 
2020-01-28T18:11:40.191Z Local: 1/29/2020, 2:11:40 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:11:40.213Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 1 
2020-01-28T18:11:40.215Z Local: 1/29/2020, 2:11:40 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:11:40.245Z Local: 1/29/2020, 2:11:40 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:11:40.261Z Local: 1/29/2020, 2:11:40 AM command: CREATE, rowCount: null 
2020-01-28T18:11:40.262Z Local: 1/29/2020, 2:11:40 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:11:40.265Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:11:40.267Z Local: 1/29/2020, 2:11:40 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:11:40.272Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 3 
2020-01-28T18:11:40.273Z Local: 1/29/2020, 2:11:40 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:11:40.278Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 40 
2020-01-28T18:11:40.280Z Local: 1/29/2020, 2:11:40 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:11:40.284Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 40 
2020-01-28T18:11:40.286Z Local: 1/29/2020, 2:11:40 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:11:40.289Z Local: 1/29/2020, 2:11:40 AM command: SELECT, rowCount: 1 
2020-01-28T18:13:43.085Z Local: 1/29/2020, 2:13:43 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:13:43.117Z Local: 1/29/2020, 2:13:43 AM command: DO, rowCount: null 
2020-01-28T18:13:43.120Z Local: 1/29/2020, 2:13:43 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:13:43.122Z Local: 1/29/2020, 2:13:43 AM command: DO, rowCount: null 
2020-01-28T18:13:43.124Z Local: 1/29/2020, 2:13:43 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:13:43.126Z Local: 1/29/2020, 2:13:43 AM command: CREATE, rowCount: null 
2020-01-28T18:13:43.132Z Local: 1/29/2020, 2:13:43 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:13:43.135Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 1 
2020-01-28T18:13:43.157Z Local: 1/29/2020, 2:13:43 AM command: INSERT, rowCount: 1 
2020-01-28T18:13:43.160Z Local: 1/29/2020, 2:13:43 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:13:43.165Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 3 
2020-01-28T18:13:43.168Z Local: 1/29/2020, 2:13:43 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:13:43.172Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 26 
2020-01-28T18:13:43.173Z Local: 1/29/2020, 2:13:43 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:13:43.177Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 26 
2020-01-28T18:13:43.181Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 1 
2020-01-28T18:13:43.184Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 2 
2020-01-28T18:13:43.191Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 2 
2020-01-28T18:13:43.195Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 2 
2020-01-28T18:13:43.203Z Local: 1/29/2020, 2:13:43 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:13:43.224Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 1 
2020-01-28T18:13:43.226Z Local: 1/29/2020, 2:13:43 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:13:43.240Z Local: 1/29/2020, 2:13:43 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:13:43.259Z Local: 1/29/2020, 2:13:43 AM command: CREATE, rowCount: null 
2020-01-28T18:13:43.261Z Local: 1/29/2020, 2:13:43 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:13:43.264Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:13:43.265Z Local: 1/29/2020, 2:13:43 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:13:43.268Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 3 
2020-01-28T18:13:43.271Z Local: 1/29/2020, 2:13:43 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:13:43.274Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 40 
2020-01-28T18:13:43.276Z Local: 1/29/2020, 2:13:43 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:13:43.278Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 40 
2020-01-28T18:13:43.282Z Local: 1/29/2020, 2:13:43 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:13:43.283Z Local: 1/29/2020, 2:13:43 AM command: SELECT, rowCount: 1 
2020-01-28T18:17:28.363Z Local: 1/29/2020, 2:17:28 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:17:28.391Z Local: 1/29/2020, 2:17:28 AM command: DO, rowCount: null 
2020-01-28T18:17:28.395Z Local: 1/29/2020, 2:17:28 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:17:28.396Z Local: 1/29/2020, 2:17:28 AM command: DO, rowCount: null 
2020-01-28T18:17:28.399Z Local: 1/29/2020, 2:17:28 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:17:28.401Z Local: 1/29/2020, 2:17:28 AM command: CREATE, rowCount: null 
2020-01-28T18:17:28.405Z Local: 1/29/2020, 2:17:28 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:17:28.419Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 1 
2020-01-28T18:17:28.435Z Local: 1/29/2020, 2:17:28 AM command: INSERT, rowCount: 1 return id = 27 
2020-01-28T18:17:28.436Z Local: 1/29/2020, 2:17:28 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:17:28.440Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 3 
2020-01-28T18:17:28.442Z Local: 1/29/2020, 2:17:28 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:17:28.446Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 27 
2020-01-28T18:17:28.448Z Local: 1/29/2020, 2:17:28 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:17:28.452Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 27 
2020-01-28T18:17:28.455Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 1 
2020-01-28T18:17:28.458Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 2 
2020-01-28T18:17:28.461Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 2 
2020-01-28T18:17:28.465Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 2 
2020-01-28T18:17:28.475Z Local: 1/29/2020, 2:17:28 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:17:28.495Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 1 
2020-01-28T18:17:28.496Z Local: 1/29/2020, 2:17:28 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:17:28.510Z Local: 1/29/2020, 2:17:28 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:17:28.528Z Local: 1/29/2020, 2:17:28 AM command: CREATE, rowCount: null 
2020-01-28T18:17:28.530Z Local: 1/29/2020, 2:17:28 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:17:28.533Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:17:28.535Z Local: 1/29/2020, 2:17:28 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:17:28.538Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 3 
2020-01-28T18:17:28.540Z Local: 1/29/2020, 2:17:28 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:17:28.543Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 40 
2020-01-28T18:17:28.545Z Local: 1/29/2020, 2:17:28 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:17:28.548Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 40 
2020-01-28T18:17:28.551Z Local: 1/29/2020, 2:17:28 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:17:28.553Z Local: 1/29/2020, 2:17:28 AM command: SELECT, rowCount: 1 
2020-01-28T18:18:18.855Z Local: 1/29/2020, 2:18:18 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:18:18.883Z Local: 1/29/2020, 2:18:18 AM command: DO, rowCount: null 
2020-01-28T18:18:18.886Z Local: 1/29/2020, 2:18:18 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:18:18.888Z Local: 1/29/2020, 2:18:18 AM command: DO, rowCount: null 
2020-01-28T18:18:18.890Z Local: 1/29/2020, 2:18:18 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:18:18.892Z Local: 1/29/2020, 2:18:18 AM command: CREATE, rowCount: null 
2020-01-28T18:18:18.894Z Local: 1/29/2020, 2:18:18 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:18:18.897Z Local: 1/29/2020, 2:18:18 AM command: SELECT, rowCount: 1 
2020-01-28T18:18:18.912Z Local: 1/29/2020, 2:18:18 AM command: INSERT, rowCount: 1 return id = 28 
2020-01-28T18:18:18.915Z Local: 1/29/2020, 2:18:18 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:18:18.918Z Local: 1/29/2020, 2:18:18 AM command: SELECT, rowCount: 3 
2020-01-28T18:18:18.920Z Local: 1/29/2020, 2:18:18 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:18:18.923Z Local: 1/29/2020, 2:18:18 AM command: SELECT, rowCount: 28 
2020-01-28T18:18:18.925Z Local: 1/29/2020, 2:18:18 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:18:18.928Z Local: 1/29/2020, 2:18:18 AM command: SELECT, rowCount: 28 
2020-01-28T18:18:18.934Z Local: 1/29/2020, 2:18:18 AM command: SELECT, rowCount: 1 
2020-01-28T18:18:18.937Z Local: 1/29/2020, 2:18:18 AM command: SELECT, rowCount: 2 
2020-01-28T18:18:18.940Z Local: 1/29/2020, 2:18:18 AM command: SELECT, rowCount: 2 
2020-01-28T18:18:18.943Z Local: 1/29/2020, 2:18:18 AM command: SELECT, rowCount: 2 
2020-01-28T18:18:18.963Z Local: 1/29/2020, 2:18:18 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:18:18.983Z Local: 1/29/2020, 2:18:18 AM command: SELECT, rowCount: 1 
2020-01-28T18:18:18.983Z Local: 1/29/2020, 2:18:18 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:18:18.988Z Local: 1/29/2020, 2:18:18 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:18:19.007Z Local: 1/29/2020, 2:18:19 AM command: CREATE, rowCount: null 
2020-01-28T18:18:19.009Z Local: 1/29/2020, 2:18:19 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:18:19.012Z Local: 1/29/2020, 2:18:19 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:18:19.014Z Local: 1/29/2020, 2:18:19 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:18:19.017Z Local: 1/29/2020, 2:18:19 AM command: SELECT, rowCount: 3 
2020-01-28T18:18:19.018Z Local: 1/29/2020, 2:18:19 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:18:19.022Z Local: 1/29/2020, 2:18:19 AM command: SELECT, rowCount: 40 
2020-01-28T18:18:19.023Z Local: 1/29/2020, 2:18:19 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:18:19.026Z Local: 1/29/2020, 2:18:19 AM command: SELECT, rowCount: 40 
2020-01-28T18:18:19.029Z Local: 1/29/2020, 2:18:19 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:18:19.031Z Local: 1/29/2020, 2:18:19 AM command: SELECT, rowCount: 1 
2020-01-28T18:20:09.558Z Local: 1/29/2020, 2:20:09 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:20:09.586Z Local: 1/29/2020, 2:20:09 AM command: DO, rowCount: null 
2020-01-28T18:20:09.590Z Local: 1/29/2020, 2:20:09 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:20:09.592Z Local: 1/29/2020, 2:20:09 AM command: DO, rowCount: null 
2020-01-28T18:20:09.594Z Local: 1/29/2020, 2:20:09 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:20:09.596Z Local: 1/29/2020, 2:20:09 AM command: CREATE, rowCount: null 
2020-01-28T18:20:09.599Z Local: 1/29/2020, 2:20:09 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:20:09.615Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 1 
2020-01-28T18:20:09.628Z Local: 1/29/2020, 2:20:09 AM command: INSERT, rowCount: 1 return id = 29 
2020-01-28T18:20:09.630Z Local: 1/29/2020, 2:20:09 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:20:09.633Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 3 
2020-01-28T18:20:09.635Z Local: 1/29/2020, 2:20:09 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:20:09.641Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 29 
2020-01-28T18:20:09.642Z Local: 1/29/2020, 2:20:09 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:20:09.646Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 29 
2020-01-28T18:20:09.650Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 1 
2020-01-28T18:20:09.653Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 2 
2020-01-28T18:20:09.658Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 2 
2020-01-28T18:20:09.661Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 2 
2020-01-28T18:20:09.671Z Local: 1/29/2020, 2:20:09 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:20:09.690Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 1 
2020-01-28T18:20:09.691Z Local: 1/29/2020, 2:20:09 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:20:09.708Z Local: 1/29/2020, 2:20:09 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:20:09.728Z Local: 1/29/2020, 2:20:09 AM command: CREATE, rowCount: null 
2020-01-28T18:20:09.730Z Local: 1/29/2020, 2:20:09 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:20:09.733Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:20:09.735Z Local: 1/29/2020, 2:20:09 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:20:09.738Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 3 
2020-01-28T18:20:09.740Z Local: 1/29/2020, 2:20:09 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:20:09.744Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 40 
2020-01-28T18:20:09.745Z Local: 1/29/2020, 2:20:09 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:20:09.749Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 40 
2020-01-28T18:20:09.752Z Local: 1/29/2020, 2:20:09 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:20:09.754Z Local: 1/29/2020, 2:20:09 AM command: SELECT, rowCount: 1 
2020-01-28T18:20:44.902Z Local: 1/29/2020, 2:20:44 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:20:44.934Z Local: 1/29/2020, 2:20:44 AM command: DO, rowCount: null 
2020-01-28T18:20:44.938Z Local: 1/29/2020, 2:20:44 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:20:44.939Z Local: 1/29/2020, 2:20:44 AM command: DO, rowCount: null 
2020-01-28T18:20:44.941Z Local: 1/29/2020, 2:20:44 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:20:44.944Z Local: 1/29/2020, 2:20:44 AM command: CREATE, rowCount: null 
2020-01-28T18:20:44.948Z Local: 1/29/2020, 2:20:44 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:20:44.951Z Local: 1/29/2020, 2:20:44 AM command: SELECT, rowCount: 1 
2020-01-28T18:20:44.968Z Local: 1/29/2020, 2:20:44 AM command: INSERT, rowCount: 1 return id = 30 
2020-01-28T18:20:44.971Z Local: 1/29/2020, 2:20:44 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:20:44.974Z Local: 1/29/2020, 2:20:44 AM command: SELECT, rowCount: 3 
2020-01-28T18:20:44.975Z Local: 1/29/2020, 2:20:44 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:20:44.979Z Local: 1/29/2020, 2:20:44 AM command: SELECT, rowCount: 30 
2020-01-28T18:20:44.981Z Local: 1/29/2020, 2:20:44 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:20:44.985Z Local: 1/29/2020, 2:20:44 AM command: SELECT, rowCount: 30 
2020-01-28T18:20:44.988Z Local: 1/29/2020, 2:20:44 AM command: SELECT, rowCount: 1 
2020-01-28T18:20:44.993Z Local: 1/29/2020, 2:20:44 AM command: SELECT, rowCount: 2 
2020-01-28T18:20:44.996Z Local: 1/29/2020, 2:20:44 AM command: SELECT, rowCount: 2 
2020-01-28T18:20:44.999Z Local: 1/29/2020, 2:20:44 AM command: SELECT, rowCount: 2 
2020-01-28T18:20:45.007Z Local: 1/29/2020, 2:20:45 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:20:45.028Z Local: 1/29/2020, 2:20:45 AM command: SELECT, rowCount: 1 
2020-01-28T18:20:45.030Z Local: 1/29/2020, 2:20:45 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:20:45.047Z Local: 1/29/2020, 2:20:45 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:20:45.068Z Local: 1/29/2020, 2:20:45 AM command: CREATE, rowCount: null 
2020-01-28T18:20:45.069Z Local: 1/29/2020, 2:20:45 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:20:45.071Z Local: 1/29/2020, 2:20:45 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:20:45.072Z Local: 1/29/2020, 2:20:45 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:20:45.075Z Local: 1/29/2020, 2:20:45 AM command: SELECT, rowCount: 3 
2020-01-28T18:20:45.077Z Local: 1/29/2020, 2:20:45 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:20:45.083Z Local: 1/29/2020, 2:20:45 AM command: SELECT, rowCount: 40 
2020-01-28T18:20:45.084Z Local: 1/29/2020, 2:20:45 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:20:45.087Z Local: 1/29/2020, 2:20:45 AM command: SELECT, rowCount: 40 
2020-01-28T18:20:45.089Z Local: 1/29/2020, 2:20:45 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:20:45.091Z Local: 1/29/2020, 2:20:45 AM command: SELECT, rowCount: 1 
2020-01-28T18:42:39.322Z Local: 1/29/2020, 2:42:39 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:42:39.353Z Local: 1/29/2020, 2:42:39 AM command: DO, rowCount: null 
2020-01-28T18:42:39.358Z Local: 1/29/2020, 2:42:39 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:42:39.359Z Local: 1/29/2020, 2:42:39 AM command: DO, rowCount: null 
2020-01-28T18:42:39.362Z Local: 1/29/2020, 2:42:39 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:42:39.367Z Local: 1/29/2020, 2:42:39 AM command: CREATE, rowCount: null 
2020-01-28T18:42:39.370Z Local: 1/29/2020, 2:42:39 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:42:39.402Z Local: 1/29/2020, 2:42:39 AM command: SELECT, rowCount: 1 
2020-01-28T18:42:39.435Z Local: 1/29/2020, 2:42:39 AM command: INSERT, rowCount: 1 return id = 31 
2020-01-28T18:42:39.438Z Local: 1/29/2020, 2:42:39 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:42:39.446Z Local: 1/29/2020, 2:42:39 AM command: SELECT, rowCount: 3 
2020-01-28T18:42:39.448Z Local: 1/29/2020, 2:42:39 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:42:39.453Z Local: 1/29/2020, 2:42:39 AM command: SELECT, rowCount: 31 
2020-01-28T18:42:39.455Z Local: 1/29/2020, 2:42:39 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:42:39.463Z Local: 1/29/2020, 2:42:39 AM command: SELECT, rowCount: 31 
2020-01-28T18:42:39.471Z Local: 1/29/2020, 2:42:39 AM command: SELECT, rowCount: 1 
2020-01-28T18:42:39.476Z Local: 1/29/2020, 2:42:39 AM command: SELECT, rowCount: 2 
2020-01-28T18:42:39.479Z Local: 1/29/2020, 2:42:39 AM command: SELECT, rowCount: 2 
2020-01-28T18:42:39.483Z Local: 1/29/2020, 2:42:39 AM command: SELECT, rowCount: 2 
2020-01-28T18:42:39.498Z Local: 1/29/2020, 2:42:39 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:42:39.522Z Local: 1/29/2020, 2:42:39 AM command: SELECT, rowCount: 1 
2020-01-28T18:42:39.523Z Local: 1/29/2020, 2:42:39 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:42:43.527Z Local: 1/29/2020, 2:42:43 AM command: SELECT, rowCount: 1 
2020-01-28T18:42:43.537Z Local: 1/29/2020, 2:42:43 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:42:45.523Z Local: 1/29/2020, 2:42:45 AM command: SELECT, rowCount: 2 
2020-01-28T18:42:45.527Z Local: 1/29/2020, 2:42:45 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:42:47.558Z Local: 1/29/2020, 2:42:47 AM command: SELECT, rowCount: 2 
2020-01-28T18:42:47.559Z Local: 1/29/2020, 2:42:47 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:42:49.525Z Local: 1/29/2020, 2:42:49 AM command: SELECT, rowCount: 0 
2020-01-28T18:42:49.526Z Local: 1/29/2020, 2:42:49 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:42:51.536Z Local: 1/29/2020, 2:42:51 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T18:42:51.545Z Local: 1/29/2020, 2:42:51 AM command: SELECT, rowCount: 2 
2020-01-28T18:42:51.547Z Local: 1/29/2020, 2:42:51 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:42:53.536Z Local: 1/29/2020, 2:42:53 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:42:53.561Z Local: 1/29/2020, 2:42:53 AM command: CREATE, rowCount: null 
2020-01-28T18:42:53.563Z Local: 1/29/2020, 2:42:53 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:42:53.571Z Local: 1/29/2020, 2:42:53 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:42:53.573Z Local: 1/29/2020, 2:42:53 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:42:53.577Z Local: 1/29/2020, 2:42:53 AM command: SELECT, rowCount: 3 
2020-01-28T18:42:53.578Z Local: 1/29/2020, 2:42:53 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:42:53.582Z Local: 1/29/2020, 2:42:53 AM command: SELECT, rowCount: 40 
2020-01-28T18:42:53.584Z Local: 1/29/2020, 2:42:53 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:42:53.588Z Local: 1/29/2020, 2:42:53 AM command: SELECT, rowCount: 40 
2020-01-28T18:42:53.591Z Local: 1/29/2020, 2:42:53 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:42:53.593Z Local: 1/29/2020, 2:42:53 AM command: SELECT, rowCount: 1 
2020-01-28T18:45:55.343Z Local: 1/29/2020, 2:45:55 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:45:55.376Z Local: 1/29/2020, 2:45:55 AM command: DO, rowCount: null 
2020-01-28T18:45:55.379Z Local: 1/29/2020, 2:45:55 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:45:55.381Z Local: 1/29/2020, 2:45:55 AM command: DO, rowCount: null 
2020-01-28T18:45:55.384Z Local: 1/29/2020, 2:45:55 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:45:55.387Z Local: 1/29/2020, 2:45:55 AM command: CREATE, rowCount: null 
2020-01-28T18:45:55.390Z Local: 1/29/2020, 2:45:55 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:45:55.406Z Local: 1/29/2020, 2:45:55 AM command: SELECT, rowCount: 1 
2020-01-28T18:45:55.421Z Local: 1/29/2020, 2:45:55 AM command: INSERT, rowCount: 1 return id = 32 
2020-01-28T18:45:55.423Z Local: 1/29/2020, 2:45:55 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:45:55.426Z Local: 1/29/2020, 2:45:55 AM command: SELECT, rowCount: 3 
2020-01-28T18:45:55.429Z Local: 1/29/2020, 2:45:55 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:45:55.432Z Local: 1/29/2020, 2:45:55 AM command: SELECT, rowCount: 32 
2020-01-28T18:45:55.434Z Local: 1/29/2020, 2:45:55 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:45:55.439Z Local: 1/29/2020, 2:45:55 AM command: SELECT, rowCount: 32 
2020-01-28T18:45:55.443Z Local: 1/29/2020, 2:45:55 AM command: SELECT, rowCount: 1 
2020-01-28T18:45:55.445Z Local: 1/29/2020, 2:45:55 AM command: SELECT, rowCount: 2 
2020-01-28T18:45:55.448Z Local: 1/29/2020, 2:45:55 AM command: SELECT, rowCount: 2 
2020-01-28T18:45:55.454Z Local: 1/29/2020, 2:45:55 AM command: SELECT, rowCount: 2 
2020-01-28T18:45:55.464Z Local: 1/29/2020, 2:45:55 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:45:55.485Z Local: 1/29/2020, 2:45:55 AM command: SELECT, rowCount: 1 
2020-01-28T18:45:55.486Z Local: 1/29/2020, 2:45:55 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:45:59.467Z Local: 1/29/2020, 2:45:59 AM command: SELECT, rowCount: 1 
2020-01-28T18:45:59.468Z Local: 1/29/2020, 2:45:59 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:46:01.477Z Local: 1/29/2020, 2:46:01 AM command: SELECT, rowCount: 2 
2020-01-28T18:46:01.481Z Local: 1/29/2020, 2:46:01 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:46:03.485Z Local: 1/29/2020, 2:46:03 AM command: SELECT, rowCount: 2 
2020-01-28T18:46:03.486Z Local: 1/29/2020, 2:46:03 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:46:05.476Z Local: 1/29/2020, 2:46:05 AM command: SELECT, rowCount: 0 
2020-01-28T18:46:05.486Z Local: 1/29/2020, 2:46:05 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:46:07.486Z Local: 1/29/2020, 2:46:07 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T18:46:07.500Z Local: 1/29/2020, 2:46:07 AM command: SELECT, rowCount: 2 
2020-01-28T18:46:07.501Z Local: 1/29/2020, 2:46:07 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:46:09.483Z Local: 1/29/2020, 2:46:09 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:46:09.504Z Local: 1/29/2020, 2:46:09 AM command: CREATE, rowCount: null 
2020-01-28T18:46:09.506Z Local: 1/29/2020, 2:46:09 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:46:09.510Z Local: 1/29/2020, 2:46:09 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:46:09.512Z Local: 1/29/2020, 2:46:09 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:46:09.516Z Local: 1/29/2020, 2:46:09 AM command: SELECT, rowCount: 3 
2020-01-28T18:46:09.517Z Local: 1/29/2020, 2:46:09 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:46:09.521Z Local: 1/29/2020, 2:46:09 AM command: SELECT, rowCount: 40 
2020-01-28T18:46:09.523Z Local: 1/29/2020, 2:46:09 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:46:09.528Z Local: 1/29/2020, 2:46:09 AM command: SELECT, rowCount: 40 
2020-01-28T18:46:09.531Z Local: 1/29/2020, 2:46:09 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:46:09.535Z Local: 1/29/2020, 2:46:09 AM command: SELECT, rowCount: 1 
2020-01-28T18:48:05.386Z Local: 1/29/2020, 2:48:05 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:48:05.422Z Local: 1/29/2020, 2:48:05 AM Created Producer type 
2020-01-28T18:48:05.421Z Local: 1/29/2020, 2:48:05 AM command: DO, rowCount: null 
2020-01-28T18:48:05.423Z Local: 1/29/2020, 2:48:05 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:48:05.424Z Local: 1/29/2020, 2:48:05 AM command: DO, rowCount: null 
2020-01-28T18:48:05.425Z Local: 1/29/2020, 2:48:05 AM Created Spec type 
2020-01-28T18:48:05.426Z Local: 1/29/2020, 2:48:05 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:48:05.428Z Local: 1/29/2020, 2:48:05 AM command: CREATE, rowCount: null 
2020-01-28T18:48:05.429Z Local: 1/29/2020, 2:48:05 AM Created items_table 
2020-01-28T18:48:05.430Z Local: 1/29/2020, 2:48:05 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T18:48:10.262Z Local: 1/29/2020, 2:48:10 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:48:10.293Z Local: 1/29/2020, 2:48:10 AM command: DO, rowCount: null 
2020-01-28T18:48:10.296Z Local: 1/29/2020, 2:48:10 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:48:10.297Z Local: 1/29/2020, 2:48:10 AM command: DO, rowCount: null 
2020-01-28T18:48:10.298Z Local: 1/29/2020, 2:48:10 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:48:10.300Z Local: 1/29/2020, 2:48:10 AM command: CREATE, rowCount: null 
2020-01-28T18:48:10.302Z Local: 1/29/2020, 2:48:10 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:48:10.311Z Local: 1/29/2020, 2:48:10 AM command: SELECT, rowCount: 1 
2020-01-28T18:48:10.324Z Local: 1/29/2020, 2:48:10 AM command: INSERT, rowCount: 1 return id = 33 
2020-01-28T18:48:10.326Z Local: 1/29/2020, 2:48:10 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:48:10.331Z Local: 1/29/2020, 2:48:10 AM command: SELECT, rowCount: 3 
2020-01-28T18:48:10.332Z Local: 1/29/2020, 2:48:10 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:48:10.336Z Local: 1/29/2020, 2:48:10 AM command: SELECT, rowCount: 33 
2020-01-28T18:48:10.338Z Local: 1/29/2020, 2:48:10 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:48:10.343Z Local: 1/29/2020, 2:48:10 AM command: SELECT, rowCount: 33 
2020-01-28T18:48:10.349Z Local: 1/29/2020, 2:48:10 AM command: SELECT, rowCount: 1 
2020-01-28T18:48:10.352Z Local: 1/29/2020, 2:48:10 AM command: SELECT, rowCount: 2 
2020-01-28T18:48:10.355Z Local: 1/29/2020, 2:48:10 AM command: SELECT, rowCount: 2 
2020-01-28T18:48:10.360Z Local: 1/29/2020, 2:48:10 AM command: SELECT, rowCount: 2 
2020-01-28T18:48:10.375Z Local: 1/29/2020, 2:48:10 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:48:10.380Z Local: 1/29/2020, 2:48:10 AM command: SELECT, rowCount: 1 
2020-01-28T18:48:10.385Z Local: 1/29/2020, 2:48:10 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:48:14.391Z Local: 1/29/2020, 2:48:14 AM command: SELECT, rowCount: 1 
2020-01-28T18:48:14.395Z Local: 1/29/2020, 2:48:14 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:48:16.393Z Local: 1/29/2020, 2:48:16 AM command: SELECT, rowCount: 2 
2020-01-28T18:48:16.394Z Local: 1/29/2020, 2:48:16 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:48:18.398Z Local: 1/29/2020, 2:48:18 AM command: SELECT, rowCount: 2 
2020-01-28T18:48:18.400Z Local: 1/29/2020, 2:48:18 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:48:20.399Z Local: 1/29/2020, 2:48:20 AM command: SELECT, rowCount: 0 
2020-01-28T18:48:20.400Z Local: 1/29/2020, 2:48:20 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:48:22.411Z Local: 1/29/2020, 2:48:22 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T18:48:22.418Z Local: 1/29/2020, 2:48:22 AM command: SELECT, rowCount: 2 
2020-01-28T18:48:22.420Z Local: 1/29/2020, 2:48:22 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:48:24.410Z Local: 1/29/2020, 2:48:24 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:48:24.429Z Local: 1/29/2020, 2:48:24 AM command: CREATE, rowCount: null 
2020-01-28T18:48:24.432Z Local: 1/29/2020, 2:48:24 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:48:24.434Z Local: 1/29/2020, 2:48:24 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:48:24.436Z Local: 1/29/2020, 2:48:24 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:48:24.440Z Local: 1/29/2020, 2:48:24 AM command: SELECT, rowCount: 3 
2020-01-28T18:48:24.442Z Local: 1/29/2020, 2:48:24 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:48:24.445Z Local: 1/29/2020, 2:48:24 AM command: SELECT, rowCount: 40 
2020-01-28T18:48:24.446Z Local: 1/29/2020, 2:48:24 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:48:24.450Z Local: 1/29/2020, 2:48:24 AM command: SELECT, rowCount: 40 
2020-01-28T18:48:24.453Z Local: 1/29/2020, 2:48:24 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:48:24.455Z Local: 1/29/2020, 2:48:24 AM command: SELECT, rowCount: 1 
2020-01-28T18:49:52.590Z Local: 1/29/2020, 2:49:52 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:49:52.621Z Local: 1/29/2020, 2:49:52 AM command: DO, rowCount: null 
2020-01-28T18:49:52.625Z Local: 1/29/2020, 2:49:52 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:49:52.626Z Local: 1/29/2020, 2:49:52 AM command: DO, rowCount: null 
2020-01-28T18:49:52.627Z Local: 1/29/2020, 2:49:52 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:49:52.629Z Local: 1/29/2020, 2:49:52 AM command: CREATE, rowCount: null 
2020-01-28T18:49:52.631Z Local: 1/29/2020, 2:49:52 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:49:52.648Z Local: 1/29/2020, 2:49:52 AM command: SELECT, rowCount: 1 
2020-01-28T18:49:52.660Z Local: 1/29/2020, 2:49:52 AM command: INSERT, rowCount: 1 return id = 34 
2020-01-28T18:49:52.661Z Local: 1/29/2020, 2:49:52 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:49:52.666Z Local: 1/29/2020, 2:49:52 AM command: SELECT, rowCount: 3 
2020-01-28T18:49:52.667Z Local: 1/29/2020, 2:49:52 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:49:52.672Z Local: 1/29/2020, 2:49:52 AM command: SELECT, rowCount: 34 
2020-01-28T18:49:52.673Z Local: 1/29/2020, 2:49:52 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:49:52.677Z Local: 1/29/2020, 2:49:52 AM command: SELECT, rowCount: 34 
2020-01-28T18:49:52.681Z Local: 1/29/2020, 2:49:52 AM command: SELECT, rowCount: 1 
2020-01-28T18:49:52.686Z Local: 1/29/2020, 2:49:52 AM command: SELECT, rowCount: 2 
2020-01-28T18:49:52.689Z Local: 1/29/2020, 2:49:52 AM command: SELECT, rowCount: 2 
2020-01-28T18:49:52.694Z Local: 1/29/2020, 2:49:52 AM command: SELECT, rowCount: 2 
2020-01-28T18:50:06.733Z Local: 1/29/2020, 2:50:06 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:50:06.757Z Local: 1/29/2020, 2:50:06 AM command: CREATE, rowCount: null 
2020-01-28T18:50:06.760Z Local: 1/29/2020, 2:50:06 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:50:06.762Z Local: 1/29/2020, 2:50:06 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:50:06.764Z Local: 1/29/2020, 2:50:06 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:50:06.766Z Local: 1/29/2020, 2:50:06 AM command: SELECT, rowCount: 3 
2020-01-28T18:50:06.769Z Local: 1/29/2020, 2:50:06 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:50:06.773Z Local: 1/29/2020, 2:50:06 AM command: SELECT, rowCount: 40 
2020-01-28T18:50:06.774Z Local: 1/29/2020, 2:50:06 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:50:06.778Z Local: 1/29/2020, 2:50:06 AM command: SELECT, rowCount: 40 
2020-01-28T18:50:06.780Z Local: 1/29/2020, 2:50:06 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:50:06.782Z Local: 1/29/2020, 2:50:06 AM command: SELECT, rowCount: 1 
2020-01-28T18:52:18.196Z Local: 1/29/2020, 2:52:18 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:52:18.230Z Local: 1/29/2020, 2:52:18 AM command: DO, rowCount: null 
2020-01-28T18:52:18.234Z Local: 1/29/2020, 2:52:18 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:52:18.236Z Local: 1/29/2020, 2:52:18 AM command: DO, rowCount: null 
2020-01-28T18:52:18.238Z Local: 1/29/2020, 2:52:18 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:52:18.240Z Local: 1/29/2020, 2:52:18 AM command: CREATE, rowCount: null 
2020-01-28T18:52:18.244Z Local: 1/29/2020, 2:52:18 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:52:18.248Z Local: 1/29/2020, 2:52:18 AM command: SELECT, rowCount: 1 
2020-01-28T18:52:18.260Z Local: 1/29/2020, 2:52:18 AM command: INSERT, rowCount: 1 return id = 35 
2020-01-28T18:52:18.263Z Local: 1/29/2020, 2:52:18 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:52:18.266Z Local: 1/29/2020, 2:52:18 AM command: SELECT, rowCount: 3 
2020-01-28T18:52:18.267Z Local: 1/29/2020, 2:52:18 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:52:18.272Z Local: 1/29/2020, 2:52:18 AM command: SELECT, rowCount: 35 
2020-01-28T18:52:18.273Z Local: 1/29/2020, 2:52:18 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:52:18.278Z Local: 1/29/2020, 2:52:18 AM command: SELECT, rowCount: 35 
2020-01-28T18:52:18.283Z Local: 1/29/2020, 2:52:18 AM command: SELECT, rowCount: 1 
2020-01-28T18:52:18.286Z Local: 1/29/2020, 2:52:18 AM command: SELECT, rowCount: 2 
2020-01-28T18:52:18.288Z Local: 1/29/2020, 2:52:18 AM command: SELECT, rowCount: 2 
2020-01-28T18:52:18.291Z Local: 1/29/2020, 2:52:18 AM command: SELECT, rowCount: 2 
2020-01-28T18:52:32.334Z Local: 1/29/2020, 2:52:32 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:52:32.356Z Local: 1/29/2020, 2:52:32 AM command: CREATE, rowCount: null 
2020-01-28T18:52:32.359Z Local: 1/29/2020, 2:52:32 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:52:32.362Z Local: 1/29/2020, 2:52:32 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:52:32.364Z Local: 1/29/2020, 2:52:32 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:52:32.366Z Local: 1/29/2020, 2:52:32 AM command: SELECT, rowCount: 3 
2020-01-28T18:52:32.368Z Local: 1/29/2020, 2:52:32 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:52:32.371Z Local: 1/29/2020, 2:52:32 AM command: SELECT, rowCount: 40 
2020-01-28T18:52:32.373Z Local: 1/29/2020, 2:52:32 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:52:32.377Z Local: 1/29/2020, 2:52:32 AM command: SELECT, rowCount: 40 
2020-01-28T18:52:32.379Z Local: 1/29/2020, 2:52:32 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:52:32.381Z Local: 1/29/2020, 2:52:32 AM command: SELECT, rowCount: 1 
2020-01-28T18:53:20.262Z Local: 1/29/2020, 2:53:20 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:53:20.292Z Local: 1/29/2020, 2:53:20 AM command: DO, rowCount: null 
2020-01-28T18:53:20.297Z Local: 1/29/2020, 2:53:20 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:53:20.298Z Local: 1/29/2020, 2:53:20 AM command: DO, rowCount: null 
2020-01-28T18:53:20.300Z Local: 1/29/2020, 2:53:20 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:53:20.302Z Local: 1/29/2020, 2:53:20 AM command: CREATE, rowCount: null 
2020-01-28T18:53:20.306Z Local: 1/29/2020, 2:53:20 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:53:20.310Z Local: 1/29/2020, 2:53:20 AM command: SELECT, rowCount: 1 
2020-01-28T18:53:20.326Z Local: 1/29/2020, 2:53:20 AM command: INSERT, rowCount: 1 return id = 36 
2020-01-28T18:53:20.329Z Local: 1/29/2020, 2:53:20 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:53:20.333Z Local: 1/29/2020, 2:53:20 AM command: SELECT, rowCount: 3 
2020-01-28T18:53:20.334Z Local: 1/29/2020, 2:53:20 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T18:53:20.339Z Local: 1/29/2020, 2:53:20 AM command: SELECT, rowCount: 36 
2020-01-28T18:53:20.341Z Local: 1/29/2020, 2:53:20 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T18:53:20.344Z Local: 1/29/2020, 2:53:20 AM command: SELECT, rowCount: 36 
2020-01-28T18:53:20.349Z Local: 1/29/2020, 2:53:20 AM command: SELECT, rowCount: 1 
2020-01-28T18:53:20.352Z Local: 1/29/2020, 2:53:20 AM command: SELECT, rowCount: 2 
2020-01-28T18:53:20.355Z Local: 1/29/2020, 2:53:20 AM command: SELECT, rowCount: 2 
2020-01-28T18:53:20.360Z Local: 1/29/2020, 2:53:20 AM command: SELECT, rowCount: 2 
2020-01-28T18:53:34.414Z Local: 1/29/2020, 2:53:34 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T18:53:34.439Z Local: 1/29/2020, 2:53:34 AM command: CREATE, rowCount: null 
2020-01-28T18:53:34.441Z Local: 1/29/2020, 2:53:34 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T18:53:34.445Z Local: 1/29/2020, 2:53:34 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T18:53:34.447Z Local: 1/29/2020, 2:53:34 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T18:53:34.449Z Local: 1/29/2020, 2:53:34 AM command: SELECT, rowCount: 3 
2020-01-28T18:53:34.451Z Local: 1/29/2020, 2:53:34 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T18:53:34.454Z Local: 1/29/2020, 2:53:34 AM command: SELECT, rowCount: 40 
2020-01-28T18:53:34.456Z Local: 1/29/2020, 2:53:34 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T18:53:34.459Z Local: 1/29/2020, 2:53:34 AM command: SELECT, rowCount: 40 
2020-01-28T18:53:34.462Z Local: 1/29/2020, 2:53:34 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T18:53:34.464Z Local: 1/29/2020, 2:53:34 AM command: SELECT, rowCount: 1 
2020-01-28T18:49:52.704Z Local: 1/29/2020, 2:49:52 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:59:32.141Z Local: 1/29/2020, 2:59:32 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:59:32.146Z Local: 1/29/2020, 2:59:32 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T18:59:32.147Z Local: 1/29/2020, 2:59:32 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:59:32.148Z Local: 1/29/2020, 2:59:32 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T18:59:32.182Z Local: 1/29/2020, 2:59:32 AM command: SELECT, rowCount: 1 
2020-01-28T18:59:32.185Z Local: 1/29/2020, 2:59:32 AM Sending 1 rows to undefined with  
2020-01-28T18:59:32.186Z Local: 1/29/2020, 2:59:32 AM command: SELECT, rowCount: 1 
2020-01-28T18:59:32.190Z Local: 1/29/2020, 2:59:32 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:59:32.199Z Local: 1/29/2020, 2:59:32 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:59:32.196Z Local: 1/29/2020, 2:59:32 AM command: SELECT, rowCount: 1 
2020-01-28T18:59:32.205Z Local: 1/29/2020, 2:59:32 AM command: SELECT, rowCount: 2 
2020-01-28T18:59:32.208Z Local: 1/29/2020, 2:59:32 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:59:32.214Z Local: 1/29/2020, 2:59:32 AM command: SELECT, rowCount: 2 
2020-01-28T18:59:32.216Z Local: 1/29/2020, 2:59:32 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:59:32.228Z Local: 1/29/2020, 2:59:32 AM command: SELECT, rowCount: 0 
2020-01-28T18:59:32.228Z Local: 1/29/2020, 2:59:32 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:59:32.239Z Local: 1/29/2020, 2:59:32 AM command: SELECT, rowCount: 2 
2020-01-28T18:59:32.240Z Local: 1/29/2020, 2:59:32 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T18:59:32.250Z Local: 1/29/2020, 2:59:32 AM command: SELECT, rowCount: 1 
2020-01-28T18:59:32.252Z Local: 1/29/2020, 2:59:32 AM Sending 1 rows to undefined with  
2020-01-28T18:59:32.262Z Local: 1/29/2020, 2:59:32 AM command: SELECT, rowCount: 1 
2020-01-28T18:59:32.264Z Local: 1/29/2020, 2:59:32 AM Sending 1 rows to ::1 with  
2020-01-28T18:59:36.500Z Local: 1/29/2020, 2:59:36 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:59:36.513Z Local: 1/29/2020, 2:59:36 AM Server is listening on port 8000 
2020-01-28T18:59:36.536Z Local: 1/29/2020, 2:59:36 AM command: DO, rowCount: null 
2020-01-28T18:59:36.538Z Local: 1/29/2020, 2:59:36 AM Created Producer type 
2020-01-28T18:59:36.539Z Local: 1/29/2020, 2:59:36 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T18:59:36.540Z Local: 1/29/2020, 2:59:36 AM command: DO, rowCount: null 
2020-01-28T18:59:36.541Z Local: 1/29/2020, 2:59:36 AM Created Spec type 
2020-01-28T18:59:36.542Z Local: 1/29/2020, 2:59:36 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T18:59:36.544Z Local: 1/29/2020, 2:59:36 AM command: CREATE, rowCount: null 
2020-01-28T18:59:36.545Z Local: 1/29/2020, 2:59:36 AM Created items_table 
2020-01-28T18:59:36.545Z Local: 1/29/2020, 2:59:36 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:01:05.376Z Local: 1/29/2020, 3:01:05 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:01:05.405Z Local: 1/29/2020, 3:01:05 AM command: DO, rowCount: null 
2020-01-28T19:01:05.409Z Local: 1/29/2020, 3:01:05 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:01:05.410Z Local: 1/29/2020, 3:01:05 AM command: DO, rowCount: null 
2020-01-28T19:01:05.412Z Local: 1/29/2020, 3:01:05 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:01:05.414Z Local: 1/29/2020, 3:01:05 AM command: CREATE, rowCount: null 
2020-01-28T19:01:05.418Z Local: 1/29/2020, 3:01:05 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:01:05.423Z Local: 1/29/2020, 3:01:05 AM command: SELECT, rowCount: 1 
2020-01-28T19:01:05.443Z Local: 1/29/2020, 3:01:05 AM command: INSERT, rowCount: 1 return id = 37 
2020-01-28T19:01:05.446Z Local: 1/29/2020, 3:01:05 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:01:05.450Z Local: 1/29/2020, 3:01:05 AM command: SELECT, rowCount: 3 
2020-01-28T19:01:05.451Z Local: 1/29/2020, 3:01:05 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:01:05.456Z Local: 1/29/2020, 3:01:05 AM command: SELECT, rowCount: 37 
2020-01-28T19:01:05.457Z Local: 1/29/2020, 3:01:05 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:01:05.462Z Local: 1/29/2020, 3:01:05 AM command: SELECT, rowCount: 37 
2020-01-28T19:01:05.467Z Local: 1/29/2020, 3:01:05 AM command: SELECT, rowCount: 1 
2020-01-28T19:01:05.470Z Local: 1/29/2020, 3:01:05 AM command: SELECT, rowCount: 2 
2020-01-28T19:01:05.473Z Local: 1/29/2020, 3:01:05 AM command: SELECT, rowCount: 2 
2020-01-28T19:01:05.477Z Local: 1/29/2020, 3:01:05 AM command: SELECT, rowCount: 2 
2020-01-28T19:01:05.490Z Local: 1/29/2020, 3:01:05 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:01:05.512Z Local: 1/29/2020, 3:01:05 AM command: SELECT, rowCount: 1 
2020-01-28T19:01:05.518Z Local: 1/29/2020, 3:01:05 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:01:07.545Z Local: 1/29/2020, 3:01:07 AM command: SELECT, rowCount: 1 
2020-01-28T19:01:07.548Z Local: 1/29/2020, 3:01:07 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:01:09.544Z Local: 1/29/2020, 3:01:09 AM command: SELECT, rowCount: 2 
2020-01-28T19:01:09.546Z Local: 1/29/2020, 3:01:09 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:01:11.550Z Local: 1/29/2020, 3:01:11 AM command: SELECT, rowCount: 2 
2020-01-28T19:01:11.560Z Local: 1/29/2020, 3:01:11 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:01:17.560Z Local: 1/29/2020, 3:01:17 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:01:17.585Z Local: 1/29/2020, 3:01:17 AM command: CREATE, rowCount: null 
2020-01-28T19:01:17.587Z Local: 1/29/2020, 3:01:17 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:01:17.590Z Local: 1/29/2020, 3:01:17 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:01:17.592Z Local: 1/29/2020, 3:01:17 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:01:17.594Z Local: 1/29/2020, 3:01:17 AM command: SELECT, rowCount: 3 
2020-01-28T19:01:17.597Z Local: 1/29/2020, 3:01:17 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:01:17.600Z Local: 1/29/2020, 3:01:17 AM command: SELECT, rowCount: 40 
2020-01-28T19:01:17.602Z Local: 1/29/2020, 3:01:17 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:01:17.605Z Local: 1/29/2020, 3:01:17 AM command: SELECT, rowCount: 40 
2020-01-28T19:01:17.607Z Local: 1/29/2020, 3:01:17 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:01:17.609Z Local: 1/29/2020, 3:01:17 AM command: SELECT, rowCount: 1 
2020-01-28T19:03:32.254Z Local: 1/29/2020, 3:03:32 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:01:13.559Z Local: 1/29/2020, 3:01:13 AM command: SELECT, rowCount: 0 
2020-01-28T19:03:32.257Z Local: 1/29/2020, 3:03:32 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:03:32.260Z Local: 1/29/2020, 3:03:32 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:03:32.285Z Local: 1/29/2020, 3:03:32 AM command: SELECT, rowCount: 2 
2020-01-28T19:03:32.286Z Local: 1/29/2020, 3:03:32 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:03:32.297Z Local: 1/29/2020, 3:03:32 AM command: SELECT, rowCount: 1 
2020-01-28T19:03:32.299Z Local: 1/29/2020, 3:03:32 AM Sending 1 rows to ::1 with  
2020-01-28T19:03:40.209Z Local: 1/29/2020, 3:03:40 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:03:40.221Z Local: 1/29/2020, 3:03:40 AM Server is listening on port 8000 
2020-01-28T19:03:40.244Z Local: 1/29/2020, 3:03:40 AM command: DO, rowCount: null 
2020-01-28T19:03:40.246Z Local: 1/29/2020, 3:03:40 AM Created Producer type 
2020-01-28T19:03:40.246Z Local: 1/29/2020, 3:03:40 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:03:40.248Z Local: 1/29/2020, 3:03:40 AM command: DO, rowCount: null 
2020-01-28T19:03:40.248Z Local: 1/29/2020, 3:03:40 AM Created Spec type 
2020-01-28T19:03:40.249Z Local: 1/29/2020, 3:03:40 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:03:40.251Z Local: 1/29/2020, 3:03:40 AM command: CREATE, rowCount: null 
2020-01-28T19:03:40.252Z Local: 1/29/2020, 3:03:40 AM Created items_table 
2020-01-28T19:03:40.253Z Local: 1/29/2020, 3:03:40 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:03:42.302Z Local: 1/29/2020, 3:03:42 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:03:42.308Z Local: 1/29/2020, 3:03:42 AM command: SELECT, rowCount: 1 
2020-01-28T19:03:42.314Z Local: 1/29/2020, 3:03:42 AM Sending 1 rows to ::1 with  
2020-01-28T19:03:44.382Z Local: 1/29/2020, 3:03:44 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:03:44.384Z Local: 1/29/2020, 3:03:44 AM command: SELECT, rowCount: 1 
2020-01-28T19:03:44.386Z Local: 1/29/2020, 3:03:44 AM Sending 1 rows to ::1 with  
2020-01-28T19:03:45.172Z Local: 1/29/2020, 3:03:45 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:03:45.174Z Local: 1/29/2020, 3:03:45 AM command: SELECT, rowCount: 1 
2020-01-28T19:03:45.178Z Local: 1/29/2020, 3:03:45 AM Sending 1 rows to ::1 with  
2020-01-28T19:03:45.860Z Local: 1/29/2020, 3:03:45 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:03:45.862Z Local: 1/29/2020, 3:03:45 AM command: SELECT, rowCount: 1 
2020-01-28T19:03:45.869Z Local: 1/29/2020, 3:03:45 AM Sending 1 rows to ::1 with  
2020-01-28T19:03:56.300Z Local: 1/29/2020, 3:03:56 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:03:56.312Z Local: 1/29/2020, 3:03:56 AM Server is listening on port 8000 
2020-01-28T19:03:56.335Z Local: 1/29/2020, 3:03:56 AM command: DO, rowCount: null 
2020-01-28T19:03:56.337Z Local: 1/29/2020, 3:03:56 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:03:56.336Z Local: 1/29/2020, 3:03:56 AM Created Producer type 
2020-01-28T19:03:56.339Z Local: 1/29/2020, 3:03:56 AM command: DO, rowCount: null 
2020-01-28T19:03:56.340Z Local: 1/29/2020, 3:03:56 AM Created Spec type 
2020-01-28T19:03:56.341Z Local: 1/29/2020, 3:03:56 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:03:56.343Z Local: 1/29/2020, 3:03:56 AM command: CREATE, rowCount: null 
2020-01-28T19:03:56.343Z Local: 1/29/2020, 3:03:56 AM Created items_table 
2020-01-28T19:03:56.344Z Local: 1/29/2020, 3:03:56 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:03:57.912Z Local: 1/29/2020, 3:03:57 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:03:57.916Z Local: 1/29/2020, 3:03:57 AM command: SELECT, rowCount: 1 
2020-01-28T19:03:57.921Z Local: 1/29/2020, 3:03:57 AM Sending 1 rows to ::1 with  
2020-01-28T19:04:43.644Z Local: 1/29/2020, 3:04:43 AM Error: error: invalid input syntax for integer: "NaN" 
2020-01-28T19:04:43.646Z Local: 1/29/2020, 3:04:43 AM Error: TypeError: Cannot read property '0' of undefined 
2020-01-28T19:04:45.715Z Local: 1/29/2020, 3:04:45 AM Error: error: invalid input syntax for integer: "NaN" 
2020-01-28T19:04:45.715Z Local: 1/29/2020, 3:04:45 AM Error: TypeError: Cannot read property '0' of undefined 
2020-01-28T19:06:48.520Z Local: 1/29/2020, 3:06:48 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:06:48.533Z Local: 1/29/2020, 3:06:48 AM Server is listening on port 8000 
2020-01-28T19:06:48.556Z Local: 1/29/2020, 3:06:48 AM command: DO, rowCount: null 
2020-01-28T19:06:48.557Z Local: 1/29/2020, 3:06:48 AM Created Producer type 
2020-01-28T19:06:48.558Z Local: 1/29/2020, 3:06:48 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:06:48.559Z Local: 1/29/2020, 3:06:48 AM command: DO, rowCount: null 
2020-01-28T19:06:48.560Z Local: 1/29/2020, 3:06:48 AM Created Spec type 
2020-01-28T19:06:48.561Z Local: 1/29/2020, 3:06:48 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:06:48.563Z Local: 1/29/2020, 3:06:48 AM command: CREATE, rowCount: null 
2020-01-28T19:06:48.564Z Local: 1/29/2020, 3:06:48 AM Created items_table 
2020-01-28T19:06:48.565Z Local: 1/29/2020, 3:06:48 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:06:53.626Z Local: 1/29/2020, 3:06:53 AM Error: error: invalid input syntax for integer: "NaN" 
2020-01-28T19:06:53.627Z Local: 1/29/2020, 3:06:53 AM Error: TypeError: Cannot read property '0' of undefined 
2020-01-28T19:07:17.713Z Local: 1/29/2020, 3:07:17 AM Error: error: invalid input syntax for integer: "NaN" 
2020-01-28T19:07:17.715Z Local: 1/29/2020, 3:07:17 AM Error: TypeError: Cannot read property '0' of undefined 
2020-01-28T19:08:15.939Z Local: 1/29/2020, 3:08:15 AM command: SELECT, rowCount: 1 
2020-01-28T19:08:15.943Z Local: 1/29/2020, 3:08:15 AM Sending 1 rows to ::1 with  
2020-01-28T19:08:27.691Z Local: 1/29/2020, 3:08:27 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:08:27.705Z Local: 1/29/2020, 3:08:27 AM Server is listening on port 8000 
2020-01-28T19:08:27.728Z Local: 1/29/2020, 3:08:27 AM command: DO, rowCount: null 
2020-01-28T19:08:27.729Z Local: 1/29/2020, 3:08:27 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:08:27.729Z Local: 1/29/2020, 3:08:27 AM Created Producer type 
2020-01-28T19:08:27.731Z Local: 1/29/2020, 3:08:27 AM command: DO, rowCount: null 
2020-01-28T19:08:27.732Z Local: 1/29/2020, 3:08:27 AM Created Spec type 
2020-01-28T19:08:27.732Z Local: 1/29/2020, 3:08:27 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:08:27.735Z Local: 1/29/2020, 3:08:27 AM command: CREATE, rowCount: null 
2020-01-28T19:08:27.736Z Local: 1/29/2020, 3:08:27 AM Created items_table 
2020-01-28T19:08:27.740Z Local: 1/29/2020, 3:08:27 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:08:31.156Z Local: 1/29/2020, 3:08:31 AM command: SELECT, rowCount: 1 
2020-01-28T19:08:31.160Z Local: 1/29/2020, 3:08:31 AM Sending 1 rows to ::1 with  
2020-01-28T19:08:31.522Z Local: 1/29/2020, 3:08:31 AM command: SELECT, rowCount: 1 
2020-01-28T19:08:31.522Z Local: 1/29/2020, 3:08:31 AM Sending 1 rows to ::1 with  
2020-01-28T19:09:02.122Z Local: 1/29/2020, 3:09:02 AM command: SELECT, rowCount: 2 
2020-01-28T19:09:02.124Z Local: 1/29/2020, 3:09:02 AM Sending 2 rows to ::1 with  
2020-01-28T19:09:54.324Z Local: 1/29/2020, 3:09:54 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:09:54.359Z Local: 1/29/2020, 3:09:54 AM command: DO, rowCount: null 
2020-01-28T19:09:54.363Z Local: 1/29/2020, 3:09:54 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:09:54.364Z Local: 1/29/2020, 3:09:54 AM command: DO, rowCount: null 
2020-01-28T19:09:54.366Z Local: 1/29/2020, 3:09:54 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:09:54.367Z Local: 1/29/2020, 3:09:54 AM command: CREATE, rowCount: null 
2020-01-28T19:09:54.369Z Local: 1/29/2020, 3:09:54 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:09:54.376Z Local: 1/29/2020, 3:09:54 AM command: SELECT, rowCount: 1 
2020-01-28T19:09:54.394Z Local: 1/29/2020, 3:09:54 AM command: INSERT, rowCount: 1 return id = 38 
2020-01-28T19:09:54.396Z Local: 1/29/2020, 3:09:54 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:09:54.400Z Local: 1/29/2020, 3:09:54 AM command: SELECT, rowCount: 3 
2020-01-28T19:09:54.402Z Local: 1/29/2020, 3:09:54 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:09:54.410Z Local: 1/29/2020, 3:09:54 AM command: SELECT, rowCount: 38 
2020-01-28T19:09:54.412Z Local: 1/29/2020, 3:09:54 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:09:54.416Z Local: 1/29/2020, 3:09:54 AM command: SELECT, rowCount: 38 
2020-01-28T19:09:54.421Z Local: 1/29/2020, 3:09:54 AM command: SELECT, rowCount: 1 
2020-01-28T19:09:54.425Z Local: 1/29/2020, 3:09:54 AM command: SELECT, rowCount: 2 
2020-01-28T19:09:54.428Z Local: 1/29/2020, 3:09:54 AM command: SELECT, rowCount: 2 
2020-01-28T19:09:54.431Z Local: 1/29/2020, 3:09:54 AM command: SELECT, rowCount: 2 
2020-01-28T19:09:54.441Z Local: 1/29/2020, 3:09:54 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:09:54.463Z Local: 1/29/2020, 3:09:54 AM command: SELECT, rowCount: 1 
2020-01-28T19:09:54.467Z Local: 1/29/2020, 3:09:54 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:09:56.491Z Local: 1/29/2020, 3:09:56 AM command: SELECT, rowCount: 1 
2020-01-28T19:09:56.491Z Local: 1/29/2020, 3:09:56 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:09:58.500Z Local: 1/29/2020, 3:09:58 AM command: SELECT, rowCount: 2 
2020-01-28T19:09:58.505Z Local: 1/29/2020, 3:09:58 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:10:00.508Z Local: 1/29/2020, 3:10:00 AM command: SELECT, rowCount: 2 
2020-01-28T19:10:00.514Z Local: 1/29/2020, 3:10:00 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:10:02.507Z Local: 1/29/2020, 3:10:02 AM command: SELECT, rowCount: 0 
2020-01-28T19:10:02.509Z Local: 1/29/2020, 3:10:02 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:10:04.507Z Local: 1/29/2020, 3:10:04 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:10:04.511Z Local: 1/29/2020, 3:10:04 AM command: SELECT, rowCount: 2 
2020-01-28T19:10:04.512Z Local: 1/29/2020, 3:10:04 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:10:06.511Z Local: 1/29/2020, 3:10:06 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:10:06.539Z Local: 1/29/2020, 3:10:06 AM command: CREATE, rowCount: null 
2020-01-28T19:10:06.542Z Local: 1/29/2020, 3:10:06 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:10:06.544Z Local: 1/29/2020, 3:10:06 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:10:06.546Z Local: 1/29/2020, 3:10:06 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:10:06.549Z Local: 1/29/2020, 3:10:06 AM command: SELECT, rowCount: 3 
2020-01-28T19:10:06.552Z Local: 1/29/2020, 3:10:06 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:10:06.555Z Local: 1/29/2020, 3:10:06 AM command: SELECT, rowCount: 40 
2020-01-28T19:10:06.557Z Local: 1/29/2020, 3:10:06 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:10:06.560Z Local: 1/29/2020, 3:10:06 AM command: SELECT, rowCount: 40 
2020-01-28T19:10:06.562Z Local: 1/29/2020, 3:10:06 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:10:06.564Z Local: 1/29/2020, 3:10:06 AM command: SELECT, rowCount: 1 
2020-01-28T19:16:10.325Z Local: 1/29/2020, 3:16:10 AM command: SELECT, rowCount: 2 
2020-01-28T19:16:10.327Z Local: 1/29/2020, 3:16:10 AM Sending 2 rows to ::1 with  
2020-01-28T19:17:25.248Z Local: 1/29/2020, 3:17:25 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:17:25.281Z Local: 1/29/2020, 3:17:25 AM command: DO, rowCount: null 
2020-01-28T19:17:25.285Z Local: 1/29/2020, 3:17:25 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:17:25.286Z Local: 1/29/2020, 3:17:25 AM command: DO, rowCount: null 
2020-01-28T19:17:25.288Z Local: 1/29/2020, 3:17:25 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:17:25.289Z Local: 1/29/2020, 3:17:25 AM command: CREATE, rowCount: null 
2020-01-28T19:17:25.290Z Local: 1/29/2020, 3:17:25 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:17:25.297Z Local: 1/29/2020, 3:17:25 AM command: SELECT, rowCount: 1 
2020-01-28T19:17:25.310Z Local: 1/29/2020, 3:17:25 AM command: INSERT, rowCount: 1 return id = 39 
2020-01-28T19:17:25.314Z Local: 1/29/2020, 3:17:25 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:17:25.318Z Local: 1/29/2020, 3:17:25 AM command: SELECT, rowCount: 3 
2020-01-28T19:17:25.319Z Local: 1/29/2020, 3:17:25 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:17:25.324Z Local: 1/29/2020, 3:17:25 AM command: SELECT, rowCount: 39 
2020-01-28T19:17:25.325Z Local: 1/29/2020, 3:17:25 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:17:25.329Z Local: 1/29/2020, 3:17:25 AM command: SELECT, rowCount: 39 
2020-01-28T19:17:25.339Z Local: 1/29/2020, 3:17:25 AM command: SELECT, rowCount: 1 
2020-01-28T19:17:25.341Z Local: 1/29/2020, 3:17:25 AM command: SELECT, rowCount: 2 
2020-01-28T19:17:25.344Z Local: 1/29/2020, 3:17:25 AM command: SELECT, rowCount: 2 
2020-01-28T19:17:25.350Z Local: 1/29/2020, 3:17:25 AM command: SELECT, rowCount: 2 
2020-01-28T19:17:25.358Z Local: 1/29/2020, 3:17:25 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:17:25.379Z Local: 1/29/2020, 3:17:25 AM command: SELECT, rowCount: 1 
2020-01-28T19:17:25.383Z Local: 1/29/2020, 3:17:25 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:17:27.410Z Local: 1/29/2020, 3:17:27 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:17:27.409Z Local: 1/29/2020, 3:17:27 AM command: SELECT, rowCount: 1 
2020-01-28T19:17:29.420Z Local: 1/29/2020, 3:17:29 AM command: SELECT, rowCount: 2 
2020-01-28T19:17:29.425Z Local: 1/29/2020, 3:17:29 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:17:31.426Z Local: 1/29/2020, 3:17:31 AM command: SELECT, rowCount: 2 
2020-01-28T19:17:31.431Z Local: 1/29/2020, 3:17:31 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:17:33.424Z Local: 1/29/2020, 3:17:33 AM command: SELECT, rowCount: 0 
2020-01-28T19:17:33.425Z Local: 1/29/2020, 3:17:33 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:17:35.428Z Local: 1/29/2020, 3:17:35 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:17:35.432Z Local: 1/29/2020, 3:17:35 AM command: SELECT, rowCount: 2 
2020-01-28T19:17:35.433Z Local: 1/29/2020, 3:17:35 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:17:37.432Z Local: 1/29/2020, 3:17:37 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:17:37.456Z Local: 1/29/2020, 3:17:37 AM command: CREATE, rowCount: null 
2020-01-28T19:17:37.458Z Local: 1/29/2020, 3:17:37 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:17:37.461Z Local: 1/29/2020, 3:17:37 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:17:37.463Z Local: 1/29/2020, 3:17:37 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:17:37.467Z Local: 1/29/2020, 3:17:37 AM command: SELECT, rowCount: 3 
2020-01-28T19:17:37.468Z Local: 1/29/2020, 3:17:37 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:17:37.472Z Local: 1/29/2020, 3:17:37 AM command: SELECT, rowCount: 40 
2020-01-28T19:17:37.473Z Local: 1/29/2020, 3:17:37 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:17:37.476Z Local: 1/29/2020, 3:17:37 AM command: SELECT, rowCount: 40 
2020-01-28T19:17:37.478Z Local: 1/29/2020, 3:17:37 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:17:37.480Z Local: 1/29/2020, 3:17:37 AM command: SELECT, rowCount: 1 
2020-01-28T19:18:58.197Z Local: 1/29/2020, 3:18:58 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:18:58.209Z Local: 1/29/2020, 3:18:58 AM Server is listening on port 8000 
2020-01-28T19:18:58.231Z Local: 1/29/2020, 3:18:58 AM command: DO, rowCount: null 
2020-01-28T19:18:58.232Z Local: 1/29/2020, 3:18:58 AM Created Producer type 
2020-01-28T19:18:58.233Z Local: 1/29/2020, 3:18:58 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:18:58.234Z Local: 1/29/2020, 3:18:58 AM command: DO, rowCount: null 
2020-01-28T19:18:58.235Z Local: 1/29/2020, 3:18:58 AM Created Spec type 
2020-01-28T19:18:58.236Z Local: 1/29/2020, 3:18:58 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:18:58.238Z Local: 1/29/2020, 3:18:58 AM command: CREATE, rowCount: null 
2020-01-28T19:18:58.239Z Local: 1/29/2020, 3:18:58 AM Created items_table 
2020-01-28T19:18:58.239Z Local: 1/29/2020, 3:18:58 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:20:09.639Z Local: 1/29/2020, 3:20:09 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:20:09.674Z Local: 1/29/2020, 3:20:09 AM command: DO, rowCount: null 
2020-01-28T19:20:09.678Z Local: 1/29/2020, 3:20:09 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:20:09.679Z Local: 1/29/2020, 3:20:09 AM command: DO, rowCount: null 
2020-01-28T19:20:09.681Z Local: 1/29/2020, 3:20:09 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:20:09.684Z Local: 1/29/2020, 3:20:09 AM command: CREATE, rowCount: null 
2020-01-28T19:20:09.688Z Local: 1/29/2020, 3:20:09 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:20:09.703Z Local: 1/29/2020, 3:20:09 AM command: SELECT, rowCount: 1 
2020-01-28T19:20:09.715Z Local: 1/29/2020, 3:20:09 AM command: INSERT, rowCount: 1 return id = 40 
2020-01-28T19:20:09.718Z Local: 1/29/2020, 3:20:09 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:20:09.721Z Local: 1/29/2020, 3:20:09 AM command: SELECT, rowCount: 3 
2020-01-28T19:20:09.723Z Local: 1/29/2020, 3:20:09 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:20:09.727Z Local: 1/29/2020, 3:20:09 AM command: SELECT, rowCount: 40 
2020-01-28T19:20:09.728Z Local: 1/29/2020, 3:20:09 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:20:09.733Z Local: 1/29/2020, 3:20:09 AM command: SELECT, rowCount: 40 
2020-01-28T19:20:09.739Z Local: 1/29/2020, 3:20:09 AM command: SELECT, rowCount: 1 
2020-01-28T19:20:09.742Z Local: 1/29/2020, 3:20:09 AM command: SELECT, rowCount: 2 
2020-01-28T19:20:09.745Z Local: 1/29/2020, 3:20:09 AM command: SELECT, rowCount: 2 
2020-01-28T19:20:09.749Z Local: 1/29/2020, 3:20:09 AM command: SELECT, rowCount: 2 
2020-01-28T19:20:09.764Z Local: 1/29/2020, 3:20:09 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:20:09.790Z Local: 1/29/2020, 3:20:09 AM command: SELECT, rowCount: 1 
2020-01-28T19:20:09.796Z Local: 1/29/2020, 3:20:09 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:20:11.843Z Local: 1/29/2020, 3:20:11 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:20:11.827Z Local: 1/29/2020, 3:20:11 AM command: SELECT, rowCount: 1 
2020-01-28T19:20:21.831Z Local: 1/29/2020, 3:20:21 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:20:21.855Z Local: 1/29/2020, 3:20:21 AM command: CREATE, rowCount: null 
2020-01-28T19:20:21.857Z Local: 1/29/2020, 3:20:21 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:20:21.860Z Local: 1/29/2020, 3:20:21 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:20:21.862Z Local: 1/29/2020, 3:20:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:20:21.865Z Local: 1/29/2020, 3:20:21 AM command: SELECT, rowCount: 3 
2020-01-28T19:20:21.867Z Local: 1/29/2020, 3:20:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:20:21.871Z Local: 1/29/2020, 3:20:21 AM command: SELECT, rowCount: 40 
2020-01-28T19:20:21.872Z Local: 1/29/2020, 3:20:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:20:21.876Z Local: 1/29/2020, 3:20:21 AM command: SELECT, rowCount: 40 
2020-01-28T19:20:21.877Z Local: 1/29/2020, 3:20:21 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:20:21.879Z Local: 1/29/2020, 3:20:21 AM command: SELECT, rowCount: 1 
2020-01-28T19:20:13.820Z Local: 1/29/2020, 3:20:13 AM command: SELECT, rowCount: 2 
2020-01-28T19:21:55.406Z Local: 1/29/2020, 3:21:55 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:21:55.414Z Local: 1/29/2020, 3:21:55 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:21:55.438Z Local: 1/29/2020, 3:21:55 AM command: SELECT, rowCount: 2 
2020-01-28T19:21:55.441Z Local: 1/29/2020, 3:21:55 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:21:55.451Z Local: 1/29/2020, 3:21:55 AM command: SELECT, rowCount: 0 
2020-01-28T19:21:55.452Z Local: 1/29/2020, 3:21:55 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:21:55.461Z Local: 1/29/2020, 3:21:55 AM command: SELECT, rowCount: 2 
2020-01-28T19:21:55.462Z Local: 1/29/2020, 3:21:55 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:21:57.933Z Local: 1/29/2020, 3:21:57 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:21:57.946Z Local: 1/29/2020, 3:21:57 AM Server is listening on port 8000 
2020-01-28T19:21:57.970Z Local: 1/29/2020, 3:21:57 AM command: DO, rowCount: null 
2020-01-28T19:21:57.971Z Local: 1/29/2020, 3:21:57 AM Created Producer type 
2020-01-28T19:21:57.971Z Local: 1/29/2020, 3:21:57 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:21:57.973Z Local: 1/29/2020, 3:21:57 AM command: DO, rowCount: null 
2020-01-28T19:21:57.974Z Local: 1/29/2020, 3:21:57 AM Created Spec type 
2020-01-28T19:21:57.974Z Local: 1/29/2020, 3:21:57 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:21:57.977Z Local: 1/29/2020, 3:21:57 AM command: CREATE, rowCount: null 
2020-01-28T19:21:57.978Z Local: 1/29/2020, 3:21:57 AM Created items_table 
2020-01-28T19:21:57.979Z Local: 1/29/2020, 3:21:57 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:22:07.371Z Local: 1/29/2020, 3:22:07 AM command: SELECT, rowCount: 1 
2020-01-28T19:22:07.390Z Local: 1/29/2020, 3:22:07 AM Sending 1 rows to ::1 with  
2020-01-28T19:23:30.125Z Local: 1/29/2020, 3:23:30 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:23:30.154Z Local: 1/29/2020, 3:23:30 AM command: DO, rowCount: null 
2020-01-28T19:23:30.158Z Local: 1/29/2020, 3:23:30 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:23:30.160Z Local: 1/29/2020, 3:23:30 AM command: DO, rowCount: null 
2020-01-28T19:23:30.162Z Local: 1/29/2020, 3:23:30 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:23:30.164Z Local: 1/29/2020, 3:23:30 AM command: CREATE, rowCount: null 
2020-01-28T19:23:30.168Z Local: 1/29/2020, 3:23:30 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:23:30.171Z Local: 1/29/2020, 3:23:30 AM command: SELECT, rowCount: 1 
2020-01-28T19:23:30.185Z Local: 1/29/2020, 3:23:30 AM command: INSERT, rowCount: 1 return id = 41 
2020-01-28T19:23:30.188Z Local: 1/29/2020, 3:23:30 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:23:30.192Z Local: 1/29/2020, 3:23:30 AM command: SELECT, rowCount: 3 
2020-01-28T19:23:30.193Z Local: 1/29/2020, 3:23:30 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:23:30.198Z Local: 1/29/2020, 3:23:30 AM command: SELECT, rowCount: 41 
2020-01-28T19:23:30.200Z Local: 1/29/2020, 3:23:30 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:23:30.204Z Local: 1/29/2020, 3:23:30 AM command: SELECT, rowCount: 41 
2020-01-28T19:23:30.210Z Local: 1/29/2020, 3:23:30 AM command: SELECT, rowCount: 1 
2020-01-28T19:23:30.213Z Local: 1/29/2020, 3:23:30 AM command: SELECT, rowCount: 2 
2020-01-28T19:23:30.218Z Local: 1/29/2020, 3:23:30 AM command: SELECT, rowCount: 2 
2020-01-28T19:23:30.220Z Local: 1/29/2020, 3:23:30 AM command: SELECT, rowCount: 2 
2020-01-28T19:23:30.230Z Local: 1/29/2020, 3:23:30 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:23:30.252Z Local: 1/29/2020, 3:23:30 AM command: SELECT, rowCount: 1 
2020-01-28T19:23:30.254Z Local: 1/29/2020, 3:23:30 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:23:32.278Z Local: 1/29/2020, 3:23:32 AM command: SELECT, rowCount: 1 
2020-01-28T19:23:32.296Z Local: 1/29/2020, 3:23:32 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:23:32.306Z Local: 1/29/2020, 3:23:32 AM command: SELECT, rowCount: 2 
2020-01-28T19:23:32.307Z Local: 1/29/2020, 3:23:32 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:23:34.314Z Local: 1/29/2020, 3:23:34 AM command: SELECT, rowCount: 2 
2020-01-28T19:23:34.316Z Local: 1/29/2020, 3:23:34 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:23:36.328Z Local: 1/29/2020, 3:23:36 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:23:36.325Z Local: 1/29/2020, 3:23:36 AM command: SELECT, rowCount: 0 
2020-01-28T19:23:38.319Z Local: 1/29/2020, 3:23:38 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:23:38.322Z Local: 1/29/2020, 3:23:38 AM command: SELECT, rowCount: 2 
2020-01-28T19:23:38.322Z Local: 1/29/2020, 3:23:38 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:23:40.319Z Local: 1/29/2020, 3:23:40 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:23:40.336Z Local: 1/29/2020, 3:23:40 AM command: CREATE, rowCount: null 
2020-01-28T19:23:40.340Z Local: 1/29/2020, 3:23:40 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:23:40.343Z Local: 1/29/2020, 3:23:40 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:23:40.345Z Local: 1/29/2020, 3:23:40 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:23:40.348Z Local: 1/29/2020, 3:23:40 AM command: SELECT, rowCount: 3 
2020-01-28T19:23:40.350Z Local: 1/29/2020, 3:23:40 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:23:40.353Z Local: 1/29/2020, 3:23:40 AM command: SELECT, rowCount: 40 
2020-01-28T19:23:40.355Z Local: 1/29/2020, 3:23:40 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:23:40.359Z Local: 1/29/2020, 3:23:40 AM command: SELECT, rowCount: 40 
2020-01-28T19:23:40.361Z Local: 1/29/2020, 3:23:40 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:23:40.363Z Local: 1/29/2020, 3:23:40 AM command: SELECT, rowCount: 1 
2020-01-28T19:24:42.364Z Local: 1/29/2020, 3:24:42 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:24:42.394Z Local: 1/29/2020, 3:24:42 AM command: DO, rowCount: null 
2020-01-28T19:24:42.398Z Local: 1/29/2020, 3:24:42 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:24:42.399Z Local: 1/29/2020, 3:24:42 AM command: DO, rowCount: null 
2020-01-28T19:24:42.401Z Local: 1/29/2020, 3:24:42 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:24:42.403Z Local: 1/29/2020, 3:24:42 AM command: CREATE, rowCount: null 
2020-01-28T19:24:42.407Z Local: 1/29/2020, 3:24:42 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:24:42.411Z Local: 1/29/2020, 3:24:42 AM command: SELECT, rowCount: 1 
2020-01-28T19:24:42.423Z Local: 1/29/2020, 3:24:42 AM command: INSERT, rowCount: 1 return id = 42 
2020-01-28T19:24:42.426Z Local: 1/29/2020, 3:24:42 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:24:42.430Z Local: 1/29/2020, 3:24:42 AM command: SELECT, rowCount: 3 
2020-01-28T19:24:42.431Z Local: 1/29/2020, 3:24:42 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:24:42.436Z Local: 1/29/2020, 3:24:42 AM command: SELECT, rowCount: 42 
2020-01-28T19:24:42.438Z Local: 1/29/2020, 3:24:42 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:24:42.442Z Local: 1/29/2020, 3:24:42 AM command: SELECT, rowCount: 42 
2020-01-28T19:24:42.451Z Local: 1/29/2020, 3:24:42 AM command: SELECT, rowCount: 1 
2020-01-28T19:24:42.453Z Local: 1/29/2020, 3:24:42 AM command: SELECT, rowCount: 2 
2020-01-28T19:24:42.456Z Local: 1/29/2020, 3:24:42 AM command: SELECT, rowCount: 2 
2020-01-28T19:24:42.461Z Local: 1/29/2020, 3:24:42 AM command: SELECT, rowCount: 2 
2020-01-28T19:24:42.470Z Local: 1/29/2020, 3:24:42 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:24:42.490Z Local: 1/29/2020, 3:24:42 AM command: SELECT, rowCount: 1 
2020-01-28T19:24:42.492Z Local: 1/29/2020, 3:24:42 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:24:44.517Z Local: 1/29/2020, 3:24:44 AM command: SELECT, rowCount: 1 
2020-01-28T19:24:44.533Z Local: 1/29/2020, 3:24:44 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:24:44.541Z Local: 1/29/2020, 3:24:44 AM command: SELECT, rowCount: 2 
2020-01-28T19:24:44.542Z Local: 1/29/2020, 3:24:44 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:24:44.555Z Local: 1/29/2020, 3:24:44 AM command: SELECT, rowCount: 2 
2020-01-28T19:24:44.556Z Local: 1/29/2020, 3:24:44 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:24:46.557Z Local: 1/29/2020, 3:24:46 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:24:46.556Z Local: 1/29/2020, 3:24:46 AM command: SELECT, rowCount: 0 
2020-01-28T19:24:46.563Z Local: 1/29/2020, 3:24:46 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:24:46.567Z Local: 1/29/2020, 3:24:46 AM command: SELECT, rowCount: 2 
2020-01-28T19:24:46.569Z Local: 1/29/2020, 3:24:46 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:24:48.567Z Local: 1/29/2020, 3:24:48 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:24:48.592Z Local: 1/29/2020, 3:24:48 AM command: CREATE, rowCount: null 
2020-01-28T19:24:48.595Z Local: 1/29/2020, 3:24:48 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:24:48.599Z Local: 1/29/2020, 3:24:48 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:24:48.602Z Local: 1/29/2020, 3:24:48 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:24:48.606Z Local: 1/29/2020, 3:24:48 AM command: SELECT, rowCount: 3 
2020-01-28T19:24:48.607Z Local: 1/29/2020, 3:24:48 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:24:48.611Z Local: 1/29/2020, 3:24:48 AM command: SELECT, rowCount: 40 
2020-01-28T19:24:48.614Z Local: 1/29/2020, 3:24:48 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:24:48.618Z Local: 1/29/2020, 3:24:48 AM command: SELECT, rowCount: 40 
2020-01-28T19:24:48.620Z Local: 1/29/2020, 3:24:48 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:24:48.622Z Local: 1/29/2020, 3:24:48 AM command: SELECT, rowCount: 1 
2020-01-28T19:24:51.681Z Local: 1/29/2020, 3:24:51 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:24:51.694Z Local: 1/29/2020, 3:24:51 AM Server is listening on port 8000 
2020-01-28T19:24:51.717Z Local: 1/29/2020, 3:24:51 AM command: DO, rowCount: null 
2020-01-28T19:24:51.719Z Local: 1/29/2020, 3:24:51 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:24:51.718Z Local: 1/29/2020, 3:24:51 AM Created Producer type 
2020-01-28T19:24:51.721Z Local: 1/29/2020, 3:24:51 AM Created Spec type 
2020-01-28T19:24:51.720Z Local: 1/29/2020, 3:24:51 AM command: DO, rowCount: null 
2020-01-28T19:24:51.722Z Local: 1/29/2020, 3:24:51 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:24:51.724Z Local: 1/29/2020, 3:24:51 AM command: CREATE, rowCount: null 
2020-01-28T19:24:51.724Z Local: 1/29/2020, 3:24:51 AM Created items_table 
2020-01-28T19:24:51.725Z Local: 1/29/2020, 3:24:51 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:24:56.987Z Local: 1/29/2020, 3:24:56 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:24:57.017Z Local: 1/29/2020, 3:24:57 AM command: DO, rowCount: null 
2020-01-28T19:24:57.020Z Local: 1/29/2020, 3:24:57 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:24:57.021Z Local: 1/29/2020, 3:24:57 AM command: DO, rowCount: null 
2020-01-28T19:24:57.023Z Local: 1/29/2020, 3:24:57 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:24:57.026Z Local: 1/29/2020, 3:24:57 AM command: CREATE, rowCount: null 
2020-01-28T19:24:57.030Z Local: 1/29/2020, 3:24:57 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:24:57.049Z Local: 1/29/2020, 3:24:57 AM command: SELECT, rowCount: 1 
2020-01-28T19:24:57.061Z Local: 1/29/2020, 3:24:57 AM command: INSERT, rowCount: 1 return id = 43 
2020-01-28T19:24:57.063Z Local: 1/29/2020, 3:24:57 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:24:57.067Z Local: 1/29/2020, 3:24:57 AM command: SELECT, rowCount: 3 
2020-01-28T19:24:57.068Z Local: 1/29/2020, 3:24:57 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:24:57.073Z Local: 1/29/2020, 3:24:57 AM command: SELECT, rowCount: 43 
2020-01-28T19:24:57.074Z Local: 1/29/2020, 3:24:57 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:24:57.079Z Local: 1/29/2020, 3:24:57 AM command: SELECT, rowCount: 43 
2020-01-28T19:24:57.084Z Local: 1/29/2020, 3:24:57 AM command: SELECT, rowCount: 1 
2020-01-28T19:24:57.086Z Local: 1/29/2020, 3:24:57 AM command: SELECT, rowCount: 2 
2020-01-28T19:24:57.092Z Local: 1/29/2020, 3:24:57 AM command: SELECT, rowCount: 2 
2020-01-28T19:24:57.095Z Local: 1/29/2020, 3:24:57 AM command: SELECT, rowCount: 2 
2020-01-28T19:24:57.108Z Local: 1/29/2020, 3:24:57 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:24:57.114Z Local: 1/29/2020, 3:24:57 AM command: SELECT, rowCount: 1 
2020-01-28T19:24:57.118Z Local: 1/29/2020, 3:24:57 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:24:59.148Z Local: 1/29/2020, 3:24:59 AM command: SELECT, rowCount: 1 
2020-01-28T19:24:59.168Z Local: 1/29/2020, 3:24:59 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:24:59.178Z Local: 1/29/2020, 3:24:59 AM command: SELECT, rowCount: 2 
2020-01-28T19:24:59.180Z Local: 1/29/2020, 3:24:59 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:24:59.187Z Local: 1/29/2020, 3:24:59 AM command: SELECT, rowCount: 2 
2020-01-28T19:24:59.188Z Local: 1/29/2020, 3:24:59 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:25:01.198Z Local: 1/29/2020, 3:25:01 AM command: SELECT, rowCount: 0 
2020-01-28T19:25:01.199Z Local: 1/29/2020, 3:25:01 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:25:01.205Z Local: 1/29/2020, 3:25:01 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:25:01.208Z Local: 1/29/2020, 3:25:01 AM command: SELECT, rowCount: 2 
2020-01-28T19:25:01.216Z Local: 1/29/2020, 3:25:01 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:25:03.210Z Local: 1/29/2020, 3:25:03 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:25:03.239Z Local: 1/29/2020, 3:25:03 AM command: CREATE, rowCount: null 
2020-01-28T19:25:03.241Z Local: 1/29/2020, 3:25:03 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:25:03.244Z Local: 1/29/2020, 3:25:03 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:25:03.246Z Local: 1/29/2020, 3:25:03 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:25:03.249Z Local: 1/29/2020, 3:25:03 AM command: SELECT, rowCount: 3 
2020-01-28T19:25:03.251Z Local: 1/29/2020, 3:25:03 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:25:03.255Z Local: 1/29/2020, 3:25:03 AM command: SELECT, rowCount: 40 
2020-01-28T19:25:03.256Z Local: 1/29/2020, 3:25:03 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:25:03.259Z Local: 1/29/2020, 3:25:03 AM command: SELECT, rowCount: 40 
2020-01-28T19:25:03.261Z Local: 1/29/2020, 3:25:03 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:25:03.263Z Local: 1/29/2020, 3:25:03 AM command: SELECT, rowCount: 1 
2020-01-28T19:27:22.420Z Local: 1/29/2020, 3:27:22 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:27:22.433Z Local: 1/29/2020, 3:27:22 AM Server is listening on port 8000 
2020-01-28T19:27:22.458Z Local: 1/29/2020, 3:27:22 AM command: DO, rowCount: null 
2020-01-28T19:27:22.459Z Local: 1/29/2020, 3:27:22 AM Created Producer type 
2020-01-28T19:27:22.460Z Local: 1/29/2020, 3:27:22 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:27:22.461Z Local: 1/29/2020, 3:27:22 AM command: DO, rowCount: null 
2020-01-28T19:27:22.462Z Local: 1/29/2020, 3:27:22 AM Created Spec type 
2020-01-28T19:27:22.463Z Local: 1/29/2020, 3:27:22 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:27:22.466Z Local: 1/29/2020, 3:27:22 AM command: CREATE, rowCount: null 
2020-01-28T19:27:22.466Z Local: 1/29/2020, 3:27:22 AM Created items_table 
2020-01-28T19:27:22.467Z Local: 1/29/2020, 3:27:22 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:27:25.819Z Local: 1/29/2020, 3:27:25 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:27:25.847Z Local: 1/29/2020, 3:27:25 AM command: DO, rowCount: null 
2020-01-28T19:27:25.850Z Local: 1/29/2020, 3:27:25 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:27:25.852Z Local: 1/29/2020, 3:27:25 AM command: DO, rowCount: null 
2020-01-28T19:27:25.854Z Local: 1/29/2020, 3:27:25 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:27:25.856Z Local: 1/29/2020, 3:27:25 AM command: CREATE, rowCount: null 
2020-01-28T19:27:25.860Z Local: 1/29/2020, 3:27:25 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:27:25.865Z Local: 1/29/2020, 3:27:25 AM command: SELECT, rowCount: 1 
2020-01-28T19:27:25.876Z Local: 1/29/2020, 3:27:25 AM command: INSERT, rowCount: 1 return id = 44 
2020-01-28T19:27:25.880Z Local: 1/29/2020, 3:27:25 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:27:25.885Z Local: 1/29/2020, 3:27:25 AM command: SELECT, rowCount: 3 
2020-01-28T19:27:25.886Z Local: 1/29/2020, 3:27:25 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:27:25.893Z Local: 1/29/2020, 3:27:25 AM command: SELECT, rowCount: 44 
2020-01-28T19:27:25.894Z Local: 1/29/2020, 3:27:25 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:27:25.899Z Local: 1/29/2020, 3:27:25 AM command: SELECT, rowCount: 44 
2020-01-28T19:27:25.907Z Local: 1/29/2020, 3:27:25 AM command: SELECT, rowCount: 1 
2020-01-28T19:27:25.910Z Local: 1/29/2020, 3:27:25 AM command: SELECT, rowCount: 2 
2020-01-28T19:27:25.914Z Local: 1/29/2020, 3:27:25 AM command: SELECT, rowCount: 2 
2020-01-28T19:27:25.917Z Local: 1/29/2020, 3:27:25 AM command: SELECT, rowCount: 2 
2020-01-28T19:27:25.931Z Local: 1/29/2020, 3:27:25 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:27:25.936Z Local: 1/29/2020, 3:27:25 AM command: SELECT, rowCount: 1 
2020-01-28T19:27:25.941Z Local: 1/29/2020, 3:27:25 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:27:27.975Z Local: 1/29/2020, 3:27:27 AM command: SELECT, rowCount: 1 
2020-01-28T19:27:27.988Z Local: 1/29/2020, 3:27:27 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:27:27.999Z Local: 1/29/2020, 3:27:27 AM command: SELECT, rowCount: 2 
2020-01-28T19:27:28.001Z Local: 1/29/2020, 3:27:28 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:27:28.007Z Local: 1/29/2020, 3:27:28 AM command: SELECT, rowCount: 2 
2020-01-28T19:27:28.008Z Local: 1/29/2020, 3:27:28 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:27:30.014Z Local: 1/29/2020, 3:27:30 AM command: SELECT, rowCount: 0 
2020-01-28T19:27:30.017Z Local: 1/29/2020, 3:27:30 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:27:30.026Z Local: 1/29/2020, 3:27:30 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:27:30.029Z Local: 1/29/2020, 3:27:30 AM command: SELECT, rowCount: 2 
2020-01-28T19:27:30.030Z Local: 1/29/2020, 3:27:30 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:27:32.028Z Local: 1/29/2020, 3:27:32 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:27:32.052Z Local: 1/29/2020, 3:27:32 AM command: CREATE, rowCount: null 
2020-01-28T19:27:32.054Z Local: 1/29/2020, 3:27:32 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:27:32.056Z Local: 1/29/2020, 3:27:32 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:27:32.058Z Local: 1/29/2020, 3:27:32 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:27:32.061Z Local: 1/29/2020, 3:27:32 AM command: SELECT, rowCount: 3 
2020-01-28T19:27:32.064Z Local: 1/29/2020, 3:27:32 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:27:32.068Z Local: 1/29/2020, 3:27:32 AM command: SELECT, rowCount: 40 
2020-01-28T19:27:32.069Z Local: 1/29/2020, 3:27:32 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:27:32.072Z Local: 1/29/2020, 3:27:32 AM command: SELECT, rowCount: 40 
2020-01-28T19:27:32.074Z Local: 1/29/2020, 3:27:32 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:27:32.075Z Local: 1/29/2020, 3:27:32 AM command: SELECT, rowCount: 1 
2020-01-28T19:36:23.388Z Local: 1/29/2020, 3:36:23 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:36:23.423Z Local: 1/29/2020, 3:36:23 AM Sending 2 rows to ::1 with  
2020-01-28T19:36:23.421Z Local: 1/29/2020, 3:36:23 AM command: SELECT, rowCount: 2 
2020-01-28T19:41:37.191Z Local: 1/29/2020, 3:41:37 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:41:37.222Z Local: 1/29/2020, 3:41:37 AM command: DO, rowCount: null 
2020-01-28T19:41:37.226Z Local: 1/29/2020, 3:41:37 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:41:37.228Z Local: 1/29/2020, 3:41:37 AM command: DO, rowCount: null 
2020-01-28T19:41:37.230Z Local: 1/29/2020, 3:41:37 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:41:37.237Z Local: 1/29/2020, 3:41:37 AM command: CREATE, rowCount: null 
2020-01-28T19:41:37.238Z Local: 1/29/2020, 3:41:37 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:41:37.241Z Local: 1/29/2020, 3:41:37 AM command: SELECT, rowCount: 1 
2020-01-28T19:41:37.259Z Local: 1/29/2020, 3:41:37 AM command: INSERT, rowCount: 1 return id = 45 
2020-01-28T19:41:37.261Z Local: 1/29/2020, 3:41:37 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:41:37.266Z Local: 1/29/2020, 3:41:37 AM command: SELECT, rowCount: 3 
2020-01-28T19:41:37.268Z Local: 1/29/2020, 3:41:37 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:41:37.273Z Local: 1/29/2020, 3:41:37 AM command: SELECT, rowCount: 45 
2020-01-28T19:41:37.275Z Local: 1/29/2020, 3:41:37 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:41:37.279Z Local: 1/29/2020, 3:41:37 AM command: SELECT, rowCount: 45 
2020-01-28T19:41:37.287Z Local: 1/29/2020, 3:41:37 AM command: SELECT, rowCount: 1 
2020-01-28T19:41:37.290Z Local: 1/29/2020, 3:41:37 AM command: SELECT, rowCount: 2 
2020-01-28T19:41:37.293Z Local: 1/29/2020, 3:41:37 AM command: SELECT, rowCount: 2 
2020-01-28T19:41:37.298Z Local: 1/29/2020, 3:41:37 AM command: SELECT, rowCount: 2 
2020-01-28T19:41:51.342Z Local: 1/29/2020, 3:41:51 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:41:51.366Z Local: 1/29/2020, 3:41:51 AM command: CREATE, rowCount: null 
2020-01-28T19:41:51.368Z Local: 1/29/2020, 3:41:51 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:41:51.371Z Local: 1/29/2020, 3:41:51 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:41:51.373Z Local: 1/29/2020, 3:41:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:41:51.376Z Local: 1/29/2020, 3:41:51 AM command: SELECT, rowCount: 3 
2020-01-28T19:41:51.378Z Local: 1/29/2020, 3:41:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:41:51.382Z Local: 1/29/2020, 3:41:51 AM command: SELECT, rowCount: 40 
2020-01-28T19:41:51.383Z Local: 1/29/2020, 3:41:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:41:51.387Z Local: 1/29/2020, 3:41:51 AM command: SELECT, rowCount: 40 
2020-01-28T19:41:51.388Z Local: 1/29/2020, 3:41:51 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:41:51.390Z Local: 1/29/2020, 3:41:51 AM command: SELECT, rowCount: 1 
2020-01-28T19:43:03.716Z Local: 1/29/2020, 3:43:03 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:43:03.728Z Local: 1/29/2020, 3:43:03 AM Server is listening on port 8000 
2020-01-28T19:43:03.755Z Local: 1/29/2020, 3:43:03 AM Created Producer type 
2020-01-28T19:43:03.756Z Local: 1/29/2020, 3:43:03 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:43:03.754Z Local: 1/29/2020, 3:43:03 AM command: DO, rowCount: null 
2020-01-28T19:43:03.758Z Local: 1/29/2020, 3:43:03 AM command: DO, rowCount: null 
2020-01-28T19:43:03.758Z Local: 1/29/2020, 3:43:03 AM Created Spec type 
2020-01-28T19:43:03.759Z Local: 1/29/2020, 3:43:03 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:43:03.762Z Local: 1/29/2020, 3:43:03 AM command: CREATE, rowCount: null 
2020-01-28T19:43:03.763Z Local: 1/29/2020, 3:43:03 AM Created items_table 
2020-01-28T19:43:03.766Z Local: 1/29/2020, 3:43:03 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:43:07.486Z Local: 1/29/2020, 3:43:07 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:43:07.491Z Local: 1/29/2020, 3:43:07 AM command: SELECT, rowCount: 1 
2020-01-28T19:43:07.502Z Local: 1/29/2020, 3:43:07 AM Sending 1 rows to ::1 with  
2020-01-28T19:46:32.361Z Local: 1/29/2020, 3:46:32 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:46:32.374Z Local: 1/29/2020, 3:46:32 AM Server is listening on port 8000 
2020-01-28T19:46:32.396Z Local: 1/29/2020, 3:46:32 AM command: DO, rowCount: null 
2020-01-28T19:46:32.398Z Local: 1/29/2020, 3:46:32 AM Created Producer type 
2020-01-28T19:46:32.398Z Local: 1/29/2020, 3:46:32 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:46:32.400Z Local: 1/29/2020, 3:46:32 AM command: DO, rowCount: null 
2020-01-28T19:46:32.400Z Local: 1/29/2020, 3:46:32 AM Created Spec type 
2020-01-28T19:46:32.401Z Local: 1/29/2020, 3:46:32 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:46:32.403Z Local: 1/29/2020, 3:46:32 AM command: CREATE, rowCount: null 
2020-01-28T19:46:32.404Z Local: 1/29/2020, 3:46:32 AM Created items_table 
2020-01-28T19:46:32.405Z Local: 1/29/2020, 3:46:32 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:46:38.095Z Local: 1/29/2020, 3:46:38 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:46:38.125Z Local: 1/29/2020, 3:46:38 AM command: DO, rowCount: null 
2020-01-28T19:46:38.128Z Local: 1/29/2020, 3:46:38 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:46:38.130Z Local: 1/29/2020, 3:46:38 AM command: DO, rowCount: null 
2020-01-28T19:46:38.132Z Local: 1/29/2020, 3:46:38 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:46:38.134Z Local: 1/29/2020, 3:46:38 AM command: CREATE, rowCount: null 
2020-01-28T19:46:38.140Z Local: 1/29/2020, 3:46:38 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:46:38.156Z Local: 1/29/2020, 3:46:38 AM command: SELECT, rowCount: 1 
2020-01-28T19:46:38.170Z Local: 1/29/2020, 3:46:38 AM command: INSERT, rowCount: 1 return id = 46 
2020-01-28T19:46:38.172Z Local: 1/29/2020, 3:46:38 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:46:38.175Z Local: 1/29/2020, 3:46:38 AM command: SELECT, rowCount: 3 
2020-01-28T19:46:38.178Z Local: 1/29/2020, 3:46:38 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:46:38.183Z Local: 1/29/2020, 3:46:38 AM command: SELECT, rowCount: 46 
2020-01-28T19:46:38.184Z Local: 1/29/2020, 3:46:38 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:46:38.189Z Local: 1/29/2020, 3:46:38 AM command: SELECT, rowCount: 46 
2020-01-28T19:46:38.193Z Local: 1/29/2020, 3:46:38 AM command: SELECT, rowCount: 1 
2020-01-28T19:46:38.196Z Local: 1/29/2020, 3:46:38 AM command: SELECT, rowCount: 2 
2020-01-28T19:46:38.200Z Local: 1/29/2020, 3:46:38 AM command: SELECT, rowCount: 2 
2020-01-28T19:46:38.203Z Local: 1/29/2020, 3:46:38 AM command: SELECT, rowCount: 2 
2020-01-28T19:46:38.217Z Local: 1/29/2020, 3:46:38 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:46:38.222Z Local: 1/29/2020, 3:46:38 AM command: SELECT, rowCount: 1 
2020-01-28T19:46:38.227Z Local: 1/29/2020, 3:46:38 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:46:40.252Z Local: 1/29/2020, 3:46:40 AM command: SELECT, rowCount: 1 
2020-01-28T19:46:40.269Z Local: 1/29/2020, 3:46:40 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:46:40.279Z Local: 1/29/2020, 3:46:40 AM command: SELECT, rowCount: 2 
2020-01-28T19:46:40.281Z Local: 1/29/2020, 3:46:40 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:46:40.289Z Local: 1/29/2020, 3:46:40 AM command: SELECT, rowCount: 2 
2020-01-28T19:46:40.290Z Local: 1/29/2020, 3:46:40 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:46:42.302Z Local: 1/29/2020, 3:46:42 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:46:42.300Z Local: 1/29/2020, 3:46:42 AM command: SELECT, rowCount: 0 
2020-01-28T19:46:42.307Z Local: 1/29/2020, 3:46:42 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:46:42.311Z Local: 1/29/2020, 3:46:42 AM command: SELECT, rowCount: 2 
2020-01-28T19:46:42.312Z Local: 1/29/2020, 3:46:42 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:46:44.311Z Local: 1/29/2020, 3:46:44 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:46:44.338Z Local: 1/29/2020, 3:46:44 AM command: CREATE, rowCount: null 
2020-01-28T19:46:44.340Z Local: 1/29/2020, 3:46:44 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:46:44.342Z Local: 1/29/2020, 3:46:44 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:46:44.344Z Local: 1/29/2020, 3:46:44 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:46:44.347Z Local: 1/29/2020, 3:46:44 AM command: SELECT, rowCount: 3 
2020-01-28T19:46:44.349Z Local: 1/29/2020, 3:46:44 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:46:44.354Z Local: 1/29/2020, 3:46:44 AM command: SELECT, rowCount: 40 
2020-01-28T19:46:44.355Z Local: 1/29/2020, 3:46:44 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:46:44.358Z Local: 1/29/2020, 3:46:44 AM command: SELECT, rowCount: 40 
2020-01-28T19:46:44.360Z Local: 1/29/2020, 3:46:44 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:46:44.362Z Local: 1/29/2020, 3:46:44 AM command: SELECT, rowCount: 1 
2020-01-28T19:47:37.670Z Local: 1/29/2020, 3:47:37 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:47:37.683Z Local: 1/29/2020, 3:47:37 AM Server is listening on port 8000 
2020-01-28T19:47:37.707Z Local: 1/29/2020, 3:47:37 AM Created Producer type 
2020-01-28T19:47:37.708Z Local: 1/29/2020, 3:47:37 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:47:37.706Z Local: 1/29/2020, 3:47:37 AM command: DO, rowCount: null 
2020-01-28T19:47:37.710Z Local: 1/29/2020, 3:47:37 AM command: DO, rowCount: null 
2020-01-28T19:47:37.711Z Local: 1/29/2020, 3:47:37 AM Created Spec type 
2020-01-28T19:47:37.712Z Local: 1/29/2020, 3:47:37 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:47:37.714Z Local: 1/29/2020, 3:47:37 AM command: CREATE, rowCount: null 
2020-01-28T19:47:37.715Z Local: 1/29/2020, 3:47:37 AM Created items_table 
2020-01-28T19:47:37.715Z Local: 1/29/2020, 3:47:37 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:47:40.533Z Local: 1/29/2020, 3:47:40 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:47:40.560Z Local: 1/29/2020, 3:47:40 AM command: DO, rowCount: null 
2020-01-28T19:47:40.563Z Local: 1/29/2020, 3:47:40 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:47:40.565Z Local: 1/29/2020, 3:47:40 AM command: DO, rowCount: null 
2020-01-28T19:47:40.567Z Local: 1/29/2020, 3:47:40 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:47:40.569Z Local: 1/29/2020, 3:47:40 AM command: CREATE, rowCount: null 
2020-01-28T19:47:40.573Z Local: 1/29/2020, 3:47:40 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:47:40.577Z Local: 1/29/2020, 3:47:40 AM command: SELECT, rowCount: 1 
2020-01-28T19:47:40.589Z Local: 1/29/2020, 3:47:40 AM command: INSERT, rowCount: 1 return id = 47 
2020-01-28T19:47:40.593Z Local: 1/29/2020, 3:47:40 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:47:40.597Z Local: 1/29/2020, 3:47:40 AM command: SELECT, rowCount: 3 
2020-01-28T19:47:40.598Z Local: 1/29/2020, 3:47:40 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:47:40.603Z Local: 1/29/2020, 3:47:40 AM command: SELECT, rowCount: 47 
2020-01-28T19:47:40.605Z Local: 1/29/2020, 3:47:40 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:47:40.609Z Local: 1/29/2020, 3:47:40 AM command: SELECT, rowCount: 47 
2020-01-28T19:47:40.614Z Local: 1/29/2020, 3:47:40 AM command: SELECT, rowCount: 1 
2020-01-28T19:47:40.617Z Local: 1/29/2020, 3:47:40 AM command: SELECT, rowCount: 2 
2020-01-28T19:47:40.620Z Local: 1/29/2020, 3:47:40 AM command: SELECT, rowCount: 2 
2020-01-28T19:47:40.624Z Local: 1/29/2020, 3:47:40 AM command: SELECT, rowCount: 2 
2020-01-28T19:47:40.639Z Local: 1/29/2020, 3:47:40 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:47:40.645Z Local: 1/29/2020, 3:47:40 AM command: SELECT, rowCount: 1 
2020-01-28T19:47:40.651Z Local: 1/29/2020, 3:47:40 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:47:42.675Z Local: 1/29/2020, 3:47:42 AM command: SELECT, rowCount: 1 
2020-01-28T19:47:42.687Z Local: 1/29/2020, 3:47:42 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:47:42.700Z Local: 1/29/2020, 3:47:42 AM command: SELECT, rowCount: 2 
2020-01-28T19:47:42.701Z Local: 1/29/2020, 3:47:42 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:47:42.709Z Local: 1/29/2020, 3:47:42 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:47:42.707Z Local: 1/29/2020, 3:47:42 AM command: SELECT, rowCount: 2 
2020-01-28T19:47:44.711Z Local: 1/29/2020, 3:47:44 AM command: SELECT, rowCount: 0 
2020-01-28T19:47:44.713Z Local: 1/29/2020, 3:47:44 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:47:44.719Z Local: 1/29/2020, 3:47:44 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:47:44.722Z Local: 1/29/2020, 3:47:44 AM command: SELECT, rowCount: 2 
2020-01-28T19:47:44.723Z Local: 1/29/2020, 3:47:44 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:47:46.723Z Local: 1/29/2020, 3:47:46 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:47:46.755Z Local: 1/29/2020, 3:47:46 AM command: CREATE, rowCount: null 
2020-01-28T19:47:46.758Z Local: 1/29/2020, 3:47:46 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:47:46.760Z Local: 1/29/2020, 3:47:46 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:47:46.762Z Local: 1/29/2020, 3:47:46 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:47:46.765Z Local: 1/29/2020, 3:47:46 AM command: SELECT, rowCount: 3 
2020-01-28T19:47:46.767Z Local: 1/29/2020, 3:47:46 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:47:46.772Z Local: 1/29/2020, 3:47:46 AM command: SELECT, rowCount: 40 
2020-01-28T19:47:46.773Z Local: 1/29/2020, 3:47:46 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:47:46.777Z Local: 1/29/2020, 3:47:46 AM command: SELECT, rowCount: 40 
2020-01-28T19:47:46.779Z Local: 1/29/2020, 3:47:46 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:47:46.781Z Local: 1/29/2020, 3:47:46 AM command: SELECT, rowCount: 1 
2020-01-28T19:49:49.698Z Local: 1/29/2020, 3:49:49 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:49:49.711Z Local: 1/29/2020, 3:49:49 AM Server is listening on port 8000 
2020-01-28T19:49:49.734Z Local: 1/29/2020, 3:49:49 AM command: DO, rowCount: null 
2020-01-28T19:49:49.734Z Local: 1/29/2020, 3:49:49 AM Created Producer type 
2020-01-28T19:49:49.735Z Local: 1/29/2020, 3:49:49 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:49:49.737Z Local: 1/29/2020, 3:49:49 AM command: DO, rowCount: null 
2020-01-28T19:49:49.737Z Local: 1/29/2020, 3:49:49 AM Created Spec type 
2020-01-28T19:49:49.738Z Local: 1/29/2020, 3:49:49 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:49:49.740Z Local: 1/29/2020, 3:49:49 AM command: CREATE, rowCount: null 
2020-01-28T19:49:49.741Z Local: 1/29/2020, 3:49:49 AM Created items_table 
2020-01-28T19:49:49.741Z Local: 1/29/2020, 3:49:49 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:49:55.691Z Local: 1/29/2020, 3:49:55 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:49:55.721Z Local: 1/29/2020, 3:49:55 AM command: DO, rowCount: null 
2020-01-28T19:49:55.724Z Local: 1/29/2020, 3:49:55 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:49:55.726Z Local: 1/29/2020, 3:49:55 AM command: DO, rowCount: null 
2020-01-28T19:49:55.728Z Local: 1/29/2020, 3:49:55 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:49:55.730Z Local: 1/29/2020, 3:49:55 AM command: CREATE, rowCount: null 
2020-01-28T19:49:55.735Z Local: 1/29/2020, 3:49:55 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:49:55.751Z Local: 1/29/2020, 3:49:55 AM command: SELECT, rowCount: 1 
2020-01-28T19:49:55.768Z Local: 1/29/2020, 3:49:55 AM command: INSERT, rowCount: 1 return id = 48 
2020-01-28T19:49:55.770Z Local: 1/29/2020, 3:49:55 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:49:55.774Z Local: 1/29/2020, 3:49:55 AM command: SELECT, rowCount: 3 
2020-01-28T19:49:55.775Z Local: 1/29/2020, 3:49:55 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:49:55.780Z Local: 1/29/2020, 3:49:55 AM command: SELECT, rowCount: 48 
2020-01-28T19:49:55.783Z Local: 1/29/2020, 3:49:55 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:49:55.787Z Local: 1/29/2020, 3:49:55 AM command: SELECT, rowCount: 48 
2020-01-28T19:49:55.791Z Local: 1/29/2020, 3:49:55 AM command: SELECT, rowCount: 1 
2020-01-28T19:49:55.795Z Local: 1/29/2020, 3:49:55 AM command: SELECT, rowCount: 2 
2020-01-28T19:49:55.798Z Local: 1/29/2020, 3:49:55 AM command: SELECT, rowCount: 2 
2020-01-28T19:49:55.801Z Local: 1/29/2020, 3:49:55 AM command: SELECT, rowCount: 2 
2020-01-28T19:49:55.814Z Local: 1/29/2020, 3:49:55 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:49:55.820Z Local: 1/29/2020, 3:49:55 AM command: SELECT, rowCount: 1 
2020-01-28T19:49:55.840Z Local: 1/29/2020, 3:49:55 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:49:57.863Z Local: 1/29/2020, 3:49:57 AM command: SELECT, rowCount: 1 
2020-01-28T19:49:57.871Z Local: 1/29/2020, 3:49:57 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:49:57.881Z Local: 1/29/2020, 3:49:57 AM command: SELECT, rowCount: 2 
2020-01-28T19:49:57.883Z Local: 1/29/2020, 3:49:57 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:49:57.890Z Local: 1/29/2020, 3:49:57 AM command: SELECT, rowCount: 2 
2020-01-28T19:49:57.891Z Local: 1/29/2020, 3:49:57 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:49:57.901Z Local: 1/29/2020, 3:49:57 AM command: SELECT, rowCount: 0 
2020-01-28T19:49:57.903Z Local: 1/29/2020, 3:49:57 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:49:57.908Z Local: 1/29/2020, 3:49:57 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:49:57.911Z Local: 1/29/2020, 3:49:57 AM command: SELECT, rowCount: 2 
2020-01-28T19:49:57.912Z Local: 1/29/2020, 3:49:57 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:49:59.909Z Local: 1/29/2020, 3:49:59 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:49:59.932Z Local: 1/29/2020, 3:49:59 AM command: CREATE, rowCount: null 
2020-01-28T19:49:59.935Z Local: 1/29/2020, 3:49:59 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:49:59.937Z Local: 1/29/2020, 3:49:59 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:49:59.939Z Local: 1/29/2020, 3:49:59 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:49:59.942Z Local: 1/29/2020, 3:49:59 AM command: SELECT, rowCount: 3 
2020-01-28T19:49:59.944Z Local: 1/29/2020, 3:49:59 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:49:59.948Z Local: 1/29/2020, 3:49:59 AM command: SELECT, rowCount: 40 
2020-01-28T19:49:59.949Z Local: 1/29/2020, 3:49:59 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:49:59.954Z Local: 1/29/2020, 3:49:59 AM command: SELECT, rowCount: 40 
2020-01-28T19:49:59.956Z Local: 1/29/2020, 3:49:59 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:49:59.958Z Local: 1/29/2020, 3:49:59 AM command: SELECT, rowCount: 1 
2020-01-28T19:51:27.845Z Local: 1/29/2020, 3:51:27 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:51:27.868Z Local: 1/29/2020, 3:51:27 AM command: SELECT, rowCount: 1 
2020-01-28T19:51:27.871Z Local: 1/29/2020, 3:51:27 AM Sending 1 rows to ::1 with  
2020-01-28T19:53:25.652Z Local: 1/29/2020, 3:53:25 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:53:25.666Z Local: 1/29/2020, 3:53:25 AM Server is listening on port 8000 
2020-01-28T19:53:25.689Z Local: 1/29/2020, 3:53:25 AM command: DO, rowCount: null 
2020-01-28T19:53:25.691Z Local: 1/29/2020, 3:53:25 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:53:25.690Z Local: 1/29/2020, 3:53:25 AM Created Producer type 
2020-01-28T19:53:25.693Z Local: 1/29/2020, 3:53:25 AM command: DO, rowCount: null 
2020-01-28T19:53:25.693Z Local: 1/29/2020, 3:53:25 AM Created Spec type 
2020-01-28T19:53:25.694Z Local: 1/29/2020, 3:53:25 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:53:25.696Z Local: 1/29/2020, 3:53:25 AM command: CREATE, rowCount: null 
2020-01-28T19:53:25.697Z Local: 1/29/2020, 3:53:25 AM Created items_table 
2020-01-28T19:53:25.697Z Local: 1/29/2020, 3:53:25 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:53:29.294Z Local: 1/29/2020, 3:53:29 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:53:29.323Z Local: 1/29/2020, 3:53:29 AM command: DO, rowCount: null 
2020-01-28T19:53:29.326Z Local: 1/29/2020, 3:53:29 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:53:29.328Z Local: 1/29/2020, 3:53:29 AM command: DO, rowCount: null 
2020-01-28T19:53:29.330Z Local: 1/29/2020, 3:53:29 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:53:29.332Z Local: 1/29/2020, 3:53:29 AM command: CREATE, rowCount: null 
2020-01-28T19:53:29.336Z Local: 1/29/2020, 3:53:29 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:53:29.340Z Local: 1/29/2020, 3:53:29 AM command: SELECT, rowCount: 1 
2020-01-28T19:53:29.351Z Local: 1/29/2020, 3:53:29 AM command: INSERT, rowCount: 1 return id = 49 
2020-01-28T19:53:29.353Z Local: 1/29/2020, 3:53:29 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:53:29.357Z Local: 1/29/2020, 3:53:29 AM command: SELECT, rowCount: 3 
2020-01-28T19:53:29.359Z Local: 1/29/2020, 3:53:29 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:53:29.364Z Local: 1/29/2020, 3:53:29 AM command: SELECT, rowCount: 49 
2020-01-28T19:53:29.366Z Local: 1/29/2020, 3:53:29 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:53:29.370Z Local: 1/29/2020, 3:53:29 AM command: SELECT, rowCount: 49 
2020-01-28T19:53:29.376Z Local: 1/29/2020, 3:53:29 AM command: SELECT, rowCount: 1 
2020-01-28T19:53:29.379Z Local: 1/29/2020, 3:53:29 AM command: SELECT, rowCount: 2 
2020-01-28T19:53:29.382Z Local: 1/29/2020, 3:53:29 AM command: SELECT, rowCount: 2 
2020-01-28T19:53:29.387Z Local: 1/29/2020, 3:53:29 AM command: SELECT, rowCount: 2 
2020-01-28T19:53:29.400Z Local: 1/29/2020, 3:53:29 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:53:29.405Z Local: 1/29/2020, 3:53:29 AM command: SELECT, rowCount: 1 
2020-01-28T19:53:29.415Z Local: 1/29/2020, 3:53:29 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:53:31.437Z Local: 1/29/2020, 3:53:31 AM command: SELECT, rowCount: 1 
2020-01-28T19:53:31.444Z Local: 1/29/2020, 3:53:31 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:53:31.455Z Local: 1/29/2020, 3:53:31 AM command: SELECT, rowCount: 2 
2020-01-28T19:53:31.457Z Local: 1/29/2020, 3:53:31 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:53:31.465Z Local: 1/29/2020, 3:53:31 AM command: SELECT, rowCount: 2 
2020-01-28T19:53:31.466Z Local: 1/29/2020, 3:53:31 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:53:31.475Z Local: 1/29/2020, 3:53:31 AM command: SELECT, rowCount: 0 
2020-01-28T19:53:31.476Z Local: 1/29/2020, 3:53:31 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:53:31.482Z Local: 1/29/2020, 3:53:31 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:53:31.485Z Local: 1/29/2020, 3:53:31 AM command: SELECT, rowCount: 2 
2020-01-28T19:53:31.486Z Local: 1/29/2020, 3:53:31 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:53:33.483Z Local: 1/29/2020, 3:53:33 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:53:33.500Z Local: 1/29/2020, 3:53:33 AM command: CREATE, rowCount: null 
2020-01-28T19:53:33.502Z Local: 1/29/2020, 3:53:33 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:53:33.504Z Local: 1/29/2020, 3:53:33 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:53:33.507Z Local: 1/29/2020, 3:53:33 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:53:33.510Z Local: 1/29/2020, 3:53:33 AM command: SELECT, rowCount: 3 
2020-01-28T19:53:33.512Z Local: 1/29/2020, 3:53:33 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:53:33.515Z Local: 1/29/2020, 3:53:33 AM command: SELECT, rowCount: 40 
2020-01-28T19:53:33.517Z Local: 1/29/2020, 3:53:33 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:53:33.520Z Local: 1/29/2020, 3:53:33 AM command: SELECT, rowCount: 40 
2020-01-28T19:53:33.522Z Local: 1/29/2020, 3:53:33 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:53:33.524Z Local: 1/29/2020, 3:53:33 AM command: SELECT, rowCount: 1 
2020-01-28T19:58:32.355Z Local: 1/29/2020, 3:58:32 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:58:32.368Z Local: 1/29/2020, 3:58:32 AM Server is listening on port 8000 
2020-01-28T19:58:32.392Z Local: 1/29/2020, 3:58:32 AM command: DO, rowCount: null 
2020-01-28T19:58:32.394Z Local: 1/29/2020, 3:58:32 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:58:32.393Z Local: 1/29/2020, 3:58:32 AM Created Producer type 
2020-01-28T19:58:32.395Z Local: 1/29/2020, 3:58:32 AM command: DO, rowCount: null 
2020-01-28T19:58:32.396Z Local: 1/29/2020, 3:58:32 AM Created Spec type 
2020-01-28T19:58:32.397Z Local: 1/29/2020, 3:58:32 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:58:32.400Z Local: 1/29/2020, 3:58:32 AM command: CREATE, rowCount: null 
2020-01-28T19:58:32.401Z Local: 1/29/2020, 3:58:32 AM Created items_table 
2020-01-28T19:58:32.401Z Local: 1/29/2020, 3:58:32 AM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-28T19:58:35.871Z Local: 1/29/2020, 3:58:35 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:58:35.900Z Local: 1/29/2020, 3:58:35 AM command: DO, rowCount: null 
2020-01-28T19:58:35.904Z Local: 1/29/2020, 3:58:35 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-28T19:58:35.905Z Local: 1/29/2020, 3:58:35 AM command: DO, rowCount: null 
2020-01-28T19:58:35.907Z Local: 1/29/2020, 3:58:35 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-28T19:58:35.910Z Local: 1/29/2020, 3:58:35 AM command: CREATE, rowCount: null 
2020-01-28T19:58:35.913Z Local: 1/29/2020, 3:58:35 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:58:35.928Z Local: 1/29/2020, 3:58:35 AM command: SELECT, rowCount: 1 
2020-01-28T19:58:35.941Z Local: 1/29/2020, 3:58:35 AM command: INSERT, rowCount: 1 return id = 50 
2020-01-28T19:58:35.943Z Local: 1/29/2020, 3:58:35 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:58:35.947Z Local: 1/29/2020, 3:58:35 AM command: SELECT, rowCount: 3 
2020-01-28T19:58:35.948Z Local: 1/29/2020, 3:58:35 AM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-28T19:58:35.956Z Local: 1/29/2020, 3:58:35 AM command: SELECT, rowCount: 50 
2020-01-28T19:58:35.957Z Local: 1/29/2020, 3:58:35 AM SELECT * FROM items_table ORDER BY create_on DESC  ; 
2020-01-28T19:58:35.963Z Local: 1/29/2020, 3:58:35 AM command: SELECT, rowCount: 50 
2020-01-28T19:58:35.967Z Local: 1/29/2020, 3:58:35 AM command: SELECT, rowCount: 1 
2020-01-28T19:58:35.970Z Local: 1/29/2020, 3:58:35 AM command: SELECT, rowCount: 2 
2020-01-28T19:58:35.973Z Local: 1/29/2020, 3:58:35 AM command: SELECT, rowCount: 2 
2020-01-28T19:58:35.975Z Local: 1/29/2020, 3:58:35 AM command: SELECT, rowCount: 2 
2020-01-28T19:58:35.989Z Local: 1/29/2020, 3:58:35 AM SELECT COUNT(*) FROM items_table; 
2020-01-28T19:58:35.994Z Local: 1/29/2020, 3:58:35 AM command: SELECT, rowCount: 1 
2020-01-28T19:58:35.995Z Local: 1/29/2020, 3:58:35 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:58:38.016Z Local: 1/29/2020, 3:58:38 AM command: SELECT, rowCount: 1 
2020-01-28T19:58:38.020Z Local: 1/29/2020, 3:58:38 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:58:38.026Z Local: 1/29/2020, 3:58:38 AM command: SELECT, rowCount: 2 
2020-01-28T19:58:38.027Z Local: 1/29/2020, 3:58:38 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:58:38.034Z Local: 1/29/2020, 3:58:38 AM command: SELECT, rowCount: 2 
2020-01-28T19:58:38.036Z Local: 1/29/2020, 3:58:38 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:58:38.043Z Local: 1/29/2020, 3:58:38 AM command: SELECT, rowCount: 0 
2020-01-28T19:58:38.045Z Local: 1/29/2020, 3:58:38 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:58:38.052Z Local: 1/29/2020, 3:58:38 AM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-28T19:58:38.056Z Local: 1/29/2020, 3:58:38 AM command: SELECT, rowCount: 2 
2020-01-28T19:58:38.057Z Local: 1/29/2020, 3:58:38 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-28T19:58:40.053Z Local: 1/29/2020, 3:58:40 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-28T19:58:40.077Z Local: 1/29/2020, 3:58:40 AM command: CREATE, rowCount: null 
2020-01-28T19:58:40.080Z Local: 1/29/2020, 3:58:40 AM SELECT COUNT(*) FROM posts_table; 
2020-01-28T19:58:40.083Z Local: 1/29/2020, 3:58:40 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-28T19:58:40.085Z Local: 1/29/2020, 3:58:40 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-28T19:58:40.088Z Local: 1/29/2020, 3:58:40 AM command: SELECT, rowCount: 3 
2020-01-28T19:58:40.089Z Local: 1/29/2020, 3:58:40 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-28T19:58:40.093Z Local: 1/29/2020, 3:58:40 AM command: SELECT, rowCount: 40 
2020-01-28T19:58:40.094Z Local: 1/29/2020, 3:58:40 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-28T19:58:40.098Z Local: 1/29/2020, 3:58:40 AM command: SELECT, rowCount: 40 
2020-01-28T19:58:40.101Z Local: 1/29/2020, 3:58:40 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-28T19:58:40.102Z Local: 1/29/2020, 3:58:40 AM command: SELECT, rowCount: 1 
2020-01-29T04:44:20.385Z Local: 1/29/2020, 12:44:20 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T04:44:20.398Z Local: 1/29/2020, 12:44:20 PM Server is listening on port 8000 
2020-01-29T04:44:20.472Z Local: 1/29/2020, 12:44:20 PM command: DO, rowCount: null 
2020-01-29T04:44:20.472Z Local: 1/29/2020, 12:44:20 PM Created Producer type 
2020-01-29T04:44:20.473Z Local: 1/29/2020, 12:44:20 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T04:44:20.474Z Local: 1/29/2020, 12:44:20 PM command: DO, rowCount: null 
2020-01-29T04:44:20.475Z Local: 1/29/2020, 12:44:20 PM Created Spec type 
2020-01-29T04:44:20.476Z Local: 1/29/2020, 12:44:20 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T04:44:20.480Z Local: 1/29/2020, 12:44:20 PM command: CREATE, rowCount: null 
2020-01-29T04:44:20.480Z Local: 1/29/2020, 12:44:20 PM Created items_table 
2020-01-29T04:44:20.483Z Local: 1/29/2020, 12:44:20 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T04:44:26.969Z Local: 1/29/2020, 12:44:26 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T04:44:27.003Z Local: 1/29/2020, 12:44:27 PM command: SELECT, rowCount: 1 
2020-01-29T04:44:27.004Z Local: 1/29/2020, 12:44:27 PM Sending 1 rows to ::1 with  
2020-01-29T04:47:08.132Z Local: 1/29/2020, 12:47:08 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T04:47:08.164Z Local: 1/29/2020, 12:47:08 PM command: SELECT, rowCount: 2 
2020-01-29T04:47:08.166Z Local: 1/29/2020, 12:47:08 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T04:48:21.850Z Local: 1/29/2020, 12:48:21 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T04:48:21.868Z Local: 1/29/2020, 12:48:21 PM command: SELECT, rowCount: 2 
2020-01-29T04:48:21.870Z Local: 1/29/2020, 12:48:21 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T04:51:26.280Z Local: 1/29/2020, 12:51:26 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T04:51:26.295Z Local: 1/29/2020, 12:51:26 PM Server is listening on port 8000 
2020-01-29T04:51:26.358Z Local: 1/29/2020, 12:51:26 PM command: DO, rowCount: null 
2020-01-29T04:51:26.360Z Local: 1/29/2020, 12:51:26 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T04:51:26.359Z Local: 1/29/2020, 12:51:26 PM Created Producer type 
2020-01-29T04:51:26.362Z Local: 1/29/2020, 12:51:26 PM command: DO, rowCount: null 
2020-01-29T04:51:26.363Z Local: 1/29/2020, 12:51:26 PM Created Spec type 
2020-01-29T04:51:26.363Z Local: 1/29/2020, 12:51:26 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T04:51:26.367Z Local: 1/29/2020, 12:51:26 PM command: CREATE, rowCount: null 
2020-01-29T04:51:26.372Z Local: 1/29/2020, 12:51:26 PM Created items_table 
2020-01-29T04:51:26.373Z Local: 1/29/2020, 12:51:26 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T04:52:52.390Z Local: 1/29/2020, 12:52:52 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T04:52:52.402Z Local: 1/29/2020, 12:52:52 PM Server is listening on port 8000 
2020-01-29T04:52:52.426Z Local: 1/29/2020, 12:52:52 PM command: DO, rowCount: null 
2020-01-29T04:52:52.427Z Local: 1/29/2020, 12:52:52 PM Created Producer type 
2020-01-29T04:52:52.428Z Local: 1/29/2020, 12:52:52 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T04:52:52.429Z Local: 1/29/2020, 12:52:52 PM command: DO, rowCount: null 
2020-01-29T04:52:52.430Z Local: 1/29/2020, 12:52:52 PM Created Spec type 
2020-01-29T04:52:52.431Z Local: 1/29/2020, 12:52:52 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T04:52:52.433Z Local: 1/29/2020, 12:52:52 PM command: CREATE, rowCount: null 
2020-01-29T04:52:52.433Z Local: 1/29/2020, 12:52:52 PM Created items_table 
2020-01-29T04:52:52.434Z Local: 1/29/2020, 12:52:52 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T04:54:02.708Z Local: 1/29/2020, 12:54:02 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T04:54:02.719Z Local: 1/29/2020, 12:54:02 PM Server is listening on port 8000 
2020-01-29T04:54:02.742Z Local: 1/29/2020, 12:54:02 PM command: DO, rowCount: null 
2020-01-29T04:54:02.743Z Local: 1/29/2020, 12:54:02 PM Created Producer type 
2020-01-29T04:54:02.744Z Local: 1/29/2020, 12:54:02 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T04:54:02.745Z Local: 1/29/2020, 12:54:02 PM command: DO, rowCount: null 
2020-01-29T04:54:02.747Z Local: 1/29/2020, 12:54:02 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T04:54:02.746Z Local: 1/29/2020, 12:54:02 PM Created Spec type 
2020-01-29T04:54:02.749Z Local: 1/29/2020, 12:54:02 PM command: CREATE, rowCount: null 
2020-01-29T04:54:02.750Z Local: 1/29/2020, 12:54:02 PM Created items_table 
2020-01-29T04:54:02.750Z Local: 1/29/2020, 12:54:02 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:01:13.558Z Local: 1/29/2020, 1:01:13 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:01:13.572Z Local: 1/29/2020, 1:01:13 PM Server is listening on port 8000 
2020-01-29T05:01:13.596Z Local: 1/29/2020, 1:01:13 PM command: DO, rowCount: null 
2020-01-29T05:01:13.597Z Local: 1/29/2020, 1:01:13 PM Created Producer type 
2020-01-29T05:01:13.597Z Local: 1/29/2020, 1:01:13 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:01:13.599Z Local: 1/29/2020, 1:01:13 PM command: DO, rowCount: null 
2020-01-29T05:01:13.600Z Local: 1/29/2020, 1:01:13 PM Created Spec type 
2020-01-29T05:01:13.600Z Local: 1/29/2020, 1:01:13 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:01:13.602Z Local: 1/29/2020, 1:01:13 PM command: CREATE, rowCount: null 
2020-01-29T05:01:13.604Z Local: 1/29/2020, 1:01:13 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:01:13.603Z Local: 1/29/2020, 1:01:13 PM Created items_table 
2020-01-29T05:01:18.931Z Local: 1/29/2020, 1:01:18 PM command: INSERT, rowCount: 1 return id = 51 
2020-01-29T05:01:18.932Z Local: 1/29/2020, 1:01:18 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:03:57.284Z Local: 1/29/2020, 1:03:57 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T05:03:57.306Z Local: 1/29/2020, 1:03:57 PM command: SELECT, rowCount: 51 
2020-01-29T05:03:57.308Z Local: 1/29/2020, 1:03:57 PM Sending 51 rows to ::1 with  
2020-01-29T05:05:24.640Z Local: 1/29/2020, 1:05:24 PM command: INSERT, rowCount: 1 return id = 52 
2020-01-29T05:05:24.641Z Local: 1/29/2020, 1:05:24 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:05:28.707Z Local: 1/29/2020, 1:05:28 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T05:05:28.719Z Local: 1/29/2020, 1:05:28 PM command: SELECT, rowCount: 52 
2020-01-29T05:05:28.720Z Local: 1/29/2020, 1:05:28 PM Sending 52 rows to ::1 with  
2020-01-29T05:07:48.579Z Local: 1/29/2020, 1:07:48 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:07:48.592Z Local: 1/29/2020, 1:07:48 PM Server is listening on port 8000 
2020-01-29T05:07:48.616Z Local: 1/29/2020, 1:07:48 PM command: DO, rowCount: null 
2020-01-29T05:07:48.618Z Local: 1/29/2020, 1:07:48 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:07:48.618Z Local: 1/29/2020, 1:07:48 PM Created Producer type 
2020-01-29T05:07:48.620Z Local: 1/29/2020, 1:07:48 PM command: DO, rowCount: null 
2020-01-29T05:07:48.620Z Local: 1/29/2020, 1:07:48 PM Created Spec type 
2020-01-29T05:07:48.621Z Local: 1/29/2020, 1:07:48 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:07:48.632Z Local: 1/29/2020, 1:07:48 PM command: CREATE, rowCount: null 
2020-01-29T05:07:48.633Z Local: 1/29/2020, 1:07:48 PM Created items_table 
2020-01-29T05:07:48.633Z Local: 1/29/2020, 1:07:48 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:07:51.983Z Local: 1/29/2020, 1:07:51 PM command: INSERT, rowCount: 1 return id = 53 
2020-01-29T05:07:51.984Z Local: 1/29/2020, 1:07:51 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:10:02.068Z Local: 1/29/2020, 1:10:02 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:10:02.081Z Local: 1/29/2020, 1:10:02 PM Server is listening on port 8000 
2020-01-29T05:10:02.103Z Local: 1/29/2020, 1:10:02 PM command: DO, rowCount: null 
2020-01-29T05:10:02.105Z Local: 1/29/2020, 1:10:02 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:10:02.105Z Local: 1/29/2020, 1:10:02 PM Created Producer type 
2020-01-29T05:10:02.106Z Local: 1/29/2020, 1:10:02 PM command: DO, rowCount: null 
2020-01-29T05:10:02.107Z Local: 1/29/2020, 1:10:02 PM Created Spec type 
2020-01-29T05:10:02.108Z Local: 1/29/2020, 1:10:02 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:10:02.110Z Local: 1/29/2020, 1:10:02 PM command: CREATE, rowCount: null 
2020-01-29T05:10:02.110Z Local: 1/29/2020, 1:10:02 PM Created items_table 
2020-01-29T05:10:02.111Z Local: 1/29/2020, 1:10:02 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:10:05.861Z Local: 1/29/2020, 1:10:05 PM command: INSERT, rowCount: 1 return id = 54 
2020-01-29T05:10:05.862Z Local: 1/29/2020, 1:10:05 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:10:35.874Z Local: 1/29/2020, 1:10:35 PM command: INSERT, rowCount: 1 return id = 55 
2020-01-29T05:10:35.875Z Local: 1/29/2020, 1:10:35 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:10:54.512Z Local: 1/29/2020, 1:10:54 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:10:54.525Z Local: 1/29/2020, 1:10:54 PM Server is listening on port 8000 
2020-01-29T05:10:54.548Z Local: 1/29/2020, 1:10:54 PM command: DO, rowCount: null 
2020-01-29T05:10:54.550Z Local: 1/29/2020, 1:10:54 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:10:54.549Z Local: 1/29/2020, 1:10:54 PM Created Producer type 
2020-01-29T05:10:54.551Z Local: 1/29/2020, 1:10:54 PM command: DO, rowCount: null 
2020-01-29T05:10:54.552Z Local: 1/29/2020, 1:10:54 PM Created Spec type 
2020-01-29T05:10:54.552Z Local: 1/29/2020, 1:10:54 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:10:54.555Z Local: 1/29/2020, 1:10:54 PM command: CREATE, rowCount: null 
2020-01-29T05:10:54.555Z Local: 1/29/2020, 1:10:54 PM Created items_table 
2020-01-29T05:10:54.556Z Local: 1/29/2020, 1:10:54 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:10:56.300Z Local: 1/29/2020, 1:10:56 PM command: INSERT, rowCount: 1 return id = 56 
2020-01-29T05:10:56.301Z Local: 1/29/2020, 1:10:56 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:11:25.808Z Local: 1/29/2020, 1:11:25 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:11:25.821Z Local: 1/29/2020, 1:11:25 PM Server is listening on port 8000 
2020-01-29T05:11:25.845Z Local: 1/29/2020, 1:11:25 PM Created Producer type 
2020-01-29T05:11:25.844Z Local: 1/29/2020, 1:11:25 PM command: DO, rowCount: null 
2020-01-29T05:11:25.846Z Local: 1/29/2020, 1:11:25 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:11:25.847Z Local: 1/29/2020, 1:11:25 PM command: DO, rowCount: null 
2020-01-29T05:11:25.848Z Local: 1/29/2020, 1:11:25 PM Created Spec type 
2020-01-29T05:11:25.849Z Local: 1/29/2020, 1:11:25 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:11:25.851Z Local: 1/29/2020, 1:11:25 PM command: CREATE, rowCount: null 
2020-01-29T05:11:25.852Z Local: 1/29/2020, 1:11:25 PM Created items_table 
2020-01-29T05:11:25.852Z Local: 1/29/2020, 1:11:25 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:11:30.167Z Local: 1/29/2020, 1:11:30 PM command: INSERT, rowCount: 1 return id = 57 
2020-01-29T05:11:30.168Z Local: 1/29/2020, 1:11:30 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:14:09.255Z Local: 1/29/2020, 1:14:09 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:14:09.267Z Local: 1/29/2020, 1:14:09 PM Server is listening on port 8000 
2020-01-29T05:14:09.290Z Local: 1/29/2020, 1:14:09 PM command: DO, rowCount: null 
2020-01-29T05:14:09.291Z Local: 1/29/2020, 1:14:09 PM Created Producer type 
2020-01-29T05:14:09.292Z Local: 1/29/2020, 1:14:09 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:14:09.294Z Local: 1/29/2020, 1:14:09 PM command: DO, rowCount: null 
2020-01-29T05:14:09.295Z Local: 1/29/2020, 1:14:09 PM Created Spec type 
2020-01-29T05:14:09.295Z Local: 1/29/2020, 1:14:09 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:14:09.297Z Local: 1/29/2020, 1:14:09 PM command: CREATE, rowCount: null 
2020-01-29T05:14:09.298Z Local: 1/29/2020, 1:14:09 PM Created items_table 
2020-01-29T05:14:09.299Z Local: 1/29/2020, 1:14:09 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:14:13.824Z Local: 1/29/2020, 1:14:13 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:14:13.841Z Local: 1/29/2020, 1:14:13 PM command: SELECT, rowCount: 2 
2020-01-29T05:14:13.842Z Local: 1/29/2020, 1:14:13 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:14:29.335Z Local: 1/29/2020, 1:14:29 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T05:14:29.360Z Local: 1/29/2020, 1:14:29 PM command: SELECT, rowCount: 57 
2020-01-29T05:14:29.360Z Local: 1/29/2020, 1:14:29 PM Sending 57 rows to ::1 with  
2020-01-29T05:14:37.858Z Local: 1/29/2020, 1:14:37 PM SELECT * FROM items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T05:14:37.868Z Local: 1/29/2020, 1:14:37 PM command: SELECT, rowCount: 57 
2020-01-29T05:14:37.869Z Local: 1/29/2020, 1:14:37 PM Sending 57 rows to ::1 with  
2020-01-29T05:15:20.972Z Local: 1/29/2020, 1:15:20 PM SELECT * FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:15:20.991Z Local: 1/29/2020, 1:15:20 PM command: SELECT, rowCount: 2 
2020-01-29T05:15:20.993Z Local: 1/29/2020, 1:15:20 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:18:42.059Z Local: 1/29/2020, 1:18:42 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:18:42.072Z Local: 1/29/2020, 1:18:42 PM Server is listening on port 8000 
2020-01-29T05:18:42.095Z Local: 1/29/2020, 1:18:42 PM command: DO, rowCount: null 
2020-01-29T05:18:42.097Z Local: 1/29/2020, 1:18:42 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:18:42.096Z Local: 1/29/2020, 1:18:42 PM Created Producer type 
2020-01-29T05:18:42.098Z Local: 1/29/2020, 1:18:42 PM command: DO, rowCount: null 
2020-01-29T05:18:42.099Z Local: 1/29/2020, 1:18:42 PM Created Spec type 
2020-01-29T05:18:42.100Z Local: 1/29/2020, 1:18:42 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:18:42.103Z Local: 1/29/2020, 1:18:42 PM command: CREATE, rowCount: null 
2020-01-29T05:18:42.104Z Local: 1/29/2020, 1:18:42 PM Created items_table 
2020-01-29T05:18:42.104Z Local: 1/29/2020, 1:18:42 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:18:46.519Z Local: 1/29/2020, 1:18:46 PM SELECT id, row_to_json(producer) AS producer FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:18:46.533Z Local: 1/29/2020, 1:18:46 PM command: SELECT, rowCount: 2 
2020-01-29T05:18:46.535Z Local: 1/29/2020, 1:18:46 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:23:34.427Z Local: 1/29/2020, 1:23:34 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:23:34.440Z Local: 1/29/2020, 1:23:34 PM Server is listening on port 8000 
2020-01-29T05:23:34.464Z Local: 1/29/2020, 1:23:34 PM command: DO, rowCount: null 
2020-01-29T05:23:34.465Z Local: 1/29/2020, 1:23:34 PM Created Producer type 
2020-01-29T05:23:34.466Z Local: 1/29/2020, 1:23:34 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:23:34.468Z Local: 1/29/2020, 1:23:34 PM command: DO, rowCount: null 
2020-01-29T05:23:34.468Z Local: 1/29/2020, 1:23:34 PM Created Spec type 
2020-01-29T05:23:34.469Z Local: 1/29/2020, 1:23:34 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:23:34.471Z Local: 1/29/2020, 1:23:34 PM command: CREATE, rowCount: null 
2020-01-29T05:23:34.472Z Local: 1/29/2020, 1:23:34 PM Created items_table 
2020-01-29T05:23:34.472Z Local: 1/29/2020, 1:23:34 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:23:37.842Z Local: 1/29/2020, 1:23:37 PM SELECT 
    id, 
    name,
    row_to_json([object Object]) AS [object Object], 
    [object Object], 
    [object Object],
    [object Object],
    row_to_json([object Object]) AS [object Object],
    [object Object],
    row_to_json([object Object]) AS [object Object],
    [object Object]
    FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:23:37.846Z Local: 1/29/2020, 1:23:37 PM Error: error: syntax error at or near "[" 
2020-01-29T05:23:37.847Z Local: 1/29/2020, 1:23:37 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-01-29T05:24:17.872Z Local: 1/29/2020, 1:24:17 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:24:17.885Z Local: 1/29/2020, 1:24:17 PM Server is listening on port 8000 
2020-01-29T05:24:17.908Z Local: 1/29/2020, 1:24:17 PM command: DO, rowCount: null 
2020-01-29T05:24:17.910Z Local: 1/29/2020, 1:24:17 PM Created Producer type 
2020-01-29T05:24:17.910Z Local: 1/29/2020, 1:24:17 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:24:17.912Z Local: 1/29/2020, 1:24:17 PM command: DO, rowCount: null 
2020-01-29T05:24:17.912Z Local: 1/29/2020, 1:24:17 PM Created Spec type 
2020-01-29T05:24:17.913Z Local: 1/29/2020, 1:24:17 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:24:17.915Z Local: 1/29/2020, 1:24:17 PM command: CREATE, rowCount: null 
2020-01-29T05:24:17.916Z Local: 1/29/2020, 1:24:17 PM Created items_table 
2020-01-29T05:24:17.916Z Local: 1/29/2020, 1:24:17 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:24:22.205Z Local: 1/29/2020, 1:24:22 PM SELECT 
    id, 
    name,
    row_to_json([object Object]) AS [object Object], 
    [object Object], 
    [object Object],
    [object Object],
    row_to_json([object Object]) AS [object Object],
    [object Object],
    array_to_json([object Object]) AS [object Object],
    [object Object]
    FROM items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:24:22.208Z Local: 1/29/2020, 1:24:22 PM Error: error: syntax error at or near "[" 
2020-01-29T05:24:22.209Z Local: 1/29/2020, 1:24:22 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-01-29T05:26:14.784Z Local: 1/29/2020, 1:26:14 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:26:14.797Z Local: 1/29/2020, 1:26:14 PM Server is listening on port 8000 
2020-01-29T05:26:14.820Z Local: 1/29/2020, 1:26:14 PM command: DO, rowCount: null 
2020-01-29T05:26:14.822Z Local: 1/29/2020, 1:26:14 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:26:14.821Z Local: 1/29/2020, 1:26:14 PM Created Producer type 
2020-01-29T05:26:14.823Z Local: 1/29/2020, 1:26:14 PM command: DO, rowCount: null 
2020-01-29T05:26:14.824Z Local: 1/29/2020, 1:26:14 PM Created Spec type 
2020-01-29T05:26:14.825Z Local: 1/29/2020, 1:26:14 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:26:14.828Z Local: 1/29/2020, 1:26:14 PM command: CREATE, rowCount: null 
2020-01-29T05:26:14.829Z Local: 1/29/2020, 1:26:14 PM Created items_table 
2020-01-29T05:26:14.833Z Local: 1/29/2020, 1:26:14 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:26:17.881Z Local: 1/29/2020, 1:26:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(cover_img) AS imgs,
    create_on
    FROM items_table AS items_tableORDER BY [object Object] DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:26:17.884Z Local: 1/29/2020, 1:26:17 PM Error: error: syntax error at or near "BY" 
2020-01-29T05:26:17.885Z Local: 1/29/2020, 1:26:17 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-01-29T05:26:53.210Z Local: 1/29/2020, 1:26:53 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:26:53.225Z Local: 1/29/2020, 1:26:53 PM Server is listening on port 8000 
2020-01-29T05:26:53.249Z Local: 1/29/2020, 1:26:53 PM command: DO, rowCount: null 
2020-01-29T05:26:53.251Z Local: 1/29/2020, 1:26:53 PM Created Producer type 
2020-01-29T05:26:53.251Z Local: 1/29/2020, 1:26:53 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:26:53.253Z Local: 1/29/2020, 1:26:53 PM command: DO, rowCount: null 
2020-01-29T05:26:53.254Z Local: 1/29/2020, 1:26:53 PM Created Spec type 
2020-01-29T05:26:53.255Z Local: 1/29/2020, 1:26:53 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:26:53.257Z Local: 1/29/2020, 1:26:53 PM command: CREATE, rowCount: null 
2020-01-29T05:26:53.258Z Local: 1/29/2020, 1:26:53 PM Created items_table 
2020-01-29T05:26:53.259Z Local: 1/29/2020, 1:26:53 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:26:57.188Z Local: 1/29/2020, 1:26:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(cover_img) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:26:57.196Z Local: 1/29/2020, 1:26:57 PM Error: error: function array_to_json(text) does not exist 
2020-01-29T05:26:57.197Z Local: 1/29/2020, 1:26:57 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-01-29T05:27:17.735Z Local: 1/29/2020, 1:27:17 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:27:17.747Z Local: 1/29/2020, 1:27:17 PM Server is listening on port 8000 
2020-01-29T05:27:17.771Z Local: 1/29/2020, 1:27:17 PM command: DO, rowCount: null 
2020-01-29T05:27:17.773Z Local: 1/29/2020, 1:27:17 PM Created Producer type 
2020-01-29T05:27:17.773Z Local: 1/29/2020, 1:27:17 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:27:17.775Z Local: 1/29/2020, 1:27:17 PM command: DO, rowCount: null 
2020-01-29T05:27:17.776Z Local: 1/29/2020, 1:27:17 PM Created Spec type 
2020-01-29T05:27:17.776Z Local: 1/29/2020, 1:27:17 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:27:17.779Z Local: 1/29/2020, 1:27:17 PM command: CREATE, rowCount: null 
2020-01-29T05:27:17.780Z Local: 1/29/2020, 1:27:17 PM Created items_table 
2020-01-29T05:27:17.780Z Local: 1/29/2020, 1:27:17 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:27:20.653Z Local: 1/29/2020, 1:27:20 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:27:20.661Z Local: 1/29/2020, 1:27:20 PM command: SELECT, rowCount: 2 
2020-01-29T05:27:20.662Z Local: 1/29/2020, 1:27:20 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:28:23.274Z Local: 1/29/2020, 1:28:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:28:23.295Z Local: 1/29/2020, 1:28:23 PM command: SELECT, rowCount: 2 
2020-01-29T05:28:23.297Z Local: 1/29/2020, 1:28:23 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:31:33.226Z Local: 1/29/2020, 1:31:33 PM command: SELECT, rowCount: 1 
2020-01-29T05:31:33.231Z Local: 1/29/2020, 1:31:33 PM Sending 1 rows to ::1 with  
2020-01-29T05:34:43.352Z Local: 1/29/2020, 1:34:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:34:43.379Z Local: 1/29/2020, 1:34:43 PM command: SELECT, rowCount: 2 
2020-01-29T05:34:43.381Z Local: 1/29/2020, 1:34:43 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:34:43.409Z Local: 1/29/2020, 1:34:43 PM command: INSERT, rowCount: 1 return id = 58 
2020-01-29T05:34:43.410Z Local: 1/29/2020, 1:34:43 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:40:08.686Z Local: 1/29/2020, 1:40:08 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:40:08.698Z Local: 1/29/2020, 1:40:08 PM Server is listening on port 8000 
2020-01-29T05:40:08.720Z Local: 1/29/2020, 1:40:08 PM command: DO, rowCount: null 
2020-01-29T05:40:08.720Z Local: 1/29/2020, 1:40:08 PM Created Producer type 
2020-01-29T05:40:08.721Z Local: 1/29/2020, 1:40:08 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:40:08.722Z Local: 1/29/2020, 1:40:08 PM command: DO, rowCount: null 
2020-01-29T05:40:08.723Z Local: 1/29/2020, 1:40:08 PM Created Spec type 
2020-01-29T05:40:08.726Z Local: 1/29/2020, 1:40:08 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:40:08.728Z Local: 1/29/2020, 1:40:08 PM command: CREATE, rowCount: null 
2020-01-29T05:40:08.729Z Local: 1/29/2020, 1:40:08 PM Created items_table 
2020-01-29T05:40:08.729Z Local: 1/29/2020, 1:40:08 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:40:11.963Z Local: 1/29/2020, 1:40:11 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:40:11.987Z Local: 1/29/2020, 1:40:11 PM command: SELECT, rowCount: 2 
2020-01-29T05:40:11.988Z Local: 1/29/2020, 1:40:11 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:40:11.997Z Local: 1/29/2020, 1:40:11 PM command: INSERT, rowCount: 1 return id = 59 
2020-01-29T05:40:11.998Z Local: 1/29/2020, 1:40:11 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:40:46.885Z Local: 1/29/2020, 1:40:46 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T05:40:46.916Z Local: 1/29/2020, 1:40:46 PM command: SELECT, rowCount: 59 
2020-01-29T05:40:46.918Z Local: 1/29/2020, 1:40:46 PM Sending 59 rows to ::1 with  
2020-01-29T05:45:29.090Z Local: 1/29/2020, 1:45:29 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:45:29.103Z Local: 1/29/2020, 1:45:29 PM Server is listening on port 8000 
2020-01-29T05:45:29.126Z Local: 1/29/2020, 1:45:29 PM command: DO, rowCount: null 
2020-01-29T05:45:29.126Z Local: 1/29/2020, 1:45:29 PM Created Producer type 
2020-01-29T05:45:29.127Z Local: 1/29/2020, 1:45:29 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:45:29.128Z Local: 1/29/2020, 1:45:29 PM command: DO, rowCount: null 
2020-01-29T05:45:29.129Z Local: 1/29/2020, 1:45:29 PM Created Spec type 
2020-01-29T05:45:29.130Z Local: 1/29/2020, 1:45:29 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:45:29.132Z Local: 1/29/2020, 1:45:29 PM command: CREATE, rowCount: null 
2020-01-29T05:45:29.133Z Local: 1/29/2020, 1:45:29 PM Created items_table 
2020-01-29T05:45:29.133Z Local: 1/29/2020, 1:45:29 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:45:59.662Z Local: 1/29/2020, 1:45:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:45:59.697Z Local: 1/29/2020, 1:45:59 PM command: SELECT, rowCount: 2 
2020-01-29T05:45:59.698Z Local: 1/29/2020, 1:45:59 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:45:59.702Z Local: 1/29/2020, 1:45:59 PM command: INSERT, rowCount: 1 return id = 60 
2020-01-29T05:45:59.703Z Local: 1/29/2020, 1:45:59 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:46:46.905Z Local: 1/29/2020, 1:46:46 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:46:46.917Z Local: 1/29/2020, 1:46:46 PM Server is listening on port 8000 
2020-01-29T05:46:46.940Z Local: 1/29/2020, 1:46:46 PM command: DO, rowCount: null 
2020-01-29T05:46:46.941Z Local: 1/29/2020, 1:46:46 PM Created Producer type 
2020-01-29T05:46:46.942Z Local: 1/29/2020, 1:46:46 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:46:46.943Z Local: 1/29/2020, 1:46:46 PM command: DO, rowCount: null 
2020-01-29T05:46:46.944Z Local: 1/29/2020, 1:46:46 PM Created Spec type 
2020-01-29T05:46:46.945Z Local: 1/29/2020, 1:46:46 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:46:46.947Z Local: 1/29/2020, 1:46:46 PM command: CREATE, rowCount: null 
2020-01-29T05:46:46.948Z Local: 1/29/2020, 1:46:46 PM Created items_table 
2020-01-29T05:46:46.948Z Local: 1/29/2020, 1:46:46 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:46:50.098Z Local: 1/29/2020, 1:46:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:46:50.106Z Local: 1/29/2020, 1:46:50 PM command: SELECT, rowCount: 2 
2020-01-29T05:46:50.107Z Local: 1/29/2020, 1:46:50 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:46:50.144Z Local: 1/29/2020, 1:46:50 PM command: INSERT, rowCount: 1 return id = 61 
2020-01-29T05:46:50.146Z Local: 1/29/2020, 1:46:50 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:48:32.455Z Local: 1/29/2020, 1:48:32 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:48:32.467Z Local: 1/29/2020, 1:48:32 PM Server is listening on port 8000 
2020-01-29T05:48:32.490Z Local: 1/29/2020, 1:48:32 PM command: DO, rowCount: null 
2020-01-29T05:48:32.491Z Local: 1/29/2020, 1:48:32 PM Created Producer type 
2020-01-29T05:48:32.491Z Local: 1/29/2020, 1:48:32 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:48:32.494Z Local: 1/29/2020, 1:48:32 PM Created Spec type 
2020-01-29T05:48:32.493Z Local: 1/29/2020, 1:48:32 PM command: DO, rowCount: null 
2020-01-29T05:48:32.494Z Local: 1/29/2020, 1:48:32 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:48:32.496Z Local: 1/29/2020, 1:48:32 PM command: CREATE, rowCount: null 
2020-01-29T05:48:32.497Z Local: 1/29/2020, 1:48:32 PM Created items_table 
2020-01-29T05:48:32.498Z Local: 1/29/2020, 1:48:32 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:48:35.487Z Local: 1/29/2020, 1:48:35 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:48:35.495Z Local: 1/29/2020, 1:48:35 PM command: SELECT, rowCount: 2 
2020-01-29T05:48:35.496Z Local: 1/29/2020, 1:48:35 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:48:35.530Z Local: 1/29/2020, 1:48:35 PM command: INSERT, rowCount: 1 return id = 62 
2020-01-29T05:48:35.532Z Local: 1/29/2020, 1:48:35 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:49:42.310Z Local: 1/29/2020, 1:49:42 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:49:42.323Z Local: 1/29/2020, 1:49:42 PM Server is listening on port 8000 
2020-01-29T05:49:42.345Z Local: 1/29/2020, 1:49:42 PM command: DO, rowCount: null 
2020-01-29T05:49:42.347Z Local: 1/29/2020, 1:49:42 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:49:42.347Z Local: 1/29/2020, 1:49:42 PM Created Producer type 
2020-01-29T05:49:42.349Z Local: 1/29/2020, 1:49:42 PM command: DO, rowCount: null 
2020-01-29T05:49:42.349Z Local: 1/29/2020, 1:49:42 PM Created Spec type 
2020-01-29T05:49:42.350Z Local: 1/29/2020, 1:49:42 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:49:42.352Z Local: 1/29/2020, 1:49:42 PM command: CREATE, rowCount: null 
2020-01-29T05:49:42.353Z Local: 1/29/2020, 1:49:42 PM Created items_table 
2020-01-29T05:49:42.354Z Local: 1/29/2020, 1:49:42 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:49:45.926Z Local: 1/29/2020, 1:49:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:49:45.948Z Local: 1/29/2020, 1:49:45 PM command: INSERT, rowCount: 1 return id = 63 
2020-01-29T05:49:45.949Z Local: 1/29/2020, 1:49:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:49:45.966Z Local: 1/29/2020, 1:49:45 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:49:45.965Z Local: 1/29/2020, 1:49:45 PM command: SELECT, rowCount: 2 
2020-01-29T05:50:30.265Z Local: 1/29/2020, 1:50:30 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:50:30.278Z Local: 1/29/2020, 1:50:30 PM Server is listening on port 8000 
2020-01-29T05:50:30.301Z Local: 1/29/2020, 1:50:30 PM command: DO, rowCount: null 
2020-01-29T05:50:30.303Z Local: 1/29/2020, 1:50:30 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:50:30.302Z Local: 1/29/2020, 1:50:30 PM Created Producer type 
2020-01-29T05:50:30.304Z Local: 1/29/2020, 1:50:30 PM command: DO, rowCount: null 
2020-01-29T05:50:30.305Z Local: 1/29/2020, 1:50:30 PM Created Spec type 
2020-01-29T05:50:30.306Z Local: 1/29/2020, 1:50:30 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:50:30.308Z Local: 1/29/2020, 1:50:30 PM command: CREATE, rowCount: null 
2020-01-29T05:50:30.309Z Local: 1/29/2020, 1:50:30 PM Created items_table 
2020-01-29T05:50:30.309Z Local: 1/29/2020, 1:50:30 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:50:33.519Z Local: 1/29/2020, 1:50:33 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:50:33.536Z Local: 1/29/2020, 1:50:33 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:50:33.535Z Local: 1/29/2020, 1:50:33 PM command: INSERT, rowCount: 1 return id = 64 
2020-01-29T05:50:33.546Z Local: 1/29/2020, 1:50:33 PM command: SELECT, rowCount: 2 
2020-01-29T05:50:33.547Z Local: 1/29/2020, 1:50:33 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:50:56.975Z Local: 1/29/2020, 1:50:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:50:57.002Z Local: 1/29/2020, 1:50:57 PM command: SELECT, rowCount: 2 
2020-01-29T05:50:57.003Z Local: 1/29/2020, 1:50:57 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:50:57.004Z Local: 1/29/2020, 1:50:57 PM command: INSERT, rowCount: 1 return id = 65 
2020-01-29T05:50:57.005Z Local: 1/29/2020, 1:50:57 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:51:46.990Z Local: 1/29/2020, 1:51:46 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:51:47.015Z Local: 1/29/2020, 1:51:47 PM command: SELECT, rowCount: 2 
2020-01-29T05:51:47.016Z Local: 1/29/2020, 1:51:47 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:51:47.034Z Local: 1/29/2020, 1:51:47 PM command: INSERT, rowCount: 1 return id = 66 
2020-01-29T05:51:47.036Z Local: 1/29/2020, 1:51:47 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:54:45.165Z Local: 1/29/2020, 1:54:45 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:54:45.177Z Local: 1/29/2020, 1:54:45 PM Server is listening on port 8000 
2020-01-29T05:54:45.201Z Local: 1/29/2020, 1:54:45 PM command: DO, rowCount: null 
2020-01-29T05:54:45.203Z Local: 1/29/2020, 1:54:45 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:54:45.202Z Local: 1/29/2020, 1:54:45 PM Created Producer type 
2020-01-29T05:54:45.204Z Local: 1/29/2020, 1:54:45 PM command: DO, rowCount: null 
2020-01-29T05:54:45.205Z Local: 1/29/2020, 1:54:45 PM Created Spec type 
2020-01-29T05:54:45.205Z Local: 1/29/2020, 1:54:45 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:54:45.208Z Local: 1/29/2020, 1:54:45 PM command: CREATE, rowCount: null 
2020-01-29T05:54:45.209Z Local: 1/29/2020, 1:54:45 PM Created items_table 
2020-01-29T05:54:45.209Z Local: 1/29/2020, 1:54:45 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:54:48.484Z Local: 1/29/2020, 1:54:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:54:48.506Z Local: 1/29/2020, 1:54:48 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:54:48.504Z Local: 1/29/2020, 1:54:48 PM command: INSERT, rowCount: 1 return id = 67 
2020-01-29T05:54:48.511Z Local: 1/29/2020, 1:54:48 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:54:48.511Z Local: 1/29/2020, 1:54:48 PM command: SELECT, rowCount: 2 
2020-01-29T05:54:55.096Z Local: 1/29/2020, 1:54:55 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:54:55.123Z Local: 1/29/2020, 1:54:55 PM command: DO, rowCount: null 
2020-01-29T05:54:55.127Z Local: 1/29/2020, 1:54:55 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:54:55.129Z Local: 1/29/2020, 1:54:55 PM command: DO, rowCount: null 
2020-01-29T05:54:55.131Z Local: 1/29/2020, 1:54:55 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:54:55.134Z Local: 1/29/2020, 1:54:55 PM command: CREATE, rowCount: null 
2020-01-29T05:54:55.137Z Local: 1/29/2020, 1:54:55 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T05:54:55.144Z Local: 1/29/2020, 1:54:55 PM command: SELECT, rowCount: 1 
2020-01-29T05:54:55.155Z Local: 1/29/2020, 1:54:55 PM command: INSERT, rowCount: 1 return id = 68 
2020-01-29T05:54:55.157Z Local: 1/29/2020, 1:54:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T05:54:55.161Z Local: 1/29/2020, 1:54:55 PM command: SELECT, rowCount: 3 
2020-01-29T05:54:55.162Z Local: 1/29/2020, 1:54:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T05:54:55.169Z Local: 1/29/2020, 1:54:55 PM command: SELECT, rowCount: 68 
2020-01-29T05:54:55.170Z Local: 1/29/2020, 1:54:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T05:54:55.175Z Local: 1/29/2020, 1:54:55 PM command: SELECT, rowCount: 68 
2020-01-29T05:54:55.179Z Local: 1/29/2020, 1:54:55 PM command: SELECT, rowCount: 1 
2020-01-29T05:54:55.183Z Local: 1/29/2020, 1:54:55 PM command: SELECT, rowCount: 2 
2020-01-29T05:54:55.187Z Local: 1/29/2020, 1:54:55 PM command: SELECT, rowCount: 2 
2020-01-29T05:54:55.190Z Local: 1/29/2020, 1:54:55 PM command: SELECT, rowCount: 2 
2020-01-29T05:54:55.200Z Local: 1/29/2020, 1:54:55 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T05:54:55.203Z Local: 1/29/2020, 1:54:55 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:54:55.203Z Local: 1/29/2020, 1:54:55 PM command: SELECT, rowCount: 1 
2020-01-29T05:54:55.228Z Local: 1/29/2020, 1:54:55 PM command: INSERT, rowCount: 1 return id = 69 
2020-01-29T05:54:55.230Z Local: 1/29/2020, 1:54:55 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:54:57.226Z Local: 1/29/2020, 1:54:57 PM command: SELECT, rowCount: 1 
2020-01-29T05:54:57.230Z Local: 1/29/2020, 1:54:57 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:54:57.239Z Local: 1/29/2020, 1:54:57 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:54:57.238Z Local: 1/29/2020, 1:54:57 PM command: SELECT, rowCount: 2 
2020-01-29T05:54:57.254Z Local: 1/29/2020, 1:54:57 PM command: SELECT, rowCount: 2 
2020-01-29T05:54:57.255Z Local: 1/29/2020, 1:54:57 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:54:57.263Z Local: 1/29/2020, 1:54:57 PM command: SELECT, rowCount: 0 
2020-01-29T05:54:57.263Z Local: 1/29/2020, 1:54:57 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:54:57.268Z Local: 1/29/2020, 1:54:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:54:57.271Z Local: 1/29/2020, 1:54:57 PM command: SELECT, rowCount: 2 
2020-01-29T05:54:57.272Z Local: 1/29/2020, 1:54:57 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:54:57.276Z Local: 1/29/2020, 1:54:57 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T05:54:57.296Z Local: 1/29/2020, 1:54:57 PM command: CREATE, rowCount: null 
2020-01-29T05:54:57.297Z Local: 1/29/2020, 1:54:57 PM SELECT COUNT(*) FROM posts_table; 
2020-01-29T05:54:57.302Z Local: 1/29/2020, 1:54:57 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T05:54:57.303Z Local: 1/29/2020, 1:54:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T05:54:57.307Z Local: 1/29/2020, 1:54:57 PM command: SELECT, rowCount: 3 
2020-01-29T05:54:57.309Z Local: 1/29/2020, 1:54:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T05:54:57.313Z Local: 1/29/2020, 1:54:57 PM command: SELECT, rowCount: 40 
2020-01-29T05:54:57.315Z Local: 1/29/2020, 1:54:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T05:54:57.318Z Local: 1/29/2020, 1:54:57 PM command: SELECT, rowCount: 40 
2020-01-29T05:54:57.319Z Local: 1/29/2020, 1:54:57 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T05:54:57.321Z Local: 1/29/2020, 1:54:57 PM command: SELECT, rowCount: 1 
2020-01-29T05:56:16.442Z Local: 1/29/2020, 1:56:16 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T05:56:16.463Z Local: 1/29/2020, 1:56:16 PM command: SELECT, rowCount: 1 
2020-01-29T05:56:16.464Z Local: 1/29/2020, 1:56:16 PM Sending 1 rows to ::1 with  
2020-01-29T05:57:17.191Z Local: 1/29/2020, 1:57:17 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:57:17.204Z Local: 1/29/2020, 1:57:17 PM Server is listening on port 8000 
2020-01-29T05:57:17.227Z Local: 1/29/2020, 1:57:17 PM command: DO, rowCount: null 
2020-01-29T05:57:17.228Z Local: 1/29/2020, 1:57:17 PM Created Producer type 
2020-01-29T05:57:17.228Z Local: 1/29/2020, 1:57:17 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:57:17.230Z Local: 1/29/2020, 1:57:17 PM command: DO, rowCount: null 
2020-01-29T05:57:17.231Z Local: 1/29/2020, 1:57:17 PM Created Spec type 
2020-01-29T05:57:17.232Z Local: 1/29/2020, 1:57:17 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:57:17.236Z Local: 1/29/2020, 1:57:17 PM command: CREATE, rowCount: null 
2020-01-29T05:57:17.240Z Local: 1/29/2020, 1:57:17 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:57:17.240Z Local: 1/29/2020, 1:57:17 PM Created items_table 
2020-01-29T05:57:20.985Z Local: 1/29/2020, 1:57:20 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T05:57:20.990Z Local: 1/29/2020, 1:57:20 PM command: SELECT, rowCount: 1 
2020-01-29T05:57:20.991Z Local: 1/29/2020, 1:57:20 PM Sending 1 rows to ::1 with  
2020-01-29T05:57:45.170Z Local: 1/29/2020, 1:57:45 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:57:45.184Z Local: 1/29/2020, 1:57:45 PM Server is listening on port 8000 
2020-01-29T05:57:45.207Z Local: 1/29/2020, 1:57:45 PM Created Producer type 
2020-01-29T05:57:45.206Z Local: 1/29/2020, 1:57:45 PM command: DO, rowCount: null 
2020-01-29T05:57:45.208Z Local: 1/29/2020, 1:57:45 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:57:45.210Z Local: 1/29/2020, 1:57:45 PM command: DO, rowCount: null 
2020-01-29T05:57:45.211Z Local: 1/29/2020, 1:57:45 PM Created Spec type 
2020-01-29T05:57:45.212Z Local: 1/29/2020, 1:57:45 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:57:45.214Z Local: 1/29/2020, 1:57:45 PM command: CREATE, rowCount: null 
2020-01-29T05:57:45.215Z Local: 1/29/2020, 1:57:45 PM Created items_table 
2020-01-29T05:57:45.216Z Local: 1/29/2020, 1:57:45 PM Mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T05:57:48.202Z Local: 1/29/2020, 1:57:48 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T05:57:48.206Z Local: 1/29/2020, 1:57:48 PM command: SELECT, rowCount: 1 
2020-01-29T05:57:48.208Z Local: 1/29/2020, 1:57:48 PM Sending 1 rows to ::1 with  
2020-01-29T05:57:53.404Z Local: 1/29/2020, 1:57:53 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:57:53.435Z Local: 1/29/2020, 1:57:53 PM command: DO, rowCount: null 
2020-01-29T05:57:53.439Z Local: 1/29/2020, 1:57:53 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:57:53.440Z Local: 1/29/2020, 1:57:53 PM command: DO, rowCount: null 
2020-01-29T05:57:53.443Z Local: 1/29/2020, 1:57:53 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:57:53.445Z Local: 1/29/2020, 1:57:53 PM command: CREATE, rowCount: null 
2020-01-29T05:57:53.449Z Local: 1/29/2020, 1:57:53 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T05:57:53.452Z Local: 1/29/2020, 1:57:53 PM command: SELECT, rowCount: 1 
2020-01-29T05:57:53.465Z Local: 1/29/2020, 1:57:53 PM command: INSERT, rowCount: 1 return id = 70 
2020-01-29T05:57:53.467Z Local: 1/29/2020, 1:57:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T05:57:53.471Z Local: 1/29/2020, 1:57:53 PM command: SELECT, rowCount: 3 
2020-01-29T05:57:53.473Z Local: 1/29/2020, 1:57:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T05:57:53.479Z Local: 1/29/2020, 1:57:53 PM command: SELECT, rowCount: 70 
2020-01-29T05:57:53.480Z Local: 1/29/2020, 1:57:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T05:57:53.485Z Local: 1/29/2020, 1:57:53 PM command: SELECT, rowCount: 70 
2020-01-29T05:57:53.488Z Local: 1/29/2020, 1:57:53 PM command: SELECT, rowCount: 1 
2020-01-29T05:57:53.493Z Local: 1/29/2020, 1:57:53 PM command: SELECT, rowCount: 2 
2020-01-29T05:57:53.496Z Local: 1/29/2020, 1:57:53 PM command: SELECT, rowCount: 2 
2020-01-29T05:57:53.498Z Local: 1/29/2020, 1:57:53 PM command: SELECT, rowCount: 2 
2020-01-29T05:57:53.510Z Local: 1/29/2020, 1:57:53 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T05:57:53.512Z Local: 1/29/2020, 1:57:53 PM command: SELECT, rowCount: 1 
2020-01-29T05:57:53.513Z Local: 1/29/2020, 1:57:53 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:57:53.557Z Local: 1/29/2020, 1:57:53 PM command: INSERT, rowCount: 1 return id = 71 
2020-01-29T05:57:53.559Z Local: 1/29/2020, 1:57:53 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:57:55.531Z Local: 1/29/2020, 1:57:55 PM command: SELECT, rowCount: 1 
2020-01-29T05:57:55.535Z Local: 1/29/2020, 1:57:55 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:57:55.550Z Local: 1/29/2020, 1:57:55 PM command: SELECT, rowCount: 2 
2020-01-29T05:57:55.551Z Local: 1/29/2020, 1:57:55 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:57:55.558Z Local: 1/29/2020, 1:57:55 PM command: SELECT, rowCount: 2 
2020-01-29T05:57:55.559Z Local: 1/29/2020, 1:57:55 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:57:55.568Z Local: 1/29/2020, 1:57:55 PM command: SELECT, rowCount: 0 
2020-01-29T05:57:55.569Z Local: 1/29/2020, 1:57:55 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:57:55.574Z Local: 1/29/2020, 1:57:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:57:55.578Z Local: 1/29/2020, 1:57:55 PM command: SELECT, rowCount: 2 
2020-01-29T05:57:55.578Z Local: 1/29/2020, 1:57:55 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:57:55.583Z Local: 1/29/2020, 1:57:55 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T05:57:55.601Z Local: 1/29/2020, 1:57:55 PM command: CREATE, rowCount: null 
2020-01-29T05:57:55.603Z Local: 1/29/2020, 1:57:55 PM SELECT COUNT(*) FROM posts_table; 
2020-01-29T05:57:55.606Z Local: 1/29/2020, 1:57:55 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T05:57:55.609Z Local: 1/29/2020, 1:57:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T05:57:55.612Z Local: 1/29/2020, 1:57:55 PM command: SELECT, rowCount: 3 
2020-01-29T05:57:55.613Z Local: 1/29/2020, 1:57:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T05:57:55.616Z Local: 1/29/2020, 1:57:55 PM command: SELECT, rowCount: 40 
2020-01-29T05:57:55.618Z Local: 1/29/2020, 1:57:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T05:57:55.622Z Local: 1/29/2020, 1:57:55 PM command: SELECT, rowCount: 40 
2020-01-29T05:57:55.625Z Local: 1/29/2020, 1:57:55 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T05:57:55.627Z Local: 1/29/2020, 1:57:55 PM command: SELECT, rowCount: 1 
2020-01-29T05:58:49.156Z Local: 1/29/2020, 1:58:49 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:58:49.185Z Local: 1/29/2020, 1:58:49 PM command: DO, rowCount: null 
2020-01-29T05:58:49.189Z Local: 1/29/2020, 1:58:49 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:58:49.191Z Local: 1/29/2020, 1:58:49 PM command: DO, rowCount: null 
2020-01-29T05:58:49.193Z Local: 1/29/2020, 1:58:49 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:58:49.195Z Local: 1/29/2020, 1:58:49 PM command: CREATE, rowCount: null 
2020-01-29T05:58:49.200Z Local: 1/29/2020, 1:58:49 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T05:58:49.209Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 1 
2020-01-29T05:58:49.221Z Local: 1/29/2020, 1:58:49 PM command: INSERT, rowCount: 1 return id = 72 
2020-01-29T05:58:49.223Z Local: 1/29/2020, 1:58:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T05:58:49.226Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 3 
2020-01-29T05:58:49.229Z Local: 1/29/2020, 1:58:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T05:58:49.234Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 72 
2020-01-29T05:58:49.236Z Local: 1/29/2020, 1:58:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T05:58:49.244Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 72 
2020-01-29T05:58:49.248Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 1 
2020-01-29T05:58:49.251Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 2 
2020-01-29T05:58:49.254Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 2 
2020-01-29T05:58:49.256Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 2 
2020-01-29T05:58:49.267Z Local: 1/29/2020, 1:58:49 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T05:58:49.286Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 1 
2020-01-29T05:58:49.288Z Local: 1/29/2020, 1:58:49 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:58:49.313Z Local: 1/29/2020, 1:58:49 PM command: INSERT, rowCount: 1 return id = 73 
2020-01-29T05:58:49.314Z Local: 1/29/2020, 1:58:49 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:58:49.322Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 1 
2020-01-29T05:58:49.322Z Local: 1/29/2020, 1:58:49 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:58:49.330Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 2 
2020-01-29T05:58:49.331Z Local: 1/29/2020, 1:58:49 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:58:49.339Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 2 
2020-01-29T05:58:49.340Z Local: 1/29/2020, 1:58:49 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:58:49.346Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 0 
2020-01-29T05:58:49.347Z Local: 1/29/2020, 1:58:49 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:58:49.353Z Local: 1/29/2020, 1:58:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:58:49.356Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 2 
2020-01-29T05:58:49.356Z Local: 1/29/2020, 1:58:49 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:58:49.360Z Local: 1/29/2020, 1:58:49 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T05:58:49.378Z Local: 1/29/2020, 1:58:49 PM command: CREATE, rowCount: null 
2020-01-29T05:58:49.380Z Local: 1/29/2020, 1:58:49 PM SELECT COUNT(*) FROM posts_table; 
2020-01-29T05:58:49.383Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T05:58:49.384Z Local: 1/29/2020, 1:58:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T05:58:49.387Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 3 
2020-01-29T05:58:49.388Z Local: 1/29/2020, 1:58:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T05:58:49.391Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 40 
2020-01-29T05:58:49.392Z Local: 1/29/2020, 1:58:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T05:58:49.395Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 40 
2020-01-29T05:58:49.398Z Local: 1/29/2020, 1:58:49 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T05:58:49.400Z Local: 1/29/2020, 1:58:49 PM command: SELECT, rowCount: 1 
2020-01-29T05:59:54.091Z Local: 1/29/2020, 1:59:54 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:59:54.118Z Local: 1/29/2020, 1:59:54 PM command: DO, rowCount: null 
2020-01-29T05:59:54.122Z Local: 1/29/2020, 1:59:54 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T05:59:54.124Z Local: 1/29/2020, 1:59:54 PM command: DO, rowCount: null 
2020-01-29T05:59:54.126Z Local: 1/29/2020, 1:59:54 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T05:59:54.128Z Local: 1/29/2020, 1:59:54 PM command: CREATE, rowCount: null 
2020-01-29T05:59:54.131Z Local: 1/29/2020, 1:59:54 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T05:59:54.146Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 1 
2020-01-29T05:59:54.168Z Local: 1/29/2020, 1:59:54 PM command: INSERT, rowCount: 1 return id = 74 
2020-01-29T05:59:54.169Z Local: 1/29/2020, 1:59:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T05:59:54.173Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 3 
2020-01-29T05:59:54.175Z Local: 1/29/2020, 1:59:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T05:59:54.181Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 74 
2020-01-29T05:59:54.182Z Local: 1/29/2020, 1:59:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T05:59:54.187Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 74 
2020-01-29T05:59:54.191Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 1 
2020-01-29T05:59:54.195Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 2 
2020-01-29T05:59:54.198Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 2 
2020-01-29T05:59:54.200Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 2 
2020-01-29T05:59:54.217Z Local: 1/29/2020, 1:59:54 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T05:59:54.236Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 1 
2020-01-29T05:59:54.237Z Local: 1/29/2020, 1:59:54 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:59:54.258Z Local: 1/29/2020, 1:59:54 PM command: INSERT, rowCount: 1 return id = 75 
2020-01-29T05:59:54.259Z Local: 1/29/2020, 1:59:54 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:59:54.267Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 1 
2020-01-29T05:59:54.268Z Local: 1/29/2020, 1:59:54 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:59:54.273Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 2 
2020-01-29T05:59:54.273Z Local: 1/29/2020, 1:59:54 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:59:54.280Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 2 
2020-01-29T05:59:54.281Z Local: 1/29/2020, 1:59:54 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:59:54.287Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 0 
2020-01-29T05:59:54.288Z Local: 1/29/2020, 1:59:54 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:59:54.293Z Local: 1/29/2020, 1:59:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T05:59:54.295Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 2 
2020-01-29T05:59:54.296Z Local: 1/29/2020, 1:59:54 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T05:59:54.293Z Local: 1/29/2020, 1:59:54 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T05:59:54.313Z Local: 1/29/2020, 1:59:54 PM command: CREATE, rowCount: null 
2020-01-29T05:59:54.314Z Local: 1/29/2020, 1:59:54 PM SELECT COUNT(*) FROM posts_table; 
2020-01-29T05:59:54.318Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T05:59:54.319Z Local: 1/29/2020, 1:59:54 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T05:59:54.322Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 3 
2020-01-29T05:59:54.324Z Local: 1/29/2020, 1:59:54 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T05:59:54.327Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 40 
2020-01-29T05:59:54.329Z Local: 1/29/2020, 1:59:54 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T05:59:54.332Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 40 
2020-01-29T05:59:54.334Z Local: 1/29/2020, 1:59:54 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T05:59:54.336Z Local: 1/29/2020, 1:59:54 PM command: SELECT, rowCount: 1 
2020-01-29T06:00:53.091Z Local: 1/29/2020, 2:00:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T06:00:53.145Z Local: 1/29/2020, 2:00:53 PM command: SELECT, rowCount: 75 
2020-01-29T06:00:53.147Z Local: 1/29/2020, 2:00:53 PM Sending 75 rows to ::1 with  
2020-01-29T06:02:09.896Z Local: 1/29/2020, 2:02:09 PM command: SELECT, rowCount: 1 
2020-01-29T06:02:09.898Z Local: 1/29/2020, 2:02:09 PM Sending 1 rows to ::1 with  
2020-01-29T06:02:21.521Z Local: 1/29/2020, 2:02:21 PM command: SELECT, rowCount: 1 
2020-01-29T06:02:21.523Z Local: 1/29/2020, 2:02:21 PM Sending 1 rows to ::1 with  
2020-01-29T06:03:37.142Z Local: 1/29/2020, 2:03:37 PM command: INSERT, rowCount: 1 return id = 76 
2020-01-29T06:03:37.144Z Local: 1/29/2020, 2:03:37 PM Sending 1 rows to ::1 with  
2020-01-29T06:03:53.339Z Local: 1/29/2020, 2:03:53 PM command: SELECT, rowCount: 2 
2020-01-29T06:03:53.340Z Local: 1/29/2020, 2:03:53 PM Sending 2 rows to ::1 with  
2020-01-29T06:04:18.582Z Local: 1/29/2020, 2:04:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T06:04:18.615Z Local: 1/29/2020, 2:04:18 PM command: SELECT, rowCount: 76 
2020-01-29T06:04:18.616Z Local: 1/29/2020, 2:04:18 PM Sending 76 rows to ::1 with  
2020-01-29T08:39:19.627Z Local: 1/29/2020, 4:39:19 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:39:19.640Z Local: 1/29/2020, 4:39:19 PM Server is listening on port 8000 
2020-01-29T08:39:19.712Z Local: 1/29/2020, 4:39:19 PM command: DO, rowCount: null 
2020-01-29T08:39:19.713Z Local: 1/29/2020, 4:39:19 PM Created Producer type 
2020-01-29T08:39:19.714Z Local: 1/29/2020, 4:39:19 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:39:19.716Z Local: 1/29/2020, 4:39:19 PM command: DO, rowCount: null 
2020-01-29T08:39:19.717Z Local: 1/29/2020, 4:39:19 PM Created Spec type 
2020-01-29T08:39:19.717Z Local: 1/29/2020, 4:39:19 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T08:39:19.722Z Local: 1/29/2020, 4:39:19 PM command: CREATE, rowCount: null 
2020-01-29T08:39:19.724Z Local: 1/29/2020, 4:39:19 PM Created items_table 
2020-01-29T08:39:19.725Z Local: 1/29/2020, 4:39:19 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T08:39:30.923Z Local: 1/29/2020, 4:39:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T08:39:30.978Z Local: 1/29/2020, 4:39:30 PM command: SELECT, rowCount: 76 
2020-01-29T08:39:30.980Z Local: 1/29/2020, 4:39:30 PM Sending 76 rows to ::1 with  
2020-01-29T08:39:41.400Z Local: 1/29/2020, 4:39:41 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T08:39:41.428Z Local: 1/29/2020, 4:39:41 PM command: SELECT, rowCount: 1 
2020-01-29T08:39:41.430Z Local: 1/29/2020, 4:39:41 PM Sending 1 rows to ::1 with  
2020-01-29T08:39:41.432Z Local: 1/29/2020, 4:39:41 PM Error: TypeError: Cannot set property 'result' of undefined 
2020-01-29T08:41:16.727Z Local: 1/29/2020, 4:41:16 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:41:16.740Z Local: 1/29/2020, 4:41:16 PM Server is listening on port 8000 
2020-01-29T08:41:16.763Z Local: 1/29/2020, 4:41:16 PM command: DO, rowCount: null 
2020-01-29T08:41:16.763Z Local: 1/29/2020, 4:41:16 PM Created Producer type 
2020-01-29T08:41:16.764Z Local: 1/29/2020, 4:41:16 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:41:16.765Z Local: 1/29/2020, 4:41:16 PM command: DO, rowCount: null 
2020-01-29T08:41:16.772Z Local: 1/29/2020, 4:41:16 PM Created Spec type 
2020-01-29T08:41:16.773Z Local: 1/29/2020, 4:41:16 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T08:41:16.775Z Local: 1/29/2020, 4:41:16 PM command: CREATE, rowCount: null 
2020-01-29T08:41:16.775Z Local: 1/29/2020, 4:41:16 PM Created items_table 
2020-01-29T08:41:16.776Z Local: 1/29/2020, 4:41:16 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T08:41:21.070Z Local: 1/29/2020, 4:41:21 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T08:41:21.075Z Local: 1/29/2020, 4:41:21 PM command: SELECT, rowCount: 1 
2020-01-29T08:41:21.076Z Local: 1/29/2020, 4:41:21 PM Sending 1 rows to ::1 with  
2020-01-29T08:42:33.438Z Local: 1/29/2020, 4:42:33 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:42:33.451Z Local: 1/29/2020, 4:42:33 PM Server is listening on port 8000 
2020-01-29T08:42:33.474Z Local: 1/29/2020, 4:42:33 PM command: DO, rowCount: null 
2020-01-29T08:42:33.475Z Local: 1/29/2020, 4:42:33 PM Created Producer type 
2020-01-29T08:42:33.476Z Local: 1/29/2020, 4:42:33 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:42:33.479Z Local: 1/29/2020, 4:42:33 PM Created Spec type 
2020-01-29T08:42:33.478Z Local: 1/29/2020, 4:42:33 PM command: DO, rowCount: null 
2020-01-29T08:42:33.479Z Local: 1/29/2020, 4:42:33 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T08:42:33.482Z Local: 1/29/2020, 4:42:33 PM command: CREATE, rowCount: null 
2020-01-29T08:42:33.482Z Local: 1/29/2020, 4:42:33 PM Created items_table 
2020-01-29T08:42:33.483Z Local: 1/29/2020, 4:42:33 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T08:42:38.329Z Local: 1/29/2020, 4:42:38 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T08:42:38.334Z Local: 1/29/2020, 4:42:38 PM command: SELECT, rowCount: 1 
2020-01-29T08:42:38.335Z Local: 1/29/2020, 4:42:38 PM Sending 1 rows to ::1 with  
2020-01-29T08:52:58.924Z Local: 1/29/2020, 4:52:58 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:52:58.937Z Local: 1/29/2020, 4:52:58 PM Server is listening on port 8000 
2020-01-29T08:52:58.960Z Local: 1/29/2020, 4:52:58 PM command: DO, rowCount: null 
2020-01-29T08:52:58.962Z Local: 1/29/2020, 4:52:58 PM Created Producer type 
2020-01-29T08:52:58.962Z Local: 1/29/2020, 4:52:58 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:52:58.963Z Local: 1/29/2020, 4:52:58 PM command: DO, rowCount: null 
2020-01-29T08:52:58.964Z Local: 1/29/2020, 4:52:58 PM Created Spec type 
2020-01-29T08:52:58.965Z Local: 1/29/2020, 4:52:58 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T08:52:58.967Z Local: 1/29/2020, 4:52:58 PM command: CREATE, rowCount: null 
2020-01-29T08:52:58.968Z Local: 1/29/2020, 4:52:58 PM Created items_table 
2020-01-29T08:52:58.968Z Local: 1/29/2020, 4:52:58 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T08:53:02.698Z Local: 1/29/2020, 4:53:02 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T08:53:02.703Z Local: 1/29/2020, 4:53:02 PM command: SELECT, rowCount: 1 
2020-01-29T08:53:02.704Z Local: 1/29/2020, 4:53:02 PM Sending 1 rows to ::1 with  
2020-01-29T08:53:08.014Z Local: 1/29/2020, 4:53:08 PM command: INSERT, rowCount: 1 return id = 77 
2020-01-29T08:53:08.015Z Local: 1/29/2020, 4:53:08 PM Sending 1 rows to ::1 with  
2020-01-29T08:53:44.848Z Local: 1/29/2020, 4:53:44 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:53:44.861Z Local: 1/29/2020, 4:53:44 PM Server is listening on port 8000 
2020-01-29T08:53:44.883Z Local: 1/29/2020, 4:53:44 PM command: DO, rowCount: null 
2020-01-29T08:53:44.884Z Local: 1/29/2020, 4:53:44 PM Created Producer type 
2020-01-29T08:53:44.884Z Local: 1/29/2020, 4:53:44 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:53:44.886Z Local: 1/29/2020, 4:53:44 PM command: DO, rowCount: null 
2020-01-29T08:53:44.886Z Local: 1/29/2020, 4:53:44 PM Created Spec type 
2020-01-29T08:53:44.887Z Local: 1/29/2020, 4:53:44 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T08:53:44.890Z Local: 1/29/2020, 4:53:44 PM command: CREATE, rowCount: null 
2020-01-29T08:53:44.893Z Local: 1/29/2020, 4:53:44 PM Created items_table 
2020-01-29T08:53:44.893Z Local: 1/29/2020, 4:53:44 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T08:53:49.280Z Local: 1/29/2020, 4:53:49 PM command: INSERT, rowCount: 1 return id = 78 
2020-01-29T08:53:49.282Z Local: 1/29/2020, 4:53:49 PM Sending 1 rows to ::1 with  
2020-01-29T08:55:26.529Z Local: 1/29/2020, 4:55:26 PM command: INSERT, rowCount: 1 return id = 79 
2020-01-29T08:55:26.530Z Local: 1/29/2020, 4:55:26 PM Sending 1 rows to ::1 with  
2020-01-29T08:55:34.210Z Local: 1/29/2020, 4:55:34 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:55:34.223Z Local: 1/29/2020, 4:55:34 PM Server is listening on port 8000 
2020-01-29T08:55:34.246Z Local: 1/29/2020, 4:55:34 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:55:34.245Z Local: 1/29/2020, 4:55:34 PM command: DO, rowCount: null 
2020-01-29T08:55:34.246Z Local: 1/29/2020, 4:55:34 PM Created Producer type 
2020-01-29T08:55:34.248Z Local: 1/29/2020, 4:55:34 PM command: DO, rowCount: null 
2020-01-29T08:55:34.249Z Local: 1/29/2020, 4:55:34 PM Created Spec type 
2020-01-29T08:55:34.249Z Local: 1/29/2020, 4:55:34 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T08:55:34.251Z Local: 1/29/2020, 4:55:34 PM command: CREATE, rowCount: null 
2020-01-29T08:55:34.252Z Local: 1/29/2020, 4:55:34 PM Created items_table 
2020-01-29T08:55:34.253Z Local: 1/29/2020, 4:55:34 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T08:55:37.880Z Local: 1/29/2020, 4:55:37 PM Sending 1 rows to ::1 with  
2020-01-29T08:55:37.878Z Local: 1/29/2020, 4:55:37 PM command: INSERT, rowCount: 1 return id = 80 
2020-01-29T08:56:13.706Z Local: 1/29/2020, 4:56:13 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:56:13.719Z Local: 1/29/2020, 4:56:13 PM Server is listening on port 8000 
2020-01-29T08:56:13.742Z Local: 1/29/2020, 4:56:13 PM command: DO, rowCount: null 
2020-01-29T08:56:13.743Z Local: 1/29/2020, 4:56:13 PM Created Producer type 
2020-01-29T08:56:13.744Z Local: 1/29/2020, 4:56:13 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:56:13.745Z Local: 1/29/2020, 4:56:13 PM command: DO, rowCount: null 
2020-01-29T08:56:13.746Z Local: 1/29/2020, 4:56:13 PM Created Spec type 
2020-01-29T08:56:13.747Z Local: 1/29/2020, 4:56:13 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T08:56:13.748Z Local: 1/29/2020, 4:56:13 PM command: CREATE, rowCount: null 
2020-01-29T08:56:13.749Z Local: 1/29/2020, 4:56:13 PM Created items_table 
2020-01-29T08:56:13.750Z Local: 1/29/2020, 4:56:13 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T08:56:23.914Z Local: 1/29/2020, 4:56:23 PM command: INSERT, rowCount: 1 return id = 81 
2020-01-29T08:56:23.917Z Local: 1/29/2020, 4:56:23 PM Sending 1 rows to ::1 with  
2020-01-29T08:57:18.958Z Local: 1/29/2020, 4:57:18 PM command: SELECT, rowCount: 1 
2020-01-29T08:57:18.962Z Local: 1/29/2020, 4:57:18 PM Sending 1 rows to ::1 with  
2020-01-29T08:57:24.540Z Local: 1/29/2020, 4:57:24 PM command: SELECT, rowCount: 2 
2020-01-29T08:57:24.541Z Local: 1/29/2020, 4:57:24 PM Sending 2 rows to ::1 with  
2020-01-29T08:58:06.372Z Local: 1/29/2020, 4:58:06 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:58:06.384Z Local: 1/29/2020, 4:58:06 PM Server is listening on port 8000 
2020-01-29T08:58:06.406Z Local: 1/29/2020, 4:58:06 PM command: DO, rowCount: null 
2020-01-29T08:58:06.407Z Local: 1/29/2020, 4:58:06 PM Created Producer type 
2020-01-29T08:58:06.408Z Local: 1/29/2020, 4:58:06 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:58:06.409Z Local: 1/29/2020, 4:58:06 PM command: DO, rowCount: null 
2020-01-29T08:58:06.410Z Local: 1/29/2020, 4:58:06 PM Created Spec type 
2020-01-29T08:58:06.411Z Local: 1/29/2020, 4:58:06 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T08:58:06.413Z Local: 1/29/2020, 4:58:06 PM command: CREATE, rowCount: null 
2020-01-29T08:58:06.415Z Local: 1/29/2020, 4:58:06 PM Created items_table 
2020-01-29T08:58:06.416Z Local: 1/29/2020, 4:58:06 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T08:58:09.778Z Local: 1/29/2020, 4:58:09 PM command: SELECT, rowCount: 2 
2020-01-29T08:58:09.783Z Local: 1/29/2020, 4:58:09 PM Sending 2 rows to ::1 with  
2020-01-29T08:58:41.840Z Local: 1/29/2020, 4:58:41 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:58:41.853Z Local: 1/29/2020, 4:58:41 PM Server is listening on port 8000 
2020-01-29T08:58:41.877Z Local: 1/29/2020, 4:58:41 PM command: DO, rowCount: null 
2020-01-29T08:58:41.878Z Local: 1/29/2020, 4:58:41 PM Created Producer type 
2020-01-29T08:58:41.879Z Local: 1/29/2020, 4:58:41 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:58:41.880Z Local: 1/29/2020, 4:58:41 PM command: DO, rowCount: null 
2020-01-29T08:58:41.881Z Local: 1/29/2020, 4:58:41 PM Created Spec type 
2020-01-29T08:58:41.882Z Local: 1/29/2020, 4:58:41 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T08:58:41.884Z Local: 1/29/2020, 4:58:41 PM command: CREATE, rowCount: null 
2020-01-29T08:58:41.884Z Local: 1/29/2020, 4:58:41 PM Created items_table 
2020-01-29T08:58:41.885Z Local: 1/29/2020, 4:58:41 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T08:58:44.723Z Local: 1/29/2020, 4:58:44 PM command: SELECT, rowCount: 2 
2020-01-29T08:58:44.728Z Local: 1/29/2020, 4:58:44 PM Sending 2 rows to ::1 with  
2020-01-29T08:58:49.816Z Local: 1/29/2020, 4:58:49 PM command: INSERT, rowCount: 1 return id = 82 
2020-01-29T08:58:49.817Z Local: 1/29/2020, 4:58:49 PM Sending 1 rows to ::1 with  
2020-01-29T08:58:59.249Z Local: 1/29/2020, 4:58:59 PM command: SELECT, rowCount: 2 
2020-01-29T08:58:59.251Z Local: 1/29/2020, 4:58:59 PM Sending 2 rows to ::1 with  
2020-01-29T08:59:04.362Z Local: 1/29/2020, 4:59:04 PM command: SELECT, rowCount: 2 
2020-01-29T08:59:04.364Z Local: 1/29/2020, 4:59:04 PM Sending 2 rows to ::1 with  
2020-01-29T08:59:13.827Z Local: 1/29/2020, 4:59:13 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T08:59:13.836Z Local: 1/29/2020, 4:59:13 PM command: SELECT, rowCount: 82 
2020-01-29T08:59:13.837Z Local: 1/29/2020, 4:59:13 PM Sending 82 rows to ::1 with  
2020-01-29T08:59:24.568Z Local: 1/29/2020, 4:59:24 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:59:24.597Z Local: 1/29/2020, 4:59:24 PM command: DO, rowCount: null 
2020-01-29T08:59:24.601Z Local: 1/29/2020, 4:59:24 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T08:59:24.603Z Local: 1/29/2020, 4:59:24 PM command: DO, rowCount: null 
2020-01-29T08:59:24.605Z Local: 1/29/2020, 4:59:24 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T08:59:24.607Z Local: 1/29/2020, 4:59:24 PM command: CREATE, rowCount: null 
2020-01-29T08:59:24.610Z Local: 1/29/2020, 4:59:24 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T08:59:24.625Z Local: 1/29/2020, 4:59:24 PM command: SELECT, rowCount: 1 
2020-01-29T08:59:24.638Z Local: 1/29/2020, 4:59:24 PM command: INSERT, rowCount: 1 return id = 83 
2020-01-29T08:59:24.640Z Local: 1/29/2020, 4:59:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T08:59:24.644Z Local: 1/29/2020, 4:59:24 PM command: SELECT, rowCount: 3 
2020-01-29T08:59:24.646Z Local: 1/29/2020, 4:59:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T08:59:24.652Z Local: 1/29/2020, 4:59:24 PM command: SELECT, rowCount: 83 
2020-01-29T08:59:24.653Z Local: 1/29/2020, 4:59:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T08:59:24.658Z Local: 1/29/2020, 4:59:24 PM command: SELECT, rowCount: 83 
2020-01-29T08:59:24.662Z Local: 1/29/2020, 4:59:24 PM command: SELECT, rowCount: 1 
2020-01-29T08:59:24.666Z Local: 1/29/2020, 4:59:24 PM command: SELECT, rowCount: 2 
2020-01-29T08:59:24.670Z Local: 1/29/2020, 4:59:24 PM command: SELECT, rowCount: 2 
2020-01-29T08:59:24.673Z Local: 1/29/2020, 4:59:24 PM command: SELECT, rowCount: 2 
2020-01-29T08:59:24.685Z Local: 1/29/2020, 4:59:24 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T08:59:24.706Z Local: 1/29/2020, 4:59:24 PM command: SELECT, rowCount: 1 
2020-01-29T08:59:24.707Z Local: 1/29/2020, 4:59:24 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T08:59:24.728Z Local: 1/29/2020, 4:59:24 PM command: INSERT, rowCount: 1 return id = 84 
2020-01-29T08:59:24.730Z Local: 1/29/2020, 4:59:24 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T08:59:26.736Z Local: 1/29/2020, 4:59:26 PM command: SELECT, rowCount: 1 
2020-01-29T08:59:26.738Z Local: 1/29/2020, 4:59:26 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T08:59:26.745Z Local: 1/29/2020, 4:59:26 PM command: SELECT, rowCount: 2 
2020-01-29T08:59:26.746Z Local: 1/29/2020, 4:59:26 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T08:59:26.754Z Local: 1/29/2020, 4:59:26 PM command: SELECT, rowCount: 2 
2020-01-29T08:59:26.755Z Local: 1/29/2020, 4:59:26 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T08:59:26.767Z Local: 1/29/2020, 4:59:26 PM command: SELECT, rowCount: 0 
2020-01-29T08:59:26.768Z Local: 1/29/2020, 4:59:26 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T08:59:26.773Z Local: 1/29/2020, 4:59:26 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T08:59:26.776Z Local: 1/29/2020, 4:59:26 PM command: SELECT, rowCount: 2 
2020-01-29T08:59:26.776Z Local: 1/29/2020, 4:59:26 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T08:59:26.780Z Local: 1/29/2020, 4:59:26 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T08:59:26.800Z Local: 1/29/2020, 4:59:26 PM command: CREATE, rowCount: null 
2020-01-29T08:59:26.801Z Local: 1/29/2020, 4:59:26 PM SELECT COUNT(*) FROM posts_table; 
2020-01-29T08:59:26.819Z Local: 1/29/2020, 4:59:26 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T08:59:26.821Z Local: 1/29/2020, 4:59:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T08:59:26.825Z Local: 1/29/2020, 4:59:26 PM command: SELECT, rowCount: 3 
2020-01-29T08:59:26.827Z Local: 1/29/2020, 4:59:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T08:59:26.831Z Local: 1/29/2020, 4:59:26 PM command: SELECT, rowCount: 40 
2020-01-29T08:59:26.832Z Local: 1/29/2020, 4:59:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T08:59:26.836Z Local: 1/29/2020, 4:59:26 PM command: SELECT, rowCount: 40 
2020-01-29T08:59:26.837Z Local: 1/29/2020, 4:59:26 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T08:59:26.839Z Local: 1/29/2020, 4:59:26 PM command: SELECT, rowCount: 1 
2020-01-29T09:00:34.509Z Local: 1/29/2020, 5:00:34 PM Sending 1 rows to ::1 with  
2020-01-29T09:00:34.507Z Local: 1/29/2020, 5:00:34 PM command: INSERT, rowCount: 1 return id = 85 
2020-01-29T09:01:41.479Z Local: 1/29/2020, 5:01:41 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:01:41.491Z Local: 1/29/2020, 5:01:41 PM Server is listening on port 8000 
2020-01-29T09:01:41.513Z Local: 1/29/2020, 5:01:41 PM command: DO, rowCount: null 
2020-01-29T09:01:41.515Z Local: 1/29/2020, 5:01:41 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:01:41.514Z Local: 1/29/2020, 5:01:41 PM Created Producer type 
2020-01-29T09:01:41.516Z Local: 1/29/2020, 5:01:41 PM command: DO, rowCount: null 
2020-01-29T09:01:41.517Z Local: 1/29/2020, 5:01:41 PM Created Spec type 
2020-01-29T09:01:41.518Z Local: 1/29/2020, 5:01:41 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T09:01:41.520Z Local: 1/29/2020, 5:01:41 PM command: CREATE, rowCount: null 
2020-01-29T09:01:41.521Z Local: 1/29/2020, 5:01:41 PM Created items_table 
2020-01-29T09:01:41.522Z Local: 1/29/2020, 5:01:41 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T09:01:45.224Z Local: 1/29/2020, 5:01:45 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:01:45.252Z Local: 1/29/2020, 5:01:45 PM command: DO, rowCount: null 
2020-01-29T09:01:45.256Z Local: 1/29/2020, 5:01:45 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:01:45.258Z Local: 1/29/2020, 5:01:45 PM command: DO, rowCount: null 
2020-01-29T09:01:45.260Z Local: 1/29/2020, 5:01:45 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T09:01:45.262Z Local: 1/29/2020, 5:01:45 PM command: CREATE, rowCount: null 
2020-01-29T09:01:45.265Z Local: 1/29/2020, 5:01:45 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T09:01:45.269Z Local: 1/29/2020, 5:01:45 PM command: SELECT, rowCount: 1 
2020-01-29T09:01:45.284Z Local: 1/29/2020, 5:01:45 PM command: INSERT, rowCount: 1 return id = 86 
2020-01-29T09:01:45.286Z Local: 1/29/2020, 5:01:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T09:01:45.290Z Local: 1/29/2020, 5:01:45 PM command: SELECT, rowCount: 3 
2020-01-29T09:01:45.292Z Local: 1/29/2020, 5:01:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T09:01:45.298Z Local: 1/29/2020, 5:01:45 PM command: SELECT, rowCount: 86 
2020-01-29T09:01:45.299Z Local: 1/29/2020, 5:01:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T09:01:45.306Z Local: 1/29/2020, 5:01:45 PM command: SELECT, rowCount: 86 
2020-01-29T09:01:45.309Z Local: 1/29/2020, 5:01:45 PM command: SELECT, rowCount: 1 
2020-01-29T09:01:45.311Z Local: 1/29/2020, 5:01:45 PM command: SELECT, rowCount: 2 
2020-01-29T09:01:45.314Z Local: 1/29/2020, 5:01:45 PM command: SELECT, rowCount: 2 
2020-01-29T09:01:45.318Z Local: 1/29/2020, 5:01:45 PM command: SELECT, rowCount: 2 
2020-01-29T09:01:45.331Z Local: 1/29/2020, 5:01:45 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T09:01:45.337Z Local: 1/29/2020, 5:01:45 PM command: SELECT, rowCount: 1 
2020-01-29T09:01:45.338Z Local: 1/29/2020, 5:01:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:01:45.383Z Local: 1/29/2020, 5:01:45 PM command: INSERT, rowCount: 1 return id = 87 
2020-01-29T09:01:45.385Z Local: 1/29/2020, 5:01:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:01:47.358Z Local: 1/29/2020, 5:01:47 PM command: SELECT, rowCount: 1 
2020-01-29T09:01:47.362Z Local: 1/29/2020, 5:01:47 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:01:47.370Z Local: 1/29/2020, 5:01:47 PM command: SELECT, rowCount: 2 
2020-01-29T09:01:47.376Z Local: 1/29/2020, 5:01:47 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:01:47.383Z Local: 1/29/2020, 5:01:47 PM command: SELECT, rowCount: 2 
2020-01-29T09:01:47.384Z Local: 1/29/2020, 5:01:47 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:01:47.398Z Local: 1/29/2020, 5:01:47 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:01:47.397Z Local: 1/29/2020, 5:01:47 PM command: SELECT, rowCount: 0 
2020-01-29T09:01:47.412Z Local: 1/29/2020, 5:01:47 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T09:01:47.415Z Local: 1/29/2020, 5:01:47 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:01:47.415Z Local: 1/29/2020, 5:01:47 PM command: SELECT, rowCount: 2 
2020-01-29T09:01:47.428Z Local: 1/29/2020, 5:01:47 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T09:01:47.447Z Local: 1/29/2020, 5:01:47 PM command: CREATE, rowCount: null 
2020-01-29T09:01:47.449Z Local: 1/29/2020, 5:01:47 PM SELECT COUNT(*) FROM posts_table; 
2020-01-29T09:01:47.452Z Local: 1/29/2020, 5:01:47 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T09:01:47.455Z Local: 1/29/2020, 5:01:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T09:01:47.458Z Local: 1/29/2020, 5:01:47 PM command: SELECT, rowCount: 3 
2020-01-29T09:01:47.459Z Local: 1/29/2020, 5:01:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T09:01:47.462Z Local: 1/29/2020, 5:01:47 PM command: SELECT, rowCount: 40 
2020-01-29T09:01:47.463Z Local: 1/29/2020, 5:01:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T09:01:47.467Z Local: 1/29/2020, 5:01:47 PM command: SELECT, rowCount: 40 
2020-01-29T09:01:47.471Z Local: 1/29/2020, 5:01:47 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T09:01:47.473Z Local: 1/29/2020, 5:01:47 PM command: SELECT, rowCount: 1 
2020-01-29T09:03:08.740Z Local: 1/29/2020, 5:03:08 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:03:08.768Z Local: 1/29/2020, 5:03:08 PM command: DO, rowCount: null 
2020-01-29T09:03:08.773Z Local: 1/29/2020, 5:03:08 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:03:08.774Z Local: 1/29/2020, 5:03:08 PM command: DO, rowCount: null 
2020-01-29T09:03:08.776Z Local: 1/29/2020, 5:03:08 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T09:03:08.779Z Local: 1/29/2020, 5:03:08 PM command: CREATE, rowCount: null 
2020-01-29T09:03:08.782Z Local: 1/29/2020, 5:03:08 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T09:03:08.786Z Local: 1/29/2020, 5:03:08 PM command: SELECT, rowCount: 1 
2020-01-29T09:03:08.803Z Local: 1/29/2020, 5:03:08 PM command: INSERT, rowCount: 1 return id = 88 
2020-01-29T09:03:08.806Z Local: 1/29/2020, 5:03:08 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T09:03:08.811Z Local: 1/29/2020, 5:03:08 PM command: SELECT, rowCount: 3 
2020-01-29T09:03:08.812Z Local: 1/29/2020, 5:03:08 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T09:03:08.817Z Local: 1/29/2020, 5:03:08 PM command: SELECT, rowCount: 88 
2020-01-29T09:03:08.819Z Local: 1/29/2020, 5:03:08 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T09:03:08.826Z Local: 1/29/2020, 5:03:08 PM command: SELECT, rowCount: 88 
2020-01-29T09:03:08.829Z Local: 1/29/2020, 5:03:08 PM command: SELECT, rowCount: 1 
2020-01-29T09:03:08.834Z Local: 1/29/2020, 5:03:08 PM command: SELECT, rowCount: 2 
2020-01-29T09:03:08.837Z Local: 1/29/2020, 5:03:08 PM command: SELECT, rowCount: 2 
2020-01-29T09:03:08.840Z Local: 1/29/2020, 5:03:08 PM command: SELECT, rowCount: 2 
2020-01-29T09:03:08.850Z Local: 1/29/2020, 5:03:08 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T09:03:08.869Z Local: 1/29/2020, 5:03:08 PM command: SELECT, rowCount: 1 
2020-01-29T09:03:08.871Z Local: 1/29/2020, 5:03:08 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:03:08.894Z Local: 1/29/2020, 5:03:08 PM command: INSERT, rowCount: 1 return id = 89 
2020-01-29T09:03:08.896Z Local: 1/29/2020, 5:03:08 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:03:10.886Z Local: 1/29/2020, 5:03:10 PM command: SELECT, rowCount: 1 
2020-01-29T09:03:10.888Z Local: 1/29/2020, 5:03:10 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:03:10.895Z Local: 1/29/2020, 5:03:10 PM command: SELECT, rowCount: 2 
2020-01-29T09:03:10.896Z Local: 1/29/2020, 5:03:10 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:03:10.908Z Local: 1/29/2020, 5:03:10 PM command: SELECT, rowCount: 2 
2020-01-29T09:03:10.912Z Local: 1/29/2020, 5:03:10 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:03:10.919Z Local: 1/29/2020, 5:03:10 PM command: SELECT, rowCount: 0 
2020-01-29T09:03:10.920Z Local: 1/29/2020, 5:03:10 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:03:10.929Z Local: 1/29/2020, 5:03:10 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T09:03:10.932Z Local: 1/29/2020, 5:03:10 PM command: SELECT, rowCount: 2 
2020-01-29T09:03:10.934Z Local: 1/29/2020, 5:03:10 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:03:10.941Z Local: 1/29/2020, 5:03:10 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T09:03:10.961Z Local: 1/29/2020, 5:03:10 PM command: CREATE, rowCount: null 
2020-01-29T09:03:10.963Z Local: 1/29/2020, 5:03:10 PM SELECT COUNT(*) FROM posts_table; 
2020-01-29T09:03:10.966Z Local: 1/29/2020, 5:03:10 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T09:03:10.968Z Local: 1/29/2020, 5:03:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T09:03:10.971Z Local: 1/29/2020, 5:03:10 PM command: SELECT, rowCount: 3 
2020-01-29T09:03:10.973Z Local: 1/29/2020, 5:03:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T09:03:10.976Z Local: 1/29/2020, 5:03:10 PM command: SELECT, rowCount: 40 
2020-01-29T09:03:10.977Z Local: 1/29/2020, 5:03:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T09:03:10.981Z Local: 1/29/2020, 5:03:10 PM command: SELECT, rowCount: 40 
2020-01-29T09:03:10.983Z Local: 1/29/2020, 5:03:10 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T09:03:10.985Z Local: 1/29/2020, 5:03:10 PM command: SELECT, rowCount: 1 
2020-01-29T09:05:12.987Z Local: 1/29/2020, 5:05:12 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:05:13.017Z Local: 1/29/2020, 5:05:13 PM command: DO, rowCount: null 
2020-01-29T09:05:13.020Z Local: 1/29/2020, 5:05:13 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:05:13.022Z Local: 1/29/2020, 5:05:13 PM command: DO, rowCount: null 
2020-01-29T09:05:13.023Z Local: 1/29/2020, 5:05:13 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T09:05:13.026Z Local: 1/29/2020, 5:05:13 PM command: CREATE, rowCount: null 
2020-01-29T09:05:13.033Z Local: 1/29/2020, 5:05:13 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T09:05:13.049Z Local: 1/29/2020, 5:05:13 PM command: SELECT, rowCount: 1 
2020-01-29T09:05:13.066Z Local: 1/29/2020, 5:05:13 PM command: INSERT, rowCount: 1 return id = 90 
2020-01-29T09:05:13.068Z Local: 1/29/2020, 5:05:13 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T09:05:13.071Z Local: 1/29/2020, 5:05:13 PM command: SELECT, rowCount: 3 
2020-01-29T09:05:13.073Z Local: 1/29/2020, 5:05:13 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T09:05:13.080Z Local: 1/29/2020, 5:05:13 PM command: SELECT, rowCount: 90 
2020-01-29T09:05:13.082Z Local: 1/29/2020, 5:05:13 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T09:05:13.088Z Local: 1/29/2020, 5:05:13 PM command: SELECT, rowCount: 90 
2020-01-29T09:05:13.091Z Local: 1/29/2020, 5:05:13 PM command: SELECT, rowCount: 1 
2020-01-29T09:05:13.095Z Local: 1/29/2020, 5:05:13 PM command: SELECT, rowCount: 2 
2020-01-29T09:05:13.100Z Local: 1/29/2020, 5:05:13 PM command: SELECT, rowCount: 2 
2020-01-29T09:05:13.103Z Local: 1/29/2020, 5:05:13 PM command: SELECT, rowCount: 2 
2020-01-29T09:05:13.113Z Local: 1/29/2020, 5:05:13 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T09:05:13.135Z Local: 1/29/2020, 5:05:13 PM command: SELECT, rowCount: 1 
2020-01-29T09:05:13.136Z Local: 1/29/2020, 5:05:13 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:05:13.161Z Local: 1/29/2020, 5:05:13 PM command: INSERT, rowCount: 1 return id = 91 
2020-01-29T09:05:13.162Z Local: 1/29/2020, 5:05:13 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:05:15.153Z Local: 1/29/2020, 5:05:15 PM command: SELECT, rowCount: 1 
2020-01-29T09:05:15.154Z Local: 1/29/2020, 5:05:15 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:05:15.161Z Local: 1/29/2020, 5:05:15 PM command: SELECT, rowCount: 2 
2020-01-29T09:05:15.162Z Local: 1/29/2020, 5:05:15 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:05:15.174Z Local: 1/29/2020, 5:05:15 PM command: SELECT, rowCount: 2 
2020-01-29T09:05:15.180Z Local: 1/29/2020, 5:05:15 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:05:15.190Z Local: 1/29/2020, 5:05:15 PM command: SELECT, rowCount: 0 
2020-01-29T09:05:15.192Z Local: 1/29/2020, 5:05:15 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:05:15.198Z Local: 1/29/2020, 5:05:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T09:05:15.201Z Local: 1/29/2020, 5:05:15 PM command: SELECT, rowCount: 2 
2020-01-29T09:05:15.203Z Local: 1/29/2020, 5:05:15 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:05:15.208Z Local: 1/29/2020, 5:05:15 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T09:05:15.229Z Local: 1/29/2020, 5:05:15 PM command: CREATE, rowCount: null 
2020-01-29T09:05:15.231Z Local: 1/29/2020, 5:05:15 PM SELECT COUNT(*) FROM posts_table; 
2020-01-29T09:05:15.234Z Local: 1/29/2020, 5:05:15 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T09:05:15.236Z Local: 1/29/2020, 5:05:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T09:05:15.239Z Local: 1/29/2020, 5:05:15 PM command: SELECT, rowCount: 3 
2020-01-29T09:05:15.240Z Local: 1/29/2020, 5:05:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T09:05:15.245Z Local: 1/29/2020, 5:05:15 PM command: SELECT, rowCount: 40 
2020-01-29T09:05:15.247Z Local: 1/29/2020, 5:05:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T09:05:15.250Z Local: 1/29/2020, 5:05:15 PM command: SELECT, rowCount: 40 
2020-01-29T09:05:15.253Z Local: 1/29/2020, 5:05:15 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T09:05:15.254Z Local: 1/29/2020, 5:05:15 PM command: SELECT, rowCount: 1 
2020-01-29T09:06:07.082Z Local: 1/29/2020, 5:06:07 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:06:07.109Z Local: 1/29/2020, 5:06:07 PM command: DO, rowCount: null 
2020-01-29T09:06:07.113Z Local: 1/29/2020, 5:06:07 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:06:07.114Z Local: 1/29/2020, 5:06:07 PM command: DO, rowCount: null 
2020-01-29T09:06:07.116Z Local: 1/29/2020, 5:06:07 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T09:06:07.119Z Local: 1/29/2020, 5:06:07 PM command: CREATE, rowCount: null 
2020-01-29T09:06:07.123Z Local: 1/29/2020, 5:06:07 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T09:06:07.126Z Local: 1/29/2020, 5:06:07 PM command: SELECT, rowCount: 1 
2020-01-29T09:06:07.138Z Local: 1/29/2020, 5:06:07 PM command: INSERT, rowCount: 1 return id = 92 
2020-01-29T09:06:07.139Z Local: 1/29/2020, 5:06:07 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T09:06:07.143Z Local: 1/29/2020, 5:06:07 PM command: SELECT, rowCount: 3 
2020-01-29T09:06:07.144Z Local: 1/29/2020, 5:06:07 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T09:06:07.150Z Local: 1/29/2020, 5:06:07 PM command: SELECT, rowCount: 92 
2020-01-29T09:06:07.152Z Local: 1/29/2020, 5:06:07 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T09:06:07.158Z Local: 1/29/2020, 5:06:07 PM command: SELECT, rowCount: 92 
2020-01-29T09:06:07.163Z Local: 1/29/2020, 5:06:07 PM command: SELECT, rowCount: 1 
2020-01-29T09:06:07.165Z Local: 1/29/2020, 5:06:07 PM command: SELECT, rowCount: 2 
2020-01-29T09:06:07.168Z Local: 1/29/2020, 5:06:07 PM command: SELECT, rowCount: 2 
2020-01-29T09:06:07.172Z Local: 1/29/2020, 5:06:07 PM command: SELECT, rowCount: 2 
2020-01-29T09:06:07.183Z Local: 1/29/2020, 5:06:07 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T09:06:07.202Z Local: 1/29/2020, 5:06:07 PM command: SELECT, rowCount: 1 
2020-01-29T09:06:07.204Z Local: 1/29/2020, 5:06:07 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:06:07.227Z Local: 1/29/2020, 5:06:07 PM command: INSERT, rowCount: 1 return id = 93 
2020-01-29T09:06:07.228Z Local: 1/29/2020, 5:06:07 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:06:09.221Z Local: 1/29/2020, 5:06:09 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:06:09.219Z Local: 1/29/2020, 5:06:09 PM command: SELECT, rowCount: 1 
2020-01-29T09:06:09.228Z Local: 1/29/2020, 5:06:09 PM command: SELECT, rowCount: 2 
2020-01-29T09:06:09.229Z Local: 1/29/2020, 5:06:09 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:06:09.244Z Local: 1/29/2020, 5:06:09 PM command: SELECT, rowCount: 2 
2020-01-29T09:06:09.245Z Local: 1/29/2020, 5:06:09 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:06:09.253Z Local: 1/29/2020, 5:06:09 PM command: SELECT, rowCount: 0 
2020-01-29T09:06:09.261Z Local: 1/29/2020, 5:06:09 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:06:09.267Z Local: 1/29/2020, 5:06:09 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T09:06:09.270Z Local: 1/29/2020, 5:06:09 PM command: SELECT, rowCount: 2 
2020-01-29T09:06:09.272Z Local: 1/29/2020, 5:06:09 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:06:09.277Z Local: 1/29/2020, 5:06:09 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T09:06:09.296Z Local: 1/29/2020, 5:06:09 PM command: CREATE, rowCount: null 
2020-01-29T09:06:09.298Z Local: 1/29/2020, 5:06:09 PM SELECT COUNT(*) FROM posts_table; 
2020-01-29T09:06:09.301Z Local: 1/29/2020, 5:06:09 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T09:06:09.303Z Local: 1/29/2020, 5:06:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T09:06:09.306Z Local: 1/29/2020, 5:06:09 PM command: SELECT, rowCount: 3 
2020-01-29T09:06:09.308Z Local: 1/29/2020, 5:06:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T09:06:09.311Z Local: 1/29/2020, 5:06:09 PM command: SELECT, rowCount: 40 
2020-01-29T09:06:09.312Z Local: 1/29/2020, 5:06:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T09:06:09.315Z Local: 1/29/2020, 5:06:09 PM command: SELECT, rowCount: 40 
2020-01-29T09:06:09.318Z Local: 1/29/2020, 5:06:09 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T09:06:09.320Z Local: 1/29/2020, 5:06:09 PM command: SELECT, rowCount: 1 
2020-01-29T09:07:19.928Z Local: 1/29/2020, 5:07:19 PM command: SELECT, rowCount: 1 
2020-01-29T09:07:19.930Z Local: 1/29/2020, 5:07:19 PM Sending 1 rows to ::1 with  
2020-01-29T09:07:29.375Z Local: 1/29/2020, 5:07:29 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T09:07:29.377Z Local: 1/29/2020, 5:07:29 PM command: SELECT, rowCount: 1 
2020-01-29T09:07:29.378Z Local: 1/29/2020, 5:07:29 PM Sending 1 rows to ::1 with  
2020-01-29T09:07:57.217Z Local: 1/29/2020, 5:07:57 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:07:57.229Z Local: 1/29/2020, 5:07:57 PM Server is listening on port 8000 
2020-01-29T09:07:57.252Z Local: 1/29/2020, 5:07:57 PM command: DO, rowCount: null 
2020-01-29T09:07:57.254Z Local: 1/29/2020, 5:07:57 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:07:57.253Z Local: 1/29/2020, 5:07:57 PM Created Producer type 
2020-01-29T09:07:57.255Z Local: 1/29/2020, 5:07:57 PM command: DO, rowCount: null 
2020-01-29T09:07:57.256Z Local: 1/29/2020, 5:07:57 PM Created Spec type 
2020-01-29T09:07:57.256Z Local: 1/29/2020, 5:07:57 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T09:07:57.259Z Local: 1/29/2020, 5:07:57 PM command: CREATE, rowCount: null 
2020-01-29T09:07:57.259Z Local: 1/29/2020, 5:07:57 PM Created items_table 
2020-01-29T09:07:57.260Z Local: 1/29/2020, 5:07:57 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T09:08:02.879Z Local: 1/29/2020, 5:08:02 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:08:02.907Z Local: 1/29/2020, 5:08:02 PM command: DO, rowCount: null 
2020-01-29T09:08:02.910Z Local: 1/29/2020, 5:08:02 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T09:08:02.912Z Local: 1/29/2020, 5:08:02 PM command: DO, rowCount: null 
2020-01-29T09:08:02.914Z Local: 1/29/2020, 5:08:02 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T09:08:02.916Z Local: 1/29/2020, 5:08:02 PM command: CREATE, rowCount: null 
2020-01-29T09:08:02.920Z Local: 1/29/2020, 5:08:02 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T09:08:02.923Z Local: 1/29/2020, 5:08:02 PM command: SELECT, rowCount: 1 
2020-01-29T09:08:02.940Z Local: 1/29/2020, 5:08:02 PM command: INSERT, rowCount: 1 return id = 94 
2020-01-29T09:08:02.942Z Local: 1/29/2020, 5:08:02 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T09:08:02.946Z Local: 1/29/2020, 5:08:02 PM command: SELECT, rowCount: 3 
2020-01-29T09:08:02.947Z Local: 1/29/2020, 5:08:02 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T09:08:02.954Z Local: 1/29/2020, 5:08:02 PM command: SELECT, rowCount: 94 
2020-01-29T09:08:02.955Z Local: 1/29/2020, 5:08:02 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T09:08:02.962Z Local: 1/29/2020, 5:08:02 PM command: SELECT, rowCount: 94 
2020-01-29T09:08:02.965Z Local: 1/29/2020, 5:08:02 PM command: SELECT, rowCount: 1 
2020-01-29T09:08:02.968Z Local: 1/29/2020, 5:08:02 PM command: SELECT, rowCount: 2 
2020-01-29T09:08:02.971Z Local: 1/29/2020, 5:08:02 PM command: SELECT, rowCount: 2 
2020-01-29T09:08:02.974Z Local: 1/29/2020, 5:08:02 PM command: SELECT, rowCount: 2 
2020-01-29T09:08:02.988Z Local: 1/29/2020, 5:08:02 PM SELECT COUNT(*) FROM items_table; 
2020-01-29T09:08:02.992Z Local: 1/29/2020, 5:08:02 PM command: SELECT, rowCount: 1 
2020-01-29T09:08:02.993Z Local: 1/29/2020, 5:08:02 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:08:03.043Z Local: 1/29/2020, 5:08:03 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:08:03.041Z Local: 1/29/2020, 5:08:03 PM command: INSERT, rowCount: 1 return id = 95 
2020-01-29T09:08:03.052Z Local: 1/29/2020, 5:08:03 PM command: SELECT, rowCount: 1 
2020-01-29T09:08:03.057Z Local: 1/29/2020, 5:08:03 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:08:03.066Z Local: 1/29/2020, 5:08:03 PM command: SELECT, rowCount: 2 
2020-01-29T09:08:03.067Z Local: 1/29/2020, 5:08:03 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:08:03.075Z Local: 1/29/2020, 5:08:03 PM command: SELECT, rowCount: 2 
2020-01-29T09:08:03.083Z Local: 1/29/2020, 5:08:03 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:08:03.091Z Local: 1/29/2020, 5:08:03 PM command: SELECT, rowCount: 0 
2020-01-29T09:08:03.094Z Local: 1/29/2020, 5:08:03 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:08:03.101Z Local: 1/29/2020, 5:08:03 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T09:08:03.103Z Local: 1/29/2020, 5:08:03 PM command: SELECT, rowCount: 2 
2020-01-29T09:08:03.104Z Local: 1/29/2020, 5:08:03 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T09:08:03.109Z Local: 1/29/2020, 5:08:03 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T09:08:03.130Z Local: 1/29/2020, 5:08:03 PM command: CREATE, rowCount: null 
2020-01-29T09:08:03.132Z Local: 1/29/2020, 5:08:03 PM SELECT COUNT(*) FROM posts_table; 
2020-01-29T09:08:03.135Z Local: 1/29/2020, 5:08:03 PM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T09:08:03.147Z Local: 1/29/2020, 5:08:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T09:08:03.150Z Local: 1/29/2020, 5:08:03 PM command: SELECT, rowCount: 3 
2020-01-29T09:08:03.165Z Local: 1/29/2020, 5:08:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T09:08:03.169Z Local: 1/29/2020, 5:08:03 PM command: SELECT, rowCount: 40 
2020-01-29T09:08:03.170Z Local: 1/29/2020, 5:08:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T09:08:03.174Z Local: 1/29/2020, 5:08:03 PM command: SELECT, rowCount: 40 
2020-01-29T09:08:03.175Z Local: 1/29/2020, 5:08:03 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T09:08:03.177Z Local: 1/29/2020, 5:08:03 PM command: SELECT, rowCount: 1 
2020-01-29T12:22:05.297Z Local: 1/29/2020, 8:22:05 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T12:22:05.306Z Local: 1/29/2020, 8:22:05 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp) 
2020-01-29T12:22:05.370Z Local: 1/29/2020, 8:22:05 PM command: DO, rowCount: null 
2020-01-29T12:25:19.357Z Local: 1/29/2020, 8:25:19 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T12:25:19.367Z Local: 1/29/2020, 8:25:19 PM DO $$ BEGIN
        CREATE TYPE Section AS (title, subtitle, description, img);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T12:25:19.368Z Local: 1/29/2020, 8:25:19 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp) 
2020-01-29T12:25:19.397Z Local: 1/29/2020, 8:25:19 PM Error: error: syntax error at or near "," 
2020-01-29T12:25:19.404Z Local: 1/29/2020, 8:25:19 PM command: DO, rowCount: null 
2020-01-29T12:25:32.232Z Local: 1/29/2020, 8:25:32 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T12:25:32.243Z Local: 1/29/2020, 8:25:32 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp) 
2020-01-29T12:25:32.242Z Local: 1/29/2020, 8:25:32 PM DO $$ BEGIN
        CREATE TYPE Section AS (title, subtitle, description, img);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T12:25:32.271Z Local: 1/29/2020, 8:25:32 PM Error: error: syntax error at or near "," 
2020-01-29T12:25:32.278Z Local: 1/29/2020, 8:25:32 PM command: DO, rowCount: null 
2020-01-29T12:26:34.483Z Local: 1/29/2020, 8:26:34 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T12:26:34.494Z Local: 1/29/2020, 8:26:34 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp) 
2020-01-29T12:26:34.493Z Local: 1/29/2020, 8:26:34 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T12:26:34.528Z Local: 1/29/2020, 8:26:34 PM command: DO, rowCount: null 
2020-01-29T12:26:34.598Z Local: 1/29/2020, 8:26:34 PM command: DO, rowCount: null 
2020-01-29T12:26:47.421Z Local: 1/29/2020, 8:26:47 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T12:26:47.430Z Local: 1/29/2020, 8:26:47 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T12:26:47.431Z Local: 1/29/2020, 8:26:47 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp) 
2020-01-29T12:26:47.459Z Local: 1/29/2020, 8:26:47 PM command: DO, rowCount: null 
2020-01-29T12:26:47.473Z Local: 1/29/2020, 8:26:47 PM command: DO, rowCount: null 
2020-01-29T12:26:47.529Z Local: 1/29/2020, 8:26:47 PM command: CREATE, rowCount: null 
2020-01-29T12:41:39.391Z Local: 1/29/2020, 8:41:39 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp)
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T12:42:01.479Z Local: 1/29/2020, 8:42:01 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp)
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T12:43:25.397Z Local: 1/29/2020, 8:43:25 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T12:43:25.472Z Local: 1/29/2020, 8:43:25 PM command: CREATE, rowCount: null 
2020-01-29T12:48:46.745Z Local: 1/29/2020, 8:48:46 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T12:48:46.836Z Local: 1/29/2020, 8:48:46 PM command: CREATE, rowCount: null 
2020-01-29T12:48:58.507Z Local: 1/29/2020, 8:48:58 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T12:48:58.539Z Local: 1/29/2020, 8:48:58 PM command: CREATE, rowCount: null 
2020-01-29T12:53:49.332Z Local: 1/29/2020, 8:53:49 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T12:53:49.367Z Local: 1/29/2020, 8:53:49 PM command: CREATE, rowCount: null 
2020-01-29T12:55:34.045Z Local: 1/29/2020, 8:55:34 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T12:55:34.082Z Local: 1/29/2020, 8:55:34 PM command: CREATE, rowCount: null 
2020-01-29T15:25:40.719Z Local: 1/29/2020, 11:25:40 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T15:25:40.765Z Local: 1/29/2020, 11:25:40 PM command: CREATE, rowCount: null 
2020-01-29T15:26:24.427Z Local: 1/29/2020, 11:26:24 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T15:26:24.461Z Local: 1/29/2020, 11:26:24 PM command: CREATE, rowCount: null 
2020-01-29T15:52:38.218Z Local: 1/29/2020, 11:52:38 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-29T15:52:38.252Z Local: 1/29/2020, 11:52:38 PM command: SELECT, rowCount: 1 
2020-01-29T15:54:28.278Z Local: 1/29/2020, 11:54:28 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-29T15:54:28.312Z Local: 1/29/2020, 11:54:28 PM command: SELECT, rowCount: 1 
2020-01-29T15:55:04.560Z Local: 1/29/2020, 11:55:04 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-29T15:55:04.594Z Local: 1/29/2020, 11:55:04 PM command: SELECT, rowCount: 1 
2020-01-29T15:56:19.010Z Local: 1/29/2020, 11:56:19 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-29T15:56:19.046Z Local: 1/29/2020, 11:56:19 PM command: SELECT, rowCount: 1 
2020-01-29T16:22:05.214Z Local: 1/30/2020, 12:22:05 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T16:22:05.272Z Local: 1/30/2020, 12:22:05 AM command: DO, rowCount: null 
2020-01-29T16:25:34.485Z Local: 1/30/2020, 12:25:34 AM Warning: testUlti 1 = 5 is not a Integer 
2020-01-29T16:25:34.492Z Local: 1/30/2020, 12:25:34 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T16:25:34.526Z Local: 1/30/2020, 12:25:34 AM command: DO, rowCount: null 
2020-01-29T16:26:12.640Z Local: 1/30/2020, 12:26:12 AM Warning: testUlti 1 = 5 is not a Integer 
2020-01-29T16:26:12.646Z Local: 1/30/2020, 12:26:12 AM Warning: testUlti 1 = 5.3 is not a Integer 
2020-01-29T16:26:58.560Z Local: 1/30/2020, 12:26:58 AM Warning: testUlti 1 = 5 is not a Integer 
2020-01-29T16:26:58.566Z Local: 1/30/2020, 12:26:58 AM Warning: testUlti 1 = 5.3 is not a Integer 
2020-01-29T16:26:58.567Z Local: 1/30/2020, 12:26:58 AM Warning: testUlti 1 = 5.3 is not a Integer 
2020-01-29T16:27:10.747Z Local: 1/30/2020, 12:27:10 AM Warning: testUlti 1 = 5 is not a Integer 
2020-01-29T16:27:10.753Z Local: 1/30/2020, 12:27:10 AM Warning: testUlti 1 = 5.3 is not a Integer 
2020-01-29T16:27:10.754Z Local: 1/30/2020, 12:27:10 AM Warning: testUlti 1 = 5.3 is not a Integer 
2020-01-29T16:27:35.462Z Local: 1/30/2020, 12:27:35 AM Warning: testUlti 1 = 5 is not a Integer 
2020-01-29T16:27:35.469Z Local: 1/30/2020, 12:27:35 AM Warning: testUlti 1 = 5.3 is not a Integer 
2020-01-29T16:27:35.471Z Local: 1/30/2020, 12:27:35 AM Warning: testUlti 1 = 5.3 is not a Integer 
2020-01-29T16:31:52.928Z Local: 1/30/2020, 12:31:52 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T16:31:52.934Z Local: 1/30/2020, 12:31:52 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T16:31:52.936Z Local: 1/30/2020, 12:31:52 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T16:31:52.944Z Local: 1/30/2020, 12:31:52 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T16:31:52.945Z Local: 1/30/2020, 12:31:52 AM Warning: testUtil.checkString 1 = 5.3 is not a String 
2020-01-29T16:31:52.948Z Local: 1/30/2020, 12:31:52 AM Warning: testUtil.checkString 1 = [object Object] is not a String 
2020-01-29T16:31:52.950Z Local: 1/30/2020, 12:31:52 AM Warning: testUtil.checkString 1 = NaN is not a String 
2020-01-29T16:34:17.183Z Local: 1/30/2020, 12:34:17 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T16:34:17.191Z Local: 1/30/2020, 12:34:17 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T16:34:17.192Z Local: 1/30/2020, 12:34:17 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T16:34:17.198Z Local: 1/30/2020, 12:34:17 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T16:34:17.205Z Local: 1/30/2020, 12:34:17 AM Warning: testUtil.checkString 1 = 5.3 is not a String 
2020-01-29T16:34:17.207Z Local: 1/30/2020, 12:34:17 AM Warning: testUtil.checkString 1 = [object Object] is not a String 
2020-01-29T16:34:17.211Z Local: 1/30/2020, 12:34:17 AM Warning: testUtil.checkString 1 = NaN is not a String 
2020-01-29T16:34:17.213Z Local: 1/30/2020, 12:34:17 AM Warning: testUtil.checkString 1 = undefined is not a String 
2020-01-29T16:34:58.407Z Local: 1/30/2020, 12:34:58 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T16:34:58.413Z Local: 1/30/2020, 12:34:58 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T16:34:58.414Z Local: 1/30/2020, 12:34:58 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T16:34:58.421Z Local: 1/30/2020, 12:34:58 AM Warning: testUtil.checkString 1 = [object Object] is not a String 
2020-01-29T16:34:58.422Z Local: 1/30/2020, 12:34:58 AM Warning: testUtil.checkString 1 = NaN is not a String 
2020-01-29T16:34:58.423Z Local: 1/30/2020, 12:34:58 AM Warning: testUtil.checkString 1 = undefined is not a String 
2020-01-29T16:34:58.425Z Local: 1/30/2020, 12:34:58 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T16:34:58.427Z Local: 1/30/2020, 12:34:58 AM Warning: testUtil.checkString 1 = 5.3 is not a String 
2020-01-29T16:34:58.429Z Local: 1/30/2020, 12:34:58 AM Warning: testUtil.checkString 1 = [object Object] is not a String 
2020-01-29T16:34:58.430Z Local: 1/30/2020, 12:34:58 AM Warning: testUtil.checkString 1 = NaN is not a String 
2020-01-29T16:34:58.434Z Local: 1/30/2020, 12:34:58 AM Warning: testUtil.checkString 1 = undefined is not a String 
2020-01-29T16:37:26.086Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T16:37:26.092Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T16:37:26.093Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T16:37:26.098Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T16:37:26.099Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T16:37:26.104Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T16:37:26.107Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T16:37:26.108Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T16:37:26.111Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkNumber 5 = [object Object] is not a Number 
2020-01-29T16:37:26.115Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkNumber 7 = undefined is not a Number 
2020-01-29T16:37:26.120Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T16:37:26.121Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T16:37:26.122Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T16:37:26.125Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T16:37:26.127Z Local: 1/30/2020, 12:37:26 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T16:39:11.144Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T16:39:11.151Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T16:39:11.152Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T16:39:11.157Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T16:39:11.164Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T16:39:11.166Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T16:39:11.168Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T16:39:11.169Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T16:39:11.172Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkNumber 5 = [object Object] is not a Number 
2020-01-29T16:39:11.180Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkNumber 7 = undefined is not a Number 
2020-01-29T16:39:11.182Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T16:39:11.185Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T16:39:11.186Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T16:39:11.188Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T16:39:11.189Z Local: 1/30/2020, 12:39:11 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T16:40:15.444Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T16:40:15.450Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T16:40:15.452Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T16:40:15.457Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T16:40:15.458Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T16:40:15.461Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T16:40:15.465Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T16:40:15.468Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T16:40:15.473Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkNumber 5 = [object Object] is not a Number 
2020-01-29T16:40:15.478Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkNumber 7 = undefined is not a Number 
2020-01-29T16:40:15.482Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T16:40:15.483Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T16:40:15.485Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T16:40:15.486Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T16:40:15.487Z Local: 1/30/2020, 12:40:15 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T16:40:37.159Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T16:40:37.165Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T16:40:37.166Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T16:40:37.172Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T16:40:37.173Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T16:40:37.183Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T16:40:37.185Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T16:40:37.187Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T16:40:37.190Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkNumber 5 = [object Object] is not a Number 
2020-01-29T16:40:37.198Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkNumber 7 = undefined is not a Number 
2020-01-29T16:40:37.200Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T16:40:37.201Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T16:40:37.204Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T16:40:37.206Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T16:40:37.207Z Local: 1/30/2020, 12:40:37 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T16:55:34.310Z Local: 1/30/2020, 12:55:34 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T16:55:34.329Z Local: 1/30/2020, 12:55:34 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T16:55:34.330Z Local: 1/30/2020, 12:55:34 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T16:55:34.336Z Local: 1/30/2020, 12:55:34 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-29T16:55:34.338Z Local: 1/30/2020, 12:55:34 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-29T16:55:34.389Z Local: 1/30/2020, 12:55:34 AM Error: error: type "section[]" does not exist 
2020-01-29T16:55:34.395Z Local: 1/30/2020, 12:55:34 AM Error: error: relation "farmers_table" does not exist 
2020-01-29T16:55:34.407Z Local: 1/30/2020, 12:55:34 AM Error: error: relation "farmers_table" does not exist 
2020-01-29T16:55:34.419Z Local: 1/30/2020, 12:55:34 AM Error: error: relation "farmers_table" does not exist 
2020-01-29T16:55:34.447Z Local: 1/30/2020, 12:55:34 AM command: DO, rowCount: null 
2020-01-29T16:55:34.451Z Local: 1/30/2020, 12:55:34 AM command: DO, rowCount: null 
2020-01-29T16:55:45.568Z Local: 1/30/2020, 12:55:45 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T16:55:45.578Z Local: 1/30/2020, 12:55:45 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T16:55:45.578Z Local: 1/30/2020, 12:55:45 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T16:55:45.581Z Local: 1/30/2020, 12:55:45 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-29T16:55:45.586Z Local: 1/30/2020, 12:55:45 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-29T16:55:45.617Z Local: 1/30/2020, 12:55:45 AM command: DO, rowCount: null 
2020-01-29T16:55:45.623Z Local: 1/30/2020, 12:55:45 AM command: DO, rowCount: null 
2020-01-29T16:55:45.641Z Local: 1/30/2020, 12:55:45 AM Error: error: relation "farmers_table" does not exist 
2020-01-29T16:55:45.650Z Local: 1/30/2020, 12:55:45 AM Error: error: relation "farmers_table" does not exist 
2020-01-29T16:55:45.660Z Local: 1/30/2020, 12:55:45 AM Error: error: relation "farmers_table" does not exist 
2020-01-29T16:55:45.687Z Local: 1/30/2020, 12:55:45 AM command: CREATE, rowCount: null 
2020-01-29T16:55:57.382Z Local: 1/30/2020, 12:55:57 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T16:55:57.391Z Local: 1/30/2020, 12:55:57 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T16:55:57.392Z Local: 1/30/2020, 12:55:57 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T16:55:57.394Z Local: 1/30/2020, 12:55:57 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-29T16:55:57.395Z Local: 1/30/2020, 12:55:57 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-29T16:55:57.426Z Local: 1/30/2020, 12:55:57 AM command: DO, rowCount: null 
2020-01-29T16:55:57.433Z Local: 1/30/2020, 12:55:57 AM command: DO, rowCount: null 
2020-01-29T16:55:57.440Z Local: 1/30/2020, 12:55:57 AM command: CREATE, rowCount: null 
2020-01-29T16:55:57.478Z Local: 1/30/2020, 12:55:57 AM command: SELECT, rowCount: 1 
2020-01-29T16:55:57.480Z Local: 1/30/2020, 12:55:57 AM command: SELECT, rowCount: 0 
2020-01-29T16:57:32.703Z Local: 1/30/2020, 12:57:32 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T16:57:32.711Z Local: 1/30/2020, 12:57:32 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T16:57:32.712Z Local: 1/30/2020, 12:57:32 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T16:57:32.714Z Local: 1/30/2020, 12:57:32 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Taiwan', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T16:57:32.715Z Local: 1/30/2020, 12:57:32 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-29T16:57:32.716Z Local: 1/30/2020, 12:57:32 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-29T16:57:32.747Z Local: 1/30/2020, 12:57:32 AM command: DO, rowCount: null 
2020-01-29T16:57:32.753Z Local: 1/30/2020, 12:57:32 AM command: DO, rowCount: null 
2020-01-29T16:57:32.760Z Local: 1/30/2020, 12:57:32 AM command: CREATE, rowCount: null 
2020-01-29T16:57:32.782Z Local: 1/30/2020, 12:57:32 AM command: INSERT, rowCount: 1 
2020-01-29T16:57:32.792Z Local: 1/30/2020, 12:57:32 AM command: SELECT, rowCount: 1 
2020-01-29T16:57:32.802Z Local: 1/30/2020, 12:57:32 AM command: SELECT, rowCount: 1 
2020-01-29T18:04:42.757Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:04:42.763Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:04:42.764Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:04:42.770Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:04:42.779Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:04:42.780Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:04:42.782Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:04:42.783Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:04:42.786Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkNumber 5 = [object Object] is not a Number 
2020-01-29T18:04:42.793Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkNumber 7 = undefined is not a Number 
2020-01-29T18:04:42.795Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:04:42.797Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:04:42.800Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:04:42.801Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:04:42.802Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:04:42.804Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkObject 1 = 5 is not a Object 
2020-01-29T18:04:42.806Z Local: 1/30/2020, 2:04:42 AM Warning: testUtil.checkObject 2 = 5.3 is not a Object 
2020-01-29T18:05:46.276Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:05:46.282Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:05:46.284Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:05:46.289Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:05:46.292Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:05:46.294Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:05:46.297Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:05:46.299Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:05:46.303Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkNumber 5 = [object Object] is not a Number 
2020-01-29T18:05:46.309Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkNumber 7 = undefined is not a Number 
2020-01-29T18:05:46.313Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:05:46.314Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:05:46.316Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:05:46.318Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:05:46.319Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:05:46.324Z Local: 1/30/2020, 2:05:46 AM Warning: testUtil.checkObject 2 = 5.3 is not a Object 
2020-01-29T18:20:52.909Z Local: 1/30/2020, 2:20:52 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:20:52.916Z Local: 1/30/2020, 2:20:52 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:20:52.918Z Local: 1/30/2020, 2:20:52 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:20:52.920Z Local: 1/30/2020, 2:20:52 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:20:52.921Z Local: 1/30/2020, 2:20:52 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-29T18:20:52.924Z Local: 1/30/2020, 2:20:52 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-29T18:20:52.958Z Local: 1/30/2020, 2:20:52 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:20:52.993Z Local: 1/30/2020, 2:20:52 AM command: CREATE, rowCount: null 
2020-01-29T18:20:53.002Z Local: 1/30/2020, 2:20:53 AM command: DO, rowCount: null 
2020-01-29T18:20:53.003Z Local: 1/30/2020, 2:20:53 AM command: DO, rowCount: null 
2020-01-29T18:20:53.027Z Local: 1/30/2020, 2:20:53 AM command: SELECT, rowCount: 1 
2020-01-29T18:20:53.028Z Local: 1/30/2020, 2:20:53 AM command: SELECT, rowCount: 1 
2020-01-29T18:20:53.030Z Local: 1/30/2020, 2:20:53 AM command: INSERT, rowCount: 1 
2020-01-29T18:20:53.033Z Local: 1/30/2020, 2:20:53 AM command: CREATE, rowCount: null 
2020-01-29T18:20:53.038Z Local: 1/30/2020, 2:20:53 AM Warning: DbFarmer.insertFarmer country = [object Object] is not a String 
2020-01-29T18:20:53.039Z Local: 1/30/2020, 2:20:53 AM Warning: DbFarmer.insertFarmer province = 500 is not a String 
2020-01-29T18:20:53.039Z Local: 1/30/2020, 2:20:53 AM Warning: DbFarmer.insertFarmer county = [object Object] is not a String 
2020-01-29T18:20:53.039Z Local: 1/30/2020, 2:20:53 AM Warning: DbFarmer.insertFarmer village = [object Object] is not a String 
2020-01-29T18:20:53.040Z Local: 1/30/2020, 2:20:53 AM Warning: DbFarmer.insertFarmer slogan = hill1.jpg,tea.jpg,child.jpg is not a String 
2020-01-29T18:20:53.040Z Local: 1/30/2020, 2:20:53 AM Warning: DbFarmer.insertFarmer description = undefined is not a String 
2020-01-29T18:20:53.040Z Local: 1/30/2020, 2:20:53 AM Warning: DbFarmer.insertFarmer content = undefined is not an Array 
2020-01-29T18:20:53.041Z Local: 1/30/2020, 2:20:53 AM Warning: DbFarmer.insertFarmer cover_img = undefined is not a String 
2020-01-29T18:20:53.041Z Local: 1/30/2020, 2:20:53 AM Warning: DbFarmer.insertFarmer items = undefined is not an Array 
2020-01-29T18:20:53.041Z Local: 1/30/2020, 2:20:53 AM Warning: DbFarmer.insertFarmer imgs = undefined is not an Array 
2020-01-29T18:20:53.043Z Local: 1/30/2020, 2:20:53 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:20:53.052Z Local: 1/30/2020, 2:20:53 AM command: SELECT, rowCount: 1 
2020-01-29T18:20:55.045Z Local: 1/30/2020, 2:20:55 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T18:20:55.047Z Local: 1/30/2020, 2:20:55 AM command: SELECT, rowCount: 3 
2020-01-29T18:20:57.046Z Local: 1/30/2020, 2:20:57 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-01-29T18:20:57.049Z Local: 1/30/2020, 2:20:57 AM command: SELECT, rowCount: 3 
2020-01-29T18:20:59.050Z Local: 1/30/2020, 2:20:59 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '2'; 
2020-01-29T18:20:59.052Z Local: 1/30/2020, 2:20:59 AM command: SELECT, rowCount: 1 
2020-01-29T18:21:13.126Z Local: 1/30/2020, 2:21:13 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:21:13.152Z Local: 1/30/2020, 2:21:13 AM command: DO, rowCount: null 
2020-01-29T18:21:13.154Z Local: 1/30/2020, 2:21:13 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:21:13.155Z Local: 1/30/2020, 2:21:13 AM command: DO, rowCount: null 
2020-01-29T18:21:13.157Z Local: 1/30/2020, 2:21:13 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:21:13.165Z Local: 1/30/2020, 2:21:13 AM command: CREATE, rowCount: null 
2020-01-29T18:21:13.167Z Local: 1/30/2020, 2:21:13 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:21:13.184Z Local: 1/30/2020, 2:21:13 AM command: SELECT, rowCount: 1 
2020-01-29T18:21:13.204Z Local: 1/30/2020, 2:21:13 AM command: INSERT, rowCount: 1 return id = 96 
2020-01-29T18:21:13.207Z Local: 1/30/2020, 2:21:13 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:21:13.209Z Local: 1/30/2020, 2:21:13 AM command: SELECT, rowCount: 3 
2020-01-29T18:21:13.211Z Local: 1/30/2020, 2:21:13 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:21:13.218Z Local: 1/30/2020, 2:21:13 AM command: SELECT, rowCount: 96 
2020-01-29T18:21:13.220Z Local: 1/30/2020, 2:21:13 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T18:21:13.226Z Local: 1/30/2020, 2:21:13 AM command: SELECT, rowCount: 96 
2020-01-29T18:21:13.230Z Local: 1/30/2020, 2:21:13 AM command: SELECT, rowCount: 1 
2020-01-29T18:21:13.233Z Local: 1/30/2020, 2:21:13 AM command: SELECT, rowCount: 2 
2020-01-29T18:21:13.236Z Local: 1/30/2020, 2:21:13 AM command: SELECT, rowCount: 2 
2020-01-29T18:21:13.239Z Local: 1/30/2020, 2:21:13 AM command: SELECT, rowCount: 2 
2020-01-29T18:21:27.264Z Local: 1/30/2020, 2:21:27 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:21:27.282Z Local: 1/30/2020, 2:21:27 AM command: CREATE, rowCount: null 
2020-01-29T18:21:27.284Z Local: 1/30/2020, 2:21:27 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T18:21:27.301Z Local: 1/30/2020, 2:21:27 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T18:21:27.303Z Local: 1/30/2020, 2:21:27 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:21:27.307Z Local: 1/30/2020, 2:21:27 AM command: SELECT, rowCount: 3 
2020-01-29T18:21:27.309Z Local: 1/30/2020, 2:21:27 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T18:21:27.314Z Local: 1/30/2020, 2:21:27 AM command: SELECT, rowCount: 40 
2020-01-29T18:21:27.315Z Local: 1/30/2020, 2:21:27 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T18:21:27.319Z Local: 1/30/2020, 2:21:27 AM command: SELECT, rowCount: 40 
2020-01-29T18:21:27.322Z Local: 1/30/2020, 2:21:27 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T18:21:27.325Z Local: 1/30/2020, 2:21:27 AM command: SELECT, rowCount: 1 
2020-01-29T18:21:27.327Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:21:27.328Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:21:27.329Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:21:27.333Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:21:27.334Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:21:27.335Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:21:27.337Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:21:27.338Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:21:27.343Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:21:27.345Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:21:27.346Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:21:27.348Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:21:27.349Z Local: 1/30/2020, 2:21:27 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:21:33.001Z Local: 1/30/2020, 2:21:33 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:21:33.029Z Local: 1/30/2020, 2:21:33 AM command: DO, rowCount: null 
2020-01-29T18:21:33.033Z Local: 1/30/2020, 2:21:33 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:21:33.035Z Local: 1/30/2020, 2:21:33 AM command: DO, rowCount: null 
2020-01-29T18:21:33.037Z Local: 1/30/2020, 2:21:33 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:21:33.039Z Local: 1/30/2020, 2:21:33 AM command: CREATE, rowCount: null 
2020-01-29T18:21:33.042Z Local: 1/30/2020, 2:21:33 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:21:33.046Z Local: 1/30/2020, 2:21:33 AM command: SELECT, rowCount: 1 
2020-01-29T18:21:33.063Z Local: 1/30/2020, 2:21:33 AM command: INSERT, rowCount: 1 return id = 97 
2020-01-29T18:21:33.065Z Local: 1/30/2020, 2:21:33 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:21:33.068Z Local: 1/30/2020, 2:21:33 AM command: SELECT, rowCount: 3 
2020-01-29T18:21:33.070Z Local: 1/30/2020, 2:21:33 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:21:33.077Z Local: 1/30/2020, 2:21:33 AM command: SELECT, rowCount: 97 
2020-01-29T18:21:33.078Z Local: 1/30/2020, 2:21:33 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T18:21:33.083Z Local: 1/30/2020, 2:21:33 AM command: SELECT, rowCount: 97 
2020-01-29T18:21:33.086Z Local: 1/30/2020, 2:21:33 AM command: SELECT, rowCount: 1 
2020-01-29T18:21:33.089Z Local: 1/30/2020, 2:21:33 AM command: SELECT, rowCount: 2 
2020-01-29T18:21:33.092Z Local: 1/30/2020, 2:21:33 AM command: SELECT, rowCount: 2 
2020-01-29T18:21:33.096Z Local: 1/30/2020, 2:21:33 AM command: SELECT, rowCount: 2 
2020-01-29T18:21:47.134Z Local: 1/30/2020, 2:21:47 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:21:47.155Z Local: 1/30/2020, 2:21:47 AM command: CREATE, rowCount: null 
2020-01-29T18:21:47.158Z Local: 1/30/2020, 2:21:47 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T18:21:47.160Z Local: 1/30/2020, 2:21:47 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T18:21:47.163Z Local: 1/30/2020, 2:21:47 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:21:47.165Z Local: 1/30/2020, 2:21:47 AM command: SELECT, rowCount: 3 
2020-01-29T18:21:47.167Z Local: 1/30/2020, 2:21:47 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T18:21:47.170Z Local: 1/30/2020, 2:21:47 AM command: SELECT, rowCount: 40 
2020-01-29T18:21:47.172Z Local: 1/30/2020, 2:21:47 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T18:21:47.176Z Local: 1/30/2020, 2:21:47 AM command: SELECT, rowCount: 40 
2020-01-29T18:21:47.178Z Local: 1/30/2020, 2:21:47 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T18:21:47.180Z Local: 1/30/2020, 2:21:47 AM command: SELECT, rowCount: 1 
2020-01-29T18:21:47.181Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:21:47.183Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:21:47.186Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:21:47.189Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:21:47.190Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:21:47.192Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:21:47.194Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:21:47.196Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:21:47.199Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:21:47.200Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:21:47.201Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:21:47.202Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:21:47.203Z Local: 1/30/2020, 2:21:47 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:23:34.633Z Local: 1/30/2020, 2:23:34 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:23:34.652Z Local: 1/30/2020, 2:23:34 AM Server is listening on port 8000 
2020-01-29T18:23:34.675Z Local: 1/30/2020, 2:23:34 AM command: DO, rowCount: null 
2020-01-29T18:23:34.675Z Local: 1/30/2020, 2:23:34 AM Created Producer type 
2020-01-29T18:23:34.676Z Local: 1/30/2020, 2:23:34 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:23:34.678Z Local: 1/30/2020, 2:23:34 AM command: DO, rowCount: null 
2020-01-29T18:23:34.678Z Local: 1/30/2020, 2:23:34 AM Created Spec type 
2020-01-29T18:23:34.679Z Local: 1/30/2020, 2:23:34 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:23:34.682Z Local: 1/30/2020, 2:23:34 AM command: CREATE, rowCount: null 
2020-01-29T18:23:34.684Z Local: 1/30/2020, 2:23:34 AM Created items_table 
2020-01-29T18:23:34.684Z Local: 1/30/2020, 2:23:34 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T18:23:39.323Z Local: 1/30/2020, 2:23:39 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:23:39.354Z Local: 1/30/2020, 2:23:39 AM command: DO, rowCount: null 
2020-01-29T18:23:39.358Z Local: 1/30/2020, 2:23:39 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:23:39.359Z Local: 1/30/2020, 2:23:39 AM command: DO, rowCount: null 
2020-01-29T18:23:39.361Z Local: 1/30/2020, 2:23:39 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:23:39.363Z Local: 1/30/2020, 2:23:39 AM command: CREATE, rowCount: null 
2020-01-29T18:23:39.367Z Local: 1/30/2020, 2:23:39 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:23:39.371Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 1 
2020-01-29T18:23:39.387Z Local: 1/30/2020, 2:23:39 AM command: INSERT, rowCount: 1 return id = 98 
2020-01-29T18:23:39.389Z Local: 1/30/2020, 2:23:39 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:23:39.393Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 3 
2020-01-29T18:23:39.394Z Local: 1/30/2020, 2:23:39 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:23:39.402Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 98 
2020-01-29T18:23:39.403Z Local: 1/30/2020, 2:23:39 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T18:23:39.409Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 98 
2020-01-29T18:23:39.412Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 1 
2020-01-29T18:23:39.415Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 2 
2020-01-29T18:23:39.419Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 2 
2020-01-29T18:23:39.422Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 2 
2020-01-29T18:23:39.423Z Local: 1/30/2020, 2:23:39 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:23:39.428Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 1 
2020-01-29T18:23:39.429Z Local: 1/30/2020, 2:23:39 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:23:39.479Z Local: 1/30/2020, 2:23:39 AM command: INSERT, rowCount: 1 return id = 99 
2020-01-29T18:23:39.481Z Local: 1/30/2020, 2:23:39 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:23:39.489Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 1 
2020-01-29T18:23:39.498Z Local: 1/30/2020, 2:23:39 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:23:39.507Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 2 
2020-01-29T18:23:39.508Z Local: 1/30/2020, 2:23:39 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:23:39.516Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 2 
2020-01-29T18:23:39.519Z Local: 1/30/2020, 2:23:39 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:23:39.529Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 0 
2020-01-29T18:23:39.532Z Local: 1/30/2020, 2:23:39 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:23:39.539Z Local: 1/30/2020, 2:23:39 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T18:23:39.544Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 2 
2020-01-29T18:23:39.544Z Local: 1/30/2020, 2:23:39 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:23:39.563Z Local: 1/30/2020, 2:23:39 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:23:39.582Z Local: 1/30/2020, 2:23:39 AM command: CREATE, rowCount: null 
2020-01-29T18:23:39.584Z Local: 1/30/2020, 2:23:39 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T18:23:39.587Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T18:23:39.589Z Local: 1/30/2020, 2:23:39 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:23:39.592Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 3 
2020-01-29T18:23:39.593Z Local: 1/30/2020, 2:23:39 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T18:23:39.596Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 40 
2020-01-29T18:23:39.597Z Local: 1/30/2020, 2:23:39 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T18:23:39.600Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 40 
2020-01-29T18:23:39.603Z Local: 1/30/2020, 2:23:39 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T18:23:39.605Z Local: 1/30/2020, 2:23:39 AM command: SELECT, rowCount: 1 
2020-01-29T18:23:39.607Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:23:39.608Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:23:39.609Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:23:39.611Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:23:39.613Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:23:39.615Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:23:39.617Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:23:39.619Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:23:39.623Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:23:39.624Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:23:39.625Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:23:39.626Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:23:39.628Z Local: 1/30/2020, 2:23:39 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:25:54.536Z Local: 1/30/2020, 2:25:54 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:25:54.566Z Local: 1/30/2020, 2:25:54 AM command: DO, rowCount: null 
2020-01-29T18:25:54.569Z Local: 1/30/2020, 2:25:54 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:25:54.571Z Local: 1/30/2020, 2:25:54 AM command: DO, rowCount: null 
2020-01-29T18:25:54.573Z Local: 1/30/2020, 2:25:54 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:25:54.593Z Local: 1/30/2020, 2:25:54 AM command: CREATE, rowCount: null 
2020-01-29T18:25:54.595Z Local: 1/30/2020, 2:25:54 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:25:54.609Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 1 
2020-01-29T18:25:54.613Z Local: 1/30/2020, 2:25:54 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:25:54.624Z Local: 1/30/2020, 2:25:54 AM command: INSERT, rowCount: 1 
2020-01-29T18:25:54.626Z Local: 1/30/2020, 2:25:54 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:25:54.630Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 3 
2020-01-29T18:25:54.633Z Local: 1/30/2020, 2:25:54 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:25:54.639Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 100 
2020-01-29T18:25:54.642Z Local: 1/30/2020, 2:25:54 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T18:25:54.649Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 100 
2020-01-29T18:25:54.653Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 1 
2020-01-29T18:25:54.656Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 2 
2020-01-29T18:25:54.660Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 2 
2020-01-29T18:25:54.664Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 2 
2020-01-29T18:25:54.673Z Local: 1/30/2020, 2:25:54 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:25:54.694Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 1 
2020-01-29T18:25:54.695Z Local: 1/30/2020, 2:25:54 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:25:54.720Z Local: 1/30/2020, 2:25:54 AM command: INSERT, rowCount: 1 return id = 101 
2020-01-29T18:25:54.721Z Local: 1/30/2020, 2:25:54 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:25:54.730Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 1 
2020-01-29T18:25:54.731Z Local: 1/30/2020, 2:25:54 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:25:54.738Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 2 
2020-01-29T18:25:54.739Z Local: 1/30/2020, 2:25:54 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:25:54.747Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 2 
2020-01-29T18:25:54.750Z Local: 1/30/2020, 2:25:54 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:25:54.757Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 0 
2020-01-29T18:25:54.758Z Local: 1/30/2020, 2:25:54 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:25:54.767Z Local: 1/30/2020, 2:25:54 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T18:25:54.770Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 2 
2020-01-29T18:25:54.771Z Local: 1/30/2020, 2:25:54 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:25:54.779Z Local: 1/30/2020, 2:25:54 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:25:54.801Z Local: 1/30/2020, 2:25:54 AM command: CREATE, rowCount: null 
2020-01-29T18:25:54.803Z Local: 1/30/2020, 2:25:54 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T18:25:54.806Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T18:25:54.808Z Local: 1/30/2020, 2:25:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:25:54.811Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 3 
2020-01-29T18:25:54.813Z Local: 1/30/2020, 2:25:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T18:25:54.817Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 40 
2020-01-29T18:25:54.818Z Local: 1/30/2020, 2:25:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T18:25:54.822Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 40 
2020-01-29T18:25:54.824Z Local: 1/30/2020, 2:25:54 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T18:25:54.827Z Local: 1/30/2020, 2:25:54 AM command: SELECT, rowCount: 1 
2020-01-29T18:25:54.829Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:25:54.830Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:25:54.833Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:25:54.835Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:25:54.836Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:25:54.838Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:25:54.840Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:25:54.843Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:25:54.845Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:25:54.846Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:25:54.848Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:25:54.849Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:25:54.851Z Local: 1/30/2020, 2:25:54 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:27:20.699Z Local: 1/30/2020, 2:27:20 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:27:20.727Z Local: 1/30/2020, 2:27:20 AM command: DO, rowCount: null 
2020-01-29T18:27:20.731Z Local: 1/30/2020, 2:27:20 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:27:20.732Z Local: 1/30/2020, 2:27:20 AM command: DO, rowCount: null 
2020-01-29T18:27:20.734Z Local: 1/30/2020, 2:27:20 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:27:20.736Z Local: 1/30/2020, 2:27:20 AM command: CREATE, rowCount: null 
2020-01-29T18:27:20.741Z Local: 1/30/2020, 2:27:20 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:27:20.745Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 1 
2020-01-29T18:27:20.747Z Local: 1/30/2020, 2:27:20 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:27:20.759Z Local: 1/30/2020, 2:27:20 AM command: INSERT, rowCount: 1 
2020-01-29T18:27:20.761Z Local: 1/30/2020, 2:27:20 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:27:20.765Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 3 
2020-01-29T18:27:20.766Z Local: 1/30/2020, 2:27:20 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:27:20.773Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 102 
2020-01-29T18:27:20.775Z Local: 1/30/2020, 2:27:20 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T18:27:20.782Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 102 
2020-01-29T18:27:20.784Z Local: 1/30/2020, 2:27:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-01-29T18:27:20.786Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 1 
2020-01-29T18:27:20.790Z Local: 1/30/2020, 2:27:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T18:27:20.792Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:27:20.794Z Local: 1/30/2020, 2:27:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T18:27:20.796Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:27:20.800Z Local: 1/30/2020, 2:27:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-01-29T18:27:20.802Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:27:20.812Z Local: 1/30/2020, 2:27:20 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:27:20.833Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 1 
2020-01-29T18:27:20.834Z Local: 1/30/2020, 2:27:20 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:27:20.857Z Local: 1/30/2020, 2:27:20 AM command: INSERT, rowCount: 1 return id = 103 
2020-01-29T18:27:20.858Z Local: 1/30/2020, 2:27:20 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:27:20.867Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 1 
2020-01-29T18:27:20.867Z Local: 1/30/2020, 2:27:20 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:27:20.874Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:27:20.875Z Local: 1/30/2020, 2:27:20 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:27:20.888Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:27:20.889Z Local: 1/30/2020, 2:27:20 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:27:20.905Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 0 
2020-01-29T18:27:20.910Z Local: 1/30/2020, 2:27:20 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:27:20.915Z Local: 1/30/2020, 2:27:20 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T18:27:20.917Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:27:20.918Z Local: 1/30/2020, 2:27:20 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:27:20.926Z Local: 1/30/2020, 2:27:20 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:27:20.947Z Local: 1/30/2020, 2:27:20 AM command: CREATE, rowCount: null 
2020-01-29T18:27:20.949Z Local: 1/30/2020, 2:27:20 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T18:27:20.952Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T18:27:20.953Z Local: 1/30/2020, 2:27:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:27:20.956Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 3 
2020-01-29T18:27:20.959Z Local: 1/30/2020, 2:27:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T18:27:20.962Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 40 
2020-01-29T18:27:20.963Z Local: 1/30/2020, 2:27:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T18:27:20.966Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 40 
2020-01-29T18:27:20.968Z Local: 1/30/2020, 2:27:20 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T18:27:20.971Z Local: 1/30/2020, 2:27:20 AM command: SELECT, rowCount: 1 
2020-01-29T18:27:20.972Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:27:20.974Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:27:20.975Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:27:20.978Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:27:20.980Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:27:20.981Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:27:20.982Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:27:20.984Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:27:20.988Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:27:20.989Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:27:20.990Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:27:20.992Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:27:20.994Z Local: 1/30/2020, 2:27:20 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:28:25.648Z Local: 1/30/2020, 2:28:25 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:28:25.677Z Local: 1/30/2020, 2:28:25 AM command: DO, rowCount: null 
2020-01-29T18:28:25.681Z Local: 1/30/2020, 2:28:25 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:28:25.682Z Local: 1/30/2020, 2:28:25 AM command: DO, rowCount: null 
2020-01-29T18:28:25.684Z Local: 1/30/2020, 2:28:25 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:28:25.687Z Local: 1/30/2020, 2:28:25 AM command: CREATE, rowCount: null 
2020-01-29T18:28:25.690Z Local: 1/30/2020, 2:28:25 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:28:25.694Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 1 
2020-01-29T18:28:25.698Z Local: 1/30/2020, 2:28:25 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:28:25.707Z Local: 1/30/2020, 2:28:25 AM command: INSERT, rowCount: 1 
2020-01-29T18:28:25.709Z Local: 1/30/2020, 2:28:25 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:28:25.713Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 3 
2020-01-29T18:28:25.715Z Local: 1/30/2020, 2:28:25 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:28:25.721Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 104 
2020-01-29T18:28:25.723Z Local: 1/30/2020, 2:28:25 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T18:28:25.730Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 104 
2020-01-29T18:28:25.732Z Local: 1/30/2020, 2:28:25 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-01-29T18:28:25.734Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 1 
2020-01-29T18:28:25.736Z Local: 1/30/2020, 2:28:25 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T18:28:25.738Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 2 
2020-01-29T18:28:25.741Z Local: 1/30/2020, 2:28:25 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T18:28:25.743Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 2 
2020-01-29T18:28:25.745Z Local: 1/30/2020, 2:28:25 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-01-29T18:28:25.747Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 2 
2020-01-29T18:28:25.758Z Local: 1/30/2020, 2:28:25 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:28:25.779Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 1 
2020-01-29T18:28:25.781Z Local: 1/30/2020, 2:28:25 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:28:25.804Z Local: 1/30/2020, 2:28:25 AM command: INSERT, rowCount: 1 return id = 105 
2020-01-29T18:28:25.805Z Local: 1/30/2020, 2:28:25 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:28:25.813Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 1 
2020-01-29T18:28:25.814Z Local: 1/30/2020, 2:28:25 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:28:25.820Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 2 
2020-01-29T18:28:25.823Z Local: 1/30/2020, 2:28:25 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:28:25.832Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 2 
2020-01-29T18:28:25.836Z Local: 1/30/2020, 2:28:25 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:28:25.842Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 0 
2020-01-29T18:28:25.843Z Local: 1/30/2020, 2:28:25 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:28:25.853Z Local: 1/30/2020, 2:28:25 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T18:28:25.856Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 2 
2020-01-29T18:28:25.858Z Local: 1/30/2020, 2:28:25 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:28:25.864Z Local: 1/30/2020, 2:28:25 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:28:25.884Z Local: 1/30/2020, 2:28:25 AM command: CREATE, rowCount: null 
2020-01-29T18:28:25.887Z Local: 1/30/2020, 2:28:25 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T18:28:25.889Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T18:28:25.891Z Local: 1/30/2020, 2:28:25 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:28:25.894Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 3 
2020-01-29T18:28:25.896Z Local: 1/30/2020, 2:28:25 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T18:28:25.900Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 40 
2020-01-29T18:28:25.901Z Local: 1/30/2020, 2:28:25 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T18:28:25.905Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 40 
2020-01-29T18:28:25.907Z Local: 1/30/2020, 2:28:25 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T18:28:25.909Z Local: 1/30/2020, 2:28:25 AM command: SELECT, rowCount: 1 
2020-01-29T18:28:25.911Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:28:25.912Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:28:25.914Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:28:25.917Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:28:25.918Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:28:25.919Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:28:25.921Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:28:25.922Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:28:25.927Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:28:25.928Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:28:25.930Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:28:25.931Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:28:25.933Z Local: 1/30/2020, 2:28:25 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:29:02.680Z Local: 1/30/2020, 2:29:02 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:29:02.713Z Local: 1/30/2020, 2:29:02 AM command: DO, rowCount: null 
2020-01-29T18:29:02.716Z Local: 1/30/2020, 2:29:02 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:29:02.718Z Local: 1/30/2020, 2:29:02 AM command: DO, rowCount: null 
2020-01-29T18:29:02.720Z Local: 1/30/2020, 2:29:02 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:29:02.723Z Local: 1/30/2020, 2:29:02 AM command: CREATE, rowCount: null 
2020-01-29T18:29:02.726Z Local: 1/30/2020, 2:29:02 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:29:02.730Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:02.732Z Local: 1/30/2020, 2:29:02 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:29:02.742Z Local: 1/30/2020, 2:29:02 AM command: INSERT, rowCount: 1 
2020-01-29T18:29:02.744Z Local: 1/30/2020, 2:29:02 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:29:02.748Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 3 
2020-01-29T18:29:02.749Z Local: 1/30/2020, 2:29:02 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:29:02.756Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 106 
2020-01-29T18:29:02.758Z Local: 1/30/2020, 2:29:02 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T18:29:02.765Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 106 
2020-01-29T18:29:02.767Z Local: 1/30/2020, 2:29:02 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-01-29T18:29:02.769Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:02.771Z Local: 1/30/2020, 2:29:02 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T18:29:02.773Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:02.777Z Local: 1/30/2020, 2:29:02 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T18:29:02.779Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:02.781Z Local: 1/30/2020, 2:29:02 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-01-29T18:29:02.783Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:02.792Z Local: 1/30/2020, 2:29:02 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:29:02.813Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:02.814Z Local: 1/30/2020, 2:29:02 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:02.839Z Local: 1/30/2020, 2:29:02 AM command: INSERT, rowCount: 1 return id = 107 
2020-01-29T18:29:02.840Z Local: 1/30/2020, 2:29:02 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:02.848Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:02.848Z Local: 1/30/2020, 2:29:02 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:02.856Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:02.860Z Local: 1/30/2020, 2:29:02 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:02.867Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:02.868Z Local: 1/30/2020, 2:29:02 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:02.879Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 0 
2020-01-29T18:29:02.879Z Local: 1/30/2020, 2:29:02 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:02.886Z Local: 1/30/2020, 2:29:02 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T18:29:02.891Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:02.892Z Local: 1/30/2020, 2:29:02 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:02.897Z Local: 1/30/2020, 2:29:02 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:29:02.916Z Local: 1/30/2020, 2:29:02 AM command: CREATE, rowCount: null 
2020-01-29T18:29:02.918Z Local: 1/30/2020, 2:29:02 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T18:29:02.921Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T18:29:02.923Z Local: 1/30/2020, 2:29:02 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:29:02.926Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 3 
2020-01-29T18:29:02.927Z Local: 1/30/2020, 2:29:02 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T18:29:02.930Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 40 
2020-01-29T18:29:02.932Z Local: 1/30/2020, 2:29:02 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T18:29:02.935Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 40 
2020-01-29T18:29:02.937Z Local: 1/30/2020, 2:29:02 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T18:29:02.940Z Local: 1/30/2020, 2:29:02 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:02.942Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:29:02.943Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:29:02.945Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:29:02.948Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:29:02.949Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:29:02.950Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:29:02.951Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:29:02.953Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:29:02.957Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:29:02.959Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:29:02.960Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:29:02.961Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:29:02.963Z Local: 1/30/2020, 2:29:02 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:29:11.681Z Local: 1/30/2020, 2:29:11 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:29:11.692Z Local: 1/30/2020, 2:29:11 AM Server is listening on port 8000 
2020-01-29T18:29:11.716Z Local: 1/30/2020, 2:29:11 AM command: DO, rowCount: null 
2020-01-29T18:29:11.717Z Local: 1/30/2020, 2:29:11 AM Created Producer type 
2020-01-29T18:29:11.718Z Local: 1/30/2020, 2:29:11 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:29:11.719Z Local: 1/30/2020, 2:29:11 AM command: DO, rowCount: null 
2020-01-29T18:29:11.721Z Local: 1/30/2020, 2:29:11 AM Created Spec type 
2020-01-29T18:29:11.721Z Local: 1/30/2020, 2:29:11 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:29:11.724Z Local: 1/30/2020, 2:29:11 AM command: CREATE, rowCount: null 
2020-01-29T18:29:11.724Z Local: 1/30/2020, 2:29:11 AM Created items_table 
2020-01-29T18:29:11.725Z Local: 1/30/2020, 2:29:11 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T18:29:15.780Z Local: 1/30/2020, 2:29:15 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:29:15.811Z Local: 1/30/2020, 2:29:15 AM command: DO, rowCount: null 
2020-01-29T18:29:15.814Z Local: 1/30/2020, 2:29:15 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:29:15.816Z Local: 1/30/2020, 2:29:15 AM command: DO, rowCount: null 
2020-01-29T18:29:15.818Z Local: 1/30/2020, 2:29:15 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:29:15.820Z Local: 1/30/2020, 2:29:15 AM command: CREATE, rowCount: null 
2020-01-29T18:29:15.824Z Local: 1/30/2020, 2:29:15 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:29:15.839Z Local: 1/30/2020, 2:29:15 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:15.841Z Local: 1/30/2020, 2:29:15 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:29:15.851Z Local: 1/30/2020, 2:29:15 AM command: INSERT, rowCount: 1 
2020-01-29T18:29:15.853Z Local: 1/30/2020, 2:29:15 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:29:15.857Z Local: 1/30/2020, 2:29:15 AM command: SELECT, rowCount: 3 
2020-01-29T18:29:15.858Z Local: 1/30/2020, 2:29:15 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:29:15.865Z Local: 1/30/2020, 2:29:15 AM command: SELECT, rowCount: 108 
2020-01-29T18:29:15.866Z Local: 1/30/2020, 2:29:15 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T18:29:15.873Z Local: 1/30/2020, 2:29:15 AM command: SELECT, rowCount: 108 
2020-01-29T18:29:15.875Z Local: 1/30/2020, 2:29:15 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-01-29T18:29:15.877Z Local: 1/30/2020, 2:29:15 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:15.879Z Local: 1/30/2020, 2:29:15 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T18:29:15.881Z Local: 1/30/2020, 2:29:15 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:15.884Z Local: 1/30/2020, 2:29:15 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T18:29:15.887Z Local: 1/30/2020, 2:29:15 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:15.889Z Local: 1/30/2020, 2:29:15 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-01-29T18:29:15.890Z Local: 1/30/2020, 2:29:15 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:15.907Z Local: 1/30/2020, 2:29:15 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:29:15.911Z Local: 1/30/2020, 2:29:15 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:15.912Z Local: 1/30/2020, 2:29:15 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:15.949Z Local: 1/30/2020, 2:29:15 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:29:15.959Z Local: 1/30/2020, 2:29:15 AM command: INSERT, rowCount: 1 
2020-01-29T18:29:15.961Z Local: 1/30/2020, 2:29:15 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:15.967Z Local: 1/30/2020, 2:29:15 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-01-29T18:29:15.971Z Local: 1/30/2020, 2:29:15 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:15.975Z Local: 1/30/2020, 2:29:15 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:15.988Z Local: 1/30/2020, 2:29:15 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T18:29:15.990Z Local: 1/30/2020, 2:29:15 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:15.992Z Local: 1/30/2020, 2:29:15 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:15.998Z Local: 1/30/2020, 2:29:15 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T18:29:16.012Z Local: 1/30/2020, 2:29:16 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:16.013Z Local: 1/30/2020, 2:29:16 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:16.020Z Local: 1/30/2020, 2:29:16 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-01-29T18:29:16.025Z Local: 1/30/2020, 2:29:16 AM command: SELECT, rowCount: 0 
2020-01-29T18:29:16.025Z Local: 1/30/2020, 2:29:16 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:16.031Z Local: 1/30/2020, 2:29:16 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T18:29:16.036Z Local: 1/30/2020, 2:29:16 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:16.037Z Local: 1/30/2020, 2:29:16 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:16.043Z Local: 1/30/2020, 2:29:16 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:29:16.063Z Local: 1/30/2020, 2:29:16 AM command: CREATE, rowCount: null 
2020-01-29T18:29:16.065Z Local: 1/30/2020, 2:29:16 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T18:29:16.068Z Local: 1/30/2020, 2:29:16 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T18:29:16.070Z Local: 1/30/2020, 2:29:16 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:29:16.074Z Local: 1/30/2020, 2:29:16 AM command: SELECT, rowCount: 3 
2020-01-29T18:29:16.075Z Local: 1/30/2020, 2:29:16 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T18:29:16.078Z Local: 1/30/2020, 2:29:16 AM command: SELECT, rowCount: 40 
2020-01-29T18:29:16.079Z Local: 1/30/2020, 2:29:16 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T18:29:16.082Z Local: 1/30/2020, 2:29:16 AM command: SELECT, rowCount: 40 
2020-01-29T18:29:16.085Z Local: 1/30/2020, 2:29:16 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T18:29:16.087Z Local: 1/30/2020, 2:29:16 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:16.089Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:29:16.090Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:29:16.091Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:29:16.094Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:29:16.095Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:29:16.096Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:29:16.098Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:29:16.099Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:29:16.104Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:29:16.105Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:29:16.106Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:29:16.108Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:29:16.110Z Local: 1/30/2020, 2:29:16 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:29:36.484Z Local: 1/30/2020, 2:29:36 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:29:36.497Z Local: 1/30/2020, 2:29:36 AM Server is listening on port 8000 
2020-01-29T18:29:36.521Z Local: 1/30/2020, 2:29:36 AM command: DO, rowCount: null 
2020-01-29T18:29:36.522Z Local: 1/30/2020, 2:29:36 AM Created Producer type 
2020-01-29T18:29:36.523Z Local: 1/30/2020, 2:29:36 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:29:36.524Z Local: 1/30/2020, 2:29:36 AM command: DO, rowCount: null 
2020-01-29T18:29:36.525Z Local: 1/30/2020, 2:29:36 AM Created Spec type 
2020-01-29T18:29:36.525Z Local: 1/30/2020, 2:29:36 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:29:36.527Z Local: 1/30/2020, 2:29:36 AM command: CREATE, rowCount: null 
2020-01-29T18:29:36.528Z Local: 1/30/2020, 2:29:36 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T18:29:36.528Z Local: 1/30/2020, 2:29:36 AM Created items_table 
2020-01-29T18:29:41.444Z Local: 1/30/2020, 2:29:41 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:29:41.475Z Local: 1/30/2020, 2:29:41 AM command: DO, rowCount: null 
2020-01-29T18:29:41.479Z Local: 1/30/2020, 2:29:41 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:29:41.481Z Local: 1/30/2020, 2:29:41 AM command: DO, rowCount: null 
2020-01-29T18:29:41.483Z Local: 1/30/2020, 2:29:41 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:29:41.486Z Local: 1/30/2020, 2:29:41 AM command: CREATE, rowCount: null 
2020-01-29T18:29:41.488Z Local: 1/30/2020, 2:29:41 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:29:41.492Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:41.494Z Local: 1/30/2020, 2:29:41 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:29:41.506Z Local: 1/30/2020, 2:29:41 AM command: INSERT, rowCount: 1 
2020-01-29T18:29:41.508Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:29:41.512Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 3 
2020-01-29T18:29:41.515Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:29:41.522Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 110 
2020-01-29T18:29:41.523Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T18:29:41.530Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 110 
2020-01-29T18:29:41.532Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-01-29T18:29:41.534Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:41.536Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T18:29:41.540Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:41.541Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T18:29:41.543Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:41.545Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-01-29T18:29:41.548Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:41.562Z Local: 1/30/2020, 2:29:41 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:29:41.567Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:41.568Z Local: 1/30/2020, 2:29:41 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:41.606Z Local: 1/30/2020, 2:29:41 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:29:41.615Z Local: 1/30/2020, 2:29:41 AM command: INSERT, rowCount: 1 
2020-01-29T18:29:41.617Z Local: 1/30/2020, 2:29:41 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:41.623Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-01-29T18:29:41.627Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:41.632Z Local: 1/30/2020, 2:29:41 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:41.639Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T18:29:41.642Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:41.644Z Local: 1/30/2020, 2:29:41 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:41.653Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T18:29:41.655Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:41.657Z Local: 1/30/2020, 2:29:41 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:41.664Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-01-29T18:29:41.670Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 0 
2020-01-29T18:29:41.671Z Local: 1/30/2020, 2:29:41 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:41.676Z Local: 1/30/2020, 2:29:41 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T18:29:41.686Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 2 
2020-01-29T18:29:41.687Z Local: 1/30/2020, 2:29:41 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:29:41.692Z Local: 1/30/2020, 2:29:41 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:29:41.710Z Local: 1/30/2020, 2:29:41 AM command: CREATE, rowCount: null 
2020-01-29T18:29:41.712Z Local: 1/30/2020, 2:29:41 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T18:29:41.716Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T18:29:41.718Z Local: 1/30/2020, 2:29:41 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:29:41.721Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 3 
2020-01-29T18:29:41.722Z Local: 1/30/2020, 2:29:41 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T18:29:41.726Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 40 
2020-01-29T18:29:41.727Z Local: 1/30/2020, 2:29:41 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T18:29:41.731Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 40 
2020-01-29T18:29:41.733Z Local: 1/30/2020, 2:29:41 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T18:29:41.735Z Local: 1/30/2020, 2:29:41 AM command: SELECT, rowCount: 1 
2020-01-29T18:29:41.736Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:29:41.738Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:29:41.739Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:29:41.742Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:29:41.743Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:29:41.744Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:29:41.746Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:29:41.747Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:29:41.752Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:29:41.753Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:29:41.754Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:29:41.756Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:29:41.757Z Local: 1/30/2020, 2:29:41 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:34:20.747Z Local: 1/30/2020, 2:34:20 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:34:20.777Z Local: 1/30/2020, 2:34:20 AM command: DO, rowCount: null 
2020-01-29T18:34:20.781Z Local: 1/30/2020, 2:34:20 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:34:20.782Z Local: 1/30/2020, 2:34:20 AM command: DO, rowCount: null 
2020-01-29T18:34:20.784Z Local: 1/30/2020, 2:34:20 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:34:20.786Z Local: 1/30/2020, 2:34:20 AM command: CREATE, rowCount: null 
2020-01-29T18:34:20.790Z Local: 1/30/2020, 2:34:20 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:34:20.805Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 1 
2020-01-29T18:34:20.808Z Local: 1/30/2020, 2:34:20 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:34:20.818Z Local: 1/30/2020, 2:34:20 AM command: INSERT, rowCount: 1 
2020-01-29T18:34:20.820Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:34:20.824Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 3 
2020-01-29T18:34:20.826Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:34:20.834Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 112 
2020-01-29T18:34:20.835Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T18:34:20.841Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 112 
2020-01-29T18:34:20.844Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-01-29T18:34:20.846Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 1 
2020-01-29T18:34:20.849Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T18:34:20.852Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:34:20.854Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T18:34:20.857Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:34:20.861Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-01-29T18:34:20.863Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:34:20.872Z Local: 1/30/2020, 2:34:20 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:34:20.896Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 1 
2020-01-29T18:34:20.897Z Local: 1/30/2020, 2:34:20 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:34:20.912Z Local: 1/30/2020, 2:34:20 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:34:20.922Z Local: 1/30/2020, 2:34:20 AM command: INSERT, rowCount: 1 
2020-01-29T18:34:20.923Z Local: 1/30/2020, 2:34:20 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:34:20.931Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-01-29T18:34:20.933Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 1 
2020-01-29T18:34:20.933Z Local: 1/30/2020, 2:34:20 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:34:20.940Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T18:34:20.949Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:34:20.950Z Local: 1/30/2020, 2:34:20 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:34:20.956Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T18:34:20.965Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:34:20.966Z Local: 1/30/2020, 2:34:20 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:34:20.972Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-01-29T18:34:20.979Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 0 
2020-01-29T18:34:20.979Z Local: 1/30/2020, 2:34:20 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:34:20.984Z Local: 1/30/2020, 2:34:20 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T18:34:20.987Z Local: 1/30/2020, 2:34:20 AM command: SELECT, rowCount: 2 
2020-01-29T18:34:20.988Z Local: 1/30/2020, 2:34:20 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T18:34:20.994Z Local: 1/30/2020, 2:34:20 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:34:21.015Z Local: 1/30/2020, 2:34:21 AM command: CREATE, rowCount: null 
2020-01-29T18:34:21.017Z Local: 1/30/2020, 2:34:21 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T18:34:21.020Z Local: 1/30/2020, 2:34:21 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T18:34:21.021Z Local: 1/30/2020, 2:34:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:34:21.024Z Local: 1/30/2020, 2:34:21 AM command: SELECT, rowCount: 3 
2020-01-29T18:34:21.027Z Local: 1/30/2020, 2:34:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T18:34:21.030Z Local: 1/30/2020, 2:34:21 AM command: SELECT, rowCount: 40 
2020-01-29T18:34:21.032Z Local: 1/30/2020, 2:34:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T18:34:21.035Z Local: 1/30/2020, 2:34:21 AM command: SELECT, rowCount: 40 
2020-01-29T18:34:21.036Z Local: 1/30/2020, 2:34:21 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T18:34:21.038Z Local: 1/30/2020, 2:34:21 AM command: SELECT, rowCount: 1 
2020-01-29T18:34:21.040Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T18:34:21.043Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T18:34:21.048Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T18:34:21.049Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T18:34:21.051Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T18:34:21.052Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T18:34:21.054Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T18:34:21.055Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T18:34:21.061Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T18:34:21.063Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T18:34:21.064Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T18:34:21.067Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T18:34:21.068Z Local: 1/30/2020, 2:34:21 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T18:35:22.395Z Local: 1/30/2020, 2:35:22 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:35:22.406Z Local: 1/30/2020, 2:35:22 AM Server is listening on port 8000 
2020-01-29T18:35:22.429Z Local: 1/30/2020, 2:35:22 AM command: DO, rowCount: null 
2020-01-29T18:35:22.429Z Local: 1/30/2020, 2:35:22 AM Created Producer type 
2020-01-29T18:35:22.430Z Local: 1/30/2020, 2:35:22 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:35:22.432Z Local: 1/30/2020, 2:35:22 AM command: DO, rowCount: null 
2020-01-29T18:35:22.432Z Local: 1/30/2020, 2:35:22 AM Created Spec type 
2020-01-29T18:35:22.433Z Local: 1/30/2020, 2:35:22 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:35:22.435Z Local: 1/30/2020, 2:35:22 AM command: CREATE, rowCount: null 
2020-01-29T18:35:22.436Z Local: 1/30/2020, 2:35:22 AM Created items_table 
2020-01-29T18:35:22.436Z Local: 1/30/2020, 2:35:22 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T18:36:44.766Z Local: 1/30/2020, 2:36:44 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:36:44.775Z Local: 1/30/2020, 2:36:44 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:36:44.776Z Local: 1/30/2020, 2:36:44 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T18:36:44.778Z Local: 1/30/2020, 2:36:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai1', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:36:44.779Z Local: 1/30/2020, 2:36:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai2', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:36:44.780Z Local: 1/30/2020, 2:36:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:36:44.784Z Local: 1/30/2020, 2:36:44 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-29T18:36:44.785Z Local: 1/30/2020, 2:36:44 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-29T18:36:44.819Z Local: 1/30/2020, 2:36:44 AM command: DO, rowCount: null 
2020-01-29T18:36:44.826Z Local: 1/30/2020, 2:36:44 AM command: DO, rowCount: null 
2020-01-29T18:36:44.833Z Local: 1/30/2020, 2:36:44 AM command: CREATE, rowCount: null 
2020-01-29T18:36:44.862Z Local: 1/30/2020, 2:36:44 AM command: INSERT, rowCount: 1 
2020-01-29T18:36:44.871Z Local: 1/30/2020, 2:36:44 AM command: INSERT, rowCount: 1 
2020-01-29T18:36:44.879Z Local: 1/30/2020, 2:36:44 AM command: INSERT, rowCount: 1 
2020-01-29T18:36:44.886Z Local: 1/30/2020, 2:36:44 AM command: SELECT, rowCount: 1 
2020-01-29T18:36:44.891Z Local: 1/30/2020, 2:36:44 AM command: SELECT, rowCount: 5 
2020-01-29T18:41:16.306Z Local: 1/30/2020, 2:41:16 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:41:16.319Z Local: 1/30/2020, 2:41:16 AM Server is listening on port 8000 
2020-01-29T18:41:16.342Z Local: 1/30/2020, 2:41:16 AM command: DO, rowCount: null 
2020-01-29T18:41:16.343Z Local: 1/30/2020, 2:41:16 AM Created Producer type 
2020-01-29T18:41:16.344Z Local: 1/30/2020, 2:41:16 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:41:16.345Z Local: 1/30/2020, 2:41:16 AM command: DO, rowCount: null 
2020-01-29T18:41:16.346Z Local: 1/30/2020, 2:41:16 AM Created Spec type 
2020-01-29T18:41:16.347Z Local: 1/30/2020, 2:41:16 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:41:16.349Z Local: 1/30/2020, 2:41:16 AM command: CREATE, rowCount: null 
2020-01-29T18:41:16.350Z Local: 1/30/2020, 2:41:16 AM Created items_table 
2020-01-29T18:41:16.350Z Local: 1/30/2020, 2:41:16 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T18:41:52.451Z Local: 1/30/2020, 2:41:52 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:41:52.485Z Local: 1/30/2020, 2:41:52 AM command: SELECT, rowCount: 113 
2020-01-29T18:41:52.486Z Local: 1/30/2020, 2:41:52 AM Sending 113 rows to ::1 with  
2020-01-29T18:41:57.900Z Local: 1/30/2020, 2:41:57 AM Warning: DbItem.queryItemList count = NaN is not a Integer 
2020-01-29T18:42:19.630Z Local: 1/30/2020, 2:42:19 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:42:19.655Z Local: 1/30/2020, 2:42:19 AM Sending 113 rows to ::1 with  
2020-01-29T18:42:19.654Z Local: 1/30/2020, 2:42:19 AM command: SELECT, rowCount: 113 
2020-01-29T18:59:57.879Z Local: 1/30/2020, 2:59:57 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:59:57.910Z Local: 1/30/2020, 2:59:57 AM command: DO, rowCount: null 
2020-01-29T18:59:57.914Z Local: 1/30/2020, 2:59:57 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T18:59:57.916Z Local: 1/30/2020, 2:59:57 AM command: DO, rowCount: null 
2020-01-29T18:59:57.918Z Local: 1/30/2020, 2:59:57 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T18:59:57.920Z Local: 1/30/2020, 2:59:57 AM command: CREATE, rowCount: null 
2020-01-29T18:59:57.924Z Local: 1/30/2020, 2:59:57 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T18:59:57.928Z Local: 1/30/2020, 2:59:57 AM command: SELECT, rowCount: 1 
2020-01-29T18:59:57.930Z Local: 1/30/2020, 2:59:57 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T18:59:57.945Z Local: 1/30/2020, 2:59:57 AM command: INSERT, rowCount: 1 
2020-01-29T18:59:57.948Z Local: 1/30/2020, 2:59:57 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T18:59:57.952Z Local: 1/30/2020, 2:59:57 AM command: SELECT, rowCount: 3 
2020-01-29T18:59:57.953Z Local: 1/30/2020, 2:59:57 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T18:59:57.960Z Local: 1/30/2020, 2:59:57 AM command: SELECT, rowCount: 114 
2020-01-29T18:59:57.962Z Local: 1/30/2020, 2:59:57 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T18:59:57.968Z Local: 1/30/2020, 2:59:57 AM command: SELECT, rowCount: 114 
2020-01-29T18:59:57.971Z Local: 1/30/2020, 2:59:57 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-01-29T18:59:57.973Z Local: 1/30/2020, 2:59:57 AM command: SELECT, rowCount: 1 
2020-01-29T18:59:57.975Z Local: 1/30/2020, 2:59:57 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T18:59:57.977Z Local: 1/30/2020, 2:59:57 AM command: SELECT, rowCount: 2 
2020-01-29T18:59:57.981Z Local: 1/30/2020, 2:59:57 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T18:59:57.983Z Local: 1/30/2020, 2:59:57 AM command: SELECT, rowCount: 2 
2020-01-29T18:59:57.985Z Local: 1/30/2020, 2:59:57 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-01-29T18:59:57.987Z Local: 1/30/2020, 2:59:57 AM command: SELECT, rowCount: 2 
2020-01-29T19:00:12.018Z Local: 1/30/2020, 3:00:12 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T19:00:12.040Z Local: 1/30/2020, 3:00:12 AM command: CREATE, rowCount: null 
2020-01-29T19:00:12.043Z Local: 1/30/2020, 3:00:12 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T19:00:12.045Z Local: 1/30/2020, 3:00:12 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T19:00:12.047Z Local: 1/30/2020, 3:00:12 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T19:00:12.050Z Local: 1/30/2020, 3:00:12 AM command: SELECT, rowCount: 3 
2020-01-29T19:00:12.052Z Local: 1/30/2020, 3:00:12 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T19:00:12.056Z Local: 1/30/2020, 3:00:12 AM command: SELECT, rowCount: 40 
2020-01-29T19:00:12.057Z Local: 1/30/2020, 3:00:12 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T19:00:12.061Z Local: 1/30/2020, 3:00:12 AM command: SELECT, rowCount: 40 
2020-01-29T19:00:12.063Z Local: 1/30/2020, 3:00:12 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T19:00:12.064Z Local: 1/30/2020, 3:00:12 AM command: SELECT, rowCount: 1 
2020-01-29T19:00:12.066Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T19:00:12.069Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T19:00:12.072Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T19:00:12.074Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T19:00:12.076Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T19:00:12.077Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T19:00:12.079Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T19:00:12.086Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T19:00:12.090Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T19:00:12.091Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T19:00:12.092Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T19:00:12.094Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T19:00:12.097Z Local: 1/30/2020, 3:00:12 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T19:00:43.854Z Local: 1/30/2020, 3:00:43 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:00:43.867Z Local: 1/30/2020, 3:00:43 AM Server is listening on port 8000 
2020-01-29T19:00:43.890Z Local: 1/30/2020, 3:00:43 AM command: DO, rowCount: null 
2020-01-29T19:00:43.891Z Local: 1/30/2020, 3:00:43 AM Created Producer type 
2020-01-29T19:00:43.892Z Local: 1/30/2020, 3:00:43 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:00:43.893Z Local: 1/30/2020, 3:00:43 AM command: DO, rowCount: null 
2020-01-29T19:00:43.894Z Local: 1/30/2020, 3:00:43 AM Created Spec type 
2020-01-29T19:00:43.895Z Local: 1/30/2020, 3:00:43 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T19:00:43.897Z Local: 1/30/2020, 3:00:43 AM command: CREATE, rowCount: null 
2020-01-29T19:00:43.897Z Local: 1/30/2020, 3:00:43 AM Created items_table 
2020-01-29T19:00:43.898Z Local: 1/30/2020, 3:00:43 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T19:00:46.286Z Local: 1/30/2020, 3:00:46 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:00:46.314Z Local: 1/30/2020, 3:00:46 AM command: DO, rowCount: null 
2020-01-29T19:00:46.317Z Local: 1/30/2020, 3:00:46 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:00:46.318Z Local: 1/30/2020, 3:00:46 AM command: DO, rowCount: null 
2020-01-29T19:00:46.320Z Local: 1/30/2020, 3:00:46 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T19:00:46.322Z Local: 1/30/2020, 3:00:46 AM command: CREATE, rowCount: null 
2020-01-29T19:00:46.326Z Local: 1/30/2020, 3:00:46 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T19:00:46.329Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 1 
2020-01-29T19:00:46.331Z Local: 1/30/2020, 3:00:46 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T19:00:46.341Z Local: 1/30/2020, 3:00:46 AM command: INSERT, rowCount: 1 
2020-01-29T19:00:46.344Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T19:00:46.348Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 3 
2020-01-29T19:00:46.350Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T19:00:46.357Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 115 
2020-01-29T19:00:46.358Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T19:00:46.365Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 115 
2020-01-29T19:00:46.367Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-01-29T19:00:46.369Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 1 
2020-01-29T19:00:46.371Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T19:00:46.373Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 2 
2020-01-29T19:00:46.377Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T19:00:46.378Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 2 
2020-01-29T19:00:46.380Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-01-29T19:00:46.383Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 2 
2020-01-29T19:00:46.398Z Local: 1/30/2020, 3:00:46 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T19:00:46.403Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 1 
2020-01-29T19:00:46.404Z Local: 1/30/2020, 3:00:46 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:00:46.443Z Local: 1/30/2020, 3:00:46 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T19:00:46.452Z Local: 1/30/2020, 3:00:46 AM command: INSERT, rowCount: 1 
2020-01-29T19:00:46.453Z Local: 1/30/2020, 3:00:46 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:00:46.459Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-01-29T19:00:46.462Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 1 
2020-01-29T19:00:46.469Z Local: 1/30/2020, 3:00:46 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:00:46.476Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T19:00:46.478Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 2 
2020-01-29T19:00:46.480Z Local: 1/30/2020, 3:00:46 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:00:46.488Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T19:00:46.490Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 2 
2020-01-29T19:00:46.491Z Local: 1/30/2020, 3:00:46 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:00:46.498Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-01-29T19:00:46.503Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 0 
2020-01-29T19:00:46.504Z Local: 1/30/2020, 3:00:46 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:00:46.509Z Local: 1/30/2020, 3:00:46 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T19:00:46.514Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 2 
2020-01-29T19:00:46.515Z Local: 1/30/2020, 3:00:46 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:00:46.522Z Local: 1/30/2020, 3:00:46 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T19:00:46.542Z Local: 1/30/2020, 3:00:46 AM command: CREATE, rowCount: null 
2020-01-29T19:00:46.544Z Local: 1/30/2020, 3:00:46 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T19:00:46.546Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T19:00:46.548Z Local: 1/30/2020, 3:00:46 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T19:00:46.552Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 3 
2020-01-29T19:00:46.553Z Local: 1/30/2020, 3:00:46 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T19:00:46.556Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 40 
2020-01-29T19:00:46.558Z Local: 1/30/2020, 3:00:46 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T19:00:46.562Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 40 
2020-01-29T19:00:46.564Z Local: 1/30/2020, 3:00:46 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T19:00:46.566Z Local: 1/30/2020, 3:00:46 AM command: SELECT, rowCount: 1 
2020-01-29T19:00:46.568Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T19:00:46.571Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T19:00:46.573Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T19:00:46.575Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T19:00:46.576Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T19:00:46.577Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T19:00:46.579Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T19:00:46.580Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T19:00:46.585Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T19:00:46.586Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T19:00:46.587Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T19:00:46.588Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T19:00:46.590Z Local: 1/30/2020, 3:00:46 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T19:08:54.316Z Local: 1/30/2020, 3:08:54 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:08:54.329Z Local: 1/30/2020, 3:08:54 AM Server is listening on port 8000 
2020-01-29T19:08:54.353Z Local: 1/30/2020, 3:08:54 AM command: DO, rowCount: null 
2020-01-29T19:08:54.355Z Local: 1/30/2020, 3:08:54 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:08:54.354Z Local: 1/30/2020, 3:08:54 AM Created Producer type 
2020-01-29T19:08:54.356Z Local: 1/30/2020, 3:08:54 AM command: DO, rowCount: null 
2020-01-29T19:08:54.357Z Local: 1/30/2020, 3:08:54 AM Created Spec type 
2020-01-29T19:08:54.358Z Local: 1/30/2020, 3:08:54 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T19:08:54.361Z Local: 1/30/2020, 3:08:54 AM command: CREATE, rowCount: null 
2020-01-29T19:08:54.362Z Local: 1/30/2020, 3:08:54 AM Created items_table 
2020-01-29T19:08:54.362Z Local: 1/30/2020, 3:08:54 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T19:08:59.912Z Local: 1/30/2020, 3:08:59 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:08:59.940Z Local: 1/30/2020, 3:08:59 AM command: DO, rowCount: null 
2020-01-29T19:08:59.944Z Local: 1/30/2020, 3:08:59 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:08:59.945Z Local: 1/30/2020, 3:08:59 AM command: DO, rowCount: null 
2020-01-29T19:08:59.947Z Local: 1/30/2020, 3:08:59 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T19:08:59.949Z Local: 1/30/2020, 3:08:59 AM command: CREATE, rowCount: null 
2020-01-29T19:08:59.955Z Local: 1/30/2020, 3:08:59 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T19:08:59.969Z Local: 1/30/2020, 3:08:59 AM command: SELECT, rowCount: 1 
2020-01-29T19:08:59.972Z Local: 1/30/2020, 3:08:59 AM Warning: DbItem.insertItem spec = [object Object] is not an Array 
2020-01-29T19:08:59.972Z Local: 1/30/2020, 3:08:59 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T19:08:59.982Z Local: 1/30/2020, 3:08:59 AM command: INSERT, rowCount: 1 
2020-01-29T19:08:59.985Z Local: 1/30/2020, 3:08:59 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T19:08:59.989Z Local: 1/30/2020, 3:08:59 AM command: SELECT, rowCount: 3 
2020-01-29T19:08:59.991Z Local: 1/30/2020, 3:08:59 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T19:08:59.997Z Local: 1/30/2020, 3:08:59 AM command: SELECT, rowCount: 117 
2020-01-29T19:09:00.000Z Local: 1/30/2020, 3:09:00 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T19:09:00.007Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 117 
2020-01-29T19:09:00.009Z Local: 1/30/2020, 3:09:00 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-01-29T19:09:00.011Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 1 
2020-01-29T19:09:00.013Z Local: 1/30/2020, 3:09:00 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T19:09:00.017Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:00.020Z Local: 1/30/2020, 3:09:00 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T19:09:00.023Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:00.025Z Local: 1/30/2020, 3:09:00 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-01-29T19:09:00.027Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:00.027Z Local: 1/30/2020, 3:09:00 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T19:09:00.033Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 1 
2020-01-29T19:09:00.034Z Local: 1/30/2020, 3:09:00 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:00.071Z Local: 1/30/2020, 3:09:00 AM Warning: DbItem.insertItem price = 500 is not a Number 
2020-01-29T19:09:00.072Z Local: 1/30/2020, 3:09:00 AM Warning: DbItem.insertItem spec = [object Object] is not an Array 
2020-01-29T19:09:00.072Z Local: 1/30/2020, 3:09:00 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T19:09:00.084Z Local: 1/30/2020, 3:09:00 AM command: INSERT, rowCount: 1 
2020-01-29T19:09:00.084Z Local: 1/30/2020, 3:09:00 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:00.091Z Local: 1/30/2020, 3:09:00 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-01-29T19:09:00.094Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 1 
2020-01-29T19:09:00.100Z Local: 1/30/2020, 3:09:00 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:00.106Z Local: 1/30/2020, 3:09:00 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T19:09:00.108Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:00.115Z Local: 1/30/2020, 3:09:00 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:00.124Z Local: 1/30/2020, 3:09:00 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T19:09:00.130Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:00.131Z Local: 1/30/2020, 3:09:00 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:00.137Z Local: 1/30/2020, 3:09:00 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-01-29T19:09:00.140Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 0 
2020-01-29T19:09:00.144Z Local: 1/30/2020, 3:09:00 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:00.149Z Local: 1/30/2020, 3:09:00 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T19:09:00.151Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:00.152Z Local: 1/30/2020, 3:09:00 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:00.172Z Local: 1/30/2020, 3:09:00 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T19:09:00.193Z Local: 1/30/2020, 3:09:00 AM command: CREATE, rowCount: null 
2020-01-29T19:09:00.194Z Local: 1/30/2020, 3:09:00 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T19:09:00.197Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T19:09:00.199Z Local: 1/30/2020, 3:09:00 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T19:09:00.201Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 3 
2020-01-29T19:09:00.202Z Local: 1/30/2020, 3:09:00 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T19:09:00.206Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 40 
2020-01-29T19:09:00.207Z Local: 1/30/2020, 3:09:00 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T19:09:00.211Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 40 
2020-01-29T19:09:00.214Z Local: 1/30/2020, 3:09:00 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T19:09:00.215Z Local: 1/30/2020, 3:09:00 AM command: SELECT, rowCount: 1 
2020-01-29T19:09:00.217Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkInt 1 = 5 is not a Integer 
2020-01-29T19:09:00.221Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkInt 2 = 5.3 is not a Integer 
2020-01-29T19:09:00.222Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkInt 3 = 5.3 is not a Integer 
2020-01-29T19:09:00.224Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkInt 5 = [object Object] is not a String 
2020-01-29T19:09:00.225Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkInt 6 = NaN is not a String 
2020-01-29T19:09:00.226Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkInt 7 = undefined is not a String 
2020-01-29T19:09:00.229Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkNumber 1 = 5 is not a Number 
2020-01-29T19:09:00.230Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkNumber 2 = 5.3 is not a Number 
2020-01-29T19:09:00.233Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkString 1 = 5 is not a String 
2020-01-29T19:09:00.234Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkString 2 = 5.3 is not a String 
2020-01-29T19:09:00.235Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkString 3 = [object Object] is not a String 
2020-01-29T19:09:00.237Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkString 4 = NaN is not a String 
2020-01-29T19:09:00.239Z Local: 1/30/2020, 3:09:00 AM Warning: testUtil.checkString 5 = undefined is not a String 
2020-01-29T19:09:54.778Z Local: 1/30/2020, 3:09:54 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:09:54.808Z Local: 1/30/2020, 3:09:54 AM command: DO, rowCount: null 
2020-01-29T19:09:54.811Z Local: 1/30/2020, 3:09:54 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:09:54.813Z Local: 1/30/2020, 3:09:54 AM command: DO, rowCount: null 
2020-01-29T19:09:54.815Z Local: 1/30/2020, 3:09:54 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T19:09:54.817Z Local: 1/30/2020, 3:09:54 AM command: CREATE, rowCount: null 
2020-01-29T19:09:54.819Z Local: 1/30/2020, 3:09:54 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T19:09:54.835Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 1 
2020-01-29T19:09:54.838Z Local: 1/30/2020, 3:09:54 AM Warning: DbItem.insertItem spec = [object Object] is not an Array 
2020-01-29T19:09:54.839Z Local: 1/30/2020, 3:09:54 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T19:09:54.854Z Local: 1/30/2020, 3:09:54 AM command: INSERT, rowCount: 1 
2020-01-29T19:09:54.856Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T19:09:54.860Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 3 
2020-01-29T19:09:54.862Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T19:09:54.869Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 119 
2020-01-29T19:09:54.870Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T19:09:54.876Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 119 
2020-01-29T19:09:54.878Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-01-29T19:09:54.880Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 1 
2020-01-29T19:09:54.882Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T19:09:54.884Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:54.886Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T19:09:54.888Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:54.891Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-01-29T19:09:54.893Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:54.892Z Local: 1/30/2020, 3:09:54 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T19:09:54.914Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 1 
2020-01-29T19:09:54.915Z Local: 1/30/2020, 3:09:54 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:54.929Z Local: 1/30/2020, 3:09:54 AM Warning: DbItem.insertItem price = 500 is not a Number 
2020-01-29T19:09:54.930Z Local: 1/30/2020, 3:09:54 AM Warning: DbItem.insertItem spec = [object Object] is not an Array 
2020-01-29T19:09:54.930Z Local: 1/30/2020, 3:09:54 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T19:09:54.940Z Local: 1/30/2020, 3:09:54 AM command: INSERT, rowCount: 1 
2020-01-29T19:09:54.941Z Local: 1/30/2020, 3:09:54 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:54.948Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-01-29T19:09:54.950Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 1 
2020-01-29T19:09:54.951Z Local: 1/30/2020, 3:09:54 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:54.957Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T19:09:54.960Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:54.961Z Local: 1/30/2020, 3:09:54 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:54.968Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T19:09:54.972Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:54.973Z Local: 1/30/2020, 3:09:54 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:54.979Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-01-29T19:09:54.984Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 0 
2020-01-29T19:09:54.985Z Local: 1/30/2020, 3:09:54 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:54.990Z Local: 1/30/2020, 3:09:54 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T19:09:54.993Z Local: 1/30/2020, 3:09:54 AM command: SELECT, rowCount: 2 
2020-01-29T19:09:54.997Z Local: 1/30/2020, 3:09:54 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:09:55.011Z Local: 1/30/2020, 3:09:55 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T19:09:55.030Z Local: 1/30/2020, 3:09:55 AM command: CREATE, rowCount: null 
2020-01-29T19:09:55.031Z Local: 1/30/2020, 3:09:55 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T19:09:55.034Z Local: 1/30/2020, 3:09:55 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T19:09:55.036Z Local: 1/30/2020, 3:09:55 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T19:09:55.039Z Local: 1/30/2020, 3:09:55 AM command: SELECT, rowCount: 3 
2020-01-29T19:09:55.041Z Local: 1/30/2020, 3:09:55 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T19:09:55.045Z Local: 1/30/2020, 3:09:55 AM command: SELECT, rowCount: 40 
2020-01-29T19:09:55.047Z Local: 1/30/2020, 3:09:55 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T19:09:55.051Z Local: 1/30/2020, 3:09:55 AM command: SELECT, rowCount: 40 
2020-01-29T19:09:55.054Z Local: 1/30/2020, 3:09:55 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T19:09:55.056Z Local: 1/30/2020, 3:09:55 AM command: SELECT, rowCount: 1 
2020-01-29T19:12:01.819Z Local: 1/30/2020, 3:12:01 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:12:01.831Z Local: 1/30/2020, 3:12:01 AM Server is listening on port 8000 
2020-01-29T19:12:01.855Z Local: 1/30/2020, 3:12:01 AM command: DO, rowCount: null 
2020-01-29T19:12:01.856Z Local: 1/30/2020, 3:12:01 AM Created Producer type 
2020-01-29T19:12:01.857Z Local: 1/30/2020, 3:12:01 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:12:01.858Z Local: 1/30/2020, 3:12:01 AM command: DO, rowCount: null 
2020-01-29T19:12:01.859Z Local: 1/30/2020, 3:12:01 AM Created Spec type 
2020-01-29T19:12:01.859Z Local: 1/30/2020, 3:12:01 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T19:12:01.861Z Local: 1/30/2020, 3:12:01 AM command: CREATE, rowCount: null 
2020-01-29T19:12:01.862Z Local: 1/30/2020, 3:12:01 AM Created items_table 
2020-01-29T19:12:01.862Z Local: 1/30/2020, 3:12:01 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-01-29T19:12:05.867Z Local: 1/30/2020, 3:12:05 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:12:05.897Z Local: 1/30/2020, 3:12:05 AM command: DO, rowCount: null 
2020-01-29T19:12:05.901Z Local: 1/30/2020, 3:12:05 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-29T19:12:05.902Z Local: 1/30/2020, 3:12:05 AM command: DO, rowCount: null 
2020-01-29T19:12:05.904Z Local: 1/30/2020, 3:12:05 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-01-29T19:12:05.905Z Local: 1/30/2020, 3:12:05 AM command: CREATE, rowCount: null 
2020-01-29T19:12:05.907Z Local: 1/30/2020, 3:12:05 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T19:12:05.911Z Local: 1/30/2020, 3:12:05 AM command: SELECT, rowCount: 1 
2020-01-29T19:12:05.913Z Local: 1/30/2020, 3:12:05 AM Warning: DbItem.insertItem spec = [object Object] is not an Array 
2020-01-29T19:12:05.913Z Local: 1/30/2020, 3:12:05 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T19:12:05.924Z Local: 1/30/2020, 3:12:05 AM command: INSERT, rowCount: 1 
2020-01-29T19:12:05.926Z Local: 1/30/2020, 3:12:05 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-01-29T19:12:05.930Z Local: 1/30/2020, 3:12:05 AM command: SELECT, rowCount: 3 
2020-01-29T19:12:05.931Z Local: 1/30/2020, 3:12:05 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-01-29T19:12:05.938Z Local: 1/30/2020, 3:12:05 AM command: SELECT, rowCount: 121 
2020-01-29T19:12:05.940Z Local: 1/30/2020, 3:12:05 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-01-29T19:12:05.946Z Local: 1/30/2020, 3:12:05 AM command: SELECT, rowCount: 121 
2020-01-29T19:12:05.948Z Local: 1/30/2020, 3:12:05 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-01-29T19:12:05.951Z Local: 1/30/2020, 3:12:05 AM command: SELECT, rowCount: 1 
2020-01-29T19:12:05.955Z Local: 1/30/2020, 3:12:05 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T19:12:05.957Z Local: 1/30/2020, 3:12:05 AM command: SELECT, rowCount: 2 
2020-01-29T19:12:05.958Z Local: 1/30/2020, 3:12:05 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T19:12:05.960Z Local: 1/30/2020, 3:12:05 AM command: SELECT, rowCount: 2 
2020-01-29T19:12:05.962Z Local: 1/30/2020, 3:12:05 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-01-29T19:12:05.964Z Local: 1/30/2020, 3:12:05 AM command: SELECT, rowCount: 2 
2020-01-29T19:12:05.978Z Local: 1/30/2020, 3:12:05 AM SELECT COUNT(*) FROM items_table; 
2020-01-29T19:12:05.983Z Local: 1/30/2020, 3:12:05 AM command: SELECT, rowCount: 1 
2020-01-29T19:12:05.985Z Local: 1/30/2020, 3:12:05 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:12:06.019Z Local: 1/30/2020, 3:12:06 AM Warning: DbItem.insertItem price = 500 is not a Number 
2020-01-29T19:12:06.020Z Local: 1/30/2020, 3:12:06 AM Warning: DbItem.insertItem spec = [object Object] is not an Array 
2020-01-29T19:12:06.020Z Local: 1/30/2020, 3:12:06 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '{"property":"100g","value":"Heavily Baked","comment":"Strongest"}'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-01-29T19:12:06.030Z Local: 1/30/2020, 3:12:06 AM command: INSERT, rowCount: 1 
2020-01-29T19:12:06.040Z Local: 1/30/2020, 3:12:06 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:12:06.046Z Local: 1/30/2020, 3:12:06 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-01-29T19:12:06.049Z Local: 1/30/2020, 3:12:06 AM command: SELECT, rowCount: 1 
2020-01-29T19:12:06.053Z Local: 1/30/2020, 3:12:06 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:12:06.060Z Local: 1/30/2020, 3:12:06 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-01-29T19:12:06.061Z Local: 1/30/2020, 3:12:06 AM command: SELECT, rowCount: 2 
2020-01-29T19:12:06.069Z Local: 1/30/2020, 3:12:06 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:12:06.076Z Local: 1/30/2020, 3:12:06 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-01-29T19:12:06.077Z Local: 1/30/2020, 3:12:06 AM command: SELECT, rowCount: 2 
2020-01-29T19:12:06.082Z Local: 1/30/2020, 3:12:06 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:12:06.089Z Local: 1/30/2020, 3:12:06 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-01-29T19:12:06.090Z Local: 1/30/2020, 3:12:06 AM command: SELECT, rowCount: 0 
2020-01-29T19:12:06.091Z Local: 1/30/2020, 3:12:06 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:12:06.097Z Local: 1/30/2020, 3:12:06 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-01-29T19:12:06.100Z Local: 1/30/2020, 3:12:06 AM command: SELECT, rowCount: 2 
2020-01-29T19:12:06.102Z Local: 1/30/2020, 3:12:06 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-01-29T19:12:06.106Z Local: 1/30/2020, 3:12:06 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-01-29T19:12:06.124Z Local: 1/30/2020, 3:12:06 AM command: CREATE, rowCount: null 
2020-01-29T19:12:06.126Z Local: 1/30/2020, 3:12:06 AM SELECT COUNT(*) FROM posts_table; 
2020-01-29T19:12:06.128Z Local: 1/30/2020, 3:12:06 AM command: SELECT, rowCount: 1, post count: 40 
2020-01-29T19:12:06.130Z Local: 1/30/2020, 3:12:06 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-01-29T19:12:06.133Z Local: 1/30/2020, 3:12:06 AM command: SELECT, rowCount: 3 
2020-01-29T19:12:06.134Z Local: 1/30/2020, 3:12:06 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-01-29T19:12:06.138Z Local: 1/30/2020, 3:12:06 AM command: SELECT, rowCount: 40 
2020-01-29T19:12:06.139Z Local: 1/30/2020, 3:12:06 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-01-29T19:12:06.145Z Local: 1/30/2020, 3:12:06 AM command: SELECT, rowCount: 40 
2020-01-29T19:12:06.147Z Local: 1/30/2020, 3:12:06 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-01-29T19:12:06.149Z Local: 1/30/2020, 3:12:06 AM command: SELECT, rowCount: 1 
2020-01-30T06:17:26.341Z Local: 1/30/2020, 2:17:26 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:17:26.350Z Local: 1/30/2020, 2:17:26 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:17:26.351Z Local: 1/30/2020, 2:17:26 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-30T06:17:26.353Z Local: 1/30/2020, 2:17:26 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('undefined', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-30T06:17:26.354Z Local: 1/30/2020, 2:17:26 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('2', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-30T06:17:26.355Z Local: 1/30/2020, 2:17:26 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-30T06:17:26.356Z Local: 1/30/2020, 2:17:26 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-30T06:17:26.358Z Local: 1/30/2020, 2:17:26 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-30T06:17:26.410Z Local: 1/30/2020, 2:17:26 PM command: CREATE, rowCount: null 
2020-01-30T06:17:26.431Z Local: 1/30/2020, 2:17:26 PM command: DO, rowCount: null 
2020-01-30T06:17:26.433Z Local: 1/30/2020, 2:17:26 PM command: DO, rowCount: null 
2020-01-30T06:17:26.455Z Local: 1/30/2020, 2:17:26 PM command: INSERT, rowCount: 1 
2020-01-30T06:17:26.457Z Local: 1/30/2020, 2:17:26 PM command: INSERT, rowCount: 1 
2020-01-30T06:17:26.459Z Local: 1/30/2020, 2:17:26 PM command: SELECT, rowCount: 1 
2020-01-30T06:17:26.461Z Local: 1/30/2020, 2:17:26 PM command: INSERT, rowCount: 1 
2020-01-30T06:17:26.464Z Local: 1/30/2020, 2:17:26 PM command: SELECT, rowCount: 8 
2020-01-30T06:19:18.575Z Local: 1/30/2020, 2:19:18 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:19:18.586Z Local: 1/30/2020, 2:19:18 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:19:18.587Z Local: 1/30/2020, 2:19:18 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-30T06:19:18.588Z Local: 1/30/2020, 2:19:18 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('undefined', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('undefined'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-30T06:19:18.589Z Local: 1/30/2020, 2:19:18 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-30T06:19:18.590Z Local: 1/30/2020, 2:19:18 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-30T06:19:18.622Z Local: 1/30/2020, 2:19:18 PM command: DO, rowCount: null 
2020-01-30T06:19:18.629Z Local: 1/30/2020, 2:19:18 PM command: DO, rowCount: null 
2020-01-30T06:19:18.638Z Local: 1/30/2020, 2:19:18 PM command: CREATE, rowCount: null 
2020-01-30T06:19:18.655Z Local: 1/30/2020, 2:19:18 PM Error: error: invalid input syntax for type json 
2020-01-30T06:19:18.678Z Local: 1/30/2020, 2:19:18 PM command: SELECT, rowCount: 1 
2020-01-30T06:19:18.681Z Local: 1/30/2020, 2:19:18 PM command: SELECT, rowCount: 8 
2020-01-30T06:19:43.633Z Local: 1/30/2020, 2:19:43 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:19:43.643Z Local: 1/30/2020, 2:19:43 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-30T06:19:43.642Z Local: 1/30/2020, 2:19:43 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:19:43.644Z Local: 1/30/2020, 2:19:43 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('undefined', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('{}'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-30T06:19:43.646Z Local: 1/30/2020, 2:19:43 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-30T06:19:43.647Z Local: 1/30/2020, 2:19:43 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-30T06:19:43.684Z Local: 1/30/2020, 2:19:43 PM command: DO, rowCount: null 
2020-01-30T06:19:43.690Z Local: 1/30/2020, 2:19:43 PM command: DO, rowCount: null 
2020-01-30T06:19:43.695Z Local: 1/30/2020, 2:19:43 PM command: CREATE, rowCount: null 
2020-01-30T06:19:43.710Z Local: 1/30/2020, 2:19:43 PM Error: error: cannot call json_array_elements on a non-array 
2020-01-30T06:19:43.723Z Local: 1/30/2020, 2:19:43 PM command: SELECT, rowCount: 1 
2020-01-30T06:19:43.733Z Local: 1/30/2020, 2:19:43 PM command: SELECT, rowCount: 8 
2020-01-30T06:19:57.663Z Local: 1/30/2020, 2:19:57 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:19:57.671Z Local: 1/30/2020, 2:19:57 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:19:57.673Z Local: 1/30/2020, 2:19:57 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-30T06:19:57.674Z Local: 1/30/2020, 2:19:57 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('undefined', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[]'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-30T06:19:57.675Z Local: 1/30/2020, 2:19:57 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-30T06:19:57.677Z Local: 1/30/2020, 2:19:57 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-30T06:19:57.710Z Local: 1/30/2020, 2:19:57 PM command: DO, rowCount: null 
2020-01-30T06:19:57.718Z Local: 1/30/2020, 2:19:57 PM command: DO, rowCount: null 
2020-01-30T06:19:57.724Z Local: 1/30/2020, 2:19:57 PM command: CREATE, rowCount: null 
2020-01-30T06:19:57.750Z Local: 1/30/2020, 2:19:57 PM command: INSERT, rowCount: 1 
2020-01-30T06:19:57.752Z Local: 1/30/2020, 2:19:57 PM command: SELECT, rowCount: 1 
2020-01-30T06:19:57.761Z Local: 1/30/2020, 2:19:57 PM command: SELECT, rowCount: 9 
2020-01-30T06:20:31.968Z Local: 1/30/2020, 2:20:31 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:20:31.978Z Local: 1/30/2020, 2:20:31 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:20:31.979Z Local: 1/30/2020, 2:20:31 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-30T06:20:31.981Z Local: 1/30/2020, 2:20:31 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('undefined', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('null'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-30T06:20:31.982Z Local: 1/30/2020, 2:20:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-30T06:20:31.983Z Local: 1/30/2020, 2:20:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-30T06:20:32.015Z Local: 1/30/2020, 2:20:32 PM command: DO, rowCount: null 
2020-01-30T06:20:32.021Z Local: 1/30/2020, 2:20:32 PM command: DO, rowCount: null 
2020-01-30T06:20:32.028Z Local: 1/30/2020, 2:20:32 PM command: CREATE, rowCount: null 
2020-01-30T06:20:32.043Z Local: 1/30/2020, 2:20:32 PM Error: error: cannot call json_array_elements on a scalar 
2020-01-30T06:20:32.059Z Local: 1/30/2020, 2:20:32 PM command: SELECT, rowCount: 1 
2020-01-30T06:20:32.065Z Local: 1/30/2020, 2:20:32 PM command: SELECT, rowCount: 9 
2020-01-30T06:20:45.575Z Local: 1/30/2020, 2:20:45 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:20:45.586Z Local: 1/30/2020, 2:20:45 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-01-30T06:20:45.584Z Local: 1/30/2020, 2:20:45 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-01-30T06:20:45.587Z Local: 1/30/2020, 2:20:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('undefined', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', ARRAY(SELECT json_populate_record(null::Section, json_array_elements('undefined'))), ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))) RETURNING id; 
2020-01-30T06:20:45.589Z Local: 1/30/2020, 2:20:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-01-30T06:20:45.590Z Local: 1/30/2020, 2:20:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-01-30T06:20:45.622Z Local: 1/30/2020, 2:20:45 PM command: DO, rowCount: null 
2020-01-30T06:20:45.628Z Local: 1/30/2020, 2:20:45 PM command: DO, rowCount: null 
2020-01-30T06:20:45.635Z Local: 1/30/2020, 2:20:45 PM command: CREATE, rowCount: null 
2020-01-30T06:20:45.648Z Local: 1/30/2020, 2:20:45 PM Error: error: invalid input syntax for type json 
2020-01-30T06:20:45.664Z Local: 1/30/2020, 2:20:45 PM command: SELECT, rowCount: 1 
2020-01-30T06:20:45.673Z Local: 1/30/2020, 2:20:45 PM command: SELECT, rowCount: 9 
2020-02-03T05:52:32.019Z Local: 2/3/2020, 1:52:32 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T05:52:32.078Z Local: 2/3/2020, 1:52:32 PM Server is listening on port 8000 
2020-02-03T05:52:32.194Z Local: 2/3/2020, 1:52:32 PM command: DO, rowCount: null 
2020-02-03T05:52:32.197Z Local: 2/3/2020, 1:52:32 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T05:52:32.196Z Local: 2/3/2020, 1:52:32 PM Created Producer type 
2020-02-03T05:52:32.211Z Local: 2/3/2020, 1:52:32 PM command: DO, rowCount: null 
2020-02-03T05:52:32.212Z Local: 2/3/2020, 1:52:32 PM Created Spec type 
2020-02-03T05:52:32.213Z Local: 2/3/2020, 1:52:32 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T05:52:32.219Z Local: 2/3/2020, 1:52:32 PM command: CREATE, rowCount: null 
2020-02-03T05:52:32.220Z Local: 2/3/2020, 1:52:32 PM Created items_table 
2020-02-03T05:52:32.222Z Local: 2/3/2020, 1:52:32 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T05:52:43.822Z Local: 2/3/2020, 1:52:43 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T05:52:43.851Z Local: 2/3/2020, 1:52:43 PM command: DO, rowCount: null 
2020-02-03T05:52:43.857Z Local: 2/3/2020, 1:52:43 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T05:52:43.858Z Local: 2/3/2020, 1:52:43 PM command: DO, rowCount: null 
2020-02-03T05:52:43.861Z Local: 2/3/2020, 1:52:43 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T05:52:43.865Z Local: 2/3/2020, 1:52:43 PM command: CREATE, rowCount: null 
2020-02-03T05:52:43.869Z Local: 2/3/2020, 1:52:43 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T05:52:43.929Z Local: 2/3/2020, 1:52:43 PM command: SELECT, rowCount: 1 
2020-02-03T05:52:43.943Z Local: 2/3/2020, 1:52:43 PM Warning: DbItem.insertItem spec = [object Object] is not an Array 
2020-02-03T05:52:43.963Z Local: 2/3/2020, 1:52:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T05:52:44.002Z Local: 2/3/2020, 1:52:44 PM command: SELECT, rowCount: 3 
2020-02-03T05:52:44.012Z Local: 2/3/2020, 1:52:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T05:52:44.020Z Local: 2/3/2020, 1:52:44 PM command: SELECT, rowCount: 122 
2020-02-03T05:52:44.029Z Local: 2/3/2020, 1:52:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T05:52:44.036Z Local: 2/3/2020, 1:52:44 PM command: SELECT, rowCount: 122 
2020-02-03T05:52:44.048Z Local: 2/3/2020, 1:52:44 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T05:52:44.051Z Local: 2/3/2020, 1:52:44 PM command: SELECT, rowCount: 1 
2020-02-03T05:52:44.063Z Local: 2/3/2020, 1:52:44 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T05:52:44.066Z Local: 2/3/2020, 1:52:44 PM command: SELECT, rowCount: 2 
2020-02-03T05:52:44.080Z Local: 2/3/2020, 1:52:44 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T05:52:44.082Z Local: 2/3/2020, 1:52:44 PM command: SELECT, rowCount: 2 
2020-02-03T05:52:44.094Z Local: 2/3/2020, 1:52:44 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T05:52:44.103Z Local: 2/3/2020, 1:52:44 PM command: SELECT, rowCount: 2 
2020-02-03T05:52:44.127Z Local: 2/3/2020, 1:52:44 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T05:52:44.149Z Local: 2/3/2020, 1:52:44 PM command: SELECT, rowCount: 1 
2020-02-03T05:52:44.150Z Local: 2/3/2020, 1:52:44 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T05:52:44.216Z Local: 2/3/2020, 1:52:44 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T05:52:46.208Z Local: 2/3/2020, 1:52:46 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T05:52:46.216Z Local: 2/3/2020, 1:52:46 PM command: SELECT, rowCount: 1 
2020-02-03T05:52:46.226Z Local: 2/3/2020, 1:52:46 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T05:52:46.245Z Local: 2/3/2020, 1:52:46 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T05:52:46.249Z Local: 2/3/2020, 1:52:46 PM command: SELECT, rowCount: 2 
2020-02-03T05:52:46.257Z Local: 2/3/2020, 1:52:46 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T05:52:46.275Z Local: 2/3/2020, 1:52:46 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T05:52:46.284Z Local: 2/3/2020, 1:52:46 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T05:52:46.277Z Local: 2/3/2020, 1:52:46 PM command: SELECT, rowCount: 2 
2020-02-03T05:52:46.297Z Local: 2/3/2020, 1:52:46 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T05:52:46.312Z Local: 2/3/2020, 1:52:46 PM command: SELECT, rowCount: 0 
2020-02-03T05:52:46.316Z Local: 2/3/2020, 1:52:46 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T05:52:46.335Z Local: 2/3/2020, 1:52:46 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T05:52:46.348Z Local: 2/3/2020, 1:52:46 PM command: SELECT, rowCount: 2 
2020-02-03T05:52:46.350Z Local: 2/3/2020, 1:52:46 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T05:52:46.372Z Local: 2/3/2020, 1:52:46 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T05:52:46.405Z Local: 2/3/2020, 1:52:46 PM command: CREATE, rowCount: null 
2020-02-03T05:52:46.419Z Local: 2/3/2020, 1:52:46 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T05:52:46.439Z Local: 2/3/2020, 1:52:46 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T05:52:46.458Z Local: 2/3/2020, 1:52:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T05:52:46.484Z Local: 2/3/2020, 1:52:46 PM command: SELECT, rowCount: 3 
2020-02-03T05:52:46.494Z Local: 2/3/2020, 1:52:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T05:52:46.501Z Local: 2/3/2020, 1:52:46 PM command: SELECT, rowCount: 40 
2020-02-03T05:52:46.506Z Local: 2/3/2020, 1:52:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T05:52:46.514Z Local: 2/3/2020, 1:52:46 PM command: SELECT, rowCount: 40 
2020-02-03T05:52:46.530Z Local: 2/3/2020, 1:52:46 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T05:52:46.539Z Local: 2/3/2020, 1:52:46 PM command: SELECT, rowCount: 1 
2020-02-03T08:08:23.806Z Local: 2/3/2020, 4:08:23 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:08:23.818Z Local: 2/3/2020, 4:08:23 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:08:23.820Z Local: 2/3/2020, 4:08:23 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T08:08:23.824Z Local: 2/3/2020, 4:08:23 PM Warning: DbFarmer.insertFarmer content = undefined is not an Array 
2020-02-03T08:08:23.826Z Local: 2/3/2020, 4:08:23 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', ', Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('undefined'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T08:08:23.828Z Local: 2/3/2020, 4:08:23 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T08:08:23.829Z Local: 2/3/2020, 4:08:23 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T08:08:23.892Z Local: 2/3/2020, 4:08:23 PM command: CREATE, rowCount: null 
2020-02-03T08:08:23.901Z Local: 2/3/2020, 4:08:23 PM command: DO, rowCount: null 
2020-02-03T08:08:23.903Z Local: 2/3/2020, 4:08:23 PM command: DO, rowCount: null 
2020-02-03T08:08:23.941Z Local: 2/3/2020, 4:08:23 PM command: SELECT, rowCount: 1 
2020-02-03T08:08:23.943Z Local: 2/3/2020, 4:08:23 PM command: SELECT, rowCount: 9 
2020-02-03T08:08:23.944Z Local: 2/3/2020, 4:08:23 PM Error: error: invalid input syntax for type json 
2020-02-03T08:09:45.767Z Local: 2/3/2020, 4:09:45 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:09:45.778Z Local: 2/3/2020, 4:09:45 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:09:45.779Z Local: 2/3/2020, 4:09:45 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T08:09:45.781Z Local: 2/3/2020, 4:09:45 PM Warning: DbFarmer.insertFarmer items = null is not an Array 
2020-02-03T08:09:45.782Z Local: 2/3/2020, 4:09:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', ', Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('null'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T08:09:45.784Z Local: 2/3/2020, 4:09:45 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T08:09:45.789Z Local: 2/3/2020, 4:09:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T08:09:45.823Z Local: 2/3/2020, 4:09:45 PM command: DO, rowCount: null 
2020-02-03T08:09:45.829Z Local: 2/3/2020, 4:09:45 PM command: DO, rowCount: null 
2020-02-03T08:09:45.834Z Local: 2/3/2020, 4:09:45 PM command: CREATE, rowCount: null 
2020-02-03T08:09:45.861Z Local: 2/3/2020, 4:09:45 PM command: SELECT, rowCount: 1 
2020-02-03T08:09:45.865Z Local: 2/3/2020, 4:09:45 PM Error: error: cannot call json_array_elements on a scalar 
2020-02-03T08:09:45.873Z Local: 2/3/2020, 4:09:45 PM command: SELECT, rowCount: 9 
2020-02-03T08:10:00.611Z Local: 2/3/2020, 4:10:00 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:10:00.622Z Local: 2/3/2020, 4:10:00 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:10:00.622Z Local: 2/3/2020, 4:10:00 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T08:10:00.624Z Local: 2/3/2020, 4:10:00 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', ', Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T08:10:00.626Z Local: 2/3/2020, 4:10:00 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T08:10:00.630Z Local: 2/3/2020, 4:10:00 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T08:10:00.659Z Local: 2/3/2020, 4:10:00 PM command: DO, rowCount: null 
2020-02-03T08:10:00.667Z Local: 2/3/2020, 4:10:00 PM command: DO, rowCount: null 
2020-02-03T08:10:00.674Z Local: 2/3/2020, 4:10:00 PM command: CREATE, rowCount: null 
2020-02-03T08:10:00.697Z Local: 2/3/2020, 4:10:00 PM command: SELECT, rowCount: 1 
2020-02-03T08:10:00.699Z Local: 2/3/2020, 4:10:00 PM command: INSERT, rowCount: 1 
2020-02-03T08:10:00.710Z Local: 2/3/2020, 4:10:00 PM command: SELECT, rowCount: 10 
2020-02-03T08:10:30.859Z Local: 2/3/2020, 4:10:30 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:10:30.869Z Local: 2/3/2020, 4:10:30 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:10:30.871Z Local: 2/3/2020, 4:10:30 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T08:10:30.872Z Local: 2/3/2020, 4:10:30 PM Warning: DbFarmer.insertFarmer imgs = undefined is not an Array 
2020-02-03T08:10:30.873Z Local: 2/3/2020, 4:10:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', ', Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('undefined'))
        ) RETURNING id; 
2020-02-03T08:10:30.875Z Local: 2/3/2020, 4:10:30 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T08:10:30.881Z Local: 2/3/2020, 4:10:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T08:10:30.913Z Local: 2/3/2020, 4:10:30 PM command: DO, rowCount: null 
2020-02-03T08:10:30.920Z Local: 2/3/2020, 4:10:30 PM command: DO, rowCount: null 
2020-02-03T08:10:30.928Z Local: 2/3/2020, 4:10:30 PM command: CREATE, rowCount: null 
2020-02-03T08:10:30.940Z Local: 2/3/2020, 4:10:30 PM Error: error: invalid input syntax for type json 
2020-02-03T08:10:30.957Z Local: 2/3/2020, 4:10:30 PM command: SELECT, rowCount: 1 
2020-02-03T08:10:30.975Z Local: 2/3/2020, 4:10:30 PM command: SELECT, rowCount: 10 
2020-02-03T08:14:38.499Z Local: 2/3/2020, 4:14:38 PM Warning: test = undefined is not an Array 
2020-02-03T08:34:26.933Z Local: 2/3/2020, 4:34:26 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:34:26.943Z Local: 2/3/2020, 4:34:26 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:34:26.944Z Local: 2/3/2020, 4:34:26 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T08:34:26.946Z Local: 2/3/2020, 4:34:26 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', ', Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('undefined'))
        ) RETURNING id; 
2020-02-03T08:34:26.948Z Local: 2/3/2020, 4:34:26 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T08:34:26.952Z Local: 2/3/2020, 4:34:26 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T08:34:26.981Z Local: 2/3/2020, 4:34:26 PM command: DO, rowCount: null 
2020-02-03T08:34:26.992Z Local: 2/3/2020, 4:34:26 PM command: DO, rowCount: null 
2020-02-03T08:34:27.001Z Local: 2/3/2020, 4:34:27 PM command: CREATE, rowCount: null 
2020-02-03T08:34:27.013Z Local: 2/3/2020, 4:34:27 PM Error: error: invalid input syntax for type json 
2020-02-03T08:34:27.037Z Local: 2/3/2020, 4:34:27 PM command: SELECT, rowCount: 1 
2020-02-03T08:34:27.039Z Local: 2/3/2020, 4:34:27 PM command: SELECT, rowCount: 10 
2020-02-03T08:36:15.511Z Local: 2/3/2020, 4:36:15 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:36:15.521Z Local: 2/3/2020, 4:36:15 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:36:15.522Z Local: 2/3/2020, 4:36:15 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T08:36:15.524Z Local: 2/3/2020, 4:36:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T08:36:15.526Z Local: 2/3/2020, 4:36:15 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T08:36:15.529Z Local: 2/3/2020, 4:36:15 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T08:36:15.559Z Local: 2/3/2020, 4:36:15 PM command: DO, rowCount: null 
2020-02-03T08:36:15.565Z Local: 2/3/2020, 4:36:15 PM command: DO, rowCount: null 
2020-02-03T08:36:15.575Z Local: 2/3/2020, 4:36:15 PM command: CREATE, rowCount: null 
2020-02-03T08:36:15.599Z Local: 2/3/2020, 4:36:15 PM command: SELECT, rowCount: 1 
2020-02-03T08:36:15.602Z Local: 2/3/2020, 4:36:15 PM command: INSERT, rowCount: 1 
2020-02-03T08:36:15.615Z Local: 2/3/2020, 4:36:15 PM command: SELECT, rowCount: 11 
2020-02-03T08:42:10.841Z Local: 2/3/2020, 4:42:10 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:42:10.851Z Local: 2/3/2020, 4:42:10 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T08:42:10.852Z Local: 2/3/2020, 4:42:10 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T08:42:10.854Z Local: 2/3/2020, 4:42:10 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T08:42:10.855Z Local: 2/3/2020, 4:42:10 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T08:42:10.859Z Local: 2/3/2020, 4:42:10 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T08:42:10.890Z Local: 2/3/2020, 4:42:10 PM command: DO, rowCount: null 
2020-02-03T08:42:10.897Z Local: 2/3/2020, 4:42:10 PM command: DO, rowCount: null 
2020-02-03T08:42:10.902Z Local: 2/3/2020, 4:42:10 PM command: CREATE, rowCount: null 
2020-02-03T08:42:10.931Z Local: 2/3/2020, 4:42:10 PM command: SELECT, rowCount: 1 
2020-02-03T08:42:10.933Z Local: 2/3/2020, 4:42:10 PM command: INSERT, rowCount: 1 
2020-02-03T08:42:10.938Z Local: 2/3/2020, 4:42:10 PM command: SELECT, rowCount: 12 
2020-02-03T09:02:45.434Z Local: 2/3/2020, 5:02:45 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:02:45.467Z Local: 2/3/2020, 5:02:45 PM command: DO, rowCount: null 
2020-02-03T09:02:45.477Z Local: 2/3/2020, 5:02:45 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:02:45.481Z Local: 2/3/2020, 5:02:45 PM command: DO, rowCount: null 
2020-02-03T09:02:45.498Z Local: 2/3/2020, 5:02:45 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:02:45.502Z Local: 2/3/2020, 5:02:45 PM command: CREATE, rowCount: null 
2020-02-03T09:02:45.519Z Local: 2/3/2020, 5:02:45 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:02:45.540Z Local: 2/3/2020, 5:02:45 PM command: SELECT, rowCount: 1 
2020-02-03T09:02:45.559Z Local: 2/3/2020, 5:02:45 PM Warning: DbItem.insertItem name = Green Tea is not a String 
2020-02-03T09:02:45.579Z Local: 2/3/2020, 5:02:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:02:45.588Z Local: 2/3/2020, 5:02:45 PM command: SELECT, rowCount: 3 
2020-02-03T09:02:45.590Z Local: 2/3/2020, 5:02:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T09:02:45.595Z Local: 2/3/2020, 5:02:45 PM command: SELECT, rowCount: 122 
2020-02-03T09:02:45.601Z Local: 2/3/2020, 5:02:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T09:02:45.607Z Local: 2/3/2020, 5:02:45 PM command: SELECT, rowCount: 122 
2020-02-03T09:02:45.624Z Local: 2/3/2020, 5:02:45 PM command: SELECT, rowCount: 1 
2020-02-03T09:02:45.615Z Local: 2/3/2020, 5:02:45 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:02:45.649Z Local: 2/3/2020, 5:02:45 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:02:45.637Z Local: 2/3/2020, 5:02:45 PM Warning: DbItem.queryItemByName itemName = Oolong Tea is not a String 
2020-02-03T09:02:45.657Z Local: 2/3/2020, 5:02:45 PM command: SELECT, rowCount: 2 
2020-02-03T09:02:45.672Z Local: 2/3/2020, 5:02:45 PM Warning: DbItem.queryItemByProducerName producerName = dai is not a String 
2020-02-03T09:02:59.713Z Local: 2/3/2020, 5:02:59 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:02:59.747Z Local: 2/3/2020, 5:02:59 PM command: CREATE, rowCount: null 
2020-02-03T09:02:59.758Z Local: 2/3/2020, 5:02:59 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T09:02:59.783Z Local: 2/3/2020, 5:02:59 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T09:02:59.797Z Local: 2/3/2020, 5:02:59 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:02:59.805Z Local: 2/3/2020, 5:02:59 PM command: SELECT, rowCount: 3 
2020-02-03T09:02:59.815Z Local: 2/3/2020, 5:02:59 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T09:02:59.820Z Local: 2/3/2020, 5:02:59 PM command: SELECT, rowCount: 40 
2020-02-03T09:02:59.824Z Local: 2/3/2020, 5:02:59 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T09:02:59.839Z Local: 2/3/2020, 5:02:59 PM command: SELECT, rowCount: 40 
2020-02-03T09:02:59.857Z Local: 2/3/2020, 5:02:59 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T09:02:59.860Z Local: 2/3/2020, 5:02:59 PM command: SELECT, rowCount: 1 
2020-02-03T09:03:11.659Z Local: 2/3/2020, 5:03:11 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:03:11.673Z Local: 2/3/2020, 5:03:11 PM Server is listening on port 8000 
2020-02-03T09:03:11.698Z Local: 2/3/2020, 5:03:11 PM Created Producer type 
2020-02-03T09:03:11.697Z Local: 2/3/2020, 5:03:11 PM command: DO, rowCount: null 
2020-02-03T09:03:11.702Z Local: 2/3/2020, 5:03:11 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:03:11.704Z Local: 2/3/2020, 5:03:11 PM command: DO, rowCount: null 
2020-02-03T09:03:11.705Z Local: 2/3/2020, 5:03:11 PM Created Spec type 
2020-02-03T09:03:11.706Z Local: 2/3/2020, 5:03:11 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:03:11.710Z Local: 2/3/2020, 5:03:11 PM command: CREATE, rowCount: null 
2020-02-03T09:03:11.712Z Local: 2/3/2020, 5:03:11 PM Created items_table 
2020-02-03T09:03:11.713Z Local: 2/3/2020, 5:03:11 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T09:03:15.344Z Local: 2/3/2020, 5:03:15 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:03:15.379Z Local: 2/3/2020, 5:03:15 PM command: DO, rowCount: null 
2020-02-03T09:03:15.393Z Local: 2/3/2020, 5:03:15 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:03:15.394Z Local: 2/3/2020, 5:03:15 PM command: DO, rowCount: null 
2020-02-03T09:03:15.413Z Local: 2/3/2020, 5:03:15 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:03:15.421Z Local: 2/3/2020, 5:03:15 PM command: CREATE, rowCount: null 
2020-02-03T09:03:15.432Z Local: 2/3/2020, 5:03:15 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:03:15.436Z Local: 2/3/2020, 5:03:15 PM command: SELECT, rowCount: 1 
2020-02-03T09:03:15.457Z Local: 2/3/2020, 5:03:15 PM Warning: DbItem.insertItem name = Green Tea is not a String 
2020-02-03T09:03:15.477Z Local: 2/3/2020, 5:03:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:03:15.482Z Local: 2/3/2020, 5:03:15 PM command: SELECT, rowCount: 3 
2020-02-03T09:03:15.488Z Local: 2/3/2020, 5:03:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T09:03:15.499Z Local: 2/3/2020, 5:03:15 PM command: SELECT, rowCount: 122 
2020-02-03T09:03:15.501Z Local: 2/3/2020, 5:03:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T09:03:15.510Z Local: 2/3/2020, 5:03:15 PM command: SELECT, rowCount: 122 
2020-02-03T09:03:15.522Z Local: 2/3/2020, 5:03:15 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:03:15.532Z Local: 2/3/2020, 5:03:15 PM command: SELECT, rowCount: 1 
2020-02-03T09:03:15.544Z Local: 2/3/2020, 5:03:15 PM Warning: DbItem.queryItemByName itemName = Oolong Tea is not a String 
2020-02-03T09:03:15.553Z Local: 2/3/2020, 5:03:15 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:03:15.564Z Local: 2/3/2020, 5:03:15 PM command: SELECT, rowCount: 2 
2020-02-03T09:03:15.577Z Local: 2/3/2020, 5:03:15 PM Warning: DbItem.queryItemByProducerName producerName = dai is not a String 
2020-02-03T09:03:15.612Z Local: 2/3/2020, 5:03:15 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:03:15.618Z Local: 2/3/2020, 5:03:15 PM command: SELECT, rowCount: 1 
2020-02-03T09:03:15.619Z Local: 2/3/2020, 5:03:15 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:03:15.683Z Local: 2/3/2020, 5:03:15 PM Warning: DbItem.insertItem name = Green Tea is not a String 
2020-02-03T09:03:17.675Z Local: 2/3/2020, 5:03:17 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T09:03:17.681Z Local: 2/3/2020, 5:03:17 PM command: SELECT, rowCount: 1 
2020-02-03T09:03:17.689Z Local: 2/3/2020, 5:03:17 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:03:17.713Z Local: 2/3/2020, 5:03:17 PM Warning: DbItem.queryItemByName itemName = Oolong Tea is not a String 
2020-02-03T09:03:19.726Z Local: 2/3/2020, 5:03:19 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:03:19.728Z Local: 2/3/2020, 5:03:19 PM command: SELECT, rowCount: 2 
2020-02-03T09:03:19.736Z Local: 2/3/2020, 5:03:19 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:03:19.759Z Local: 2/3/2020, 5:03:19 PM Warning: DbItem.queryItemByProducerName producerName = Dai is not a String 
2020-02-03T09:03:21.763Z Local: 2/3/2020, 5:03:21 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T09:03:21.771Z Local: 2/3/2020, 5:03:21 PM command: SELECT, rowCount: 2 
2020-02-03T09:03:21.778Z Local: 2/3/2020, 5:03:21 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:03:21.812Z Local: 2/3/2020, 5:03:21 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:03:21.834Z Local: 2/3/2020, 5:03:21 PM command: CREATE, rowCount: null 
2020-02-03T09:03:21.869Z Local: 2/3/2020, 5:03:21 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T09:03:21.883Z Local: 2/3/2020, 5:03:21 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T09:03:21.905Z Local: 2/3/2020, 5:03:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:03:21.910Z Local: 2/3/2020, 5:03:21 PM command: SELECT, rowCount: 3 
2020-02-03T09:03:21.921Z Local: 2/3/2020, 5:03:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T09:03:21.932Z Local: 2/3/2020, 5:03:21 PM command: SELECT, rowCount: 40 
2020-02-03T09:03:21.946Z Local: 2/3/2020, 5:03:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T09:03:21.953Z Local: 2/3/2020, 5:03:21 PM command: SELECT, rowCount: 40 
2020-02-03T09:03:21.967Z Local: 2/3/2020, 5:03:21 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T09:03:21.970Z Local: 2/3/2020, 5:03:21 PM command: SELECT, rowCount: 1 
2020-02-03T09:05:22.141Z Local: 2/3/2020, 5:05:22 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:05:22.130Z Local: 2/3/2020, 5:05:22 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:05:22.143Z Local: 2/3/2020, 5:05:22 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:05:22.144Z Local: 2/3/2020, 5:05:22 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T09:05:22.145Z Local: 2/3/2020, 5:05:22 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T09:05:22.150Z Local: 2/3/2020, 5:05:22 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T09:05:22.182Z Local: 2/3/2020, 5:05:22 PM command: DO, rowCount: null 
2020-02-03T09:05:22.193Z Local: 2/3/2020, 5:05:22 PM command: DO, rowCount: null 
2020-02-03T09:05:22.198Z Local: 2/3/2020, 5:05:22 PM command: CREATE, rowCount: null 
2020-02-03T09:05:22.229Z Local: 2/3/2020, 5:05:22 PM command: SELECT, rowCount: 1 
2020-02-03T09:05:22.231Z Local: 2/3/2020, 5:05:22 PM command: INSERT, rowCount: 1 
2020-02-03T09:05:22.238Z Local: 2/3/2020, 5:05:22 PM command: SELECT, rowCount: 13 
2020-02-03T09:07:13.426Z Local: 2/3/2020, 5:07:13 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:07:13.436Z Local: 2/3/2020, 5:07:13 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:07:13.437Z Local: 2/3/2020, 5:07:13 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:07:13.439Z Local: 2/3/2020, 5:07:13 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T09:07:13.444Z Local: 2/3/2020, 5:07:13 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T09:07:13.448Z Local: 2/3/2020, 5:07:13 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T09:07:13.480Z Local: 2/3/2020, 5:07:13 PM command: DO, rowCount: null 
2020-02-03T09:07:13.486Z Local: 2/3/2020, 5:07:13 PM command: DO, rowCount: null 
2020-02-03T09:07:13.493Z Local: 2/3/2020, 5:07:13 PM command: CREATE, rowCount: null 
2020-02-03T09:07:13.520Z Local: 2/3/2020, 5:07:13 PM command: SELECT, rowCount: 1 
2020-02-03T09:07:13.521Z Local: 2/3/2020, 5:07:13 PM command: INSERT, rowCount: 1 
2020-02-03T09:07:13.534Z Local: 2/3/2020, 5:07:13 PM command: SELECT, rowCount: 14 
2020-02-03T09:10:58.710Z Local: 2/3/2020, 5:10:58 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:10:58.728Z Local: 2/3/2020, 5:10:58 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:10:58.730Z Local: 2/3/2020, 5:10:58 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:10:58.734Z Local: 2/3/2020, 5:10:58 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T09:10:58.737Z Local: 2/3/2020, 5:10:58 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T09:10:58.739Z Local: 2/3/2020, 5:10:58 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T09:10:58.769Z Local: 2/3/2020, 5:10:58 PM command: DO, rowCount: null 
2020-02-03T09:10:58.776Z Local: 2/3/2020, 5:10:58 PM command: DO, rowCount: null 
2020-02-03T09:10:58.784Z Local: 2/3/2020, 5:10:58 PM command: CREATE, rowCount: null 
2020-02-03T09:10:58.812Z Local: 2/3/2020, 5:10:58 PM command: SELECT, rowCount: 1 
2020-02-03T09:10:58.816Z Local: 2/3/2020, 5:10:58 PM command: INSERT, rowCount: 1 
2020-02-03T09:10:58.819Z Local: 2/3/2020, 5:10:58 PM command: SELECT, rowCount: 15 
2020-02-03T09:11:16.520Z Local: 2/3/2020, 5:11:16 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:11:16.533Z Local: 2/3/2020, 5:11:16 PM Server is listening on port 8000 
2020-02-03T09:11:16.556Z Local: 2/3/2020, 5:11:16 PM command: DO, rowCount: null 
2020-02-03T09:11:16.558Z Local: 2/3/2020, 5:11:16 PM Created Producer type 
2020-02-03T09:11:16.562Z Local: 2/3/2020, 5:11:16 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:11:16.564Z Local: 2/3/2020, 5:11:16 PM command: DO, rowCount: null 
2020-02-03T09:11:16.566Z Local: 2/3/2020, 5:11:16 PM Created Spec type 
2020-02-03T09:11:16.568Z Local: 2/3/2020, 5:11:16 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:11:16.572Z Local: 2/3/2020, 5:11:16 PM command: CREATE, rowCount: null 
2020-02-03T09:11:16.574Z Local: 2/3/2020, 5:11:16 PM Created items_table 
2020-02-03T09:11:16.575Z Local: 2/3/2020, 5:11:16 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T09:11:20.479Z Local: 2/3/2020, 5:11:20 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:11:20.514Z Local: 2/3/2020, 5:11:20 PM command: DO, rowCount: null 
2020-02-03T09:11:20.526Z Local: 2/3/2020, 5:11:20 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:11:20.528Z Local: 2/3/2020, 5:11:20 PM command: DO, rowCount: null 
2020-02-03T09:11:20.545Z Local: 2/3/2020, 5:11:20 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:11:20.549Z Local: 2/3/2020, 5:11:20 PM command: CREATE, rowCount: null 
2020-02-03T09:11:20.566Z Local: 2/3/2020, 5:11:20 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:11:20.569Z Local: 2/3/2020, 5:11:20 PM command: SELECT, rowCount: 1 
2020-02-03T09:11:20.590Z Local: 2/3/2020, 5:11:20 PM Warning: DbItem.insertItem spec = [object Object] is not an Array 
2020-02-03T09:11:20.608Z Local: 2/3/2020, 5:11:20 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:11:20.622Z Local: 2/3/2020, 5:11:20 PM command: SELECT, rowCount: 3 
2020-02-03T09:11:20.628Z Local: 2/3/2020, 5:11:20 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T09:11:20.637Z Local: 2/3/2020, 5:11:20 PM command: SELECT, rowCount: 122 
2020-02-03T09:11:20.640Z Local: 2/3/2020, 5:11:20 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T09:11:20.649Z Local: 2/3/2020, 5:11:20 PM command: SELECT, rowCount: 122 
2020-02-03T09:11:20.654Z Local: 2/3/2020, 5:11:20 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:11:20.665Z Local: 2/3/2020, 5:11:20 PM command: SELECT, rowCount: 1 
2020-02-03T09:11:20.675Z Local: 2/3/2020, 5:11:20 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:11:20.687Z Local: 2/3/2020, 5:11:20 PM command: SELECT, rowCount: 2 
2020-02-03T09:11:20.699Z Local: 2/3/2020, 5:11:20 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:11:20.706Z Local: 2/3/2020, 5:11:20 PM command: SELECT, rowCount: 2 
2020-02-03T09:11:20.719Z Local: 2/3/2020, 5:11:20 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T09:11:20.722Z Local: 2/3/2020, 5:11:20 PM command: SELECT, rowCount: 2 
2020-02-03T09:11:20.751Z Local: 2/3/2020, 5:11:20 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:11:20.756Z Local: 2/3/2020, 5:11:20 PM command: SELECT, rowCount: 1 
2020-02-03T09:11:20.757Z Local: 2/3/2020, 5:11:20 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:11:20.801Z Local: 2/3/2020, 5:11:20 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T09:11:22.797Z Local: 2/3/2020, 5:11:22 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T09:11:22.807Z Local: 2/3/2020, 5:11:22 PM command: SELECT, rowCount: 1 
2020-02-03T09:11:22.812Z Local: 2/3/2020, 5:11:22 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:11:22.830Z Local: 2/3/2020, 5:11:22 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:11:22.838Z Local: 2/3/2020, 5:11:22 PM command: SELECT, rowCount: 2 
2020-02-03T09:11:22.839Z Local: 2/3/2020, 5:11:22 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:11:22.859Z Local: 2/3/2020, 5:11:22 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:11:22.866Z Local: 2/3/2020, 5:11:22 PM command: SELECT, rowCount: 2 
2020-02-03T09:11:22.869Z Local: 2/3/2020, 5:11:22 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:11:22.900Z Local: 2/3/2020, 5:11:22 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T09:11:22.901Z Local: 2/3/2020, 5:11:22 PM command: SELECT, rowCount: 0 
2020-02-03T09:11:22.910Z Local: 2/3/2020, 5:11:22 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:11:22.929Z Local: 2/3/2020, 5:11:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T09:11:22.940Z Local: 2/3/2020, 5:11:22 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:11:22.939Z Local: 2/3/2020, 5:11:22 PM command: SELECT, rowCount: 2 
2020-02-03T09:11:22.973Z Local: 2/3/2020, 5:11:22 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:11:22.991Z Local: 2/3/2020, 5:11:22 PM command: CREATE, rowCount: null 
2020-02-03T09:11:23.008Z Local: 2/3/2020, 5:11:23 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T09:11:23.012Z Local: 2/3/2020, 5:11:23 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T09:11:23.030Z Local: 2/3/2020, 5:11:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:11:23.034Z Local: 2/3/2020, 5:11:23 PM command: SELECT, rowCount: 3 
2020-02-03T09:11:23.040Z Local: 2/3/2020, 5:11:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T09:11:23.045Z Local: 2/3/2020, 5:11:23 PM command: SELECT, rowCount: 40 
2020-02-03T09:11:23.052Z Local: 2/3/2020, 5:11:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T09:11:23.063Z Local: 2/3/2020, 5:11:23 PM command: SELECT, rowCount: 40 
2020-02-03T09:11:23.073Z Local: 2/3/2020, 5:11:23 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T09:11:23.082Z Local: 2/3/2020, 5:11:23 PM command: SELECT, rowCount: 1 
2020-02-03T09:19:20.395Z Local: 2/3/2020, 5:19:20 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:19:20.413Z Local: 2/3/2020, 5:19:20 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:19:20.415Z Local: 2/3/2020, 5:19:20 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:19:20.418Z Local: 2/3/2020, 5:19:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T09:19:20.423Z Local: 2/3/2020, 5:19:20 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T09:19:20.425Z Local: 2/3/2020, 5:19:20 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T09:19:20.456Z Local: 2/3/2020, 5:19:20 PM command: DO, rowCount: null 
2020-02-03T09:19:20.463Z Local: 2/3/2020, 5:19:20 PM command: DO, rowCount: null 
2020-02-03T09:19:20.468Z Local: 2/3/2020, 5:19:20 PM command: CREATE, rowCount: null 
2020-02-03T09:19:20.497Z Local: 2/3/2020, 5:19:20 PM command: SELECT, rowCount: 1 
2020-02-03T09:19:20.498Z Local: 2/3/2020, 5:19:20 PM command: INSERT, rowCount: 1 
2020-02-03T09:19:20.506Z Local: 2/3/2020, 5:19:20 PM command: SELECT, rowCount: 16 
2020-02-03T09:21:26.202Z Local: 2/3/2020, 5:21:26 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:21:26.215Z Local: 2/3/2020, 5:21:26 PM Server is listening on port 8000 
2020-02-03T09:21:26.239Z Local: 2/3/2020, 5:21:26 PM command: DO, rowCount: null 
2020-02-03T09:21:26.240Z Local: 2/3/2020, 5:21:26 PM Created Producer type 
2020-02-03T09:21:26.245Z Local: 2/3/2020, 5:21:26 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:21:26.247Z Local: 2/3/2020, 5:21:26 PM command: DO, rowCount: null 
2020-02-03T09:21:26.248Z Local: 2/3/2020, 5:21:26 PM Created Spec type 
2020-02-03T09:21:26.251Z Local: 2/3/2020, 5:21:26 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:21:26.380Z Local: 2/3/2020, 5:21:26 PM command: CREATE, rowCount: null 
2020-02-03T09:21:26.382Z Local: 2/3/2020, 5:21:26 PM Created items_table 
2020-02-03T09:21:26.386Z Local: 2/3/2020, 5:21:26 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T09:21:34.470Z Local: 2/3/2020, 5:21:34 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:21:34.505Z Local: 2/3/2020, 5:21:34 PM command: DO, rowCount: null 
2020-02-03T09:21:34.524Z Local: 2/3/2020, 5:21:34 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:21:34.526Z Local: 2/3/2020, 5:21:34 PM command: DO, rowCount: null 
2020-02-03T09:21:34.536Z Local: 2/3/2020, 5:21:34 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:21:34.540Z Local: 2/3/2020, 5:21:34 PM command: CREATE, rowCount: null 
2020-02-03T09:21:34.556Z Local: 2/3/2020, 5:21:34 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:21:34.566Z Local: 2/3/2020, 5:21:34 PM command: SELECT, rowCount: 1 
2020-02-03T09:21:34.579Z Local: 2/3/2020, 5:21:34 PM Warning: DbItem.insertItem spec = [object Object] is not an Array 
2020-02-03T09:21:34.589Z Local: 2/3/2020, 5:21:34 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:21:34.594Z Local: 2/3/2020, 5:21:34 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:21:36.599Z Local: 2/3/2020, 5:21:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T09:21:36.625Z Local: 2/3/2020, 5:21:36 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:21:38.600Z Local: 2/3/2020, 5:21:38 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T09:21:38.621Z Local: 2/3/2020, 5:21:38 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:21:40.611Z Local: 2/3/2020, 5:21:40 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:21:40.631Z Local: 2/3/2020, 5:21:40 PM command: SELECT, rowCount: 0 
2020-02-03T09:21:42.624Z Local: 2/3/2020, 5:21:42 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:21:42.633Z Local: 2/3/2020, 5:21:42 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:21:44.636Z Local: 2/3/2020, 5:21:44 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:21:44.659Z Local: 2/3/2020, 5:21:44 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:21:46.647Z Local: 2/3/2020, 5:21:46 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T09:21:46.668Z Local: 2/3/2020, 5:21:46 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:21:48.670Z Local: 2/3/2020, 5:21:48 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:21:48.694Z Local: 2/3/2020, 5:21:48 PM command: SELECT, rowCount: 1 
2020-02-03T09:21:48.695Z Local: 2/3/2020, 5:21:48 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:21:48.738Z Local: 2/3/2020, 5:21:48 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T09:21:50.756Z Local: 2/3/2020, 5:21:50 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T09:21:50.769Z Local: 2/3/2020, 5:21:50 PM command: SELECT, rowCount: 0 
2020-02-03T09:21:50.773Z Local: 2/3/2020, 5:21:50 PM Error: TypeError: Cannot read property 'description' of undefined 
2020-02-03T09:21:52.769Z Local: 2/3/2020, 5:21:52 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:21:52.784Z Local: 2/3/2020, 5:21:52 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:21:52.787Z Local: 2/3/2020, 5:21:52 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-03T09:21:54.793Z Local: 2/3/2020, 5:21:54 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:21:54.812Z Local: 2/3/2020, 5:21:54 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:21:54.814Z Local: 2/3/2020, 5:21:54 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-03T09:21:56.808Z Local: 2/3/2020, 5:21:56 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T09:21:56.833Z Local: 2/3/2020, 5:21:56 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:21:56.834Z Local: 2/3/2020, 5:21:56 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-03T09:21:58.832Z Local: 2/3/2020, 5:21:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T09:21:58.864Z Local: 2/3/2020, 5:21:58 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:21:58.866Z Local: 2/3/2020, 5:21:58 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-02-03T09:22:00.846Z Local: 2/3/2020, 5:22:00 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:22:00.869Z Local: 2/3/2020, 5:22:00 PM command: CREATE, rowCount: null 
2020-02-03T09:22:00.885Z Local: 2/3/2020, 5:22:00 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T09:22:00.890Z Local: 2/3/2020, 5:22:00 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T09:22:00.901Z Local: 2/3/2020, 5:22:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:22:00.906Z Local: 2/3/2020, 5:22:00 PM command: SELECT, rowCount: 3 
2020-02-03T09:22:00.911Z Local: 2/3/2020, 5:22:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T09:22:00.916Z Local: 2/3/2020, 5:22:00 PM command: SELECT, rowCount: 40 
2020-02-03T09:22:00.918Z Local: 2/3/2020, 5:22:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T09:22:00.923Z Local: 2/3/2020, 5:22:00 PM command: SELECT, rowCount: 40 
2020-02-03T09:22:00.938Z Local: 2/3/2020, 5:22:00 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T09:22:00.942Z Local: 2/3/2020, 5:22:00 PM command: SELECT, rowCount: 1 
2020-02-03T09:22:12.299Z Local: 2/3/2020, 5:22:12 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:22:12.328Z Local: 2/3/2020, 5:22:12 PM command: DO, rowCount: null 
2020-02-03T09:22:12.333Z Local: 2/3/2020, 5:22:12 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:22:12.335Z Local: 2/3/2020, 5:22:12 PM command: DO, rowCount: null 
2020-02-03T09:22:12.347Z Local: 2/3/2020, 5:22:12 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:22:12.350Z Local: 2/3/2020, 5:22:12 PM command: CREATE, rowCount: null 
2020-02-03T09:22:12.360Z Local: 2/3/2020, 5:22:12 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:22:12.364Z Local: 2/3/2020, 5:22:12 PM command: SELECT, rowCount: 1 
2020-02-03T09:22:12.378Z Local: 2/3/2020, 5:22:12 PM Warning: DbItem.insertItem spec = [object Object] is not an Array 
2020-02-03T09:22:12.395Z Local: 2/3/2020, 5:22:12 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:22:12.407Z Local: 2/3/2020, 5:22:12 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:22:14.398Z Local: 2/3/2020, 5:22:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T09:22:14.415Z Local: 2/3/2020, 5:22:14 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:22:16.403Z Local: 2/3/2020, 5:22:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T09:22:16.424Z Local: 2/3/2020, 5:22:16 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:22:18.415Z Local: 2/3/2020, 5:22:18 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:22:18.434Z Local: 2/3/2020, 5:22:18 PM command: SELECT, rowCount: 0 
2020-02-03T09:22:20.425Z Local: 2/3/2020, 5:22:20 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:22:20.428Z Local: 2/3/2020, 5:22:20 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:22:22.441Z Local: 2/3/2020, 5:22:22 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:22:22.459Z Local: 2/3/2020, 5:22:22 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:22:24.455Z Local: 2/3/2020, 5:22:24 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T09:22:24.480Z Local: 2/3/2020, 5:22:24 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:22:26.474Z Local: 2/3/2020, 5:22:26 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:22:26.492Z Local: 2/3/2020, 5:22:26 PM command: SELECT, rowCount: 1 
2020-02-03T09:22:26.494Z Local: 2/3/2020, 5:22:26 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:22:26.528Z Local: 2/3/2020, 5:22:26 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T09:22:28.562Z Local: 2/3/2020, 5:22:28 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T09:22:28.579Z Local: 2/3/2020, 5:22:28 PM command: SELECT, rowCount: 0 
2020-02-03T09:22:28.581Z Local: 2/3/2020, 5:22:28 PM Error: TypeError: Cannot read property 'description' of undefined 
2020-02-03T09:22:30.573Z Local: 2/3/2020, 5:22:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:22:30.587Z Local: 2/3/2020, 5:22:30 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-03T09:22:30.579Z Local: 2/3/2020, 5:22:30 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:22:32.596Z Local: 2/3/2020, 5:22:32 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:22:32.625Z Local: 2/3/2020, 5:22:32 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:22:32.627Z Local: 2/3/2020, 5:22:32 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-03T09:22:34.614Z Local: 2/3/2020, 5:22:34 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T09:22:34.638Z Local: 2/3/2020, 5:22:34 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:22:34.640Z Local: 2/3/2020, 5:22:34 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-03T09:22:36.627Z Local: 2/3/2020, 5:22:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T09:22:36.645Z Local: 2/3/2020, 5:22:36 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:22:36.646Z Local: 2/3/2020, 5:22:36 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-02-03T09:22:38.636Z Local: 2/3/2020, 5:22:38 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:22:38.656Z Local: 2/3/2020, 5:22:38 PM command: CREATE, rowCount: null 
2020-02-03T09:22:38.681Z Local: 2/3/2020, 5:22:38 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T09:22:38.686Z Local: 2/3/2020, 5:22:38 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T09:22:38.705Z Local: 2/3/2020, 5:22:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:22:38.714Z Local: 2/3/2020, 5:22:38 PM command: SELECT, rowCount: 3 
2020-02-03T09:22:38.722Z Local: 2/3/2020, 5:22:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T09:22:38.726Z Local: 2/3/2020, 5:22:38 PM command: SELECT, rowCount: 40 
2020-02-03T09:22:38.728Z Local: 2/3/2020, 5:22:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T09:22:38.739Z Local: 2/3/2020, 5:22:38 PM command: SELECT, rowCount: 40 
2020-02-03T09:22:38.752Z Local: 2/3/2020, 5:22:38 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T09:22:38.755Z Local: 2/3/2020, 5:22:38 PM command: SELECT, rowCount: 1 
2020-02-03T09:24:47.301Z Local: 2/3/2020, 5:24:47 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:24:47.347Z Local: 2/3/2020, 5:24:47 PM command: DO, rowCount: null 
2020-02-03T09:24:47.359Z Local: 2/3/2020, 5:24:47 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:24:47.366Z Local: 2/3/2020, 5:24:47 PM command: DO, rowCount: null 
2020-02-03T09:24:47.386Z Local: 2/3/2020, 5:24:47 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:24:47.392Z Local: 2/3/2020, 5:24:47 PM command: CREATE, rowCount: null 
2020-02-03T09:24:47.408Z Local: 2/3/2020, 5:24:47 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:24:47.414Z Local: 2/3/2020, 5:24:47 PM command: SELECT, rowCount: 1 
2020-02-03T09:24:47.429Z Local: 2/3/2020, 5:24:47 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', json_populate_record(null::Spec, '[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:24:47.432Z Local: 2/3/2020, 5:24:47 PM Error: error: column "spec" is of type spec[] but expression is of type spec 
2020-02-03T09:24:49.441Z Local: 2/3/2020, 5:24:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:24:49.461Z Local: 2/3/2020, 5:24:49 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:24:51.443Z Local: 2/3/2020, 5:24:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T09:24:51.466Z Local: 2/3/2020, 5:24:51 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:24:53.449Z Local: 2/3/2020, 5:24:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T09:24:53.476Z Local: 2/3/2020, 5:24:53 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:24:55.460Z Local: 2/3/2020, 5:24:55 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:24:55.480Z Local: 2/3/2020, 5:24:55 PM command: SELECT, rowCount: 0 
2020-02-03T09:24:57.476Z Local: 2/3/2020, 5:24:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:24:57.478Z Local: 2/3/2020, 5:24:57 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:24:59.490Z Local: 2/3/2020, 5:24:59 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:24:59.508Z Local: 2/3/2020, 5:24:59 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:25:01.512Z Local: 2/3/2020, 5:25:01 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T09:25:01.541Z Local: 2/3/2020, 5:25:01 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:25:03.538Z Local: 2/3/2020, 5:25:03 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:25:03.557Z Local: 2/3/2020, 5:25:03 PM command: SELECT, rowCount: 1 
2020-02-03T09:25:03.558Z Local: 2/3/2020, 5:25:03 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:25:03.583Z Local: 2/3/2020, 5:25:03 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T09:25:05.602Z Local: 2/3/2020, 5:25:05 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T09:25:05.612Z Local: 2/3/2020, 5:25:05 PM command: SELECT, rowCount: 0 
2020-02-03T09:25:05.614Z Local: 2/3/2020, 5:25:05 PM Error: TypeError: Cannot read property 'description' of undefined 
2020-02-03T09:25:07.613Z Local: 2/3/2020, 5:25:07 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:25:07.621Z Local: 2/3/2020, 5:25:07 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:25:07.627Z Local: 2/3/2020, 5:25:07 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-03T09:25:09.624Z Local: 2/3/2020, 5:25:09 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:25:09.644Z Local: 2/3/2020, 5:25:09 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:25:09.646Z Local: 2/3/2020, 5:25:09 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-03T09:25:11.636Z Local: 2/3/2020, 5:25:11 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T09:25:11.655Z Local: 2/3/2020, 5:25:11 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:25:11.655Z Local: 2/3/2020, 5:25:11 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-03T09:25:13.648Z Local: 2/3/2020, 5:25:13 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    row_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T09:25:13.675Z Local: 2/3/2020, 5:25:13 PM Error: error: function row_to_json(spec[]) does not exist 
2020-02-03T09:25:13.676Z Local: 2/3/2020, 5:25:13 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-02-03T09:25:15.657Z Local: 2/3/2020, 5:25:15 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:25:15.679Z Local: 2/3/2020, 5:25:15 PM command: CREATE, rowCount: null 
2020-02-03T09:25:15.704Z Local: 2/3/2020, 5:25:15 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T09:25:15.708Z Local: 2/3/2020, 5:25:15 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T09:25:15.723Z Local: 2/3/2020, 5:25:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:25:15.727Z Local: 2/3/2020, 5:25:15 PM command: SELECT, rowCount: 3 
2020-02-03T09:25:15.729Z Local: 2/3/2020, 5:25:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T09:25:15.742Z Local: 2/3/2020, 5:25:15 PM command: SELECT, rowCount: 40 
2020-02-03T09:25:15.744Z Local: 2/3/2020, 5:25:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T09:25:15.749Z Local: 2/3/2020, 5:25:15 PM command: SELECT, rowCount: 40 
2020-02-03T09:25:15.758Z Local: 2/3/2020, 5:25:15 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T09:25:15.760Z Local: 2/3/2020, 5:25:15 PM command: SELECT, rowCount: 1 
2020-02-03T09:30:00.806Z Local: 2/3/2020, 5:30:00 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:30:00.819Z Local: 2/3/2020, 5:30:00 PM Server is listening on port 8000 
2020-02-03T09:30:00.843Z Local: 2/3/2020, 5:30:00 PM command: DO, rowCount: null 
2020-02-03T09:30:00.845Z Local: 2/3/2020, 5:30:00 PM Created Producer type 
2020-02-03T09:30:00.848Z Local: 2/3/2020, 5:30:00 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:30:00.850Z Local: 2/3/2020, 5:30:00 PM command: DO, rowCount: null 
2020-02-03T09:30:00.851Z Local: 2/3/2020, 5:30:00 PM Created Spec type 
2020-02-03T09:30:00.852Z Local: 2/3/2020, 5:30:00 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:30:00.856Z Local: 2/3/2020, 5:30:00 PM command: CREATE, rowCount: null 
2020-02-03T09:30:00.858Z Local: 2/3/2020, 5:30:00 PM Created items_table 
2020-02-03T09:30:00.859Z Local: 2/3/2020, 5:30:00 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T09:30:04.119Z Local: 2/3/2020, 5:30:04 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:30:04.154Z Local: 2/3/2020, 5:30:04 PM command: DO, rowCount: null 
2020-02-03T09:30:04.173Z Local: 2/3/2020, 5:30:04 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:30:04.184Z Local: 2/3/2020, 5:30:04 PM command: DO, rowCount: null 
2020-02-03T09:30:04.202Z Local: 2/3/2020, 5:30:04 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:30:04.205Z Local: 2/3/2020, 5:30:04 PM command: CREATE, rowCount: null 
2020-02-03T09:30:04.215Z Local: 2/3/2020, 5:30:04 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:30:04.228Z Local: 2/3/2020, 5:30:04 PM command: SELECT, rowCount: 1 
2020-02-03T09:30:04.247Z Local: 2/3/2020, 5:30:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:30:04.266Z Local: 2/3/2020, 5:30:04 PM command: INSERT, rowCount: 1 
2020-02-03T09:30:04.270Z Local: 2/3/2020, 5:30:04 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:30:04.273Z Local: 2/3/2020, 5:30:04 PM command: SELECT, rowCount: 0 
2020-02-03T09:30:06.274Z Local: 2/3/2020, 5:30:06 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T09:30:06.284Z Local: 2/3/2020, 5:30:06 PM command: SELECT, rowCount: 1 
2020-02-03T09:30:06.292Z Local: 2/3/2020, 5:30:06 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T09:30:06.295Z Local: 2/3/2020, 5:30:06 PM command: SELECT, rowCount: 1 
2020-02-03T09:30:06.306Z Local: 2/3/2020, 5:30:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:30:06.317Z Local: 2/3/2020, 5:30:06 PM command: SELECT, rowCount: 0 
2020-02-03T09:30:08.319Z Local: 2/3/2020, 5:30:08 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:30:08.322Z Local: 2/3/2020, 5:30:08 PM command: SELECT, rowCount: 0 
2020-02-03T09:30:08.338Z Local: 2/3/2020, 5:30:08 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:30:08.340Z Local: 2/3/2020, 5:30:08 PM command: SELECT, rowCount: 0 
2020-02-03T09:30:08.350Z Local: 2/3/2020, 5:30:08 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T09:30:08.352Z Local: 2/3/2020, 5:30:08 PM command: SELECT, rowCount: 0 
2020-02-03T09:30:08.376Z Local: 2/3/2020, 5:30:08 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:30:08.396Z Local: 2/3/2020, 5:30:08 PM command: SELECT, rowCount: 1 
2020-02-03T09:30:08.398Z Local: 2/3/2020, 5:30:08 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:30:08.443Z Local: 2/3/2020, 5:30:08 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T09:30:10.438Z Local: 2/3/2020, 5:30:10 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T09:30:10.443Z Local: 2/3/2020, 5:30:10 PM command: SELECT, rowCount: 0 
2020-02-03T09:30:10.452Z Local: 2/3/2020, 5:30:10 PM Error: TypeError: Cannot read property 'description' of undefined 
2020-02-03T09:30:12.448Z Local: 2/3/2020, 5:30:12 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:30:12.452Z Local: 2/3/2020, 5:30:12 PM command: SELECT, rowCount: 0 
2020-02-03T09:30:12.453Z Local: 2/3/2020, 5:30:12 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:30:12.477Z Local: 2/3/2020, 5:30:12 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:30:12.486Z Local: 2/3/2020, 5:30:12 PM command: SELECT, rowCount: 0 
2020-02-03T09:30:12.487Z Local: 2/3/2020, 5:30:12 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:30:12.505Z Local: 2/3/2020, 5:30:12 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T09:30:12.507Z Local: 2/3/2020, 5:30:12 PM command: SELECT, rowCount: 0 
2020-02-03T09:30:12.508Z Local: 2/3/2020, 5:30:12 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:30:12.533Z Local: 2/3/2020, 5:30:12 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T09:30:12.536Z Local: 2/3/2020, 5:30:12 PM command: SELECT, rowCount: 0 
2020-02-03T09:30:12.541Z Local: 2/3/2020, 5:30:12 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:30:14.542Z Local: 2/3/2020, 5:30:14 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:30:14.560Z Local: 2/3/2020, 5:30:14 PM command: CREATE, rowCount: null 
2020-02-03T09:30:14.573Z Local: 2/3/2020, 5:30:14 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T09:30:14.578Z Local: 2/3/2020, 5:30:14 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T09:30:14.594Z Local: 2/3/2020, 5:30:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:30:14.603Z Local: 2/3/2020, 5:30:14 PM command: SELECT, rowCount: 3 
2020-02-03T09:30:14.613Z Local: 2/3/2020, 5:30:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T09:30:14.618Z Local: 2/3/2020, 5:30:14 PM command: SELECT, rowCount: 40 
2020-02-03T09:30:14.625Z Local: 2/3/2020, 5:30:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T09:30:14.631Z Local: 2/3/2020, 5:30:14 PM command: SELECT, rowCount: 40 
2020-02-03T09:30:14.647Z Local: 2/3/2020, 5:30:14 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T09:30:14.654Z Local: 2/3/2020, 5:30:14 PM command: SELECT, rowCount: 1 
2020-02-03T09:31:43.664Z Local: 2/3/2020, 5:31:43 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:31:43.709Z Local: 2/3/2020, 5:31:43 PM command: INSERT, rowCount: 1 
2020-02-03T09:32:43.156Z Local: 2/3/2020, 5:32:43 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:32:43.168Z Local: 2/3/2020, 5:32:43 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '1'; 
2020-02-03T09:32:43.199Z Local: 2/3/2020, 5:32:43 PM command: SELECT, rowCount: 1 
2020-02-03T09:32:43.204Z Local: 2/3/2020, 5:32:43 PM command: SELECT, rowCount: 1 
2020-02-03T09:33:44.843Z Local: 2/3/2020, 5:33:44 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:33:44.852Z Local: 2/3/2020, 5:33:44 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '1'; 
2020-02-03T09:33:44.901Z Local: 2/3/2020, 5:33:44 PM command: SELECT, rowCount: 1 
2020-02-03T09:33:44.908Z Local: 2/3/2020, 5:33:44 PM command: SELECT, rowCount: 1 
2020-02-03T09:35:44.151Z Local: 2/3/2020, 5:35:44 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:35:44.205Z Local: 2/3/2020, 5:35:44 PM command: INSERT, rowCount: 1 
2020-02-03T09:36:08.895Z Local: 2/3/2020, 5:36:08 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:36:08.946Z Local: 2/3/2020, 5:36:08 PM command: INSERT, rowCount: 1 
2020-02-03T09:36:42.425Z Local: 2/3/2020, 5:36:42 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:36:42.472Z Local: 2/3/2020, 5:36:42 PM command: INSERT, rowCount: 1 
2020-02-03T09:37:17.805Z Local: 2/3/2020, 5:37:17 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:37:17.815Z Local: 2/3/2020, 5:37:17 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:37:17.817Z Local: 2/3/2020, 5:37:17 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:37:17.818Z Local: 2/3/2020, 5:37:17 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:37:17.820Z Local: 2/3/2020, 5:37:17 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:37:17.821Z Local: 2/3/2020, 5:37:17 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:37:17.822Z Local: 2/3/2020, 5:37:17 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:37:17.829Z Local: 2/3/2020, 5:37:17 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:37:17.885Z Local: 2/3/2020, 5:37:17 PM command: INSERT, rowCount: 1 
2020-02-03T09:37:17.890Z Local: 2/3/2020, 5:37:17 PM command: INSERT, rowCount: 1 
2020-02-03T09:37:17.906Z Local: 2/3/2020, 5:37:17 PM command: INSERT, rowCount: 1 
2020-02-03T09:37:17.917Z Local: 2/3/2020, 5:37:17 PM command: INSERT, rowCount: 1 
2020-02-03T09:37:17.919Z Local: 2/3/2020, 5:37:17 PM command: INSERT, rowCount: 1 
2020-02-03T09:37:17.933Z Local: 2/3/2020, 5:37:17 PM command: INSERT, rowCount: 1 
2020-02-03T09:37:17.945Z Local: 2/3/2020, 5:37:17 PM command: INSERT, rowCount: 1 
2020-02-03T09:37:17.957Z Local: 2/3/2020, 5:37:17 PM command: INSERT, rowCount: 1 
2020-02-03T09:37:46.732Z Local: 2/3/2020, 5:37:46 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:37:46.768Z Local: 2/3/2020, 5:37:46 PM command: DO, rowCount: null 
2020-02-03T09:37:46.772Z Local: 2/3/2020, 5:37:46 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:37:46.775Z Local: 2/3/2020, 5:37:46 PM command: DO, rowCount: null 
2020-02-03T09:37:46.783Z Local: 2/3/2020, 5:37:46 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:37:46.786Z Local: 2/3/2020, 5:37:46 PM command: CREATE, rowCount: null 
2020-02-03T09:37:46.788Z Local: 2/3/2020, 5:37:46 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:37:46.806Z Local: 2/3/2020, 5:37:46 PM command: SELECT, rowCount: 1 
2020-02-03T09:37:46.813Z Local: 2/3/2020, 5:37:46 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:37:46.829Z Local: 2/3/2020, 5:37:46 PM command: INSERT, rowCount: 1 
2020-02-03T09:37:46.831Z Local: 2/3/2020, 5:37:46 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:37:46.844Z Local: 2/3/2020, 5:37:46 PM command: SELECT, rowCount: 3 
2020-02-03T09:37:46.845Z Local: 2/3/2020, 5:37:46 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T09:37:46.862Z Local: 2/3/2020, 5:37:46 PM command: SELECT, rowCount: 14 
2020-02-03T09:37:46.864Z Local: 2/3/2020, 5:37:46 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T09:37:46.881Z Local: 2/3/2020, 5:37:46 PM command: SELECT, rowCount: 14 
2020-02-03T09:37:46.882Z Local: 2/3/2020, 5:37:46 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:37:46.888Z Local: 2/3/2020, 5:37:46 PM command: SELECT, rowCount: 1 
2020-02-03T09:37:46.897Z Local: 2/3/2020, 5:37:46 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:37:46.902Z Local: 2/3/2020, 5:37:46 PM command: SELECT, rowCount: 0 
2020-02-03T09:37:46.911Z Local: 2/3/2020, 5:37:46 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:37:46.917Z Local: 2/3/2020, 5:37:46 PM command: SELECT, rowCount: 0 
2020-02-03T09:37:46.918Z Local: 2/3/2020, 5:37:46 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T09:37:46.930Z Local: 2/3/2020, 5:37:46 PM command: SELECT, rowCount: 0 
2020-02-03T09:37:46.941Z Local: 2/3/2020, 5:37:46 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:37:46.965Z Local: 2/3/2020, 5:37:46 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:37:46.963Z Local: 2/3/2020, 5:37:46 PM command: SELECT, rowCount: 1 
2020-02-03T09:37:46.980Z Local: 2/3/2020, 5:37:46 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T09:37:48.983Z Local: 2/3/2020, 5:37:48 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T09:37:48.996Z Local: 2/3/2020, 5:37:48 PM command: SELECT, rowCount: 1 
2020-02-03T09:37:49.001Z Local: 2/3/2020, 5:37:49 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:37:49.014Z Local: 2/3/2020, 5:37:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:37:49.016Z Local: 2/3/2020, 5:37:49 PM command: SELECT, rowCount: 0 
2020-02-03T09:37:49.024Z Local: 2/3/2020, 5:37:49 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:37:49.038Z Local: 2/3/2020, 5:37:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:37:49.047Z Local: 2/3/2020, 5:37:49 PM command: SELECT, rowCount: 0 
2020-02-03T09:37:49.049Z Local: 2/3/2020, 5:37:49 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:37:49.065Z Local: 2/3/2020, 5:37:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T09:37:49.067Z Local: 2/3/2020, 5:37:49 PM command: SELECT, rowCount: 0 
2020-02-03T09:37:49.077Z Local: 2/3/2020, 5:37:49 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:37:49.095Z Local: 2/3/2020, 5:37:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T09:37:49.098Z Local: 2/3/2020, 5:37:49 PM command: SELECT, rowCount: 2 
2020-02-03T09:37:49.116Z Local: 2/3/2020, 5:37:49 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:37:49.135Z Local: 2/3/2020, 5:37:49 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:37:49.154Z Local: 2/3/2020, 5:37:49 PM command: CREATE, rowCount: null 
2020-02-03T09:37:49.158Z Local: 2/3/2020, 5:37:49 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T09:37:49.161Z Local: 2/3/2020, 5:37:49 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T09:37:49.163Z Local: 2/3/2020, 5:37:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:37:49.166Z Local: 2/3/2020, 5:37:49 PM command: SELECT, rowCount: 3 
2020-02-03T09:37:49.168Z Local: 2/3/2020, 5:37:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T09:37:49.172Z Local: 2/3/2020, 5:37:49 PM command: SELECT, rowCount: 40 
2020-02-03T09:37:49.173Z Local: 2/3/2020, 5:37:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T09:37:49.178Z Local: 2/3/2020, 5:37:49 PM command: SELECT, rowCount: 40 
2020-02-03T09:37:49.189Z Local: 2/3/2020, 5:37:49 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T09:37:49.191Z Local: 2/3/2020, 5:37:49 PM command: SELECT, rowCount: 1 
2020-02-03T09:38:10.046Z Local: 2/3/2020, 5:38:10 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:38:10.078Z Local: 2/3/2020, 5:38:10 PM command: DO, rowCount: null 
2020-02-03T09:38:10.082Z Local: 2/3/2020, 5:38:10 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:38:10.084Z Local: 2/3/2020, 5:38:10 PM command: DO, rowCount: null 
2020-02-03T09:38:10.087Z Local: 2/3/2020, 5:38:10 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:38:10.092Z Local: 2/3/2020, 5:38:10 PM command: CREATE, rowCount: null 
2020-02-03T09:38:10.094Z Local: 2/3/2020, 5:38:10 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:38:10.098Z Local: 2/3/2020, 5:38:10 PM command: SELECT, rowCount: 1 
2020-02-03T09:38:10.105Z Local: 2/3/2020, 5:38:10 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:38:10.115Z Local: 2/3/2020, 5:38:10 PM command: INSERT, rowCount: 1 
2020-02-03T09:38:10.125Z Local: 2/3/2020, 5:38:10 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:38:10.128Z Local: 2/3/2020, 5:38:10 PM command: SELECT, rowCount: 3 
2020-02-03T09:38:10.129Z Local: 2/3/2020, 5:38:10 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T09:38:10.133Z Local: 2/3/2020, 5:38:10 PM command: SELECT, rowCount: 15 
2020-02-03T09:38:10.138Z Local: 2/3/2020, 5:38:10 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T09:38:10.141Z Local: 2/3/2020, 5:38:10 PM command: SELECT, rowCount: 15 
2020-02-03T09:38:10.143Z Local: 2/3/2020, 5:38:10 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:38:10.145Z Local: 2/3/2020, 5:38:10 PM command: SELECT, rowCount: 1 
2020-02-03T09:38:10.152Z Local: 2/3/2020, 5:38:10 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:38:10.154Z Local: 2/3/2020, 5:38:10 PM command: SELECT, rowCount: 0 
2020-02-03T09:38:10.156Z Local: 2/3/2020, 5:38:10 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:38:10.157Z Local: 2/3/2020, 5:38:10 PM command: SELECT, rowCount: 0 
2020-02-03T09:38:10.160Z Local: 2/3/2020, 5:38:10 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T09:38:10.168Z Local: 2/3/2020, 5:38:10 PM command: SELECT, rowCount: 0 
2020-02-03T09:38:10.178Z Local: 2/3/2020, 5:38:10 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:38:10.199Z Local: 2/3/2020, 5:38:10 PM command: SELECT, rowCount: 1 
2020-02-03T09:38:10.201Z Local: 2/3/2020, 5:38:10 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:38:10.218Z Local: 2/3/2020, 5:38:10 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T09:38:12.220Z Local: 2/3/2020, 5:38:12 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T09:38:12.225Z Local: 2/3/2020, 5:38:12 PM command: SELECT, rowCount: 1 
2020-02-03T09:38:12.238Z Local: 2/3/2020, 5:38:12 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:38:12.248Z Local: 2/3/2020, 5:38:12 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:38:12.258Z Local: 2/3/2020, 5:38:12 PM command: SELECT, rowCount: 0 
2020-02-03T09:38:12.259Z Local: 2/3/2020, 5:38:12 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:38:12.266Z Local: 2/3/2020, 5:38:12 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:38:12.274Z Local: 2/3/2020, 5:38:12 PM command: SELECT, rowCount: 0 
2020-02-03T09:38:12.275Z Local: 2/3/2020, 5:38:12 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:38:12.291Z Local: 2/3/2020, 5:38:12 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T09:38:12.293Z Local: 2/3/2020, 5:38:12 PM command: SELECT, rowCount: 0 
2020-02-03T09:38:12.304Z Local: 2/3/2020, 5:38:12 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:38:12.311Z Local: 2/3/2020, 5:38:12 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T09:38:12.326Z Local: 2/3/2020, 5:38:12 PM command: SELECT, rowCount: 2 
2020-02-03T09:38:12.327Z Local: 2/3/2020, 5:38:12 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:38:12.333Z Local: 2/3/2020, 5:38:12 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:38:12.352Z Local: 2/3/2020, 5:38:12 PM command: CREATE, rowCount: null 
2020-02-03T09:38:12.356Z Local: 2/3/2020, 5:38:12 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T09:38:12.359Z Local: 2/3/2020, 5:38:12 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T09:38:12.360Z Local: 2/3/2020, 5:38:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:38:12.363Z Local: 2/3/2020, 5:38:12 PM command: SELECT, rowCount: 3 
2020-02-03T09:38:12.367Z Local: 2/3/2020, 5:38:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T09:38:12.372Z Local: 2/3/2020, 5:38:12 PM command: SELECT, rowCount: 40 
2020-02-03T09:38:12.373Z Local: 2/3/2020, 5:38:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T09:38:12.377Z Local: 2/3/2020, 5:38:12 PM command: SELECT, rowCount: 40 
2020-02-03T09:38:12.379Z Local: 2/3/2020, 5:38:12 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T09:38:12.381Z Local: 2/3/2020, 5:38:12 PM command: SELECT, rowCount: 1 
2020-02-03T09:40:06.852Z Local: 2/3/2020, 5:40:06 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:40:06.882Z Local: 2/3/2020, 5:40:06 PM command: DO, rowCount: null 
2020-02-03T09:40:06.885Z Local: 2/3/2020, 5:40:06 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:40:06.886Z Local: 2/3/2020, 5:40:06 PM command: DO, rowCount: null 
2020-02-03T09:40:06.888Z Local: 2/3/2020, 5:40:06 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:40:06.890Z Local: 2/3/2020, 5:40:06 PM command: CREATE, rowCount: null 
2020-02-03T09:40:06.898Z Local: 2/3/2020, 5:40:06 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:40:06.902Z Local: 2/3/2020, 5:40:06 PM command: SELECT, rowCount: 1 
2020-02-03T09:40:06.904Z Local: 2/3/2020, 5:40:06 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:40:06.920Z Local: 2/3/2020, 5:40:06 PM command: INSERT, rowCount: 1 
2020-02-03T09:40:06.922Z Local: 2/3/2020, 5:40:06 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:40:06.929Z Local: 2/3/2020, 5:40:06 PM command: SELECT, rowCount: 3 
2020-02-03T09:40:06.931Z Local: 2/3/2020, 5:40:06 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T09:40:06.934Z Local: 2/3/2020, 5:40:06 PM command: SELECT, rowCount: 16 
2020-02-03T09:40:06.939Z Local: 2/3/2020, 5:40:06 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T09:40:06.942Z Local: 2/3/2020, 5:40:06 PM command: SELECT, rowCount: 16 
2020-02-03T09:40:06.945Z Local: 2/3/2020, 5:40:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:40:06.947Z Local: 2/3/2020, 5:40:06 PM command: SELECT, rowCount: 1 
2020-02-03T09:40:06.952Z Local: 2/3/2020, 5:40:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:40:06.954Z Local: 2/3/2020, 5:40:06 PM command: SELECT, rowCount: 0 
2020-02-03T09:40:06.956Z Local: 2/3/2020, 5:40:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:40:06.958Z Local: 2/3/2020, 5:40:06 PM command: SELECT, rowCount: 0 
2020-02-03T09:40:06.967Z Local: 2/3/2020, 5:40:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T09:40:06.968Z Local: 2/3/2020, 5:40:06 PM command: SELECT, rowCount: 0 
2020-02-03T09:40:06.978Z Local: 2/3/2020, 5:40:06 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:40:06.999Z Local: 2/3/2020, 5:40:06 PM command: SELECT, rowCount: 1 
2020-02-03T09:40:07.000Z Local: 2/3/2020, 5:40:07 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:40:07.018Z Local: 2/3/2020, 5:40:07 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T09:40:09.021Z Local: 2/3/2020, 5:40:09 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T09:40:09.026Z Local: 2/3/2020, 5:40:09 PM command: SELECT, rowCount: 1 
2020-02-03T09:40:09.028Z Local: 2/3/2020, 5:40:09 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:40:09.051Z Local: 2/3/2020, 5:40:09 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:40:09.052Z Local: 2/3/2020, 5:40:09 PM command: SELECT, rowCount: 0 
2020-02-03T09:40:09.065Z Local: 2/3/2020, 5:40:09 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:40:09.076Z Local: 2/3/2020, 5:40:09 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:40:09.078Z Local: 2/3/2020, 5:40:09 PM command: SELECT, rowCount: 0 
2020-02-03T09:40:09.087Z Local: 2/3/2020, 5:40:09 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:40:09.098Z Local: 2/3/2020, 5:40:09 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T09:40:09.101Z Local: 2/3/2020, 5:40:09 PM command: SELECT, rowCount: 0 
2020-02-03T09:40:09.116Z Local: 2/3/2020, 5:40:09 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:40:09.126Z Local: 2/3/2020, 5:40:09 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T09:40:09.130Z Local: 2/3/2020, 5:40:09 PM command: SELECT, rowCount: 2 
2020-02-03T09:40:09.137Z Local: 2/3/2020, 5:40:09 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:40:09.147Z Local: 2/3/2020, 5:40:09 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:40:09.168Z Local: 2/3/2020, 5:40:09 PM command: CREATE, rowCount: null 
2020-02-03T09:40:09.170Z Local: 2/3/2020, 5:40:09 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T09:40:09.173Z Local: 2/3/2020, 5:40:09 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T09:40:09.175Z Local: 2/3/2020, 5:40:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:40:09.179Z Local: 2/3/2020, 5:40:09 PM command: SELECT, rowCount: 3 
2020-02-03T09:40:09.183Z Local: 2/3/2020, 5:40:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T09:40:09.186Z Local: 2/3/2020, 5:40:09 PM command: SELECT, rowCount: 40 
2020-02-03T09:40:09.187Z Local: 2/3/2020, 5:40:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T09:40:09.191Z Local: 2/3/2020, 5:40:09 PM command: SELECT, rowCount: 40 
2020-02-03T09:40:09.204Z Local: 2/3/2020, 5:40:09 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T09:40:09.206Z Local: 2/3/2020, 5:40:09 PM command: SELECT, rowCount: 1 
2020-02-03T09:41:27.887Z Local: 2/3/2020, 5:41:27 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:41:27.919Z Local: 2/3/2020, 5:41:27 PM command: DO, rowCount: null 
2020-02-03T09:41:27.923Z Local: 2/3/2020, 5:41:27 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:41:27.925Z Local: 2/3/2020, 5:41:27 PM command: DO, rowCount: null 
2020-02-03T09:41:27.927Z Local: 2/3/2020, 5:41:27 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:41:27.930Z Local: 2/3/2020, 5:41:27 PM command: CREATE, rowCount: null 
2020-02-03T09:41:27.937Z Local: 2/3/2020, 5:41:27 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:41:27.941Z Local: 2/3/2020, 5:41:27 PM command: SELECT, rowCount: 1 
2020-02-03T09:41:27.944Z Local: 2/3/2020, 5:41:27 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T09:41:27.962Z Local: 2/3/2020, 5:41:27 PM command: INSERT, rowCount: 1 
2020-02-03T09:41:27.965Z Local: 2/3/2020, 5:41:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:41:27.971Z Local: 2/3/2020, 5:41:27 PM command: SELECT, rowCount: 3 
2020-02-03T09:41:27.972Z Local: 2/3/2020, 5:41:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T09:41:27.975Z Local: 2/3/2020, 5:41:27 PM command: SELECT, rowCount: 17 
2020-02-03T09:41:27.978Z Local: 2/3/2020, 5:41:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T09:41:27.981Z Local: 2/3/2020, 5:41:27 PM command: SELECT, rowCount: 17 
2020-02-03T09:41:27.987Z Local: 2/3/2020, 5:41:27 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:41:27.989Z Local: 2/3/2020, 5:41:27 PM command: SELECT, rowCount: 1 
2020-02-03T09:41:27.991Z Local: 2/3/2020, 5:41:27 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:41:27.993Z Local: 2/3/2020, 5:41:27 PM command: SELECT, rowCount: 0 
2020-02-03T09:41:28.000Z Local: 2/3/2020, 5:41:28 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:41:28.002Z Local: 2/3/2020, 5:41:28 PM command: SELECT, rowCount: 0 
2020-02-03T09:41:28.004Z Local: 2/3/2020, 5:41:28 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T09:41:28.005Z Local: 2/3/2020, 5:41:28 PM command: SELECT, rowCount: 0 
2020-02-03T09:41:28.021Z Local: 2/3/2020, 5:41:28 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T09:41:28.042Z Local: 2/3/2020, 5:41:28 PM command: SELECT, rowCount: 1 
2020-02-03T09:41:28.045Z Local: 2/3/2020, 5:41:28 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:41:28.062Z Local: 2/3/2020, 5:41:28 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T09:41:30.064Z Local: 2/3/2020, 5:41:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T09:41:30.082Z Local: 2/3/2020, 5:41:30 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:41:30.069Z Local: 2/3/2020, 5:41:30 PM command: SELECT, rowCount: 1 
2020-02-03T09:41:30.091Z Local: 2/3/2020, 5:41:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T09:41:30.101Z Local: 2/3/2020, 5:41:30 PM command: SELECT, rowCount: 0 
2020-02-03T09:41:30.102Z Local: 2/3/2020, 5:41:30 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:41:30.112Z Local: 2/3/2020, 5:41:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T09:41:30.114Z Local: 2/3/2020, 5:41:30 PM command: SELECT, rowCount: 0 
2020-02-03T09:41:30.119Z Local: 2/3/2020, 5:41:30 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:41:30.137Z Local: 2/3/2020, 5:41:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T09:41:30.149Z Local: 2/3/2020, 5:41:30 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:41:30.139Z Local: 2/3/2020, 5:41:30 PM command: SELECT, rowCount: 0 
2020-02-03T09:41:30.162Z Local: 2/3/2020, 5:41:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T09:41:30.171Z Local: 2/3/2020, 5:41:30 PM command: SELECT, rowCount: 2 
2020-02-03T09:41:30.172Z Local: 2/3/2020, 5:41:30 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T09:41:30.188Z Local: 2/3/2020, 5:41:30 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T09:41:30.205Z Local: 2/3/2020, 5:41:30 PM command: CREATE, rowCount: null 
2020-02-03T09:41:30.207Z Local: 2/3/2020, 5:41:30 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T09:41:30.211Z Local: 2/3/2020, 5:41:30 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T09:41:30.213Z Local: 2/3/2020, 5:41:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T09:41:30.216Z Local: 2/3/2020, 5:41:30 PM command: SELECT, rowCount: 3 
2020-02-03T09:41:30.218Z Local: 2/3/2020, 5:41:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T09:41:30.221Z Local: 2/3/2020, 5:41:30 PM command: SELECT, rowCount: 40 
2020-02-03T09:41:30.223Z Local: 2/3/2020, 5:41:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T09:41:30.227Z Local: 2/3/2020, 5:41:30 PM command: SELECT, rowCount: 40 
2020-02-03T09:41:30.229Z Local: 2/3/2020, 5:41:30 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T09:41:30.231Z Local: 2/3/2020, 5:41:30 PM command: SELECT, rowCount: 1 
2020-02-03T09:44:23.937Z Local: 2/3/2020, 5:44:23 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:44:23.952Z Local: 2/3/2020, 5:44:23 PM Server is listening on port 8000 
2020-02-03T09:44:23.981Z Local: 2/3/2020, 5:44:23 PM command: DO, rowCount: null 
2020-02-03T09:44:23.987Z Local: 2/3/2020, 5:44:23 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T09:44:23.983Z Local: 2/3/2020, 5:44:23 PM Created Producer type 
2020-02-03T09:44:23.989Z Local: 2/3/2020, 5:44:23 PM command: DO, rowCount: null 
2020-02-03T09:44:23.990Z Local: 2/3/2020, 5:44:23 PM Created Spec type 
2020-02-03T09:44:23.992Z Local: 2/3/2020, 5:44:23 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T09:44:23.996Z Local: 2/3/2020, 5:44:23 PM command: CREATE, rowCount: null 
2020-02-03T09:44:23.998Z Local: 2/3/2020, 5:44:23 PM Created items_table 
2020-02-03T09:44:23.999Z Local: 2/3/2020, 5:44:23 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T09:45:15.067Z Local: 2/3/2020, 5:45:15 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T09:46:05.587Z Local: 2/3/2020, 5:46:05 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T09:46:05.640Z Local: 2/3/2020, 5:46:05 PM command: SELECT, rowCount: 1 
2020-02-03T09:46:05.645Z Local: 2/3/2020, 5:46:05 PM Sending 1 rows to ::1 with  
2020-02-03T10:51:46.437Z Local: 2/3/2020, 6:51:46 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T10:52:27.400Z Local: 2/3/2020, 6:52:27 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T10:52:27.412Z Local: 2/3/2020, 6:52:27 PM Server is listening on port 8000 
2020-02-03T10:52:27.461Z Local: 2/3/2020, 6:52:27 PM command: DO, rowCount: null 
2020-02-03T10:52:27.463Z Local: 2/3/2020, 6:52:27 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T10:52:27.462Z Local: 2/3/2020, 6:52:27 PM Created Producer type 
2020-02-03T10:52:27.465Z Local: 2/3/2020, 6:52:27 PM command: DO, rowCount: null 
2020-02-03T10:52:27.466Z Local: 2/3/2020, 6:52:27 PM Created Spec type 
2020-02-03T10:52:27.466Z Local: 2/3/2020, 6:52:27 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T10:52:27.472Z Local: 2/3/2020, 6:52:27 PM command: CREATE, rowCount: null 
2020-02-03T10:52:27.474Z Local: 2/3/2020, 6:52:27 PM Created items_table 
2020-02-03T10:52:27.475Z Local: 2/3/2020, 6:52:27 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T10:52:30.398Z Local: 2/3/2020, 6:52:30 PM Warning: DbItem.insertItem price = 500 is not a Number 
2020-02-03T10:53:49.039Z Local: 2/3/2020, 6:53:49 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T10:53:49.097Z Local: 2/3/2020, 6:53:49 PM command: INSERT, rowCount: 1 
2020-02-03T10:54:53.253Z Local: 2/3/2020, 6:54:53 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T10:54:53.268Z Local: 2/3/2020, 6:54:53 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T10:54:53.272Z Local: 2/3/2020, 6:54:53 PM Server is listening on port 8000 
2020-02-03T10:54:53.303Z Local: 2/3/2020, 6:54:53 PM command: DO, rowCount: null 
2020-02-03T10:54:53.304Z Local: 2/3/2020, 6:54:53 PM Created Producer type 
2020-02-03T10:54:53.305Z Local: 2/3/2020, 6:54:53 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T10:54:53.306Z Local: 2/3/2020, 6:54:53 PM command: DO, rowCount: null 
2020-02-03T10:54:53.307Z Local: 2/3/2020, 6:54:53 PM Created Spec type 
2020-02-03T10:54:53.308Z Local: 2/3/2020, 6:54:53 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T10:54:53.310Z Local: 2/3/2020, 6:54:53 PM command: INSERT, rowCount: 1 
2020-02-03T10:54:53.312Z Local: 2/3/2020, 6:54:53 PM command: CREATE, rowCount: null 
2020-02-03T10:54:53.316Z Local: 2/3/2020, 6:54:53 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T10:54:53.312Z Local: 2/3/2020, 6:54:53 PM Created items_table 
2020-02-03T10:54:56.908Z Local: 2/3/2020, 6:54:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', 'undefined', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T10:54:56.922Z Local: 2/3/2020, 6:54:56 PM command: INSERT, rowCount: 1 
2020-02-03T10:54:56.925Z Local: 2/3/2020, 6:54:56 PM Sending 1 rows to ::1 with  
2020-02-03T10:55:04.652Z Local: 2/3/2020, 6:55:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T10:55:04.688Z Local: 2/3/2020, 6:55:04 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T10:55:04.716Z Local: 2/3/2020, 6:55:04 PM command: DO, rowCount: null 
2020-02-03T10:55:04.720Z Local: 2/3/2020, 6:55:04 PM command: INSERT, rowCount: 1 
2020-02-03T10:55:04.722Z Local: 2/3/2020, 6:55:04 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T10:55:04.726Z Local: 2/3/2020, 6:55:04 PM command: DO, rowCount: null 
2020-02-03T10:55:04.730Z Local: 2/3/2020, 6:55:04 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T10:55:04.732Z Local: 2/3/2020, 6:55:04 PM command: CREATE, rowCount: null 
2020-02-03T10:55:04.734Z Local: 2/3/2020, 6:55:04 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T10:55:04.742Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 1 
2020-02-03T10:55:04.744Z Local: 2/3/2020, 6:55:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T10:55:04.748Z Local: 2/3/2020, 6:55:04 PM command: INSERT, rowCount: 1 
2020-02-03T10:55:04.750Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T10:55:04.762Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 3 
2020-02-03T10:55:04.771Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T10:55:04.774Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 22 
2020-02-03T10:55:04.776Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T10:55:04.778Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 22 
2020-02-03T10:55:04.784Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T10:55:04.788Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 1 
2020-02-03T10:55:04.789Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T10:55:04.792Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 0 
2020-02-03T10:55:04.798Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T10:55:04.800Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 0 
2020-02-03T10:55:04.802Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T10:55:04.804Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 0 
2020-02-03T10:55:04.820Z Local: 2/3/2020, 6:55:04 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T10:55:04.823Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 1 
2020-02-03T10:55:04.824Z Local: 2/3/2020, 6:55:04 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T10:55:04.841Z Local: 2/3/2020, 6:55:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T10:55:04.848Z Local: 2/3/2020, 6:55:04 PM command: INSERT, rowCount: 1 
2020-02-03T10:55:04.849Z Local: 2/3/2020, 6:55:04 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T10:55:04.859Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T10:55:04.862Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 1 
2020-02-03T10:55:04.867Z Local: 2/3/2020, 6:55:04 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T10:55:04.876Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T10:55:04.890Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 0 
2020-02-03T10:55:04.891Z Local: 2/3/2020, 6:55:04 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T10:55:04.896Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T10:55:04.911Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 0 
2020-02-03T10:55:04.912Z Local: 2/3/2020, 6:55:04 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T10:55:04.919Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T10:55:04.921Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 0 
2020-02-03T10:55:04.922Z Local: 2/3/2020, 6:55:04 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T10:55:04.927Z Local: 2/3/2020, 6:55:04 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T10:55:04.930Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 2 
2020-02-03T10:55:04.945Z Local: 2/3/2020, 6:55:04 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T10:55:04.952Z Local: 2/3/2020, 6:55:04 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T10:55:04.972Z Local: 2/3/2020, 6:55:04 PM command: CREATE, rowCount: null 
2020-02-03T10:55:04.975Z Local: 2/3/2020, 6:55:04 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T10:55:04.978Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T10:55:04.979Z Local: 2/3/2020, 6:55:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T10:55:04.982Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 3 
2020-02-03T10:55:04.987Z Local: 2/3/2020, 6:55:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T10:55:04.990Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 40 
2020-02-03T10:55:04.992Z Local: 2/3/2020, 6:55:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T10:55:04.995Z Local: 2/3/2020, 6:55:04 PM command: SELECT, rowCount: 40 
2020-02-03T10:55:05.009Z Local: 2/3/2020, 6:55:05 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T10:55:05.011Z Local: 2/3/2020, 6:55:05 PM command: SELECT, rowCount: 1 
2020-02-03T11:01:53.194Z Local: 2/3/2020, 7:01:53 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T11:01:53.207Z Local: 2/3/2020, 7:01:53 PM Server is listening on port 8000 
2020-02-03T11:01:53.230Z Local: 2/3/2020, 7:01:53 PM command: DO, rowCount: null 
2020-02-03T11:01:53.231Z Local: 2/3/2020, 7:01:53 PM Created Producer type 
2020-02-03T11:01:53.231Z Local: 2/3/2020, 7:01:53 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T11:01:53.233Z Local: 2/3/2020, 7:01:53 PM command: DO, rowCount: null 
2020-02-03T11:01:53.234Z Local: 2/3/2020, 7:01:53 PM Created Spec type 
2020-02-03T11:01:53.234Z Local: 2/3/2020, 7:01:53 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T11:01:53.237Z Local: 2/3/2020, 7:01:53 PM command: CREATE, rowCount: null 
2020-02-03T11:01:53.238Z Local: 2/3/2020, 7:01:53 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T11:01:53.238Z Local: 2/3/2020, 7:01:53 PM Created items_table 
2020-02-03T11:01:58.568Z Local: 2/3/2020, 7:01:58 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T11:01:58.599Z Local: 2/3/2020, 7:01:58 PM command: DO, rowCount: null 
2020-02-03T11:01:58.604Z Local: 2/3/2020, 7:01:58 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T11:01:58.606Z Local: 2/3/2020, 7:01:58 PM command: DO, rowCount: null 
2020-02-03T11:01:58.608Z Local: 2/3/2020, 7:01:58 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T11:01:58.615Z Local: 2/3/2020, 7:01:58 PM command: CREATE, rowCount: null 
2020-02-03T11:01:58.617Z Local: 2/3/2020, 7:01:58 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T11:01:58.636Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 1 
2020-02-03T11:01:58.641Z Local: 2/3/2020, 7:01:58 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T11:01:58.653Z Local: 2/3/2020, 7:01:58 PM command: INSERT, rowCount: 1 
2020-02-03T11:01:58.662Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T11:01:58.665Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 3 
2020-02-03T11:01:58.667Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T11:01:58.675Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 24 
2020-02-03T11:01:58.677Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T11:01:58.680Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 24 
2020-02-03T11:01:58.685Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T11:01:58.688Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 1 
2020-02-03T11:01:58.690Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T11:01:58.692Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 0 
2020-02-03T11:01:58.699Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T11:01:58.701Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 0 
2020-02-03T11:01:58.703Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T11:01:58.705Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 0 
2020-02-03T11:01:58.725Z Local: 2/3/2020, 7:01:58 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T11:01:58.729Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 1 
2020-02-03T11:01:58.730Z Local: 2/3/2020, 7:01:58 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:01:58.770Z Local: 2/3/2020, 7:01:58 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T11:01:58.781Z Local: 2/3/2020, 7:01:58 PM command: INSERT, rowCount: 1 
2020-02-03T11:01:58.782Z Local: 2/3/2020, 7:01:58 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:01:58.790Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T11:01:58.794Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 1 
2020-02-03T11:01:58.799Z Local: 2/3/2020, 7:01:58 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:01:58.810Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T11:01:58.816Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 0 
2020-02-03T11:01:58.817Z Local: 2/3/2020, 7:01:58 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:01:58.824Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T11:01:58.826Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 0 
2020-02-03T11:01:58.827Z Local: 2/3/2020, 7:01:58 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:01:58.833Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T11:01:58.847Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 0 
2020-02-03T11:01:58.848Z Local: 2/3/2020, 7:01:58 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:01:58.855Z Local: 2/3/2020, 7:01:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T11:01:58.860Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 2 
2020-02-03T11:01:58.861Z Local: 2/3/2020, 7:01:58 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:01:58.865Z Local: 2/3/2020, 7:01:58 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T11:01:58.886Z Local: 2/3/2020, 7:01:58 PM command: CREATE, rowCount: null 
2020-02-03T11:01:58.889Z Local: 2/3/2020, 7:01:58 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T11:01:58.892Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T11:01:58.893Z Local: 2/3/2020, 7:01:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T11:01:58.896Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 3 
2020-02-03T11:01:58.899Z Local: 2/3/2020, 7:01:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T11:01:58.903Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 40 
2020-02-03T11:01:58.904Z Local: 2/3/2020, 7:01:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T11:01:58.909Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 40 
2020-02-03T11:01:58.911Z Local: 2/3/2020, 7:01:58 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T11:01:58.913Z Local: 2/3/2020, 7:01:58 PM command: SELECT, rowCount: 1 
2020-02-03T11:19:40.637Z Local: 2/3/2020, 7:19:40 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T11:19:40.649Z Local: 2/3/2020, 7:19:40 PM Server is listening on port 8000 
2020-02-03T11:19:40.673Z Local: 2/3/2020, 7:19:40 PM Created Producer type 
2020-02-03T11:19:40.672Z Local: 2/3/2020, 7:19:40 PM command: DO, rowCount: null 
2020-02-03T11:19:40.674Z Local: 2/3/2020, 7:19:40 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T11:19:40.675Z Local: 2/3/2020, 7:19:40 PM command: DO, rowCount: null 
2020-02-03T11:19:40.676Z Local: 2/3/2020, 7:19:40 PM Created Spec type 
2020-02-03T11:19:40.677Z Local: 2/3/2020, 7:19:40 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T11:19:40.679Z Local: 2/3/2020, 7:19:40 PM command: CREATE, rowCount: null 
2020-02-03T11:19:40.680Z Local: 2/3/2020, 7:19:40 PM Created items_table 
2020-02-03T11:19:40.681Z Local: 2/3/2020, 7:19:40 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T11:19:45.777Z Local: 2/3/2020, 7:19:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', 'undefined', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', null) RETURNING id; 
2020-02-03T11:19:45.799Z Local: 2/3/2020, 7:19:45 PM command: INSERT, rowCount: 1 
2020-02-03T11:19:45.804Z Local: 2/3/2020, 7:19:45 PM Sending 1 rows to ::1 with  
2020-02-03T11:19:50.803Z Local: 2/3/2020, 7:19:50 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', 'undefined', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T11:19:50.817Z Local: 2/3/2020, 7:19:50 PM command: INSERT, rowCount: 1 
2020-02-03T11:19:50.818Z Local: 2/3/2020, 7:19:50 PM Sending 1 rows to ::1 with  
2020-02-03T11:19:56.121Z Local: 2/3/2020, 7:19:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', 'undefined', null, 'farmer1.jpg', null) RETURNING id; 
2020-02-03T11:19:56.127Z Local: 2/3/2020, 7:19:56 PM command: INSERT, rowCount: 1 
2020-02-03T11:19:56.128Z Local: 2/3/2020, 7:19:56 PM Sending 1 rows to ::1 with  
2020-02-03T11:20:01.576Z Local: 2/3/2020, 7:20:01 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T11:20:01.608Z Local: 2/3/2020, 7:20:01 PM command: DO, rowCount: null 
2020-02-03T11:20:01.613Z Local: 2/3/2020, 7:20:01 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T11:20:01.615Z Local: 2/3/2020, 7:20:01 PM command: DO, rowCount: null 
2020-02-03T11:20:01.617Z Local: 2/3/2020, 7:20:01 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T11:20:01.619Z Local: 2/3/2020, 7:20:01 PM command: CREATE, rowCount: null 
2020-02-03T11:20:01.625Z Local: 2/3/2020, 7:20:01 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T11:20:01.642Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 1 
2020-02-03T11:20:01.647Z Local: 2/3/2020, 7:20:01 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T11:20:01.670Z Local: 2/3/2020, 7:20:01 PM command: INSERT, rowCount: 1 
2020-02-03T11:20:01.673Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T11:20:01.677Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 3 
2020-02-03T11:20:01.678Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T11:20:01.682Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 29 
2020-02-03T11:20:01.686Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T11:20:01.689Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 29 
2020-02-03T11:20:01.692Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T11:20:01.699Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 1 
2020-02-03T11:20:01.701Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T11:20:01.703Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 0 
2020-02-03T11:20:01.705Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T11:20:01.712Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 0 
2020-02-03T11:20:01.713Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T11:20:01.715Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 0 
2020-02-03T11:20:01.726Z Local: 2/3/2020, 7:20:01 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T11:20:01.729Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 1 
2020-02-03T11:20:01.729Z Local: 2/3/2020, 7:20:01 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:20:01.744Z Local: 2/3/2020, 7:20:01 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T11:20:01.747Z Local: 2/3/2020, 7:20:01 PM command: INSERT, rowCount: 1 
2020-02-03T11:20:01.749Z Local: 2/3/2020, 7:20:01 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:20:01.758Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T11:20:01.764Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 1 
2020-02-03T11:20:01.769Z Local: 2/3/2020, 7:20:01 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:20:01.780Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T11:20:01.785Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 0 
2020-02-03T11:20:01.786Z Local: 2/3/2020, 7:20:01 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:20:01.793Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T11:20:01.795Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 0 
2020-02-03T11:20:01.797Z Local: 2/3/2020, 7:20:01 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:20:01.803Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T11:20:01.813Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 0 
2020-02-03T11:20:01.814Z Local: 2/3/2020, 7:20:01 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:20:01.819Z Local: 2/3/2020, 7:20:01 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T11:20:01.822Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 2 
2020-02-03T11:20:01.835Z Local: 2/3/2020, 7:20:01 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T11:20:01.842Z Local: 2/3/2020, 7:20:01 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T11:20:01.863Z Local: 2/3/2020, 7:20:01 PM command: CREATE, rowCount: null 
2020-02-03T11:20:01.865Z Local: 2/3/2020, 7:20:01 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T11:20:01.868Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T11:20:01.870Z Local: 2/3/2020, 7:20:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T11:20:01.873Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 3 
2020-02-03T11:20:01.876Z Local: 2/3/2020, 7:20:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T11:20:01.881Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 40 
2020-02-03T11:20:01.882Z Local: 2/3/2020, 7:20:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T11:20:01.886Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 40 
2020-02-03T11:20:01.888Z Local: 2/3/2020, 7:20:01 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T11:20:01.890Z Local: 2/3/2020, 7:20:01 PM command: SELECT, rowCount: 1 
2020-02-03T13:13:43.539Z Local: 2/3/2020, 9:13:43 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:13:43.548Z Local: 2/3/2020, 9:13:43 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:13:43.549Z Local: 2/3/2020, 9:13:43 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:13:43.551Z Local: 2/3/2020, 9:13:43 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:13:43.553Z Local: 2/3/2020, 9:13:43 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '1'; 
2020-02-03T13:13:43.554Z Local: 2/3/2020, 9:13:43 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '1'; 
2020-02-03T13:13:43.560Z Local: 2/3/2020, 9:13:43 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 1; 
2020-02-03T13:13:43.589Z Local: 2/3/2020, 9:13:43 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:13:43.636Z Local: 2/3/2020, 9:13:43 PM command: CREATE, rowCount: null 
2020-02-03T13:13:43.639Z Local: 2/3/2020, 9:13:43 PM command: DO, rowCount: null 
2020-02-03T13:13:43.640Z Local: 2/3/2020, 9:13:43 PM command: DO, rowCount: null 
2020-02-03T13:13:43.677Z Local: 2/3/2020, 9:13:43 PM command: INSERT, rowCount: 1 
2020-02-03T13:13:43.680Z Local: 2/3/2020, 9:13:43 PM command: SELECT, rowCount: 1 
2020-02-03T13:13:43.681Z Local: 2/3/2020, 9:13:43 PM command: SELECT, rowCount: 1 
2020-02-03T13:13:43.683Z Local: 2/3/2020, 9:13:43 PM command: SELECT, rowCount: 17 
2020-02-03T13:13:43.691Z Local: 2/3/2020, 9:13:43 PM command: DO, rowCount: null 
2020-02-03T13:13:43.695Z Local: 2/3/2020, 9:13:43 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:13:43.696Z Local: 2/3/2020, 9:13:43 PM command: DO, rowCount: null 
2020-02-03T13:13:43.698Z Local: 2/3/2020, 9:13:43 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:13:43.713Z Local: 2/3/2020, 9:13:43 PM command: CREATE, rowCount: null 
2020-02-03T13:13:43.715Z Local: 2/3/2020, 9:13:43 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:13:43.720Z Local: 2/3/2020, 9:13:43 PM command: SELECT, rowCount: 1 
2020-02-03T13:13:43.725Z Local: 2/3/2020, 9:13:43 PM Warning: DbFarmer.insertFarmer country = [object Object] is not a String 
2020-02-03T13:13:43.728Z Local: 2/3/2020, 9:13:43 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:13:43.731Z Local: 2/3/2020, 9:13:43 PM command: SELECT, rowCount: 3 
2020-02-03T13:13:45.731Z Local: 2/3/2020, 9:13:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:13:45.734Z Local: 2/3/2020, 9:13:45 PM command: SELECT, rowCount: 18 
2020-02-03T13:13:47.733Z Local: 2/3/2020, 9:13:47 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:13:47.742Z Local: 2/3/2020, 9:13:47 PM command: SELECT, rowCount: 18 
2020-02-03T13:13:49.736Z Local: 2/3/2020, 9:13:49 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '2'; 
2020-02-03T13:13:49.738Z Local: 2/3/2020, 9:13:49 PM command: SELECT, rowCount: 1 
2020-02-03T13:13:51.740Z Local: 2/3/2020, 9:13:51 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:13:51.746Z Local: 2/3/2020, 9:13:51 PM command: SELECT, rowCount: 0 
2020-02-03T13:13:53.765Z Local: 2/3/2020, 9:13:53 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:13:53.772Z Local: 2/3/2020, 9:13:53 PM command: DO, rowCount: null 
2020-02-03T13:13:53.776Z Local: 2/3/2020, 9:13:53 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:13:53.778Z Local: 2/3/2020, 9:13:53 PM command: DO, rowCount: null 
2020-02-03T13:13:53.780Z Local: 2/3/2020, 9:13:53 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T13:13:53.782Z Local: 2/3/2020, 9:13:53 PM command: CREATE, rowCount: null 
2020-02-03T13:13:53.789Z Local: 2/3/2020, 9:13:53 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:13:53.805Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 1 
2020-02-03T13:13:53.810Z Local: 2/3/2020, 9:13:53 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:13:53.831Z Local: 2/3/2020, 9:13:53 PM command: INSERT, rowCount: 1 
2020-02-03T13:13:53.833Z Local: 2/3/2020, 9:13:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:13:53.836Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 3 
2020-02-03T13:13:53.841Z Local: 2/3/2020, 9:13:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T13:13:53.844Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 31 
2020-02-03T13:13:53.846Z Local: 2/3/2020, 9:13:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T13:13:53.849Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 31 
2020-02-03T13:13:53.857Z Local: 2/3/2020, 9:13:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T13:13:53.859Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 1 
2020-02-03T13:13:53.861Z Local: 2/3/2020, 9:13:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:13:53.862Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 0 
2020-02-03T13:13:53.870Z Local: 2/3/2020, 9:13:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:13:53.872Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 0 
2020-02-03T13:13:53.874Z Local: 2/3/2020, 9:13:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T13:13:53.875Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 0 
2020-02-03T13:13:53.879Z Local: 2/3/2020, 9:13:53 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:13:53.910Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 1 
2020-02-03T13:13:53.912Z Local: 2/3/2020, 9:13:53 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:13:53.923Z Local: 2/3/2020, 9:13:53 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:13:53.938Z Local: 2/3/2020, 9:13:53 PM command: INSERT, rowCount: 1 
2020-02-03T13:13:53.943Z Local: 2/3/2020, 9:13:53 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:13:53.952Z Local: 2/3/2020, 9:13:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T13:13:53.956Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 1 
2020-02-03T13:13:53.957Z Local: 2/3/2020, 9:13:53 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:13:53.964Z Local: 2/3/2020, 9:13:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:13:53.977Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 0 
2020-02-03T13:13:53.977Z Local: 2/3/2020, 9:13:53 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:13:53.982Z Local: 2/3/2020, 9:13:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:13:53.984Z Local: 2/3/2020, 9:13:53 PM command: SELECT, rowCount: 0 
2020-02-03T13:13:53.998Z Local: 2/3/2020, 9:13:53 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:13:54.005Z Local: 2/3/2020, 9:13:54 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T13:13:54.009Z Local: 2/3/2020, 9:13:54 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:13:54.006Z Local: 2/3/2020, 9:13:54 PM command: SELECT, rowCount: 0 
2020-02-03T13:13:54.015Z Local: 2/3/2020, 9:13:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T13:13:54.018Z Local: 2/3/2020, 9:13:54 PM command: SELECT, rowCount: 2 
2020-02-03T13:13:54.020Z Local: 2/3/2020, 9:13:54 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:13:54.027Z Local: 2/3/2020, 9:13:54 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:13:54.048Z Local: 2/3/2020, 9:13:54 PM command: CREATE, rowCount: null 
2020-02-03T13:13:54.051Z Local: 2/3/2020, 9:13:54 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T13:13:54.055Z Local: 2/3/2020, 9:13:54 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T13:13:54.057Z Local: 2/3/2020, 9:13:54 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:13:54.061Z Local: 2/3/2020, 9:13:54 PM command: SELECT, rowCount: 3 
2020-02-03T13:13:54.062Z Local: 2/3/2020, 9:13:54 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:13:54.066Z Local: 2/3/2020, 9:13:54 PM command: SELECT, rowCount: 40 
2020-02-03T13:13:54.068Z Local: 2/3/2020, 9:13:54 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:13:54.072Z Local: 2/3/2020, 9:13:54 PM command: SELECT, rowCount: 40 
2020-02-03T13:13:54.074Z Local: 2/3/2020, 9:13:54 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T13:13:54.076Z Local: 2/3/2020, 9:13:54 PM command: SELECT, rowCount: 1 
2020-02-03T13:19:36.953Z Local: 2/3/2020, 9:19:36 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:19:36.985Z Local: 2/3/2020, 9:19:36 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:19:37.015Z Local: 2/3/2020, 9:19:37 PM command: DO, rowCount: null 
2020-02-03T13:19:37.020Z Local: 2/3/2020, 9:19:37 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:19:37.022Z Local: 2/3/2020, 9:19:37 PM command: DO, rowCount: null 
2020-02-03T13:19:37.028Z Local: 2/3/2020, 9:19:37 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:19:37.030Z Local: 2/3/2020, 9:19:37 PM command: CREATE, rowCount: null 
2020-02-03T13:19:37.032Z Local: 2/3/2020, 9:19:37 PM command: INSERT, rowCount: 1 
2020-02-03T13:19:37.034Z Local: 2/3/2020, 9:19:37 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:19:37.044Z Local: 2/3/2020, 9:19:37 PM command: SELECT, rowCount: 1 
2020-02-03T13:19:37.046Z Local: 2/3/2020, 9:19:37 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T13:19:37.050Z Local: 2/3/2020, 9:19:37 PM command: INSERT, rowCount: 1 
2020-02-03T13:19:39.049Z Local: 2/3/2020, 9:19:39 PM Warning: DbFarmer.insertFarmer description = undefined is not a String 
2020-02-03T13:19:39.052Z Local: 2/3/2020, 9:19:39 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:19:39.056Z Local: 2/3/2020, 9:19:39 PM command: SELECT, rowCount: 3 
2020-02-03T13:19:41.055Z Local: 2/3/2020, 9:19:41 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:19:41.058Z Local: 2/3/2020, 9:19:41 PM command: SELECT, rowCount: 20 
2020-02-03T13:19:43.057Z Local: 2/3/2020, 9:19:43 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:19:43.060Z Local: 2/3/2020, 9:19:43 PM command: SELECT, rowCount: 20 
2020-02-03T13:19:45.061Z Local: 2/3/2020, 9:19:45 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '2'; 
2020-02-03T13:19:45.063Z Local: 2/3/2020, 9:19:45 PM command: SELECT, rowCount: 1 
2020-02-03T13:19:47.065Z Local: 2/3/2020, 9:19:47 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:19:47.067Z Local: 2/3/2020, 9:19:47 PM command: SELECT, rowCount: 0 
2020-02-03T13:19:49.080Z Local: 2/3/2020, 9:19:49 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:19:49.084Z Local: 2/3/2020, 9:19:49 PM command: DO, rowCount: null 
2020-02-03T13:19:49.085Z Local: 2/3/2020, 9:19:49 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:19:49.091Z Local: 2/3/2020, 9:19:49 PM command: DO, rowCount: null 
2020-02-03T13:19:49.093Z Local: 2/3/2020, 9:19:49 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T13:19:49.103Z Local: 2/3/2020, 9:19:49 PM command: CREATE, rowCount: null 
2020-02-03T13:19:49.104Z Local: 2/3/2020, 9:19:49 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:19:49.118Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 1 
2020-02-03T13:19:49.123Z Local: 2/3/2020, 9:19:49 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:19:49.127Z Local: 2/3/2020, 9:19:49 PM command: INSERT, rowCount: 1 
2020-02-03T13:19:49.129Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:19:49.140Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 3 
2020-02-03T13:19:49.142Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T13:19:49.145Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 33 
2020-02-03T13:19:49.146Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T13:19:49.155Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 33 
2020-02-03T13:19:49.157Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T13:19:49.159Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 1 
2020-02-03T13:19:49.161Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:19:49.168Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 0 
2020-02-03T13:19:49.170Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:19:49.171Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 0 
2020-02-03T13:19:49.173Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T13:19:49.175Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 0 
2020-02-03T13:19:49.185Z Local: 2/3/2020, 9:19:49 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:19:49.206Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 1 
2020-02-03T13:19:49.208Z Local: 2/3/2020, 9:19:49 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:19:49.217Z Local: 2/3/2020, 9:19:49 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:19:49.230Z Local: 2/3/2020, 9:19:49 PM command: INSERT, rowCount: 1 
2020-02-03T13:19:49.231Z Local: 2/3/2020, 9:19:49 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:19:49.239Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T13:19:49.241Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 1 
2020-02-03T13:19:49.242Z Local: 2/3/2020, 9:19:49 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:19:49.251Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:19:49.272Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 0 
2020-02-03T13:19:49.272Z Local: 2/3/2020, 9:19:49 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:19:49.277Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:19:49.278Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 0 
2020-02-03T13:19:49.279Z Local: 2/3/2020, 9:19:49 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:19:49.294Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T13:19:49.296Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 0 
2020-02-03T13:19:49.296Z Local: 2/3/2020, 9:19:49 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:19:49.315Z Local: 2/3/2020, 9:19:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T13:19:49.317Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 2 
2020-02-03T13:19:49.318Z Local: 2/3/2020, 9:19:49 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:19:49.325Z Local: 2/3/2020, 9:19:49 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:19:49.344Z Local: 2/3/2020, 9:19:49 PM command: CREATE, rowCount: null 
2020-02-03T13:19:49.347Z Local: 2/3/2020, 9:19:49 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T13:19:49.350Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T13:19:49.352Z Local: 2/3/2020, 9:19:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:19:49.355Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 3 
2020-02-03T13:19:49.367Z Local: 2/3/2020, 9:19:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:19:49.371Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 40 
2020-02-03T13:19:49.372Z Local: 2/3/2020, 9:19:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:19:49.376Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 40 
2020-02-03T13:19:49.377Z Local: 2/3/2020, 9:19:49 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T13:19:49.379Z Local: 2/3/2020, 9:19:49 PM command: SELECT, rowCount: 1 
2020-02-03T13:26:13.316Z Local: 2/3/2020, 9:26:13 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:26:13.345Z Local: 2/3/2020, 9:26:13 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:26:13.376Z Local: 2/3/2020, 9:26:13 PM command: DO, rowCount: null 
2020-02-03T13:26:13.382Z Local: 2/3/2020, 9:26:13 PM command: INSERT, rowCount: 1 
2020-02-03T13:26:13.383Z Local: 2/3/2020, 9:26:13 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:26:13.387Z Local: 2/3/2020, 9:26:13 PM command: DO, rowCount: null 
2020-02-03T13:26:13.391Z Local: 2/3/2020, 9:26:13 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:26:13.394Z Local: 2/3/2020, 9:26:13 PM command: CREATE, rowCount: null 
2020-02-03T13:26:13.396Z Local: 2/3/2020, 9:26:13 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:26:13.407Z Local: 2/3/2020, 9:26:13 PM command: SELECT, rowCount: 1 
2020-02-03T13:26:13.409Z Local: 2/3/2020, 9:26:13 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T13:26:13.412Z Local: 2/3/2020, 9:26:13 PM command: INSERT, rowCount: 1 
2020-02-03T13:26:15.416Z Local: 2/3/2020, 9:26:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:26:15.420Z Local: 2/3/2020, 9:26:15 PM command: INSERT, rowCount: 1 
2020-02-03T13:26:17.420Z Local: 2/3/2020, 9:26:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:26:17.425Z Local: 2/3/2020, 9:26:17 PM command: SELECT, rowCount: 3 
2020-02-03T13:26:19.423Z Local: 2/3/2020, 9:26:19 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:26:19.427Z Local: 2/3/2020, 9:26:19 PM command: SELECT, rowCount: 23 
2020-02-03T13:26:21.426Z Local: 2/3/2020, 9:26:21 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:26:21.429Z Local: 2/3/2020, 9:26:21 PM command: SELECT, rowCount: 23 
2020-02-03T13:26:23.431Z Local: 2/3/2020, 9:26:23 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '2'; 
2020-02-03T13:26:23.433Z Local: 2/3/2020, 9:26:23 PM command: SELECT, rowCount: 1 
2020-02-03T13:26:25.438Z Local: 2/3/2020, 9:26:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:26:25.443Z Local: 2/3/2020, 9:26:25 PM command: SELECT, rowCount: 0 
2020-02-03T13:26:27.468Z Local: 2/3/2020, 9:26:27 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:26:27.472Z Local: 2/3/2020, 9:26:27 PM command: DO, rowCount: null 
2020-02-03T13:26:27.479Z Local: 2/3/2020, 9:26:27 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:26:27.481Z Local: 2/3/2020, 9:26:27 PM command: DO, rowCount: null 
2020-02-03T13:26:27.483Z Local: 2/3/2020, 9:26:27 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T13:26:27.485Z Local: 2/3/2020, 9:26:27 PM command: CREATE, rowCount: null 
2020-02-03T13:26:27.492Z Local: 2/3/2020, 9:26:27 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:26:27.505Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 1 
2020-02-03T13:26:27.507Z Local: 2/3/2020, 9:26:27 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:26:27.512Z Local: 2/3/2020, 9:26:27 PM command: INSERT, rowCount: 1 
2020-02-03T13:26:27.516Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:26:27.519Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 3 
2020-02-03T13:26:27.521Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T13:26:27.525Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 35 
2020-02-03T13:26:27.529Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T13:26:27.533Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 35 
2020-02-03T13:26:27.534Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T13:26:27.537Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 1 
2020-02-03T13:26:27.544Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:26:27.546Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 0 
2020-02-03T13:26:27.548Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:26:27.550Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 0 
2020-02-03T13:26:27.557Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T13:26:27.559Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 0 
2020-02-03T13:26:27.563Z Local: 2/3/2020, 9:26:27 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:26:27.585Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 1 
2020-02-03T13:26:27.587Z Local: 2/3/2020, 9:26:27 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:26:27.595Z Local: 2/3/2020, 9:26:27 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:26:27.606Z Local: 2/3/2020, 9:26:27 PM command: INSERT, rowCount: 1 
2020-02-03T13:26:27.608Z Local: 2/3/2020, 9:26:27 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:26:27.620Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T13:26:27.634Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 1 
2020-02-03T13:26:27.635Z Local: 2/3/2020, 9:26:27 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:26:27.643Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:26:27.647Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 0 
2020-02-03T13:26:27.648Z Local: 2/3/2020, 9:26:27 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:26:27.655Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:26:27.669Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 0 
2020-02-03T13:26:27.670Z Local: 2/3/2020, 9:26:27 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:26:27.675Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T13:26:27.682Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 0 
2020-02-03T13:26:27.682Z Local: 2/3/2020, 9:26:27 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:26:27.690Z Local: 2/3/2020, 9:26:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T13:26:27.693Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 2 
2020-02-03T13:26:27.693Z Local: 2/3/2020, 9:26:27 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:26:27.697Z Local: 2/3/2020, 9:26:27 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:26:27.716Z Local: 2/3/2020, 9:26:27 PM command: CREATE, rowCount: null 
2020-02-03T13:26:27.722Z Local: 2/3/2020, 9:26:27 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T13:26:27.724Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T13:26:27.726Z Local: 2/3/2020, 9:26:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:26:27.729Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 3 
2020-02-03T13:26:27.731Z Local: 2/3/2020, 9:26:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:26:27.734Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 40 
2020-02-03T13:26:27.736Z Local: 2/3/2020, 9:26:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:26:27.740Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 40 
2020-02-03T13:26:27.744Z Local: 2/3/2020, 9:26:27 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T13:26:27.746Z Local: 2/3/2020, 9:26:27 PM command: SELECT, rowCount: 1 
2020-02-03T13:30:00.572Z Local: 2/3/2020, 9:30:00 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', 'undefined', null, 'farmer1.jpg', null) RETURNING id; 
2020-02-03T13:30:00.612Z Local: 2/3/2020, 9:30:00 PM command: INSERT, rowCount: 1 
2020-02-03T13:30:00.614Z Local: 2/3/2020, 9:30:00 PM Sending 1 rows to ::1 with  
2020-02-03T13:32:01.346Z Local: 2/3/2020, 9:32:01 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:32:01.359Z Local: 2/3/2020, 9:32:01 PM Server is listening on port 8000 
2020-02-03T13:32:01.382Z Local: 2/3/2020, 9:32:01 PM command: DO, rowCount: null 
2020-02-03T13:32:01.384Z Local: 2/3/2020, 9:32:01 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:32:01.384Z Local: 2/3/2020, 9:32:01 PM Created Producer type 
2020-02-03T13:32:01.386Z Local: 2/3/2020, 9:32:01 PM command: DO, rowCount: null 
2020-02-03T13:32:01.386Z Local: 2/3/2020, 9:32:01 PM Created Spec type 
2020-02-03T13:32:01.387Z Local: 2/3/2020, 9:32:01 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T13:32:01.389Z Local: 2/3/2020, 9:32:01 PM command: CREATE, rowCount: null 
2020-02-03T13:32:01.390Z Local: 2/3/2020, 9:32:01 PM Created items_table 
2020-02-03T13:32:01.391Z Local: 2/3/2020, 9:32:01 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T13:32:04.746Z Local: 2/3/2020, 9:32:04 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:32:04.779Z Local: 2/3/2020, 9:32:04 PM command: DO, rowCount: null 
2020-02-03T13:32:04.783Z Local: 2/3/2020, 9:32:04 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:32:04.785Z Local: 2/3/2020, 9:32:04 PM command: DO, rowCount: null 
2020-02-03T13:32:04.787Z Local: 2/3/2020, 9:32:04 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:32:04.790Z Local: 2/3/2020, 9:32:04 PM command: CREATE, rowCount: null 
2020-02-03T13:32:04.796Z Local: 2/3/2020, 9:32:04 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:32:04.812Z Local: 2/3/2020, 9:32:04 PM command: SELECT, rowCount: 1 
2020-02-03T13:32:04.815Z Local: 2/3/2020, 9:32:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T13:32:04.827Z Local: 2/3/2020, 9:32:04 PM command: INSERT, rowCount: 1 
2020-02-03T13:32:06.818Z Local: 2/3/2020, 9:32:06 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:32:06.826Z Local: 2/3/2020, 9:32:06 PM command: INSERT, rowCount: 1 
2020-02-03T13:32:08.820Z Local: 2/3/2020, 9:32:08 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:32:08.824Z Local: 2/3/2020, 9:32:08 PM command: SELECT, rowCount: 3 
2020-02-03T13:32:10.822Z Local: 2/3/2020, 9:32:10 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:32:10.825Z Local: 2/3/2020, 9:32:10 PM command: SELECT, rowCount: 25 
2020-02-03T13:32:12.825Z Local: 2/3/2020, 9:32:12 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:32:12.828Z Local: 2/3/2020, 9:32:12 PM command: SELECT, rowCount: 25 
2020-02-03T13:32:14.827Z Local: 2/3/2020, 9:32:14 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '2'; 
2020-02-03T13:32:14.829Z Local: 2/3/2020, 9:32:14 PM command: SELECT, rowCount: 1 
2020-02-03T13:32:16.872Z Local: 2/3/2020, 9:32:16 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:32:16.877Z Local: 2/3/2020, 9:32:16 PM command: SELECT, rowCount: 0 
2020-02-03T13:32:18.897Z Local: 2/3/2020, 9:32:18 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:32:18.899Z Local: 2/3/2020, 9:32:18 PM command: DO, rowCount: null 
2020-02-03T13:32:18.900Z Local: 2/3/2020, 9:32:18 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:32:18.902Z Local: 2/3/2020, 9:32:18 PM command: DO, rowCount: null 
2020-02-03T13:32:18.904Z Local: 2/3/2020, 9:32:18 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T13:32:18.909Z Local: 2/3/2020, 9:32:18 PM command: CREATE, rowCount: null 
2020-02-03T13:32:18.911Z Local: 2/3/2020, 9:32:18 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:32:18.926Z Local: 2/3/2020, 9:32:18 PM command: SELECT, rowCount: 1 
2020-02-03T13:32:18.928Z Local: 2/3/2020, 9:32:18 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:32:18.932Z Local: 2/3/2020, 9:32:18 PM command: INSERT, rowCount: 1 
2020-02-03T13:32:18.942Z Local: 2/3/2020, 9:32:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:32:18.944Z Local: 2/3/2020, 9:32:18 PM command: SELECT, rowCount: 3 
2020-02-03T13:32:18.946Z Local: 2/3/2020, 9:32:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T13:32:18.949Z Local: 2/3/2020, 9:32:18 PM command: SELECT, rowCount: 38 
2020-02-03T13:32:18.954Z Local: 2/3/2020, 9:32:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T13:32:18.958Z Local: 2/3/2020, 9:32:18 PM command: SELECT, rowCount: 38 
2020-02-03T13:32:18.960Z Local: 2/3/2020, 9:32:18 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T13:32:18.962Z Local: 2/3/2020, 9:32:18 PM command: SELECT, rowCount: 1 
2020-02-03T13:32:18.968Z Local: 2/3/2020, 9:32:18 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:32:18.971Z Local: 2/3/2020, 9:32:18 PM command: SELECT, rowCount: 0 
2020-02-03T13:32:18.973Z Local: 2/3/2020, 9:32:18 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:32:18.974Z Local: 2/3/2020, 9:32:18 PM command: SELECT, rowCount: 0 
2020-02-03T13:32:18.980Z Local: 2/3/2020, 9:32:18 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T13:32:18.982Z Local: 2/3/2020, 9:32:18 PM command: SELECT, rowCount: 0 
2020-02-03T13:32:18.987Z Local: 2/3/2020, 9:32:18 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:32:19.010Z Local: 2/3/2020, 9:32:19 PM command: SELECT, rowCount: 1 
2020-02-03T13:32:19.012Z Local: 2/3/2020, 9:32:19 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:32:19.042Z Local: 2/3/2020, 9:32:19 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:32:19.057Z Local: 2/3/2020, 9:32:19 PM command: INSERT, rowCount: 1 
2020-02-03T13:32:19.058Z Local: 2/3/2020, 9:32:19 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:32:19.065Z Local: 2/3/2020, 9:32:19 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T13:32:19.068Z Local: 2/3/2020, 9:32:19 PM command: SELECT, rowCount: 1 
2020-02-03T13:32:19.073Z Local: 2/3/2020, 9:32:19 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:32:19.082Z Local: 2/3/2020, 9:32:19 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:32:19.083Z Local: 2/3/2020, 9:32:19 PM command: SELECT, rowCount: 0 
2020-02-03T13:32:19.084Z Local: 2/3/2020, 9:32:19 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:32:19.091Z Local: 2/3/2020, 9:32:19 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:32:19.099Z Local: 2/3/2020, 9:32:19 PM command: SELECT, rowCount: 0 
2020-02-03T13:32:19.100Z Local: 2/3/2020, 9:32:19 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:32:19.107Z Local: 2/3/2020, 9:32:19 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T13:32:19.113Z Local: 2/3/2020, 9:32:19 PM command: SELECT, rowCount: 0 
2020-02-03T13:32:19.114Z Local: 2/3/2020, 9:32:19 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:32:19.122Z Local: 2/3/2020, 9:32:19 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T13:32:19.125Z Local: 2/3/2020, 9:32:19 PM command: SELECT, rowCount: 2 
2020-02-03T13:32:19.125Z Local: 2/3/2020, 9:32:19 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:32:19.129Z Local: 2/3/2020, 9:32:19 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:32:19.149Z Local: 2/3/2020, 9:32:19 PM command: CREATE, rowCount: null 
2020-02-03T13:32:19.151Z Local: 2/3/2020, 9:32:19 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T13:32:19.155Z Local: 2/3/2020, 9:32:19 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T13:32:19.159Z Local: 2/3/2020, 9:32:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:32:19.161Z Local: 2/3/2020, 9:32:19 PM command: SELECT, rowCount: 3 
2020-02-03T13:32:19.162Z Local: 2/3/2020, 9:32:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:32:19.168Z Local: 2/3/2020, 9:32:19 PM command: SELECT, rowCount: 40 
2020-02-03T13:32:19.170Z Local: 2/3/2020, 9:32:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:32:19.174Z Local: 2/3/2020, 9:32:19 PM command: SELECT, rowCount: 40 
2020-02-03T13:32:19.179Z Local: 2/3/2020, 9:32:19 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T13:32:19.180Z Local: 2/3/2020, 9:32:19 PM command: SELECT, rowCount: 1 
2020-02-03T13:33:54.403Z Local: 2/3/2020, 9:33:54 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:33:54.435Z Local: 2/3/2020, 9:33:54 PM command: DO, rowCount: null 
2020-02-03T13:33:54.439Z Local: 2/3/2020, 9:33:54 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:33:54.441Z Local: 2/3/2020, 9:33:54 PM command: DO, rowCount: null 
2020-02-03T13:33:54.443Z Local: 2/3/2020, 9:33:54 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:33:54.446Z Local: 2/3/2020, 9:33:54 PM command: CREATE, rowCount: null 
2020-02-03T13:33:54.451Z Local: 2/3/2020, 9:33:54 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:33:54.466Z Local: 2/3/2020, 9:33:54 PM command: SELECT, rowCount: 1 
2020-02-03T13:33:54.471Z Local: 2/3/2020, 9:33:54 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T13:33:54.482Z Local: 2/3/2020, 9:33:54 PM command: INSERT, rowCount: 1 
2020-02-03T13:33:56.474Z Local: 2/3/2020, 9:33:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:33:56.481Z Local: 2/3/2020, 9:33:56 PM command: INSERT, rowCount: 1 
2020-02-03T13:33:58.477Z Local: 2/3/2020, 9:33:58 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:33:58.480Z Local: 2/3/2020, 9:33:58 PM command: SELECT, rowCount: 3 
2020-02-03T13:34:00.479Z Local: 2/3/2020, 9:34:00 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:34:00.483Z Local: 2/3/2020, 9:34:00 PM command: SELECT, rowCount: 27 
2020-02-03T13:34:02.481Z Local: 2/3/2020, 9:34:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:34:02.484Z Local: 2/3/2020, 9:34:02 PM command: SELECT, rowCount: 27 
2020-02-03T13:34:04.484Z Local: 2/3/2020, 9:34:04 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '2'; 
2020-02-03T13:34:04.486Z Local: 2/3/2020, 9:34:04 PM command: SELECT, rowCount: 1 
2020-02-03T13:34:06.487Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:34:06.489Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 0 
2020-02-03T13:34:06.494Z Local: 2/3/2020, 9:34:06 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:34:06.495Z Local: 2/3/2020, 9:34:06 PM command: DO, rowCount: null 
2020-02-03T13:34:06.503Z Local: 2/3/2020, 9:34:06 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:34:06.504Z Local: 2/3/2020, 9:34:06 PM command: DO, rowCount: null 
2020-02-03T13:34:06.506Z Local: 2/3/2020, 9:34:06 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T13:34:06.508Z Local: 2/3/2020, 9:34:06 PM command: CREATE, rowCount: null 
2020-02-03T13:34:06.510Z Local: 2/3/2020, 9:34:06 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:34:06.528Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 1 
2020-02-03T13:34:06.530Z Local: 2/3/2020, 9:34:06 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:34:06.534Z Local: 2/3/2020, 9:34:06 PM command: INSERT, rowCount: 1 
2020-02-03T13:34:06.539Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:34:06.542Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 3 
2020-02-03T13:34:06.543Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T13:34:06.547Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 40 
2020-02-03T13:34:06.552Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T13:34:06.556Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 40 
2020-02-03T13:34:06.558Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T13:34:06.560Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 1 
2020-02-03T13:34:06.566Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:34:06.568Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 0 
2020-02-03T13:34:06.570Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:34:06.571Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 0 
2020-02-03T13:34:06.573Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T13:34:06.582Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 0 
2020-02-03T13:34:06.591Z Local: 2/3/2020, 9:34:06 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:34:06.621Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 1 
2020-02-03T13:34:06.622Z Local: 2/3/2020, 9:34:06 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:34:06.637Z Local: 2/3/2020, 9:34:06 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:34:06.648Z Local: 2/3/2020, 9:34:06 PM command: INSERT, rowCount: 1 
2020-02-03T13:34:06.649Z Local: 2/3/2020, 9:34:06 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:34:06.658Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T13:34:06.660Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 1 
2020-02-03T13:34:06.661Z Local: 2/3/2020, 9:34:06 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:34:06.669Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:34:06.677Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 0 
2020-02-03T13:34:06.677Z Local: 2/3/2020, 9:34:06 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:34:06.683Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:34:06.685Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 0 
2020-02-03T13:34:06.689Z Local: 2/3/2020, 9:34:06 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:34:06.694Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T13:34:06.696Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 0 
2020-02-03T13:34:06.700Z Local: 2/3/2020, 9:34:06 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:34:06.706Z Local: 2/3/2020, 9:34:06 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T13:34:06.708Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 2 
2020-02-03T13:34:06.711Z Local: 2/3/2020, 9:34:06 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:34:06.719Z Local: 2/3/2020, 9:34:06 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:34:06.739Z Local: 2/3/2020, 9:34:06 PM command: CREATE, rowCount: null 
2020-02-03T13:34:06.742Z Local: 2/3/2020, 9:34:06 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T13:34:06.745Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T13:34:06.747Z Local: 2/3/2020, 9:34:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:34:06.750Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 3 
2020-02-03T13:34:06.753Z Local: 2/3/2020, 9:34:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:34:06.757Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 40 
2020-02-03T13:34:06.758Z Local: 2/3/2020, 9:34:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:34:06.761Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 40 
2020-02-03T13:34:06.772Z Local: 2/3/2020, 9:34:06 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T13:34:06.774Z Local: 2/3/2020, 9:34:06 PM command: SELECT, rowCount: 1 
2020-02-03T13:36:09.234Z Local: 2/3/2020, 9:36:09 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:36:09.271Z Local: 2/3/2020, 9:36:09 PM command: SELECT, rowCount: 1 
2020-02-03T13:36:30.371Z Local: 2/3/2020, 9:36:30 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:36:30.381Z Local: 2/3/2020, 9:36:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:36:30.412Z Local: 2/3/2020, 9:36:30 PM command: SELECT, rowCount: 1 
2020-02-03T13:36:30.426Z Local: 2/3/2020, 9:36:30 PM command: INSERT, rowCount: 1 
2020-02-03T13:50:45.976Z Local: 2/3/2020, 9:50:45 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:50:45.986Z Local: 2/3/2020, 9:50:45 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:50:45.987Z Local: 2/3/2020, 9:50:45 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:50:45.989Z Local: 2/3/2020, 9:50:45 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:50:45.990Z Local: 2/3/2020, 9:50:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:50:46.026Z Local: 2/3/2020, 9:50:46 PM command: DO, rowCount: null 
2020-02-03T13:50:46.033Z Local: 2/3/2020, 9:50:46 PM command: DO, rowCount: null 
2020-02-03T13:50:46.046Z Local: 2/3/2020, 9:50:46 PM Error: error: relation "farmers_table" does not exist 
2020-02-03T13:50:46.054Z Local: 2/3/2020, 9:50:46 PM Error: error: relation "farmers_table" does not exist 
2020-02-03T13:50:46.128Z Local: 2/3/2020, 9:50:46 PM command: CREATE, rowCount: null 
2020-02-03T13:51:08.169Z Local: 2/3/2020, 9:51:08 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:51:08.177Z Local: 2/3/2020, 9:51:08 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:51:08.215Z Local: 2/3/2020, 9:51:08 PM command: SELECT, rowCount: 1 
2020-02-03T13:51:08.220Z Local: 2/3/2020, 9:51:08 PM command: INSERT, rowCount: 1 
2020-02-03T13:51:46.625Z Local: 2/3/2020, 9:51:46 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:51:46.634Z Local: 2/3/2020, 9:51:46 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:51:46.635Z Local: 2/3/2020, 9:51:46 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:51:46.636Z Local: 2/3/2020, 9:51:46 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:51:46.637Z Local: 2/3/2020, 9:51:46 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:51:46.638Z Local: 2/3/2020, 9:51:46 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:51:46.639Z Local: 2/3/2020, 9:51:46 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:51:46.643Z Local: 2/3/2020, 9:51:46 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:51:46.644Z Local: 2/3/2020, 9:51:46 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:51:46.645Z Local: 2/3/2020, 9:51:46 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:51:46.646Z Local: 2/3/2020, 9:51:46 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:51:46.646Z Local: 2/3/2020, 9:51:46 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:51:46.700Z Local: 2/3/2020, 9:51:46 PM command: SELECT, rowCount: 1 
2020-02-03T13:51:46.703Z Local: 2/3/2020, 9:51:46 PM command: INSERT, rowCount: 1 
2020-02-03T13:51:46.706Z Local: 2/3/2020, 9:51:46 PM command: SELECT, rowCount: 1 
2020-02-03T13:51:46.713Z Local: 2/3/2020, 9:51:46 PM command: INSERT, rowCount: 1 
2020-02-03T13:51:46.716Z Local: 2/3/2020, 9:51:46 PM command: INSERT, rowCount: 1 
2020-02-03T13:51:46.731Z Local: 2/3/2020, 9:51:46 PM command: INSERT, rowCount: 1 
2020-02-03T13:51:46.741Z Local: 2/3/2020, 9:51:46 PM command: INSERT, rowCount: 1 
2020-02-03T13:51:46.744Z Local: 2/3/2020, 9:51:46 PM command: INSERT, rowCount: 1 
2020-02-03T13:51:46.754Z Local: 2/3/2020, 9:51:46 PM command: INSERT, rowCount: 1 
2020-02-03T13:51:46.766Z Local: 2/3/2020, 9:51:46 PM command: INSERT, rowCount: 1 
2020-02-03T13:51:46.773Z Local: 2/3/2020, 9:51:46 PM command: INSERT, rowCount: 1 
2020-02-03T13:51:46.782Z Local: 2/3/2020, 9:51:46 PM command: INSERT, rowCount: 1 
2020-02-03T13:52:18.803Z Local: 2/3/2020, 9:52:18 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:52:18.812Z Local: 2/3/2020, 9:52:18 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:52:18.841Z Local: 2/3/2020, 9:52:18 PM command: SELECT, rowCount: 1 
2020-02-03T13:52:18.851Z Local: 2/3/2020, 9:52:18 PM command: SELECT, rowCount: 1 
2020-02-03T13:52:58.201Z Local: 2/3/2020, 9:52:58 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:52:58.235Z Local: 2/3/2020, 9:52:58 PM command: DO, rowCount: null 
2020-02-03T13:52:58.242Z Local: 2/3/2020, 9:52:58 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:52:58.245Z Local: 2/3/2020, 9:52:58 PM command: DO, rowCount: null 
2020-02-03T13:52:58.252Z Local: 2/3/2020, 9:52:58 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:52:58.255Z Local: 2/3/2020, 9:52:58 PM command: CREATE, rowCount: null 
2020-02-03T13:52:58.256Z Local: 2/3/2020, 9:52:58 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:52:58.273Z Local: 2/3/2020, 9:52:58 PM command: SELECT, rowCount: 1 
2020-02-03T13:52:58.280Z Local: 2/3/2020, 9:52:58 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T13:52:58.297Z Local: 2/3/2020, 9:52:58 PM command: INSERT, rowCount: 1 
2020-02-03T13:52:58.299Z Local: 2/3/2020, 9:52:58 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:52:58.308Z Local: 2/3/2020, 9:52:58 PM command: INSERT, rowCount: 1 
2020-02-03T13:52:58.311Z Local: 2/3/2020, 9:52:58 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:52:58.321Z Local: 2/3/2020, 9:52:58 PM command: SELECT, rowCount: 3 
2020-02-03T13:52:58.327Z Local: 2/3/2020, 9:52:58 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:52:58.347Z Local: 2/3/2020, 9:52:58 PM command: SELECT, rowCount: 13 
2020-02-03T13:52:58.348Z Local: 2/3/2020, 9:52:58 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:52:58.370Z Local: 2/3/2020, 9:52:58 PM command: SELECT, rowCount: 13 
2020-02-03T13:52:58.372Z Local: 2/3/2020, 9:52:58 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '2'; 
2020-02-03T13:52:58.384Z Local: 2/3/2020, 9:52:58 PM command: SELECT, rowCount: 1 
2020-02-03T13:53:00.380Z Local: 2/3/2020, 9:53:00 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:53:00.392Z Local: 2/3/2020, 9:53:00 PM command: SELECT, rowCount: 0 
2020-02-03T13:53:00.397Z Local: 2/3/2020, 9:53:00 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:53:00.399Z Local: 2/3/2020, 9:53:00 PM command: DO, rowCount: null 
2020-02-03T13:53:00.401Z Local: 2/3/2020, 9:53:00 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:53:00.409Z Local: 2/3/2020, 9:53:00 PM command: DO, rowCount: null 
2020-02-03T13:53:00.412Z Local: 2/3/2020, 9:53:00 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T13:53:00.414Z Local: 2/3/2020, 9:53:00 PM command: CREATE, rowCount: null 
2020-02-03T13:53:00.421Z Local: 2/3/2020, 9:53:00 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:53:00.446Z Local: 2/3/2020, 9:53:00 PM command: SELECT, rowCount: 1 
2020-02-03T13:53:00.449Z Local: 2/3/2020, 9:53:00 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:53:00.454Z Local: 2/3/2020, 9:53:00 PM command: INSERT, rowCount: 1 
2020-02-03T13:53:00.462Z Local: 2/3/2020, 9:53:00 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:53:00.477Z Local: 2/3/2020, 9:53:00 PM command: SELECT, rowCount: 3 
2020-02-03T13:53:00.478Z Local: 2/3/2020, 9:53:00 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T13:53:00.508Z Local: 2/3/2020, 9:53:00 PM command: SELECT, rowCount: 42 
2020-02-03T13:53:00.510Z Local: 2/3/2020, 9:53:00 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T13:53:00.539Z Local: 2/3/2020, 9:53:00 PM command: SELECT, rowCount: 42 
2020-02-03T13:53:00.541Z Local: 2/3/2020, 9:53:00 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T13:53:00.547Z Local: 2/3/2020, 9:53:00 PM command: SELECT, rowCount: 1 
2020-02-03T13:53:00.554Z Local: 2/3/2020, 9:53:00 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:53:00.560Z Local: 2/3/2020, 9:53:00 PM command: SELECT, rowCount: 0 
2020-02-03T13:53:00.561Z Local: 2/3/2020, 9:53:00 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:53:00.572Z Local: 2/3/2020, 9:53:00 PM command: SELECT, rowCount: 0 
2020-02-03T13:53:00.573Z Local: 2/3/2020, 9:53:00 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T13:53:00.585Z Local: 2/3/2020, 9:53:00 PM command: SELECT, rowCount: 0 
2020-02-03T13:53:14.606Z Local: 2/3/2020, 9:53:14 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:53:14.624Z Local: 2/3/2020, 9:53:14 PM command: CREATE, rowCount: null 
2020-02-03T13:53:14.628Z Local: 2/3/2020, 9:53:14 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T13:53:14.631Z Local: 2/3/2020, 9:53:14 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T13:53:14.633Z Local: 2/3/2020, 9:53:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:53:14.636Z Local: 2/3/2020, 9:53:14 PM command: SELECT, rowCount: 3 
2020-02-03T13:53:14.638Z Local: 2/3/2020, 9:53:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:53:14.642Z Local: 2/3/2020, 9:53:14 PM command: SELECT, rowCount: 40 
2020-02-03T13:53:14.644Z Local: 2/3/2020, 9:53:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:53:14.648Z Local: 2/3/2020, 9:53:14 PM command: SELECT, rowCount: 40 
2020-02-03T13:53:14.651Z Local: 2/3/2020, 9:53:14 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T13:53:14.652Z Local: 2/3/2020, 9:53:14 PM command: SELECT, rowCount: 1 
2020-02-03T13:53:53.108Z Local: 2/3/2020, 9:53:53 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:53:53.120Z Local: 2/3/2020, 9:53:53 PM Server is listening on port 8000 
2020-02-03T13:53:53.148Z Local: 2/3/2020, 9:53:53 PM command: DO, rowCount: null 
2020-02-03T13:53:53.150Z Local: 2/3/2020, 9:53:53 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:53:53.149Z Local: 2/3/2020, 9:53:53 PM Created Producer type 
2020-02-03T13:53:53.152Z Local: 2/3/2020, 9:53:53 PM command: DO, rowCount: null 
2020-02-03T13:53:53.153Z Local: 2/3/2020, 9:53:53 PM Created Spec type 
2020-02-03T13:53:53.154Z Local: 2/3/2020, 9:53:53 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T13:53:53.160Z Local: 2/3/2020, 9:53:53 PM command: CREATE, rowCount: null 
2020-02-03T13:53:53.161Z Local: 2/3/2020, 9:53:53 PM Created items_table 
2020-02-03T13:53:53.161Z Local: 2/3/2020, 9:53:53 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T13:53:55.266Z Local: 2/3/2020, 9:53:55 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:53:55.307Z Local: 2/3/2020, 9:53:55 PM command: DO, rowCount: null 
2020-02-03T13:53:55.310Z Local: 2/3/2020, 9:53:55 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:53:55.312Z Local: 2/3/2020, 9:53:55 PM command: DO, rowCount: null 
2020-02-03T13:53:55.315Z Local: 2/3/2020, 9:53:55 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:53:55.322Z Local: 2/3/2020, 9:53:55 PM command: CREATE, rowCount: null 
2020-02-03T13:53:55.324Z Local: 2/3/2020, 9:53:55 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T13:53:55.334Z Local: 2/3/2020, 9:53:55 PM command: SELECT, rowCount: 1 
2020-02-03T13:53:55.337Z Local: 2/3/2020, 9:53:55 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T13:53:55.350Z Local: 2/3/2020, 9:53:55 PM command: INSERT, rowCount: 1 
2020-02-03T13:53:55.352Z Local: 2/3/2020, 9:53:55 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T13:53:55.361Z Local: 2/3/2020, 9:53:55 PM command: INSERT, rowCount: 1 
2020-02-03T13:53:55.364Z Local: 2/3/2020, 9:53:55 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:53:55.382Z Local: 2/3/2020, 9:53:55 PM command: SELECT, rowCount: 3 
2020-02-03T13:53:55.383Z Local: 2/3/2020, 9:53:55 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:53:55.405Z Local: 2/3/2020, 9:53:55 PM command: SELECT, rowCount: 15 
2020-02-03T13:53:55.406Z Local: 2/3/2020, 9:53:55 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:53:55.424Z Local: 2/3/2020, 9:53:55 PM command: SELECT, rowCount: 15 
2020-02-03T13:53:55.430Z Local: 2/3/2020, 9:53:55 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '2'; 
2020-02-03T13:53:55.441Z Local: 2/3/2020, 9:53:55 PM command: SELECT, rowCount: 1 
2020-02-03T13:53:57.433Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:53:57.441Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 0 
2020-02-03T13:53:57.450Z Local: 2/3/2020, 9:53:57 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:53:57.453Z Local: 2/3/2020, 9:53:57 PM command: DO, rowCount: null 
2020-02-03T13:53:57.454Z Local: 2/3/2020, 9:53:57 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T13:53:57.462Z Local: 2/3/2020, 9:53:57 PM command: DO, rowCount: null 
2020-02-03T13:53:57.464Z Local: 2/3/2020, 9:53:57 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T13:53:57.467Z Local: 2/3/2020, 9:53:57 PM command: CREATE, rowCount: null 
2020-02-03T13:53:57.474Z Local: 2/3/2020, 9:53:57 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:53:57.477Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 1 
2020-02-03T13:53:57.479Z Local: 2/3/2020, 9:53:57 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:53:57.489Z Local: 2/3/2020, 9:53:57 PM command: INSERT, rowCount: 1 
2020-02-03T13:53:57.490Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:53:57.504Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 3 
2020-02-03T13:53:57.506Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T13:53:57.542Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 43 
2020-02-03T13:53:57.547Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T13:53:57.578Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 43 
2020-02-03T13:53:57.581Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T13:53:57.598Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 1 
2020-02-03T13:53:57.601Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:53:57.621Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 0 
2020-02-03T13:53:57.623Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:53:57.629Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 0 
2020-02-03T13:53:57.638Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T13:53:57.643Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 0 
2020-02-03T13:53:57.657Z Local: 2/3/2020, 9:53:57 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T13:53:57.663Z Local: 2/3/2020, 9:53:57 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:53:57.662Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 1 
2020-02-03T13:53:57.694Z Local: 2/3/2020, 9:53:57 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T13:53:57.706Z Local: 2/3/2020, 9:53:57 PM command: INSERT, rowCount: 1 
2020-02-03T13:53:57.707Z Local: 2/3/2020, 9:53:57 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:53:57.715Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T13:53:57.725Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 1 
2020-02-03T13:53:57.729Z Local: 2/3/2020, 9:53:57 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:53:57.743Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T13:53:57.756Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 0 
2020-02-03T13:53:57.757Z Local: 2/3/2020, 9:53:57 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:53:57.762Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T13:53:57.782Z Local: 2/3/2020, 9:53:57 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:53:57.781Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 0 
2020-02-03T13:53:57.790Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T13:53:57.796Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 0 
2020-02-03T13:53:57.805Z Local: 2/3/2020, 9:53:57 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:53:57.811Z Local: 2/3/2020, 9:53:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T13:53:57.820Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 2 
2020-02-03T13:53:57.821Z Local: 2/3/2020, 9:53:57 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T13:53:57.825Z Local: 2/3/2020, 9:53:57 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T13:53:57.844Z Local: 2/3/2020, 9:53:57 PM command: CREATE, rowCount: null 
2020-02-03T13:53:57.847Z Local: 2/3/2020, 9:53:57 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T13:53:57.850Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T13:53:57.852Z Local: 2/3/2020, 9:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T13:53:57.855Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 3 
2020-02-03T13:53:57.857Z Local: 2/3/2020, 9:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T13:53:57.860Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 40 
2020-02-03T13:53:57.861Z Local: 2/3/2020, 9:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T13:53:57.865Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 40 
2020-02-03T13:53:57.875Z Local: 2/3/2020, 9:53:57 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T13:53:57.876Z Local: 2/3/2020, 9:53:57 PM command: SELECT, rowCount: 1 
2020-02-03T14:10:47.099Z Local: 2/3/2020, 10:10:47 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T14:10:47.112Z Local: 2/3/2020, 10:10:47 PM Server is listening on port 8000 
2020-02-03T14:10:47.139Z Local: 2/3/2020, 10:10:47 PM command: DO, rowCount: null 
2020-02-03T14:10:47.140Z Local: 2/3/2020, 10:10:47 PM Created Producer type 
2020-02-03T14:10:47.140Z Local: 2/3/2020, 10:10:47 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T14:10:47.143Z Local: 2/3/2020, 10:10:47 PM command: DO, rowCount: null 
2020-02-03T14:10:47.144Z Local: 2/3/2020, 10:10:47 PM Created Spec type 
2020-02-03T14:10:47.144Z Local: 2/3/2020, 10:10:47 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T14:10:47.147Z Local: 2/3/2020, 10:10:47 PM command: CREATE, rowCount: null 
2020-02-03T14:10:47.148Z Local: 2/3/2020, 10:10:47 PM Created items_table 
2020-02-03T14:10:47.152Z Local: 2/3/2020, 10:10:47 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T14:10:50.960Z Local: 2/3/2020, 10:10:50 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T14:10:50.991Z Local: 2/3/2020, 10:10:50 PM command: DO, rowCount: null 
2020-02-03T14:10:50.997Z Local: 2/3/2020, 10:10:50 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T14:10:51.001Z Local: 2/3/2020, 10:10:51 PM command: DO, rowCount: null 
2020-02-03T14:10:51.007Z Local: 2/3/2020, 10:10:51 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T14:10:51.010Z Local: 2/3/2020, 10:10:51 PM command: CREATE, rowCount: null 
2020-02-03T14:10:51.012Z Local: 2/3/2020, 10:10:51 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T14:10:51.028Z Local: 2/3/2020, 10:10:51 PM command: SELECT, rowCount: 1 
2020-02-03T14:10:51.036Z Local: 2/3/2020, 10:10:51 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T14:10:51.054Z Local: 2/3/2020, 10:10:51 PM command: INSERT, rowCount: 1 
2020-02-03T14:10:51.055Z Local: 2/3/2020, 10:10:51 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T14:10:51.062Z Local: 2/3/2020, 10:10:51 PM command: INSERT, rowCount: 1 
2020-02-03T14:10:51.064Z Local: 2/3/2020, 10:10:51 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T14:10:51.081Z Local: 2/3/2020, 10:10:51 PM command: SELECT, rowCount: 3 
2020-02-03T14:10:51.083Z Local: 2/3/2020, 10:10:51 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T14:10:51.105Z Local: 2/3/2020, 10:10:51 PM command: SELECT, rowCount: 17 
2020-02-03T14:10:51.106Z Local: 2/3/2020, 10:10:51 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T14:10:51.133Z Local: 2/3/2020, 10:10:51 PM command: SELECT, rowCount: 17 
2020-02-03T14:10:51.135Z Local: 2/3/2020, 10:10:51 PM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '2'; 
2020-02-03T14:10:51.151Z Local: 2/3/2020, 10:10:51 PM command: SELECT, rowCount: 1 
2020-02-03T14:10:53.139Z Local: 2/3/2020, 10:10:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-03T14:10:53.159Z Local: 2/3/2020, 10:10:53 PM command: SELECT, rowCount: 17 
2020-02-03T14:10:53.162Z Local: 2/3/2020, 10:10:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '2'; 
2020-02-03T14:10:53.174Z Local: 2/3/2020, 10:10:53 PM command: SELECT, rowCount: 1 
2020-02-03T14:10:55.166Z Local: 2/3/2020, 10:10:55 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T14:10:55.173Z Local: 2/3/2020, 10:10:55 PM command: SELECT, rowCount: 0 
2020-02-03T14:10:57.169Z Local: 2/3/2020, 10:10:57 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T14:10:57.171Z Local: 2/3/2020, 10:10:57 PM command: DO, rowCount: null 
2020-02-03T14:10:57.173Z Local: 2/3/2020, 10:10:57 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T14:10:57.175Z Local: 2/3/2020, 10:10:57 PM command: DO, rowCount: null 
2020-02-03T14:10:57.186Z Local: 2/3/2020, 10:10:57 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T14:10:57.189Z Local: 2/3/2020, 10:10:57 PM command: CREATE, rowCount: null 
2020-02-03T14:10:57.190Z Local: 2/3/2020, 10:10:57 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T14:10:57.223Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 1 
2020-02-03T14:10:57.225Z Local: 2/3/2020, 10:10:57 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T14:10:57.229Z Local: 2/3/2020, 10:10:57 PM command: INSERT, rowCount: 1 
2020-02-03T14:10:57.232Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T14:10:57.244Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 3 
2020-02-03T14:10:57.246Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T14:10:57.283Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 45 
2020-02-03T14:10:57.284Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T14:10:57.317Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 45 
2020-02-03T14:10:57.319Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T14:10:57.324Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 1 
2020-02-03T14:10:57.334Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T14:10:57.339Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 0 
2020-02-03T14:10:57.341Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T14:10:57.353Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 0 
2020-02-03T14:10:57.355Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T14:10:57.367Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 0 
2020-02-03T14:10:57.380Z Local: 2/3/2020, 10:10:57 PM SELECT COUNT(*) FROM items_table; 
2020-02-03T14:10:57.405Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 1 
2020-02-03T14:10:57.406Z Local: 2/3/2020, 10:10:57 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T14:10:57.435Z Local: 2/3/2020, 10:10:57 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T14:10:57.455Z Local: 2/3/2020, 10:10:57 PM command: INSERT, rowCount: 1 
2020-02-03T14:10:57.456Z Local: 2/3/2020, 10:10:57 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T14:10:57.464Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T14:10:57.482Z Local: 2/3/2020, 10:10:57 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T14:10:57.478Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 1 
2020-02-03T14:10:57.490Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T14:10:57.497Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 0 
2020-02-03T14:10:57.502Z Local: 2/3/2020, 10:10:57 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T14:10:57.510Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T14:10:57.518Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 0 
2020-02-03T14:10:57.519Z Local: 2/3/2020, 10:10:57 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T14:10:57.525Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T14:10:57.530Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 0 
2020-02-03T14:10:57.531Z Local: 2/3/2020, 10:10:57 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T14:10:57.540Z Local: 2/3/2020, 10:10:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T14:10:57.556Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 2 
2020-02-03T14:10:57.557Z Local: 2/3/2020, 10:10:57 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T14:10:57.561Z Local: 2/3/2020, 10:10:57 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T14:10:57.579Z Local: 2/3/2020, 10:10:57 PM command: CREATE, rowCount: null 
2020-02-03T14:10:57.582Z Local: 2/3/2020, 10:10:57 PM SELECT COUNT(*) FROM posts_table; 
2020-02-03T14:10:57.585Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T14:10:57.588Z Local: 2/3/2020, 10:10:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T14:10:57.590Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 3 
2020-02-03T14:10:57.593Z Local: 2/3/2020, 10:10:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T14:10:57.596Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 40 
2020-02-03T14:10:57.598Z Local: 2/3/2020, 10:10:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T14:10:57.603Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 40 
2020-02-03T14:10:57.615Z Local: 2/3/2020, 10:10:57 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T14:10:57.617Z Local: 2/3/2020, 10:10:57 PM command: SELECT, rowCount: 1 
2020-02-03T16:43:46.405Z Local: 2/4/2020, 12:43:46 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:43:46.419Z Local: 2/4/2020, 12:43:46 AM Server is listening on port 8000 
2020-02-03T16:43:46.477Z Local: 2/4/2020, 12:43:46 AM command: DO, rowCount: null 
2020-02-03T16:43:46.479Z Local: 2/4/2020, 12:43:46 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:43:46.479Z Local: 2/4/2020, 12:43:46 AM Created Producer type 
2020-02-03T16:43:46.481Z Local: 2/4/2020, 12:43:46 AM command: DO, rowCount: null 
2020-02-03T16:43:46.482Z Local: 2/4/2020, 12:43:46 AM Created Spec type 
2020-02-03T16:43:46.483Z Local: 2/4/2020, 12:43:46 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T16:43:46.488Z Local: 2/4/2020, 12:43:46 AM command: CREATE, rowCount: null 
2020-02-03T16:43:46.490Z Local: 2/4/2020, 12:43:46 AM Created items_table 
2020-02-03T16:43:46.491Z Local: 2/4/2020, 12:43:46 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-03T16:43:51.843Z Local: 2/4/2020, 12:43:51 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:43:51.877Z Local: 2/4/2020, 12:43:51 AM command: DO, rowCount: null 
2020-02-03T16:43:51.880Z Local: 2/4/2020, 12:43:51 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:43:51.882Z Local: 2/4/2020, 12:43:51 AM command: DO, rowCount: null 
2020-02-03T16:43:51.885Z Local: 2/4/2020, 12:43:51 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T16:43:51.888Z Local: 2/4/2020, 12:43:51 AM command: CREATE, rowCount: null 
2020-02-03T16:43:51.892Z Local: 2/4/2020, 12:43:51 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T16:43:51.918Z Local: 2/4/2020, 12:43:51 AM command: SELECT, rowCount: 1 
2020-02-03T16:43:51.922Z Local: 2/4/2020, 12:43:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T16:43:51.942Z Local: 2/4/2020, 12:43:51 AM command: INSERT, rowCount: 1 
2020-02-03T16:43:51.943Z Local: 2/4/2020, 12:43:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T16:43:51.950Z Local: 2/4/2020, 12:43:51 AM command: INSERT, rowCount: 1 
2020-02-03T16:43:51.953Z Local: 2/4/2020, 12:43:51 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T16:43:51.959Z Local: 2/4/2020, 12:43:51 AM command: SELECT, rowCount: 3 
2020-02-03T16:43:51.960Z Local: 2/4/2020, 12:43:51 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T16:43:51.964Z Local: 2/4/2020, 12:43:51 AM command: SELECT, rowCount: 19 
2020-02-03T16:43:51.966Z Local: 2/4/2020, 12:43:51 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T16:43:51.969Z Local: 2/4/2020, 12:43:51 AM command: SELECT, rowCount: 19 
2020-02-03T16:43:51.974Z Local: 2/4/2020, 12:43:51 AM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '2'; 
2020-02-03T16:43:51.977Z Local: 2/4/2020, 12:43:51 AM command: SELECT, rowCount: 1 
2020-02-03T16:43:53.983Z Local: 2/4/2020, 12:43:53 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-03T16:43:53.987Z Local: 2/4/2020, 12:43:53 AM command: SELECT, rowCount: 19 
2020-02-03T16:43:53.989Z Local: 2/4/2020, 12:43:53 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '2'; 
2020-02-03T16:43:53.991Z Local: 2/4/2020, 12:43:53 AM command: SELECT, rowCount: 1 
2020-02-03T16:43:55.993Z Local: 2/4/2020, 12:43:55 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T16:43:55.995Z Local: 2/4/2020, 12:43:55 AM command: SELECT, rowCount: 0 
2020-02-03T16:43:57.997Z Local: 2/4/2020, 12:43:57 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:43:57.998Z Local: 2/4/2020, 12:43:57 AM command: DO, rowCount: null 
2020-02-03T16:43:58.000Z Local: 2/4/2020, 12:43:58 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:43:58.001Z Local: 2/4/2020, 12:43:58 AM command: DO, rowCount: null 
2020-02-03T16:43:58.003Z Local: 2/4/2020, 12:43:58 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-03T16:43:58.008Z Local: 2/4/2020, 12:43:58 AM command: CREATE, rowCount: null 
2020-02-03T16:43:58.010Z Local: 2/4/2020, 12:43:58 AM SELECT COUNT(*) FROM items_table; 
2020-02-03T16:43:58.026Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 1 
2020-02-03T16:43:58.028Z Local: 2/4/2020, 12:43:58 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T16:43:58.035Z Local: 2/4/2020, 12:43:58 AM command: INSERT, rowCount: 1 
2020-02-03T16:43:58.037Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-03T16:43:58.040Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 3 
2020-02-03T16:43:58.044Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-03T16:43:58.049Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 47 
2020-02-03T16:43:58.051Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-03T16:43:58.059Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 47 
2020-02-03T16:43:58.060Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-03T16:43:58.062Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 1 
2020-02-03T16:43:58.067Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T16:43:58.069Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 0 
2020-02-03T16:43:58.071Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T16:43:58.072Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 0 
2020-02-03T16:43:58.074Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-03T16:43:58.083Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 0 
2020-02-03T16:43:58.100Z Local: 2/4/2020, 12:43:58 AM SELECT COUNT(*) FROM items_table; 
2020-02-03T16:43:58.122Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 1 
2020-02-03T16:43:58.124Z Local: 2/4/2020, 12:43:58 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T16:43:58.165Z Local: 2/4/2020, 12:43:58 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-03T16:43:58.176Z Local: 2/4/2020, 12:43:58 AM command: INSERT, rowCount: 1 
2020-02-03T16:43:58.177Z Local: 2/4/2020, 12:43:58 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T16:43:58.185Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-03T16:43:58.188Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 1 
2020-02-03T16:43:58.193Z Local: 2/4/2020, 12:43:58 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-03T16:43:58.204Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-03T16:43:58.206Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 0 
2020-02-03T16:43:58.207Z Local: 2/4/2020, 12:43:58 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T16:43:58.215Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-03T16:43:58.216Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 0 
2020-02-03T16:43:58.217Z Local: 2/4/2020, 12:43:58 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T16:43:58.224Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-03T16:43:58.228Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 0 
2020-02-03T16:43:58.229Z Local: 2/4/2020, 12:43:58 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-03T16:43:58.237Z Local: 2/4/2020, 12:43:58 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-03T16:43:58.240Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 2 
2020-02-03T16:43:58.241Z Local: 2/4/2020, 12:43:58 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-03T16:43:58.244Z Local: 2/4/2020, 12:43:58 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T16:43:58.265Z Local: 2/4/2020, 12:43:58 AM command: CREATE, rowCount: null 
2020-02-03T16:43:58.268Z Local: 2/4/2020, 12:43:58 AM SELECT COUNT(*) FROM posts_table; 
2020-02-03T16:43:58.271Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 1, post count: 40 
2020-02-03T16:43:58.273Z Local: 2/4/2020, 12:43:58 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T16:43:58.276Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 3 
2020-02-03T16:43:58.278Z Local: 2/4/2020, 12:43:58 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T16:43:58.282Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 40 
2020-02-03T16:43:58.284Z Local: 2/4/2020, 12:43:58 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-03T16:43:58.289Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 40 
2020-02-03T16:43:58.291Z Local: 2/4/2020, 12:43:58 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-03T16:43:58.292Z Local: 2/4/2020, 12:43:58 AM command: SELECT, rowCount: 1 
2020-02-03T16:46:35.987Z Local: 2/4/2020, 12:46:35 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:46:36.016Z Local: 2/4/2020, 12:46:36 AM command: DO, rowCount: null 
2020-02-03T16:46:36.021Z Local: 2/4/2020, 12:46:36 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:46:36.022Z Local: 2/4/2020, 12:46:36 AM command: DO, rowCount: null 
2020-02-03T16:46:36.025Z Local: 2/4/2020, 12:46:36 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T16:46:36.028Z Local: 2/4/2020, 12:46:36 AM command: CREATE, rowCount: null 
2020-02-03T16:46:36.033Z Local: 2/4/2020, 12:46:36 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T16:46:36.048Z Local: 2/4/2020, 12:46:36 AM command: SELECT, rowCount: 1 
2020-02-03T16:46:36.052Z Local: 2/4/2020, 12:46:36 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T16:46:36.067Z Local: 2/4/2020, 12:46:36 AM command: INSERT, rowCount: 1 
2020-02-03T16:46:36.070Z Local: 2/4/2020, 12:46:36 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T16:46:36.077Z Local: 2/4/2020, 12:46:36 AM command: INSERT, rowCount: 1 
2020-02-03T16:46:36.079Z Local: 2/4/2020, 12:46:36 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T16:46:36.083Z Local: 2/4/2020, 12:46:36 AM command: SELECT, rowCount: 3 
2020-02-03T16:46:36.087Z Local: 2/4/2020, 12:46:36 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T16:46:36.090Z Local: 2/4/2020, 12:46:36 AM command: SELECT, rowCount: 21 
2020-02-03T16:46:36.092Z Local: 2/4/2020, 12:46:36 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T16:46:36.095Z Local: 2/4/2020, 12:46:36 AM command: SELECT, rowCount: 21 
2020-02-03T16:46:36.102Z Local: 2/4/2020, 12:46:36 AM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '2'; 
2020-02-03T16:46:36.104Z Local: 2/4/2020, 12:46:36 AM command: SELECT, rowCount: 1 
2020-02-03T16:46:38.106Z Local: 2/4/2020, 12:46:38 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-03T16:46:38.109Z Local: 2/4/2020, 12:46:38 AM command: SELECT, rowCount: 21 
2020-02-03T16:46:38.112Z Local: 2/4/2020, 12:46:38 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '2'; 
2020-02-03T16:46:38.114Z Local: 2/4/2020, 12:46:38 AM command: SELECT, rowCount: 1 
2020-02-03T16:46:40.115Z Local: 2/4/2020, 12:46:40 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T16:46:40.117Z Local: 2/4/2020, 12:46:40 AM command: SELECT, rowCount: 0 
2020-02-03T16:47:09.144Z Local: 2/4/2020, 12:47:09 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:47:09.180Z Local: 2/4/2020, 12:47:09 AM command: DO, rowCount: null 
2020-02-03T16:47:09.184Z Local: 2/4/2020, 12:47:09 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:47:09.187Z Local: 2/4/2020, 12:47:09 AM command: DO, rowCount: null 
2020-02-03T16:47:09.189Z Local: 2/4/2020, 12:47:09 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T16:47:09.196Z Local: 2/4/2020, 12:47:09 AM command: CREATE, rowCount: null 
2020-02-03T16:47:09.198Z Local: 2/4/2020, 12:47:09 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T16:47:09.211Z Local: 2/4/2020, 12:47:09 AM command: SELECT, rowCount: 1 
2020-02-03T16:47:09.213Z Local: 2/4/2020, 12:47:09 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T16:47:09.241Z Local: 2/4/2020, 12:47:09 AM command: INSERT, rowCount: 1 
2020-02-03T16:47:09.243Z Local: 2/4/2020, 12:47:09 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T16:47:09.247Z Local: 2/4/2020, 12:47:09 AM command: INSERT, rowCount: 1 
2020-02-03T16:47:09.249Z Local: 2/4/2020, 12:47:09 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T16:47:09.269Z Local: 2/4/2020, 12:47:09 AM command: SELECT, rowCount: 3 
2020-02-03T16:47:09.271Z Local: 2/4/2020, 12:47:09 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T16:47:09.296Z Local: 2/4/2020, 12:47:09 AM command: SELECT, rowCount: 23 
2020-02-03T16:47:09.298Z Local: 2/4/2020, 12:47:09 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T16:47:09.326Z Local: 2/4/2020, 12:47:09 AM command: SELECT, rowCount: 23 
2020-02-03T16:47:09.333Z Local: 2/4/2020, 12:47:09 AM SELECT 
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    id
    FROM farmers_table WHERE id = '2'; 
2020-02-03T16:47:09.347Z Local: 2/4/2020, 12:47:09 AM command: SELECT, rowCount: 1 
2020-02-03T16:47:11.337Z Local: 2/4/2020, 12:47:11 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-03T16:47:11.362Z Local: 2/4/2020, 12:47:11 AM command: SELECT, rowCount: 23 
2020-02-03T16:47:11.369Z Local: 2/4/2020, 12:47:11 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '2'; 
2020-02-03T16:47:11.383Z Local: 2/4/2020, 12:47:11 AM command: SELECT, rowCount: 1 
2020-02-03T16:47:13.373Z Local: 2/4/2020, 12:47:13 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T16:47:13.385Z Local: 2/4/2020, 12:47:13 AM command: SELECT, rowCount: 0 
2020-02-03T16:50:01.994Z Local: 2/4/2020, 12:50:01 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:50:02.033Z Local: 2/4/2020, 12:50:02 AM command: DO, rowCount: null 
2020-02-03T16:50:02.037Z Local: 2/4/2020, 12:50:02 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T16:50:02.039Z Local: 2/4/2020, 12:50:02 AM command: DO, rowCount: null 
2020-02-03T16:50:02.047Z Local: 2/4/2020, 12:50:02 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T16:50:02.050Z Local: 2/4/2020, 12:50:02 AM command: CREATE, rowCount: null 
2020-02-03T16:50:02.051Z Local: 2/4/2020, 12:50:02 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T16:50:02.061Z Local: 2/4/2020, 12:50:02 AM command: SELECT, rowCount: 1 
2020-02-03T16:50:02.063Z Local: 2/4/2020, 12:50:02 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T16:50:02.084Z Local: 2/4/2020, 12:50:02 AM command: INSERT, rowCount: 1 
2020-02-03T16:50:02.085Z Local: 2/4/2020, 12:50:02 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T16:50:02.096Z Local: 2/4/2020, 12:50:02 AM command: INSERT, rowCount: 1 
2020-02-03T16:50:02.098Z Local: 2/4/2020, 12:50:02 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T16:50:02.113Z Local: 2/4/2020, 12:50:02 AM command: SELECT, rowCount: 3 
2020-02-03T16:50:02.114Z Local: 2/4/2020, 12:50:02 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T16:50:02.141Z Local: 2/4/2020, 12:50:02 AM command: SELECT, rowCount: 25 
2020-02-03T16:50:02.143Z Local: 2/4/2020, 12:50:02 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T16:50:02.173Z Local: 2/4/2020, 12:50:02 AM command: SELECT, rowCount: 25 
2020-02-03T16:50:02.175Z Local: 2/4/2020, 12:50:02 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on,
    FROM farmers_table WHERE id = '2'; 
2020-02-03T16:50:02.178Z Local: 2/4/2020, 12:50:02 AM Error: error: syntax error at or near "FROM" 
2020-02-03T16:50:04.179Z Local: 2/4/2020, 12:50:04 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-03T16:50:04.219Z Local: 2/4/2020, 12:50:04 AM command: SELECT, rowCount: 25 
2020-02-03T16:50:04.221Z Local: 2/4/2020, 12:50:04 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE id = '2'; 
2020-02-03T16:50:04.234Z Local: 2/4/2020, 12:50:04 AM command: SELECT, rowCount: 1 
2020-02-03T16:50:06.226Z Local: 2/4/2020, 12:50:06 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T16:50:06.233Z Local: 2/4/2020, 12:50:06 AM command: SELECT, rowCount: 0 
2020-02-03T17:01:16.055Z Local: 2/4/2020, 1:01:16 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T17:01:16.092Z Local: 2/4/2020, 1:01:16 AM command: DO, rowCount: null 
2020-02-03T17:01:16.096Z Local: 2/4/2020, 1:01:16 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-03T17:01:16.098Z Local: 2/4/2020, 1:01:16 AM command: DO, rowCount: null 
2020-02-03T17:01:16.100Z Local: 2/4/2020, 1:01:16 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-03T17:01:16.107Z Local: 2/4/2020, 1:01:16 AM command: CREATE, rowCount: null 
2020-02-03T17:01:16.109Z Local: 2/4/2020, 1:01:16 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-03T17:01:16.132Z Local: 2/4/2020, 1:01:16 AM command: SELECT, rowCount: 1 
2020-02-03T17:01:16.134Z Local: 2/4/2020, 1:01:16 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-03T17:01:16.154Z Local: 2/4/2020, 1:01:16 AM command: INSERT, rowCount: 1 
2020-02-03T17:01:16.159Z Local: 2/4/2020, 1:01:16 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-03T17:01:16.164Z Local: 2/4/2020, 1:01:16 AM command: INSERT, rowCount: 1 
2020-02-03T17:01:16.166Z Local: 2/4/2020, 1:01:16 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-03T17:01:16.187Z Local: 2/4/2020, 1:01:16 AM command: SELECT, rowCount: 3 
2020-02-03T17:01:16.188Z Local: 2/4/2020, 1:01:16 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-03T17:01:16.222Z Local: 2/4/2020, 1:01:16 AM command: SELECT, rowCount: 27 
2020-02-03T17:01:16.229Z Local: 2/4/2020, 1:01:16 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-03T17:01:16.261Z Local: 2/4/2020, 1:01:16 AM command: SELECT, rowCount: 27 
2020-02-03T17:01:16.263Z Local: 2/4/2020, 1:01:16 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-03T17:01:16.278Z Local: 2/4/2020, 1:01:16 AM command: SELECT, rowCount: 1 
2020-02-03T17:01:16.279Z Local: 2/4/2020, 1:01:16 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-03T17:01:16.311Z Local: 2/4/2020, 1:01:16 AM command: SELECT, rowCount: 27 
2020-02-03T17:01:16.314Z Local: 2/4/2020, 1:01:16 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-03T17:01:16.324Z Local: 2/4/2020, 1:01:16 AM command: SELECT, rowCount: 1 
2020-02-03T17:01:18.317Z Local: 2/4/2020, 1:01:18 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-03T17:01:18.330Z Local: 2/4/2020, 1:01:18 AM command: SELECT, rowCount: 0 
2020-02-04T06:46:35.323Z Local: 2/4/2020, 2:46:35 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T06:46:35.342Z Local: 2/4/2020, 2:46:35 PM Server is listening on port 8000 
2020-02-04T06:46:35.452Z Local: 2/4/2020, 2:46:35 PM command: DO, rowCount: null 
2020-02-04T06:46:35.454Z Local: 2/4/2020, 2:46:35 PM Created Producer type 
2020-02-04T06:46:35.455Z Local: 2/4/2020, 2:46:35 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T06:46:35.461Z Local: 2/4/2020, 2:46:35 PM command: DO, rowCount: null 
2020-02-04T06:46:35.462Z Local: 2/4/2020, 2:46:35 PM Created Spec type 
2020-02-04T06:46:35.469Z Local: 2/4/2020, 2:46:35 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T06:46:35.477Z Local: 2/4/2020, 2:46:35 PM command: CREATE, rowCount: null 
2020-02-04T06:46:35.479Z Local: 2/4/2020, 2:46:35 PM Created items_table 
2020-02-04T06:46:35.485Z Local: 2/4/2020, 2:46:35 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T06:47:20.981Z Local: 2/4/2020, 2:47:20 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T06:47:21.054Z Local: 2/4/2020, 2:47:21 PM command: DO, rowCount: null 
2020-02-04T06:47:21.072Z Local: 2/4/2020, 2:47:21 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T06:47:21.087Z Local: 2/4/2020, 2:47:21 PM command: DO, rowCount: null 
2020-02-04T06:47:21.109Z Local: 2/4/2020, 2:47:21 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T06:47:21.131Z Local: 2/4/2020, 2:47:21 PM command: CREATE, rowCount: null 
2020-02-04T06:47:21.153Z Local: 2/4/2020, 2:47:21 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T06:47:21.228Z Local: 2/4/2020, 2:47:21 PM command: SELECT, rowCount: 1 
2020-02-04T06:47:21.236Z Local: 2/4/2020, 2:47:21 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T06:47:21.281Z Local: 2/4/2020, 2:47:21 PM command: INSERT, rowCount: 1 
2020-02-04T06:47:21.286Z Local: 2/4/2020, 2:47:21 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T06:47:21.301Z Local: 2/4/2020, 2:47:21 PM command: INSERT, rowCount: 1 
2020-02-04T06:47:21.309Z Local: 2/4/2020, 2:47:21 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T06:47:21.348Z Local: 2/4/2020, 2:47:21 PM command: SELECT, rowCount: 3 
2020-02-04T06:47:21.353Z Local: 2/4/2020, 2:47:21 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T06:47:21.428Z Local: 2/4/2020, 2:47:21 PM command: SELECT, rowCount: 29 
2020-02-04T06:47:21.433Z Local: 2/4/2020, 2:47:21 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T06:47:21.512Z Local: 2/4/2020, 2:47:21 PM command: SELECT, rowCount: 29 
2020-02-04T06:47:21.519Z Local: 2/4/2020, 2:47:21 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T06:47:21.539Z Local: 2/4/2020, 2:47:21 PM command: SELECT, rowCount: 1 
2020-02-04T06:47:21.554Z Local: 2/4/2020, 2:47:21 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T06:47:21.651Z Local: 2/4/2020, 2:47:21 PM command: SELECT, rowCount: 29 
2020-02-04T06:47:21.674Z Local: 2/4/2020, 2:47:21 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T06:47:21.725Z Local: 2/4/2020, 2:47:21 PM command: SELECT, rowCount: 1 
2020-02-04T06:47:23.693Z Local: 2/4/2020, 2:47:23 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-04T06:47:23.732Z Local: 2/4/2020, 2:47:23 PM command: SELECT, rowCount: 0 
2020-02-04T06:47:25.703Z Local: 2/4/2020, 2:47:25 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T06:47:25.722Z Local: 2/4/2020, 2:47:25 PM command: DO, rowCount: null 
2020-02-04T06:47:25.728Z Local: 2/4/2020, 2:47:25 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T06:47:25.740Z Local: 2/4/2020, 2:47:25 PM command: DO, rowCount: null 
2020-02-04T06:47:25.746Z Local: 2/4/2020, 2:47:25 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T06:47:25.764Z Local: 2/4/2020, 2:47:25 PM command: CREATE, rowCount: null 
2020-02-04T06:47:25.771Z Local: 2/4/2020, 2:47:25 PM SELECT COUNT(*) FROM items_table; 
2020-02-04T06:47:25.842Z Local: 2/4/2020, 2:47:25 PM command: SELECT, rowCount: 1 
2020-02-04T06:47:25.850Z Local: 2/4/2020, 2:47:25 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T06:47:25.866Z Local: 2/4/2020, 2:47:25 PM command: INSERT, rowCount: 1 
2020-02-04T06:47:25.883Z Local: 2/4/2020, 2:47:25 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-04T06:47:25.919Z Local: 2/4/2020, 2:47:25 PM command: SELECT, rowCount: 3 
2020-02-04T06:47:25.924Z Local: 2/4/2020, 2:47:25 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-04T06:47:26.052Z Local: 2/4/2020, 2:47:26 PM command: SELECT, rowCount: 49 
2020-02-04T06:47:26.056Z Local: 2/4/2020, 2:47:26 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-04T06:47:26.182Z Local: 2/4/2020, 2:47:26 PM command: SELECT, rowCount: 49 
2020-02-04T06:47:26.193Z Local: 2/4/2020, 2:47:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-04T06:47:26.232Z Local: 2/4/2020, 2:47:26 PM command: SELECT, rowCount: 1 
2020-02-04T06:47:26.250Z Local: 2/4/2020, 2:47:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T06:47:26.280Z Local: 2/4/2020, 2:47:26 PM command: SELECT, rowCount: 0 
2020-02-04T06:47:26.285Z Local: 2/4/2020, 2:47:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T06:47:26.323Z Local: 2/4/2020, 2:47:26 PM command: SELECT, rowCount: 0 
2020-02-04T06:47:26.329Z Local: 2/4/2020, 2:47:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-04T06:47:26.363Z Local: 2/4/2020, 2:47:26 PM command: SELECT, rowCount: 0 
2020-02-04T06:47:26.413Z Local: 2/4/2020, 2:47:26 PM SELECT COUNT(*) FROM items_table; 
2020-02-04T06:47:26.507Z Local: 2/4/2020, 2:47:26 PM command: SELECT, rowCount: 1 
2020-02-04T06:47:26.510Z Local: 2/4/2020, 2:47:26 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T06:47:26.616Z Local: 2/4/2020, 2:47:26 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T06:47:26.668Z Local: 2/4/2020, 2:47:26 PM command: INSERT, rowCount: 1 
2020-02-04T06:47:26.671Z Local: 2/4/2020, 2:47:26 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T06:47:26.702Z Local: 2/4/2020, 2:47:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-04T06:47:26.744Z Local: 2/4/2020, 2:47:26 PM command: SELECT, rowCount: 1 
2020-02-04T06:47:26.760Z Local: 2/4/2020, 2:47:26 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T06:47:26.786Z Local: 2/4/2020, 2:47:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T06:47:26.824Z Local: 2/4/2020, 2:47:26 PM command: SELECT, rowCount: 0 
2020-02-04T06:47:26.826Z Local: 2/4/2020, 2:47:26 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T06:47:26.847Z Local: 2/4/2020, 2:47:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T06:47:26.883Z Local: 2/4/2020, 2:47:26 PM command: SELECT, rowCount: 0 
2020-02-04T06:47:26.886Z Local: 2/4/2020, 2:47:26 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T06:47:26.914Z Local: 2/4/2020, 2:47:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-04T06:47:26.950Z Local: 2/4/2020, 2:47:26 PM command: SELECT, rowCount: 0 
2020-02-04T06:47:26.952Z Local: 2/4/2020, 2:47:26 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T06:47:26.972Z Local: 2/4/2020, 2:47:26 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-04T06:47:27.013Z Local: 2/4/2020, 2:47:27 PM command: SELECT, rowCount: 2 
2020-02-04T06:47:27.015Z Local: 2/4/2020, 2:47:27 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T06:47:27.030Z Local: 2/4/2020, 2:47:27 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T06:47:27.092Z Local: 2/4/2020, 2:47:27 PM command: CREATE, rowCount: null 
2020-02-04T06:47:27.100Z Local: 2/4/2020, 2:47:27 PM SELECT COUNT(*) FROM posts_table; 
2020-02-04T06:47:27.110Z Local: 2/4/2020, 2:47:27 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-04T06:47:27.118Z Local: 2/4/2020, 2:47:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T06:47:27.126Z Local: 2/4/2020, 2:47:27 PM command: SELECT, rowCount: 3 
2020-02-04T06:47:27.132Z Local: 2/4/2020, 2:47:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T06:47:27.142Z Local: 2/4/2020, 2:47:27 PM command: SELECT, rowCount: 40 
2020-02-04T06:47:27.146Z Local: 2/4/2020, 2:47:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-04T06:47:27.155Z Local: 2/4/2020, 2:47:27 PM command: SELECT, rowCount: 40 
2020-02-04T06:47:27.161Z Local: 2/4/2020, 2:47:27 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-04T06:47:27.166Z Local: 2/4/2020, 2:47:27 PM command: SELECT, rowCount: 1 
2020-02-04T07:25:38.578Z Local: 2/4/2020, 3:25:38 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T07:25:38.597Z Local: 2/4/2020, 3:25:38 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T07:25:38.600Z Local: 2/4/2020, 3:25:38 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T07:25:38.708Z Local: 2/4/2020, 3:25:38 PM command: INSERT, rowCount: 1 
2020-02-04T07:25:38.713Z Local: 2/4/2020, 3:25:38 PM command: INSERT, rowCount: 1 
2020-02-04T07:25:38.728Z Local: 2/4/2020, 3:25:38 PM command: INSERT, rowCount: 1 
2020-02-04T09:35:56.318Z Local: 2/4/2020, 5:35:56 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:35:56.348Z Local: 2/4/2020, 5:35:56 PM Server is listening on port 8000 
2020-02-04T09:35:56.434Z Local: 2/4/2020, 5:35:56 PM command: DO, rowCount: null 
2020-02-04T09:35:56.436Z Local: 2/4/2020, 5:35:56 PM Created Producer type 
2020-02-04T09:35:56.437Z Local: 2/4/2020, 5:35:56 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:35:56.443Z Local: 2/4/2020, 5:35:56 PM command: DO, rowCount: null 
2020-02-04T09:35:56.455Z Local: 2/4/2020, 5:35:56 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T09:35:56.453Z Local: 2/4/2020, 5:35:56 PM Created Spec type 
2020-02-04T09:35:56.462Z Local: 2/4/2020, 5:35:56 PM command: CREATE, rowCount: null 
2020-02-04T09:35:56.464Z Local: 2/4/2020, 5:35:56 PM Created items_table 
2020-02-04T09:35:56.473Z Local: 2/4/2020, 5:35:56 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T09:36:02.989Z Local: 2/4/2020, 5:36:02 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:36:03.061Z Local: 2/4/2020, 5:36:03 PM command: DO, rowCount: null 
2020-02-04T09:36:03.073Z Local: 2/4/2020, 5:36:03 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:36:03.091Z Local: 2/4/2020, 5:36:03 PM command: DO, rowCount: null 
2020-02-04T09:36:03.096Z Local: 2/4/2020, 5:36:03 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T09:36:03.111Z Local: 2/4/2020, 5:36:03 PM command: CREATE, rowCount: null 
2020-02-04T09:36:03.116Z Local: 2/4/2020, 5:36:03 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T09:36:03.135Z Local: 2/4/2020, 5:36:03 PM command: SELECT, rowCount: 1 
2020-02-04T09:36:03.147Z Local: 2/4/2020, 5:36:03 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T09:36:03.163Z Local: 2/4/2020, 5:36:03 PM command: INSERT, rowCount: 1 
2020-02-04T09:36:03.166Z Local: 2/4/2020, 5:36:03 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T09:36:03.174Z Local: 2/4/2020, 5:36:03 PM command: INSERT, rowCount: 1 
2020-02-04T09:36:03.179Z Local: 2/4/2020, 5:36:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:36:03.208Z Local: 2/4/2020, 5:36:03 PM command: SELECT, rowCount: 3 
2020-02-04T09:36:03.212Z Local: 2/4/2020, 5:36:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T09:36:03.282Z Local: 2/4/2020, 5:36:03 PM command: SELECT, rowCount: 34 
2020-02-04T09:36:03.284Z Local: 2/4/2020, 5:36:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T09:36:03.346Z Local: 2/4/2020, 5:36:03 PM command: SELECT, rowCount: 34 
2020-02-04T09:36:03.348Z Local: 2/4/2020, 5:36:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T09:36:03.390Z Local: 2/4/2020, 5:36:03 PM command: SELECT, rowCount: 1 
2020-02-04T09:36:03.393Z Local: 2/4/2020, 5:36:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T09:36:03.468Z Local: 2/4/2020, 5:36:03 PM command: SELECT, rowCount: 31 
2020-02-04T09:36:03.474Z Local: 2/4/2020, 5:36:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T09:36:03.503Z Local: 2/4/2020, 5:36:03 PM command: SELECT, rowCount: 3 
2020-02-04T09:36:05.481Z Local: 2/4/2020, 5:36:05 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-04T09:36:05.499Z Local: 2/4/2020, 5:36:05 PM command: SELECT, rowCount: 0 
2020-02-04T09:36:07.486Z Local: 2/4/2020, 5:36:07 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:36:07.490Z Local: 2/4/2020, 5:36:07 PM command: DO, rowCount: null 
2020-02-04T09:36:07.494Z Local: 2/4/2020, 5:36:07 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:36:07.506Z Local: 2/4/2020, 5:36:07 PM command: DO, rowCount: null 
2020-02-04T09:36:07.509Z Local: 2/4/2020, 5:36:07 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T09:36:07.520Z Local: 2/4/2020, 5:36:07 PM command: CREATE, rowCount: null 
2020-02-04T09:36:07.523Z Local: 2/4/2020, 5:36:07 PM SELECT COUNT(*) FROM items_table; 
2020-02-04T09:36:07.540Z Local: 2/4/2020, 5:36:07 PM command: SELECT, rowCount: 1 
2020-02-04T09:36:07.545Z Local: 2/4/2020, 5:36:07 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T09:36:07.555Z Local: 2/4/2020, 5:36:07 PM command: INSERT, rowCount: 1 
2020-02-04T09:36:07.558Z Local: 2/4/2020, 5:36:07 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:36:07.576Z Local: 2/4/2020, 5:36:07 PM command: SELECT, rowCount: 3 
2020-02-04T09:36:07.578Z Local: 2/4/2020, 5:36:07 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-04T09:36:07.638Z Local: 2/4/2020, 5:36:07 PM command: SELECT, rowCount: 51 
2020-02-04T09:36:07.645Z Local: 2/4/2020, 5:36:07 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-04T09:36:07.713Z Local: 2/4/2020, 5:36:07 PM command: SELECT, rowCount: 51 
2020-02-04T09:36:07.717Z Local: 2/4/2020, 5:36:07 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-04T09:36:07.734Z Local: 2/4/2020, 5:36:07 PM command: SELECT, rowCount: 1 
2020-02-04T09:36:07.739Z Local: 2/4/2020, 5:36:07 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T09:36:07.758Z Local: 2/4/2020, 5:36:07 PM command: SELECT, rowCount: 0 
2020-02-04T09:36:07.762Z Local: 2/4/2020, 5:36:07 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T09:36:07.781Z Local: 2/4/2020, 5:36:07 PM command: SELECT, rowCount: 0 
2020-02-04T09:36:07.785Z Local: 2/4/2020, 5:36:07 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-04T09:36:07.805Z Local: 2/4/2020, 5:36:07 PM command: SELECT, rowCount: 0 
2020-02-04T09:36:07.839Z Local: 2/4/2020, 5:36:07 PM SELECT COUNT(*) FROM items_table; 
2020-02-04T09:36:07.888Z Local: 2/4/2020, 5:36:07 PM command: SELECT, rowCount: 1 
2020-02-04T09:36:07.890Z Local: 2/4/2020, 5:36:07 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:36:07.948Z Local: 2/4/2020, 5:36:07 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T09:36:07.972Z Local: 2/4/2020, 5:36:07 PM command: INSERT, rowCount: 1 
2020-02-04T09:36:07.974Z Local: 2/4/2020, 5:36:07 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:36:07.990Z Local: 2/4/2020, 5:36:07 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-04T09:36:08.010Z Local: 2/4/2020, 5:36:08 PM command: SELECT, rowCount: 1 
2020-02-04T09:36:08.022Z Local: 2/4/2020, 5:36:08 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:36:08.037Z Local: 2/4/2020, 5:36:08 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T09:36:08.059Z Local: 2/4/2020, 5:36:08 PM command: SELECT, rowCount: 0 
2020-02-04T09:36:08.060Z Local: 2/4/2020, 5:36:08 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:36:08.073Z Local: 2/4/2020, 5:36:08 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T09:36:08.092Z Local: 2/4/2020, 5:36:08 PM command: SELECT, rowCount: 0 
2020-02-04T09:36:08.094Z Local: 2/4/2020, 5:36:08 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:36:08.107Z Local: 2/4/2020, 5:36:08 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-04T09:36:08.129Z Local: 2/4/2020, 5:36:08 PM command: SELECT, rowCount: 0 
2020-02-04T09:36:08.130Z Local: 2/4/2020, 5:36:08 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:36:08.144Z Local: 2/4/2020, 5:36:08 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-04T09:36:08.172Z Local: 2/4/2020, 5:36:08 PM command: SELECT, rowCount: 2 
2020-02-04T09:36:08.173Z Local: 2/4/2020, 5:36:08 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:36:08.181Z Local: 2/4/2020, 5:36:08 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T09:36:08.220Z Local: 2/4/2020, 5:36:08 PM command: CREATE, rowCount: null 
2020-02-04T09:36:08.223Z Local: 2/4/2020, 5:36:08 PM SELECT COUNT(*) FROM posts_table; 
2020-02-04T09:36:08.230Z Local: 2/4/2020, 5:36:08 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-04T09:36:08.236Z Local: 2/4/2020, 5:36:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:36:08.241Z Local: 2/4/2020, 5:36:08 PM command: SELECT, rowCount: 3 
2020-02-04T09:36:08.244Z Local: 2/4/2020, 5:36:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T09:36:08.253Z Local: 2/4/2020, 5:36:08 PM command: SELECT, rowCount: 40 
2020-02-04T09:36:08.255Z Local: 2/4/2020, 5:36:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-04T09:36:08.265Z Local: 2/4/2020, 5:36:08 PM command: SELECT, rowCount: 40 
2020-02-04T09:36:08.270Z Local: 2/4/2020, 5:36:08 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-04T09:36:08.273Z Local: 2/4/2020, 5:36:08 PM command: SELECT, rowCount: 1 
2020-02-04T09:36:31.307Z Local: 2/4/2020, 5:36:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '1'; 
2020-02-04T09:36:31.394Z Local: 2/4/2020, 5:36:31 PM command: SELECT, rowCount: 1 
2020-02-04T09:36:45.172Z Local: 2/4/2020, 5:36:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '1' ); 
2020-02-04T09:36:45.301Z Local: 2/4/2020, 5:36:45 PM command: SELECT, rowCount: 24 
2020-02-04T09:45:34.548Z Local: 2/4/2020, 5:45:34 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '1' ); 
2020-02-04T09:45:34.675Z Local: 2/4/2020, 5:45:34 PM command: SELECT, rowCount: 24 
2020-02-04T09:46:01.510Z Local: 2/4/2020, 5:46:01 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '1' ); 
2020-02-04T09:46:01.534Z Local: 2/4/2020, 5:46:01 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T09:46:01.650Z Local: 2/4/2020, 5:46:01 PM command: SELECT, rowCount: 24 
2020-02-04T09:46:01.710Z Local: 2/4/2020, 5:46:01 PM command: SELECT, rowCount: 24 
2020-02-04T09:49:54.258Z Local: 2/4/2020, 5:49:54 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:49:54.295Z Local: 2/4/2020, 5:49:54 PM Server is listening on port 8000 
2020-02-04T09:49:54.375Z Local: 2/4/2020, 5:49:54 PM command: DO, rowCount: null 
2020-02-04T09:49:54.378Z Local: 2/4/2020, 5:49:54 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:49:54.377Z Local: 2/4/2020, 5:49:54 PM Created Producer type 
2020-02-04T09:49:54.386Z Local: 2/4/2020, 5:49:54 PM command: DO, rowCount: null 
2020-02-04T09:49:54.395Z Local: 2/4/2020, 5:49:54 PM Created Spec type 
2020-02-04T09:49:54.397Z Local: 2/4/2020, 5:49:54 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T09:49:54.403Z Local: 2/4/2020, 5:49:54 PM command: CREATE, rowCount: null 
2020-02-04T09:49:54.412Z Local: 2/4/2020, 5:49:54 PM Created items_table 
2020-02-04T09:49:54.413Z Local: 2/4/2020, 5:49:54 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T09:50:00.767Z Local: 2/4/2020, 5:50:00 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:50:00.835Z Local: 2/4/2020, 5:50:00 PM command: DO, rowCount: null 
2020-02-04T09:50:00.843Z Local: 2/4/2020, 5:50:00 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:50:00.851Z Local: 2/4/2020, 5:50:00 PM command: DO, rowCount: null 
2020-02-04T09:50:00.854Z Local: 2/4/2020, 5:50:00 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T09:50:00.863Z Local: 2/4/2020, 5:50:00 PM command: CREATE, rowCount: null 
2020-02-04T09:50:00.866Z Local: 2/4/2020, 5:50:00 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T09:50:00.876Z Local: 2/4/2020, 5:50:00 PM command: SELECT, rowCount: 1 
2020-02-04T09:50:00.888Z Local: 2/4/2020, 5:50:00 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T09:50:00.904Z Local: 2/4/2020, 5:50:00 PM command: INSERT, rowCount: 1 
2020-02-04T09:50:00.907Z Local: 2/4/2020, 5:50:00 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T09:50:00.921Z Local: 2/4/2020, 5:50:00 PM command: INSERT, rowCount: 1 
2020-02-04T09:50:00.925Z Local: 2/4/2020, 5:50:00 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:50:00.969Z Local: 2/4/2020, 5:50:00 PM command: SELECT, rowCount: 3 
2020-02-04T09:50:00.973Z Local: 2/4/2020, 5:50:00 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T09:50:01.040Z Local: 2/4/2020, 5:50:01 PM command: SELECT, rowCount: 36 
2020-02-04T09:50:01.042Z Local: 2/4/2020, 5:50:01 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T09:50:01.100Z Local: 2/4/2020, 5:50:01 PM command: SELECT, rowCount: 36 
2020-02-04T09:50:01.103Z Local: 2/4/2020, 5:50:01 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T09:50:01.121Z Local: 2/4/2020, 5:50:01 PM command: SELECT, rowCount: 1 
2020-02-04T09:50:01.123Z Local: 2/4/2020, 5:50:01 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T09:50:01.179Z Local: 2/4/2020, 5:50:01 PM command: SELECT, rowCount: 33 
2020-02-04T09:50:01.184Z Local: 2/4/2020, 5:50:01 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T09:50:01.209Z Local: 2/4/2020, 5:50:01 PM command: SELECT, rowCount: 3 
2020-02-04T09:50:03.192Z Local: 2/4/2020, 5:50:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T09:50:03.259Z Local: 2/4/2020, 5:50:03 PM command: SELECT, rowCount: 25 
2020-02-04T09:50:05.197Z Local: 2/4/2020, 5:50:05 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:50:05.202Z Local: 2/4/2020, 5:50:05 PM command: DO, rowCount: null 
2020-02-04T09:50:05.205Z Local: 2/4/2020, 5:50:05 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:50:05.215Z Local: 2/4/2020, 5:50:05 PM command: DO, rowCount: null 
2020-02-04T09:50:05.218Z Local: 2/4/2020, 5:50:05 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T09:50:05.227Z Local: 2/4/2020, 5:50:05 PM command: CREATE, rowCount: null 
2020-02-04T09:50:05.230Z Local: 2/4/2020, 5:50:05 PM SELECT COUNT(*) FROM items_table; 
2020-02-04T09:50:05.235Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 1 
2020-02-04T09:50:05.243Z Local: 2/4/2020, 5:50:05 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T09:50:05.249Z Local: 2/4/2020, 5:50:05 PM command: INSERT, rowCount: 1 
2020-02-04T09:50:05.257Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:50:05.273Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 3 
2020-02-04T09:50:05.275Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-04T09:50:05.321Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 53 
2020-02-04T09:50:05.323Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-04T09:50:05.369Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 53 
2020-02-04T09:50:05.372Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-04T09:50:05.384Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 1 
2020-02-04T09:50:05.386Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T09:50:05.394Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 0 
2020-02-04T09:50:05.401Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T09:50:05.414Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 0 
2020-02-04T09:50:05.417Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-04T09:50:05.430Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 0 
2020-02-04T09:50:05.453Z Local: 2/4/2020, 5:50:05 PM SELECT COUNT(*) FROM items_table; 
2020-02-04T09:50:05.502Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 1 
2020-02-04T09:50:05.503Z Local: 2/4/2020, 5:50:05 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:50:05.558Z Local: 2/4/2020, 5:50:05 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T09:50:05.576Z Local: 2/4/2020, 5:50:05 PM command: INSERT, rowCount: 1 
2020-02-04T09:50:05.578Z Local: 2/4/2020, 5:50:05 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:50:05.600Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-04T09:50:05.626Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 1 
2020-02-04T09:50:05.635Z Local: 2/4/2020, 5:50:05 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:50:05.650Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T09:50:05.674Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 0 
2020-02-04T09:50:05.675Z Local: 2/4/2020, 5:50:05 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:50:05.689Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T09:50:05.709Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 0 
2020-02-04T09:50:05.711Z Local: 2/4/2020, 5:50:05 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:50:05.724Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-04T09:50:05.745Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 0 
2020-02-04T09:50:05.747Z Local: 2/4/2020, 5:50:05 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:50:05.761Z Local: 2/4/2020, 5:50:05 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-04T09:50:05.789Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 2 
2020-02-04T09:50:05.790Z Local: 2/4/2020, 5:50:05 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:50:05.800Z Local: 2/4/2020, 5:50:05 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T09:50:05.840Z Local: 2/4/2020, 5:50:05 PM command: CREATE, rowCount: null 
2020-02-04T09:50:05.844Z Local: 2/4/2020, 5:50:05 PM SELECT COUNT(*) FROM posts_table; 
2020-02-04T09:50:05.850Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-04T09:50:05.854Z Local: 2/4/2020, 5:50:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:50:05.861Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 3 
2020-02-04T09:50:05.864Z Local: 2/4/2020, 5:50:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T09:50:05.873Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 40 
2020-02-04T09:50:05.875Z Local: 2/4/2020, 5:50:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-04T09:50:05.883Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 40 
2020-02-04T09:50:05.887Z Local: 2/4/2020, 5:50:05 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-04T09:50:05.891Z Local: 2/4/2020, 5:50:05 PM command: SELECT, rowCount: 1 
2020-02-04T09:50:54.028Z Local: 2/4/2020, 5:50:54 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:50:54.099Z Local: 2/4/2020, 5:50:54 PM command: DO, rowCount: null 
2020-02-04T09:50:54.107Z Local: 2/4/2020, 5:50:54 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:50:54.115Z Local: 2/4/2020, 5:50:54 PM command: DO, rowCount: null 
2020-02-04T09:50:54.120Z Local: 2/4/2020, 5:50:54 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T09:50:54.133Z Local: 2/4/2020, 5:50:54 PM command: CREATE, rowCount: null 
2020-02-04T09:50:54.138Z Local: 2/4/2020, 5:50:54 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T09:50:54.152Z Local: 2/4/2020, 5:50:54 PM command: SELECT, rowCount: 1 
2020-02-04T09:50:54.158Z Local: 2/4/2020, 5:50:54 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T09:50:54.169Z Local: 2/4/2020, 5:50:54 PM command: INSERT, rowCount: 1 
2020-02-04T09:50:54.173Z Local: 2/4/2020, 5:50:54 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T09:50:54.186Z Local: 2/4/2020, 5:50:54 PM command: INSERT, rowCount: 1 
2020-02-04T09:50:54.191Z Local: 2/4/2020, 5:50:54 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:50:54.227Z Local: 2/4/2020, 5:50:54 PM command: SELECT, rowCount: 3 
2020-02-04T09:50:54.230Z Local: 2/4/2020, 5:50:54 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T09:50:54.318Z Local: 2/4/2020, 5:50:54 PM command: SELECT, rowCount: 38 
2020-02-04T09:50:54.321Z Local: 2/4/2020, 5:50:54 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T09:50:54.413Z Local: 2/4/2020, 5:50:54 PM command: SELECT, rowCount: 38 
2020-02-04T09:50:54.417Z Local: 2/4/2020, 5:50:54 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T09:50:54.456Z Local: 2/4/2020, 5:50:54 PM command: SELECT, rowCount: 1 
2020-02-04T09:50:54.460Z Local: 2/4/2020, 5:50:54 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T09:50:54.545Z Local: 2/4/2020, 5:50:54 PM command: SELECT, rowCount: 35 
2020-02-04T09:50:54.551Z Local: 2/4/2020, 5:50:54 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T09:50:54.586Z Local: 2/4/2020, 5:50:54 PM command: SELECT, rowCount: 3 
2020-02-04T09:50:56.557Z Local: 2/4/2020, 5:50:56 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T09:50:56.622Z Local: 2/4/2020, 5:50:56 PM command: SELECT, rowCount: 26 
2020-02-04T09:55:12.717Z Local: 2/4/2020, 5:55:12 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:55:12.737Z Local: 2/4/2020, 5:55:12 PM Server is listening on port 8000 
2020-02-04T09:55:12.798Z Local: 2/4/2020, 5:55:12 PM command: DO, rowCount: null 
2020-02-04T09:55:12.799Z Local: 2/4/2020, 5:55:12 PM Created Producer type 
2020-02-04T09:55:12.800Z Local: 2/4/2020, 5:55:12 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:55:12.813Z Local: 2/4/2020, 5:55:12 PM command: DO, rowCount: null 
2020-02-04T09:55:12.814Z Local: 2/4/2020, 5:55:12 PM Created Spec type 
2020-02-04T09:55:12.816Z Local: 2/4/2020, 5:55:12 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T09:55:12.823Z Local: 2/4/2020, 5:55:12 PM command: CREATE, rowCount: null 
2020-02-04T09:55:12.832Z Local: 2/4/2020, 5:55:12 PM Created items_table 
2020-02-04T09:55:12.833Z Local: 2/4/2020, 5:55:12 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T09:55:16.837Z Local: 2/4/2020, 5:55:16 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:55:16.905Z Local: 2/4/2020, 5:55:16 PM command: DO, rowCount: null 
2020-02-04T09:55:16.915Z Local: 2/4/2020, 5:55:16 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:55:16.922Z Local: 2/4/2020, 5:55:16 PM command: DO, rowCount: null 
2020-02-04T09:55:16.928Z Local: 2/4/2020, 5:55:16 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T09:55:16.942Z Local: 2/4/2020, 5:55:16 PM command: CREATE, rowCount: null 
2020-02-04T09:55:16.946Z Local: 2/4/2020, 5:55:16 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T09:55:16.959Z Local: 2/4/2020, 5:55:16 PM command: SELECT, rowCount: 1 
2020-02-04T09:55:16.964Z Local: 2/4/2020, 5:55:16 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T09:55:16.982Z Local: 2/4/2020, 5:55:16 PM command: INSERT, rowCount: 1 
2020-02-04T09:55:16.986Z Local: 2/4/2020, 5:55:16 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T09:55:17.001Z Local: 2/4/2020, 5:55:17 PM command: INSERT, rowCount: 1 
2020-02-04T09:55:17.014Z Local: 2/4/2020, 5:55:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:55:17.052Z Local: 2/4/2020, 5:55:17 PM command: SELECT, rowCount: 3 
2020-02-04T09:55:17.056Z Local: 2/4/2020, 5:55:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T09:55:17.158Z Local: 2/4/2020, 5:55:17 PM command: SELECT, rowCount: 40 
2020-02-04T09:55:17.166Z Local: 2/4/2020, 5:55:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T09:55:17.252Z Local: 2/4/2020, 5:55:17 PM command: SELECT, rowCount: 40 
2020-02-04T09:55:17.263Z Local: 2/4/2020, 5:55:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T09:55:17.288Z Local: 2/4/2020, 5:55:17 PM command: SELECT, rowCount: 1 
2020-02-04T09:55:17.290Z Local: 2/4/2020, 5:55:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T09:55:17.361Z Local: 2/4/2020, 5:55:17 PM command: SELECT, rowCount: 37 
2020-02-04T09:55:17.366Z Local: 2/4/2020, 5:55:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T09:55:17.395Z Local: 2/4/2020, 5:55:17 PM command: SELECT, rowCount: 3 
2020-02-04T09:55:17.399Z Local: 2/4/2020, 5:55:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T09:55:17.476Z Local: 2/4/2020, 5:55:17 PM command: SELECT, rowCount: 27 
2020-02-04T09:56:17.020Z Local: 2/4/2020, 5:56:17 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:56:17.089Z Local: 2/4/2020, 5:56:17 PM command: DO, rowCount: null 
2020-02-04T09:56:17.096Z Local: 2/4/2020, 5:56:17 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:56:17.105Z Local: 2/4/2020, 5:56:17 PM command: DO, rowCount: null 
2020-02-04T09:56:17.110Z Local: 2/4/2020, 5:56:17 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T09:56:17.122Z Local: 2/4/2020, 5:56:17 PM command: CREATE, rowCount: null 
2020-02-04T09:56:17.125Z Local: 2/4/2020, 5:56:17 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T09:56:17.138Z Local: 2/4/2020, 5:56:17 PM command: SELECT, rowCount: 1 
2020-02-04T09:56:17.144Z Local: 2/4/2020, 5:56:17 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T09:56:17.156Z Local: 2/4/2020, 5:56:17 PM command: INSERT, rowCount: 1 
2020-02-04T09:56:17.160Z Local: 2/4/2020, 5:56:17 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T09:56:17.171Z Local: 2/4/2020, 5:56:17 PM command: INSERT, rowCount: 1 
2020-02-04T09:56:17.176Z Local: 2/4/2020, 5:56:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:56:17.217Z Local: 2/4/2020, 5:56:17 PM command: SELECT, rowCount: 3 
2020-02-04T09:56:17.220Z Local: 2/4/2020, 5:56:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T09:56:17.325Z Local: 2/4/2020, 5:56:17 PM command: SELECT, rowCount: 42 
2020-02-04T09:56:17.327Z Local: 2/4/2020, 5:56:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T09:56:17.392Z Local: 2/4/2020, 5:56:17 PM command: SELECT, rowCount: 42 
2020-02-04T09:56:17.399Z Local: 2/4/2020, 5:56:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T09:56:17.418Z Local: 2/4/2020, 5:56:17 PM command: SELECT, rowCount: 1 
2020-02-04T09:56:17.420Z Local: 2/4/2020, 5:56:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T09:56:17.476Z Local: 2/4/2020, 5:56:17 PM command: SELECT, rowCount: 39 
2020-02-04T09:56:17.481Z Local: 2/4/2020, 5:56:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T09:56:17.496Z Local: 2/4/2020, 5:56:17 PM command: SELECT, rowCount: 3 
2020-02-04T09:56:17.502Z Local: 2/4/2020, 5:56:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T09:56:17.567Z Local: 2/4/2020, 5:56:17 PM command: SELECT, rowCount: 28 
2020-02-04T09:56:30.561Z Local: 2/4/2020, 5:56:30 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:56:30.626Z Local: 2/4/2020, 5:56:30 PM command: DO, rowCount: null 
2020-02-04T09:56:30.634Z Local: 2/4/2020, 5:56:30 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:56:30.638Z Local: 2/4/2020, 5:56:30 PM command: DO, rowCount: null 
2020-02-04T09:56:30.641Z Local: 2/4/2020, 5:56:30 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T09:56:30.646Z Local: 2/4/2020, 5:56:30 PM command: CREATE, rowCount: null 
2020-02-04T09:56:30.652Z Local: 2/4/2020, 5:56:30 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T09:56:30.660Z Local: 2/4/2020, 5:56:30 PM command: SELECT, rowCount: 1 
2020-02-04T09:56:30.668Z Local: 2/4/2020, 5:56:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T09:56:30.680Z Local: 2/4/2020, 5:56:30 PM command: INSERT, rowCount: 1 
2020-02-04T09:56:30.682Z Local: 2/4/2020, 5:56:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T09:56:30.689Z Local: 2/4/2020, 5:56:30 PM command: INSERT, rowCount: 1 
2020-02-04T09:56:30.697Z Local: 2/4/2020, 5:56:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:56:30.718Z Local: 2/4/2020, 5:56:30 PM command: SELECT, rowCount: 3 
2020-02-04T09:56:30.725Z Local: 2/4/2020, 5:56:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T09:56:30.796Z Local: 2/4/2020, 5:56:30 PM command: SELECT, rowCount: 44 
2020-02-04T09:56:30.798Z Local: 2/4/2020, 5:56:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T09:56:30.893Z Local: 2/4/2020, 5:56:30 PM command: SELECT, rowCount: 44 
2020-02-04T09:56:30.896Z Local: 2/4/2020, 5:56:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T09:56:30.922Z Local: 2/4/2020, 5:56:30 PM command: SELECT, rowCount: 1 
2020-02-04T09:56:30.926Z Local: 2/4/2020, 5:56:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T09:56:31.017Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 41 
2020-02-04T09:56:31.030Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T09:56:31.059Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 3 
2020-02-04T09:56:31.063Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T09:56:31.145Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 29 
2020-02-04T09:56:31.151Z Local: 2/4/2020, 5:56:31 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:56:31.159Z Local: 2/4/2020, 5:56:31 PM command: DO, rowCount: null 
2020-02-04T09:56:31.163Z Local: 2/4/2020, 5:56:31 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T09:56:31.168Z Local: 2/4/2020, 5:56:31 PM command: DO, rowCount: null 
2020-02-04T09:56:31.179Z Local: 2/4/2020, 5:56:31 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T09:56:31.184Z Local: 2/4/2020, 5:56:31 PM command: CREATE, rowCount: null 
2020-02-04T09:56:31.196Z Local: 2/4/2020, 5:56:31 PM SELECT COUNT(*) FROM items_table; 
2020-02-04T09:56:31.202Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 1 
2020-02-04T09:56:31.207Z Local: 2/4/2020, 5:56:31 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T09:56:31.220Z Local: 2/4/2020, 5:56:31 PM command: INSERT, rowCount: 1 
2020-02-04T09:56:31.233Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:56:31.260Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 3 
2020-02-04T09:56:31.263Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-04T09:56:31.355Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 55 
2020-02-04T09:56:31.358Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-04T09:56:31.441Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 55 
2020-02-04T09:56:31.444Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-04T09:56:31.463Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 1 
2020-02-04T09:56:31.466Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T09:56:31.483Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 0 
2020-02-04T09:56:31.485Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T09:56:31.500Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 0 
2020-02-04T09:56:31.503Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-04T09:56:31.518Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 0 
2020-02-04T09:56:31.543Z Local: 2/4/2020, 5:56:31 PM SELECT COUNT(*) FROM items_table; 
2020-02-04T09:56:31.590Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 1 
2020-02-04T09:56:31.592Z Local: 2/4/2020, 5:56:31 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:56:31.649Z Local: 2/4/2020, 5:56:31 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T09:56:31.667Z Local: 2/4/2020, 5:56:31 PM command: INSERT, rowCount: 1 
2020-02-04T09:56:31.668Z Local: 2/4/2020, 5:56:31 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:56:31.690Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-04T09:56:31.715Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 1 
2020-02-04T09:56:31.725Z Local: 2/4/2020, 5:56:31 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:56:31.740Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T09:56:31.757Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 0 
2020-02-04T09:56:31.759Z Local: 2/4/2020, 5:56:31 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:56:31.773Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T09:56:31.795Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 0 
2020-02-04T09:56:31.796Z Local: 2/4/2020, 5:56:31 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:56:31.812Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-04T09:56:31.836Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 0 
2020-02-04T09:56:31.838Z Local: 2/4/2020, 5:56:31 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:56:31.852Z Local: 2/4/2020, 5:56:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-04T09:56:31.876Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 2 
2020-02-04T09:56:31.878Z Local: 2/4/2020, 5:56:31 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T09:56:31.893Z Local: 2/4/2020, 5:56:31 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T09:56:31.932Z Local: 2/4/2020, 5:56:31 PM command: CREATE, rowCount: null 
2020-02-04T09:56:31.935Z Local: 2/4/2020, 5:56:31 PM SELECT COUNT(*) FROM posts_table; 
2020-02-04T09:56:31.939Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-04T09:56:31.943Z Local: 2/4/2020, 5:56:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T09:56:31.949Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 3 
2020-02-04T09:56:31.951Z Local: 2/4/2020, 5:56:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T09:56:31.956Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 40 
2020-02-04T09:56:31.959Z Local: 2/4/2020, 5:56:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-04T09:56:31.965Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 40 
2020-02-04T09:56:31.968Z Local: 2/4/2020, 5:56:31 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-04T09:56:31.974Z Local: 2/4/2020, 5:56:31 PM command: SELECT, rowCount: 1 
2020-02-04T14:23:16.759Z Local: 2/4/2020, 10:23:16 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:23:16.771Z Local: 2/4/2020, 10:23:16 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:23:16.777Z Local: 2/4/2020, 10:23:16 PM Server is listening on port 8000 
2020-02-04T14:23:16.838Z Local: 2/4/2020, 10:23:16 PM command: DO, rowCount: null 
2020-02-04T14:23:16.839Z Local: 2/4/2020, 10:23:16 PM Created Producer type 
2020-02-04T14:23:16.839Z Local: 2/4/2020, 10:23:16 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:23:16.842Z Local: 2/4/2020, 10:23:16 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:23:16.842Z Local: 2/4/2020, 10:23:16 PM Created Good type 
2020-02-04T14:23:16.841Z Local: 2/4/2020, 10:23:16 PM command: DO, rowCount: null 
2020-02-04T14:23:16.844Z Local: 2/4/2020, 10:23:16 PM command: DO, rowCount: null 
2020-02-04T14:23:16.845Z Local: 2/4/2020, 10:23:16 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T14:23:16.844Z Local: 2/4/2020, 10:23:16 PM Created Spec type 
2020-02-04T14:23:16.851Z Local: 2/4/2020, 10:23:16 PM command: DO, rowCount: null 
2020-02-04T14:23:16.852Z Local: 2/4/2020, 10:23:16 PM Created Section type 
2020-02-04T14:23:16.853Z Local: 2/4/2020, 10:23:16 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T14:23:16.858Z Local: 2/4/2020, 10:23:16 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T14:23:16.857Z Local: 2/4/2020, 10:23:16 PM command: CREATE, rowCount: null 
2020-02-04T14:23:16.858Z Local: 2/4/2020, 10:23:16 PM Created items_table 
2020-02-04T14:23:16.864Z Local: 2/4/2020, 10:23:16 PM command: CREATE, rowCount: null 
2020-02-04T14:23:16.865Z Local: 2/4/2020, 10:23:16 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T14:23:16.865Z Local: 2/4/2020, 10:23:16 PM Created farmers_table 
2020-02-04T14:25:05.901Z Local: 2/4/2020, 10:25:05 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T14:25:05.939Z Local: 2/4/2020, 10:25:05 PM Sending 1 rows to ::1 with  
2020-02-04T14:25:05.938Z Local: 2/4/2020, 10:25:05 PM command: SELECT, rowCount: 1 
2020-02-04T14:25:46.803Z Local: 2/4/2020, 10:25:46 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 2; 
2020-02-04T14:25:46.867Z Local: 2/4/2020, 10:25:46 PM command: SELECT, rowCount: 2 
2020-02-04T14:25:46.868Z Local: 2/4/2020, 10:25:46 PM Sending 2 rows to ::1 with  
2020-02-04T14:26:30.975Z Local: 2/4/2020, 10:26:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '3'; 
2020-02-04T14:26:31.006Z Local: 2/4/2020, 10:26:31 PM command: SELECT, rowCount: 1 
2020-02-04T14:26:31.010Z Local: 2/4/2020, 10:26:31 PM Sending 1 rows to ::1 with  
2020-02-04T14:27:35.157Z Local: 2/4/2020, 10:27:35 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:27:35.166Z Local: 2/4/2020, 10:27:35 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:27:35.171Z Local: 2/4/2020, 10:27:35 PM Server is listening on port 8000 
2020-02-04T14:27:35.203Z Local: 2/4/2020, 10:27:35 PM command: DO, rowCount: null 
2020-02-04T14:27:35.205Z Local: 2/4/2020, 10:27:35 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:27:35.204Z Local: 2/4/2020, 10:27:35 PM Created Producer type 
2020-02-04T14:27:35.207Z Local: 2/4/2020, 10:27:35 PM command: DO, rowCount: null 
2020-02-04T14:27:35.208Z Local: 2/4/2020, 10:27:35 PM Created Spec type 
2020-02-04T14:27:35.208Z Local: 2/4/2020, 10:27:35 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T14:27:35.211Z Local: 2/4/2020, 10:27:35 PM command: DO, rowCount: null 
2020-02-04T14:27:35.215Z Local: 2/4/2020, 10:27:35 PM Created Good type 
2020-02-04T14:27:35.216Z Local: 2/4/2020, 10:27:35 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:27:35.220Z Local: 2/4/2020, 10:27:35 PM command: CREATE, rowCount: null 
2020-02-04T14:27:35.221Z Local: 2/4/2020, 10:27:35 PM Created items_table 
2020-02-04T14:27:35.222Z Local: 2/4/2020, 10:27:35 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T14:27:35.228Z Local: 2/4/2020, 10:27:35 PM Created Section type 
2020-02-04T14:27:35.227Z Local: 2/4/2020, 10:27:35 PM command: DO, rowCount: null 
2020-02-04T14:27:35.228Z Local: 2/4/2020, 10:27:35 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T14:27:35.231Z Local: 2/4/2020, 10:27:35 PM command: CREATE, rowCount: null 
2020-02-04T14:27:35.232Z Local: 2/4/2020, 10:27:35 PM Created farmers_table 
2020-02-04T14:27:35.233Z Local: 2/4/2020, 10:27:35 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T14:28:01.859Z Local: 2/4/2020, 10:28:01 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T14:28:01.970Z Local: 2/4/2020, 10:28:01 PM Sending 41 rows to ::1 with  
2020-02-04T14:28:01.954Z Local: 2/4/2020, 10:28:01 PM command: SELECT, rowCount: 41 
2020-02-04T14:29:38.706Z Local: 2/4/2020, 10:29:38 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:29:38.715Z Local: 2/4/2020, 10:29:38 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:29:38.720Z Local: 2/4/2020, 10:29:38 PM Server is listening on port 8000 
2020-02-04T14:29:38.750Z Local: 2/4/2020, 10:29:38 PM command: DO, rowCount: null 
2020-02-04T14:29:38.751Z Local: 2/4/2020, 10:29:38 PM Created Producer type 
2020-02-04T14:29:38.751Z Local: 2/4/2020, 10:29:38 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:29:38.754Z Local: 2/4/2020, 10:29:38 PM command: DO, rowCount: null 
2020-02-04T14:29:38.755Z Local: 2/4/2020, 10:29:38 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T14:29:38.755Z Local: 2/4/2020, 10:29:38 PM Created Spec type 
2020-02-04T14:29:38.757Z Local: 2/4/2020, 10:29:38 PM command: DO, rowCount: null 
2020-02-04T14:29:38.759Z Local: 2/4/2020, 10:29:38 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:29:38.758Z Local: 2/4/2020, 10:29:38 PM Created Good type 
2020-02-04T14:29:38.766Z Local: 2/4/2020, 10:29:38 PM command: CREATE, rowCount: null 
2020-02-04T14:29:38.767Z Local: 2/4/2020, 10:29:38 PM Created items_table 
2020-02-04T14:29:38.767Z Local: 2/4/2020, 10:29:38 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T14:29:38.769Z Local: 2/4/2020, 10:29:38 PM command: DO, rowCount: null 
2020-02-04T14:29:38.770Z Local: 2/4/2020, 10:29:38 PM Created Section type 
2020-02-04T14:29:38.770Z Local: 2/4/2020, 10:29:38 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T14:29:38.777Z Local: 2/4/2020, 10:29:38 PM command: CREATE, rowCount: null 
2020-02-04T14:29:38.777Z Local: 2/4/2020, 10:29:38 PM Created farmers_table 
2020-02-04T14:29:38.778Z Local: 2/4/2020, 10:29:38 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T14:30:22.287Z Local: 2/4/2020, 10:30:22 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T14:30:22.347Z Local: 2/4/2020, 10:30:22 PM command: SELECT, rowCount: 29 
2020-02-04T14:30:22.358Z Local: 2/4/2020, 10:30:22 PM Sending 29 rows to ::1 with  
2020-02-04T14:30:47.167Z Local: 2/4/2020, 10:30:47 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '3' ); 
2020-02-04T14:30:47.216Z Local: 2/4/2020, 10:30:47 PM command: SELECT, rowCount: 26 
2020-02-04T14:30:47.222Z Local: 2/4/2020, 10:30:47 PM Sending 26 rows to ::1 with  
2020-02-04T14:31:00.317Z Local: 2/4/2020, 10:31:00 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T14:31:00.349Z Local: 2/4/2020, 10:31:00 PM command: SELECT, rowCount: 3 
2020-02-04T14:31:00.350Z Local: 2/4/2020, 10:31:00 PM Sending 3 rows to ::1 with  
2020-02-04T14:31:55.990Z Local: 2/4/2020, 10:31:55 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-04T14:31:56.019Z Local: 2/4/2020, 10:31:56 PM command: SELECT, rowCount: 2 
2020-02-04T14:31:56.020Z Local: 2/4/2020, 10:31:56 PM Sending 2 rows to ::1 with  
2020-02-04T14:32:17.241Z Local: 2/4/2020, 10:32:17 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T14:32:17.262Z Local: 2/4/2020, 10:32:17 PM command: SELECT, rowCount: 1 
2020-02-04T14:32:17.262Z Local: 2/4/2020, 10:32:17 PM Sending 1 rows to ::1 with  
2020-02-04T14:33:20.991Z Local: 2/4/2020, 10:33:20 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:33:21.000Z Local: 2/4/2020, 10:33:21 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:33:21.005Z Local: 2/4/2020, 10:33:21 PM Server is listening on port 8000 
2020-02-04T14:33:21.036Z Local: 2/4/2020, 10:33:21 PM command: DO, rowCount: null 
2020-02-04T14:33:21.037Z Local: 2/4/2020, 10:33:21 PM Created Producer type 
2020-02-04T14:33:21.037Z Local: 2/4/2020, 10:33:21 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:33:21.040Z Local: 2/4/2020, 10:33:21 PM command: DO, rowCount: null 
2020-02-04T14:33:21.040Z Local: 2/4/2020, 10:33:21 PM Created Spec type 
2020-02-04T14:33:21.041Z Local: 2/4/2020, 10:33:21 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T14:33:21.043Z Local: 2/4/2020, 10:33:21 PM command: DO, rowCount: null 
2020-02-04T14:33:21.044Z Local: 2/4/2020, 10:33:21 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:33:21.043Z Local: 2/4/2020, 10:33:21 PM Created Good type 
2020-02-04T14:33:21.051Z Local: 2/4/2020, 10:33:21 PM command: CREATE, rowCount: null 
2020-02-04T14:33:21.052Z Local: 2/4/2020, 10:33:21 PM Created items_table 
2020-02-04T14:33:21.053Z Local: 2/4/2020, 10:33:21 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T14:33:21.055Z Local: 2/4/2020, 10:33:21 PM command: DO, rowCount: null 
2020-02-04T14:33:21.056Z Local: 2/4/2020, 10:33:21 PM Created Section type 
2020-02-04T14:33:21.056Z Local: 2/4/2020, 10:33:21 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T14:33:21.062Z Local: 2/4/2020, 10:33:21 PM Created farmers_table 
2020-02-04T14:33:21.062Z Local: 2/4/2020, 10:33:21 PM command: CREATE, rowCount: null 
2020-02-04T14:33:21.063Z Local: 2/4/2020, 10:33:21 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T14:33:25.015Z Local: 2/4/2020, 10:33:25 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:33:25.044Z Local: 2/4/2020, 10:33:25 PM command: DO, rowCount: null 
2020-02-04T14:33:25.050Z Local: 2/4/2020, 10:33:25 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:33:25.053Z Local: 2/4/2020, 10:33:25 PM command: DO, rowCount: null 
2020-02-04T14:33:25.058Z Local: 2/4/2020, 10:33:25 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T14:33:25.061Z Local: 2/4/2020, 10:33:25 PM command: CREATE, rowCount: null 
2020-02-04T14:33:25.062Z Local: 2/4/2020, 10:33:25 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T14:33:25.071Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 1 
2020-02-04T14:33:25.073Z Local: 2/4/2020, 10:33:25 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T14:33:25.091Z Local: 2/4/2020, 10:33:25 PM command: INSERT, rowCount: 1 
2020-02-04T14:33:25.095Z Local: 2/4/2020, 10:33:25 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T14:33:25.100Z Local: 2/4/2020, 10:33:25 PM command: INSERT, rowCount: 1 
2020-02-04T14:33:25.106Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T14:33:25.122Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 3 
2020-02-04T14:33:25.123Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T14:33:25.164Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 46 
2020-02-04T14:33:25.165Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T14:33:25.207Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 46 
2020-02-04T14:33:25.209Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T14:33:25.223Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 1 
2020-02-04T14:33:25.226Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T14:33:25.274Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 43 
2020-02-04T14:33:25.277Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T14:33:25.288Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 3 
2020-02-04T14:33:25.291Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T14:33:25.327Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 30 
2020-02-04T14:33:25.333Z Local: 2/4/2020, 10:33:25 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:33:25.336Z Local: 2/4/2020, 10:33:25 PM command: DO, rowCount: null 
2020-02-04T14:33:25.338Z Local: 2/4/2020, 10:33:25 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:33:25.340Z Local: 2/4/2020, 10:33:25 PM command: DO, rowCount: null 
2020-02-04T14:33:25.344Z Local: 2/4/2020, 10:33:25 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T14:33:25.347Z Local: 2/4/2020, 10:33:25 PM command: CREATE, rowCount: null 
2020-02-04T14:33:25.348Z Local: 2/4/2020, 10:33:25 PM SELECT COUNT(*) FROM items_table; 
2020-02-04T14:33:25.352Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 1 
2020-02-04T14:33:25.357Z Local: 2/4/2020, 10:33:25 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T14:33:25.362Z Local: 2/4/2020, 10:33:25 PM command: INSERT, rowCount: 1 
2020-02-04T14:33:25.364Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-04T14:33:25.375Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 3 
2020-02-04T14:33:25.376Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-04T14:33:25.414Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 57 
2020-02-04T14:33:25.415Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-04T14:33:25.443Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 57 
2020-02-04T14:33:25.444Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-04T14:33:25.453Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 1 
2020-02-04T14:33:25.455Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T14:33:25.464Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 0 
2020-02-04T14:33:25.465Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T14:33:25.471Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 0 
2020-02-04T14:33:25.472Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-04T14:33:25.490Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 0 
2020-02-04T14:33:25.505Z Local: 2/4/2020, 10:33:25 PM SELECT COUNT(*) FROM items_table; 
2020-02-04T14:33:25.511Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 1 
2020-02-04T14:33:25.512Z Local: 2/4/2020, 10:33:25 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T14:33:25.536Z Local: 2/4/2020, 10:33:25 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T14:33:25.543Z Local: 2/4/2020, 10:33:25 PM command: INSERT, rowCount: 1 
2020-02-04T14:33:25.544Z Local: 2/4/2020, 10:33:25 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T14:33:25.554Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-04T14:33:25.561Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 1 
2020-02-04T14:33:25.564Z Local: 2/4/2020, 10:33:25 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T14:33:25.572Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T14:33:25.580Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 0 
2020-02-04T14:33:25.581Z Local: 2/4/2020, 10:33:25 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T14:33:25.588Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T14:33:25.594Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 0 
2020-02-04T14:33:25.594Z Local: 2/4/2020, 10:33:25 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T14:33:25.601Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-04T14:33:25.613Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 0 
2020-02-04T14:33:25.614Z Local: 2/4/2020, 10:33:25 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T14:33:25.620Z Local: 2/4/2020, 10:33:25 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-04T14:33:25.636Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 2 
2020-02-04T14:33:25.637Z Local: 2/4/2020, 10:33:25 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T14:33:25.641Z Local: 2/4/2020, 10:33:25 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T14:33:25.659Z Local: 2/4/2020, 10:33:25 PM command: CREATE, rowCount: null 
2020-02-04T14:33:25.660Z Local: 2/4/2020, 10:33:25 PM SELECT COUNT(*) FROM posts_table; 
2020-02-04T14:33:25.663Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-04T14:33:25.665Z Local: 2/4/2020, 10:33:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T14:33:25.668Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 3 
2020-02-04T14:33:25.670Z Local: 2/4/2020, 10:33:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T14:33:25.674Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 40 
2020-02-04T14:33:25.675Z Local: 2/4/2020, 10:33:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-04T14:33:25.678Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 40 
2020-02-04T14:33:25.679Z Local: 2/4/2020, 10:33:25 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-04T14:33:25.681Z Local: 2/4/2020, 10:33:25 PM command: SELECT, rowCount: 1 
2020-02-04T14:46:33.874Z Local: 2/4/2020, 10:46:33 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:46:33.885Z Local: 2/4/2020, 10:46:33 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:46:33.889Z Local: 2/4/2020, 10:46:33 PM Server is listening on port 8000 
2020-02-04T14:46:33.921Z Local: 2/4/2020, 10:46:33 PM Created Producer type 
2020-02-04T14:46:33.920Z Local: 2/4/2020, 10:46:33 PM command: DO, rowCount: null 
2020-02-04T14:46:33.921Z Local: 2/4/2020, 10:46:33 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:46:33.924Z Local: 2/4/2020, 10:46:33 PM command: DO, rowCount: null 
2020-02-04T14:46:33.925Z Local: 2/4/2020, 10:46:33 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T14:46:33.924Z Local: 2/4/2020, 10:46:33 PM Created Spec type 
2020-02-04T14:46:33.927Z Local: 2/4/2020, 10:46:33 PM command: DO, rowCount: null 
2020-02-04T14:46:33.928Z Local: 2/4/2020, 10:46:33 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T14:46:33.928Z Local: 2/4/2020, 10:46:33 PM Created Good type 
2020-02-04T14:46:33.936Z Local: 2/4/2020, 10:46:33 PM command: CREATE, rowCount: null 
2020-02-04T14:46:33.938Z Local: 2/4/2020, 10:46:33 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T14:46:33.937Z Local: 2/4/2020, 10:46:33 PM Created items_table 
2020-02-04T14:46:33.939Z Local: 2/4/2020, 10:46:33 PM command: DO, rowCount: null 
2020-02-04T14:46:33.940Z Local: 2/4/2020, 10:46:33 PM Created Section type 
2020-02-04T14:46:33.941Z Local: 2/4/2020, 10:46:33 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T14:46:33.947Z Local: 2/4/2020, 10:46:33 PM command: CREATE, rowCount: null 
2020-02-04T14:46:33.948Z Local: 2/4/2020, 10:46:33 PM Created farmers_table 
2020-02-04T14:46:33.949Z Local: 2/4/2020, 10:46:33 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:02:56.428Z Local: 2/4/2020, 11:02:56 PM Warning: DbFarmer.insertFarmer content = undefined is not an Array 
2020-02-04T15:04:39.205Z Local: 2/4/2020, 11:04:39 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:04:39.214Z Local: 2/4/2020, 11:04:39 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:04:39.219Z Local: 2/4/2020, 11:04:39 PM Server is listening on port 8000 
2020-02-04T15:04:39.248Z Local: 2/4/2020, 11:04:39 PM command: DO, rowCount: null 
2020-02-04T15:04:39.249Z Local: 2/4/2020, 11:04:39 PM Created Good type 
2020-02-04T15:04:39.249Z Local: 2/4/2020, 11:04:39 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:04:39.252Z Local: 2/4/2020, 11:04:39 PM command: DO, rowCount: null 
2020-02-04T15:04:39.253Z Local: 2/4/2020, 11:04:39 PM Created Section type 
2020-02-04T15:04:39.254Z Local: 2/4/2020, 11:04:39 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T15:04:39.256Z Local: 2/4/2020, 11:04:39 PM command: DO, rowCount: null 
2020-02-04T15:04:39.256Z Local: 2/4/2020, 11:04:39 PM Created Producer type 
2020-02-04T15:04:39.260Z Local: 2/4/2020, 11:04:39 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:04:39.263Z Local: 2/4/2020, 11:04:39 PM command: CREATE, rowCount: null 
2020-02-04T15:04:39.264Z Local: 2/4/2020, 11:04:39 PM Created farmers_table 
2020-02-04T15:04:39.264Z Local: 2/4/2020, 11:04:39 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:04:39.266Z Local: 2/4/2020, 11:04:39 PM command: DO, rowCount: null 
2020-02-04T15:04:39.267Z Local: 2/4/2020, 11:04:39 PM Created Spec type 
2020-02-04T15:04:39.267Z Local: 2/4/2020, 11:04:39 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T15:04:39.273Z Local: 2/4/2020, 11:04:39 PM command: CREATE, rowCount: null 
2020-02-04T15:04:39.273Z Local: 2/4/2020, 11:04:39 PM Created items_table 
2020-02-04T15:04:39.274Z Local: 2/4/2020, 11:04:39 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:04:42.731Z Local: 2/4/2020, 11:04:42 PM Warning: DbFarmer.insertFarmer content = undefined is not an Array 
2020-02-04T15:15:28.718Z Local: 2/4/2020, 11:15:28 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:15:28.727Z Local: 2/4/2020, 11:15:28 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:15:28.732Z Local: 2/4/2020, 11:15:28 PM Server is listening on port 8000 
2020-02-04T15:15:28.765Z Local: 2/4/2020, 11:15:28 PM command: DO, rowCount: null 
2020-02-04T15:15:28.766Z Local: 2/4/2020, 11:15:28 PM Created Good type 
2020-02-04T15:15:28.767Z Local: 2/4/2020, 11:15:28 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:15:28.769Z Local: 2/4/2020, 11:15:28 PM command: DO, rowCount: null 
2020-02-04T15:15:28.770Z Local: 2/4/2020, 11:15:28 PM Created Section type 
2020-02-04T15:15:28.770Z Local: 2/4/2020, 11:15:28 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T15:15:28.772Z Local: 2/4/2020, 11:15:28 PM command: DO, rowCount: null 
2020-02-04T15:15:28.773Z Local: 2/4/2020, 11:15:28 PM Created Producer type 
2020-02-04T15:15:28.776Z Local: 2/4/2020, 11:15:28 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:15:28.782Z Local: 2/4/2020, 11:15:28 PM command: CREATE, rowCount: null 
2020-02-04T15:15:28.782Z Local: 2/4/2020, 11:15:28 PM Created farmers_table 
2020-02-04T15:15:28.783Z Local: 2/4/2020, 11:15:28 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:15:28.785Z Local: 2/4/2020, 11:15:28 PM command: DO, rowCount: null 
2020-02-04T15:15:28.785Z Local: 2/4/2020, 11:15:28 PM Created Spec type 
2020-02-04T15:15:28.786Z Local: 2/4/2020, 11:15:28 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T15:15:28.793Z Local: 2/4/2020, 11:15:28 PM command: CREATE, rowCount: null 
2020-02-04T15:15:28.794Z Local: 2/4/2020, 11:15:28 PM Created items_table 
2020-02-04T15:15:28.795Z Local: 2/4/2020, 11:15:28 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:15:32.321Z Local: 2/4/2020, 11:15:32 PM Warning: DbFarmer.insertFarmer content = undefined is not an Array 
2020-02-04T15:41:11.301Z Local: 2/4/2020, 11:41:11 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:41:11.311Z Local: 2/4/2020, 11:41:11 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:41:11.315Z Local: 2/4/2020, 11:41:11 PM Server is listening on port 8000 
2020-02-04T15:41:11.344Z Local: 2/4/2020, 11:41:11 PM command: DO, rowCount: null 
2020-02-04T15:41:11.344Z Local: 2/4/2020, 11:41:11 PM Created Producer type 
2020-02-04T15:41:11.345Z Local: 2/4/2020, 11:41:11 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:41:11.347Z Local: 2/4/2020, 11:41:11 PM command: DO, rowCount: null 
2020-02-04T15:41:11.348Z Local: 2/4/2020, 11:41:11 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T15:41:11.348Z Local: 2/4/2020, 11:41:11 PM Created Spec type 
2020-02-04T15:41:11.352Z Local: 2/4/2020, 11:41:11 PM command: DO, rowCount: null 
2020-02-04T15:41:11.356Z Local: 2/4/2020, 11:41:11 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:41:11.355Z Local: 2/4/2020, 11:41:11 PM Created Good type 
2020-02-04T15:41:11.360Z Local: 2/4/2020, 11:41:11 PM Created items_table 
2020-02-04T15:41:11.361Z Local: 2/4/2020, 11:41:11 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:41:11.359Z Local: 2/4/2020, 11:41:11 PM command: CREATE, rowCount: null 
2020-02-04T15:41:11.362Z Local: 2/4/2020, 11:41:11 PM command: DO, rowCount: null 
2020-02-04T15:41:11.363Z Local: 2/4/2020, 11:41:11 PM Created Section type 
2020-02-04T15:41:11.364Z Local: 2/4/2020, 11:41:11 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T15:41:11.369Z Local: 2/4/2020, 11:41:11 PM command: CREATE, rowCount: null 
2020-02-04T15:41:11.370Z Local: 2/4/2020, 11:41:11 PM Created farmers_table 
2020-02-04T15:41:11.370Z Local: 2/4/2020, 11:41:11 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:41:14.926Z Local: 2/4/2020, 11:41:14 PM Warning: DbFarmer.insertFarmer content = undefined is not an Array 
2020-02-04T15:41:20.260Z Local: 2/4/2020, 11:41:20 PM Warning: DbFarmer.insertFarmer content = undefined is not an Array 
2020-02-04T15:45:28.335Z Local: 2/4/2020, 11:45:28 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:45:28.345Z Local: 2/4/2020, 11:45:28 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:45:28.349Z Local: 2/4/2020, 11:45:28 PM Server is listening on port 8000 
2020-02-04T15:45:28.375Z Local: 2/4/2020, 11:45:28 PM command: DO, rowCount: null 
2020-02-04T15:45:28.378Z Local: 2/4/2020, 11:45:28 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:45:28.377Z Local: 2/4/2020, 11:45:28 PM Created Good type 
2020-02-04T15:45:28.380Z Local: 2/4/2020, 11:45:28 PM command: DO, rowCount: null 
2020-02-04T15:45:28.381Z Local: 2/4/2020, 11:45:28 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T15:45:28.381Z Local: 2/4/2020, 11:45:28 PM Created Section type 
2020-02-04T15:45:28.383Z Local: 2/4/2020, 11:45:28 PM command: DO, rowCount: null 
2020-02-04T15:45:28.384Z Local: 2/4/2020, 11:45:28 PM Created Producer type 
2020-02-04T15:45:28.385Z Local: 2/4/2020, 11:45:28 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:45:28.389Z Local: 2/4/2020, 11:45:28 PM command: CREATE, rowCount: null 
2020-02-04T15:45:28.391Z Local: 2/4/2020, 11:45:28 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:45:28.390Z Local: 2/4/2020, 11:45:28 PM Created farmers_table 
2020-02-04T15:45:28.393Z Local: 2/4/2020, 11:45:28 PM command: DO, rowCount: null 
2020-02-04T15:45:28.394Z Local: 2/4/2020, 11:45:28 PM Created Spec type 
2020-02-04T15:45:28.394Z Local: 2/4/2020, 11:45:28 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T15:45:28.397Z Local: 2/4/2020, 11:45:28 PM command: CREATE, rowCount: null 
2020-02-04T15:45:28.401Z Local: 2/4/2020, 11:45:28 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:45:28.401Z Local: 2/4/2020, 11:45:28 PM Created items_table 
2020-02-04T15:50:10.230Z Local: 2/4/2020, 11:50:10 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:50:10.240Z Local: 2/4/2020, 11:50:10 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:50:10.244Z Local: 2/4/2020, 11:50:10 PM Server is listening on port 8000 
2020-02-04T15:50:10.272Z Local: 2/4/2020, 11:50:10 PM command: DO, rowCount: null 
2020-02-04T15:50:10.273Z Local: 2/4/2020, 11:50:10 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:50:10.273Z Local: 2/4/2020, 11:50:10 PM Created Good type 
2020-02-04T15:50:10.275Z Local: 2/4/2020, 11:50:10 PM command: DO, rowCount: null 
2020-02-04T15:50:10.276Z Local: 2/4/2020, 11:50:10 PM Created Section type 
2020-02-04T15:50:10.276Z Local: 2/4/2020, 11:50:10 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T15:50:10.279Z Local: 2/4/2020, 11:50:10 PM Created Producer type 
2020-02-04T15:50:10.280Z Local: 2/4/2020, 11:50:10 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:50:10.278Z Local: 2/4/2020, 11:50:10 PM command: DO, rowCount: null 
2020-02-04T15:50:10.285Z Local: 2/4/2020, 11:50:10 PM command: CREATE, rowCount: null 
2020-02-04T15:50:10.286Z Local: 2/4/2020, 11:50:10 PM Created farmers_table 
2020-02-04T15:50:10.287Z Local: 2/4/2020, 11:50:10 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:50:10.288Z Local: 2/4/2020, 11:50:10 PM command: DO, rowCount: null 
2020-02-04T15:50:10.289Z Local: 2/4/2020, 11:50:10 PM Created Spec type 
2020-02-04T15:50:10.290Z Local: 2/4/2020, 11:50:10 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T15:50:10.292Z Local: 2/4/2020, 11:50:10 PM command: CREATE, rowCount: null 
2020-02-04T15:50:10.293Z Local: 2/4/2020, 11:50:10 PM Created items_table 
2020-02-04T15:50:10.297Z Local: 2/4/2020, 11:50:10 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:50:50.568Z Local: 2/4/2020, 11:50:50 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T15:50:50.594Z Local: 2/4/2020, 11:50:50 PM command: INSERT, rowCount: 1 
2020-02-04T15:50:50.596Z Local: 2/4/2020, 11:50:50 PM Sending 1 rows to ::1 with  
2020-02-04T15:53:01.991Z Local: 2/4/2020, 11:53:01 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:53:02.001Z Local: 2/4/2020, 11:53:02 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:53:02.005Z Local: 2/4/2020, 11:53:02 PM Server is listening on port 8000 
2020-02-04T15:53:02.035Z Local: 2/4/2020, 11:53:02 PM command: DO, rowCount: null 
2020-02-04T15:53:02.035Z Local: 2/4/2020, 11:53:02 PM Created Good type 
2020-02-04T15:53:02.036Z Local: 2/4/2020, 11:53:02 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:53:02.038Z Local: 2/4/2020, 11:53:02 PM command: DO, rowCount: null 
2020-02-04T15:53:02.039Z Local: 2/4/2020, 11:53:02 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T15:53:02.039Z Local: 2/4/2020, 11:53:02 PM Created Section type 
2020-02-04T15:53:02.042Z Local: 2/4/2020, 11:53:02 PM command: DO, rowCount: null 
2020-02-04T15:53:02.042Z Local: 2/4/2020, 11:53:02 PM Created Producer type 
2020-02-04T15:53:02.046Z Local: 2/4/2020, 11:53:02 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:53:02.050Z Local: 2/4/2020, 11:53:02 PM command: CREATE, rowCount: null 
2020-02-04T15:53:02.051Z Local: 2/4/2020, 11:53:02 PM Created farmers_table 
2020-02-04T15:53:02.052Z Local: 2/4/2020, 11:53:02 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:53:02.054Z Local: 2/4/2020, 11:53:02 PM command: DO, rowCount: null 
2020-02-04T15:53:02.058Z Local: 2/4/2020, 11:53:02 PM Created Spec type 
2020-02-04T15:53:02.059Z Local: 2/4/2020, 11:53:02 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T15:53:02.061Z Local: 2/4/2020, 11:53:02 PM command: CREATE, rowCount: null 
2020-02-04T15:53:02.062Z Local: 2/4/2020, 11:53:02 PM Created items_table 
2020-02-04T15:53:02.062Z Local: 2/4/2020, 11:53:02 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:53:05.066Z Local: 2/4/2020, 11:53:05 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T15:53:05.085Z Local: 2/4/2020, 11:53:05 PM command: INSERT, rowCount: 1 
2020-02-04T15:53:05.086Z Local: 2/4/2020, 11:53:05 PM Sending 1 rows to ::1 with  
2020-02-04T15:57:28.001Z Local: 2/4/2020, 11:57:28 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:57:28.011Z Local: 2/4/2020, 11:57:28 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:57:28.015Z Local: 2/4/2020, 11:57:28 PM Server is listening on port 8000 
2020-02-04T15:57:28.040Z Local: 2/4/2020, 11:57:28 PM command: DO, rowCount: null 
2020-02-04T15:57:28.043Z Local: 2/4/2020, 11:57:28 PM Created Producer type 
2020-02-04T15:57:28.044Z Local: 2/4/2020, 11:57:28 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:57:28.046Z Local: 2/4/2020, 11:57:28 PM command: DO, rowCount: null 
2020-02-04T15:57:28.047Z Local: 2/4/2020, 11:57:28 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T15:57:28.046Z Local: 2/4/2020, 11:57:28 PM Created Spec type 
2020-02-04T15:57:28.049Z Local: 2/4/2020, 11:57:28 PM command: DO, rowCount: null 
2020-02-04T15:57:28.051Z Local: 2/4/2020, 11:57:28 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:57:28.050Z Local: 2/4/2020, 11:57:28 PM Created Good type 
2020-02-04T15:57:28.056Z Local: 2/4/2020, 11:57:28 PM command: CREATE, rowCount: null 
2020-02-04T15:57:28.056Z Local: 2/4/2020, 11:57:28 PM Created items_table 
2020-02-04T15:57:28.057Z Local: 2/4/2020, 11:57:28 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:57:28.058Z Local: 2/4/2020, 11:57:28 PM command: DO, rowCount: null 
2020-02-04T15:57:28.059Z Local: 2/4/2020, 11:57:28 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T15:57:28.059Z Local: 2/4/2020, 11:57:28 PM Created Section type 
2020-02-04T15:57:28.062Z Local: 2/4/2020, 11:57:28 PM command: CREATE, rowCount: null 
2020-02-04T15:57:28.063Z Local: 2/4/2020, 11:57:28 PM Created farmers_table 
2020-02-04T15:57:28.068Z Local: 2/4/2020, 11:57:28 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:57:43.377Z Local: 2/4/2020, 11:57:43 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T15:57:43.410Z Local: 2/4/2020, 11:57:43 PM command: INSERT, rowCount: 1 
2020-02-04T15:57:43.411Z Local: 2/4/2020, 11:57:43 PM Sending 1 rows to ::1 with  
2020-02-04T15:58:39.646Z Local: 2/4/2020, 11:58:39 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:58:39.656Z Local: 2/4/2020, 11:58:39 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:58:39.662Z Local: 2/4/2020, 11:58:39 PM Server is listening on port 8000 
2020-02-04T15:58:39.692Z Local: 2/4/2020, 11:58:39 PM command: DO, rowCount: null 
2020-02-04T15:58:39.693Z Local: 2/4/2020, 11:58:39 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:58:39.692Z Local: 2/4/2020, 11:58:39 PM Created Producer type 
2020-02-04T15:58:39.696Z Local: 2/4/2020, 11:58:39 PM command: DO, rowCount: null 
2020-02-04T15:58:39.697Z Local: 2/4/2020, 11:58:39 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T15:58:39.696Z Local: 2/4/2020, 11:58:39 PM Created Spec type 
2020-02-04T15:58:39.699Z Local: 2/4/2020, 11:58:39 PM Created Good type 
2020-02-04T15:58:39.704Z Local: 2/4/2020, 11:58:39 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:58:39.699Z Local: 2/4/2020, 11:58:39 PM command: DO, rowCount: null 
2020-02-04T15:58:39.708Z Local: 2/4/2020, 11:58:39 PM command: CREATE, rowCount: null 
2020-02-04T15:58:39.709Z Local: 2/4/2020, 11:58:39 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:58:39.708Z Local: 2/4/2020, 11:58:39 PM Created items_table 
2020-02-04T15:58:39.710Z Local: 2/4/2020, 11:58:39 PM command: DO, rowCount: null 
2020-02-04T15:58:39.711Z Local: 2/4/2020, 11:58:39 PM Created Section type 
2020-02-04T15:58:39.712Z Local: 2/4/2020, 11:58:39 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T15:58:39.717Z Local: 2/4/2020, 11:58:39 PM command: CREATE, rowCount: null 
2020-02-04T15:58:39.718Z Local: 2/4/2020, 11:58:39 PM Created farmers_table 
2020-02-04T15:58:39.719Z Local: 2/4/2020, 11:58:39 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:59:47.520Z Local: 2/4/2020, 11:59:47 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:59:47.511Z Local: 2/4/2020, 11:59:47 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:59:47.527Z Local: 2/4/2020, 11:59:47 PM Server is listening on port 8000 
2020-02-04T15:59:47.556Z Local: 2/4/2020, 11:59:47 PM command: DO, rowCount: null 
2020-02-04T15:59:47.559Z Local: 2/4/2020, 11:59:47 PM Created Producer type 
2020-02-04T15:59:47.560Z Local: 2/4/2020, 11:59:47 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:59:47.564Z Local: 2/4/2020, 11:59:47 PM command: DO, rowCount: null 
2020-02-04T15:59:47.564Z Local: 2/4/2020, 11:59:47 PM Created Spec type 
2020-02-04T15:59:47.565Z Local: 2/4/2020, 11:59:47 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T15:59:47.567Z Local: 2/4/2020, 11:59:47 PM command: DO, rowCount: null 
2020-02-04T15:59:47.571Z Local: 2/4/2020, 11:59:47 PM Created Good type 
2020-02-04T15:59:47.572Z Local: 2/4/2020, 11:59:47 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T15:59:47.577Z Local: 2/4/2020, 11:59:47 PM command: CREATE, rowCount: null 
2020-02-04T15:59:47.578Z Local: 2/4/2020, 11:59:47 PM Created items_table 
2020-02-04T15:59:47.578Z Local: 2/4/2020, 11:59:47 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:59:47.584Z Local: 2/4/2020, 11:59:47 PM command: DO, rowCount: null 
2020-02-04T15:59:47.585Z Local: 2/4/2020, 11:59:47 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T15:59:47.584Z Local: 2/4/2020, 11:59:47 PM Created Section type 
2020-02-04T15:59:47.588Z Local: 2/4/2020, 11:59:47 PM command: CREATE, rowCount: null 
2020-02-04T15:59:47.589Z Local: 2/4/2020, 11:59:47 PM Created farmers_table 
2020-02-04T15:59:47.590Z Local: 2/4/2020, 11:59:47 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T15:59:51.202Z Local: 2/4/2020, 11:59:51 PM Warning: DbFarmer.insertFarmer content = null is not an Array 
2020-02-04T16:25:27.033Z Local: 2/5/2020, 12:25:27 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T16:25:27.060Z Local: 2/5/2020, 12:25:27 AM command: INSERT, rowCount: 1 
2020-02-04T16:25:27.061Z Local: 2/5/2020, 12:25:27 AM Sending 1 rows to ::1 with  
2020-02-04T16:25:37.913Z Local: 2/5/2020, 12:25:37 AM Warning: DbFarmer.insertFarmer content = null is not an Array 
2020-02-04T16:26:17.800Z Local: 2/5/2020, 12:26:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T16:26:17.831Z Local: 2/5/2020, 12:26:17 AM command: INSERT, rowCount: 1 
2020-02-04T16:26:17.832Z Local: 2/5/2020, 12:26:17 AM Sending 1 rows to ::1 with  
2020-02-04T17:23:46.208Z Local: 2/5/2020, 1:23:46 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:23:46.217Z Local: 2/5/2020, 1:23:46 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:23:46.222Z Local: 2/5/2020, 1:23:46 AM Server is listening on port 8000 
2020-02-04T17:23:46.251Z Local: 2/5/2020, 1:23:46 AM command: DO, rowCount: null 
2020-02-04T17:23:46.252Z Local: 2/5/2020, 1:23:46 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:23:46.251Z Local: 2/5/2020, 1:23:46 AM Created Good type 
2020-02-04T17:23:46.255Z Local: 2/5/2020, 1:23:46 AM command: DO, rowCount: null 
2020-02-04T17:23:46.255Z Local: 2/5/2020, 1:23:46 AM Created Section type 
2020-02-04T17:23:46.256Z Local: 2/5/2020, 1:23:46 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T17:23:46.259Z Local: 2/5/2020, 1:23:46 AM Created Producer type 
2020-02-04T17:23:46.258Z Local: 2/5/2020, 1:23:46 AM command: DO, rowCount: null 
2020-02-04T17:23:46.259Z Local: 2/5/2020, 1:23:46 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:23:46.267Z Local: 2/5/2020, 1:23:46 AM command: CREATE, rowCount: null 
2020-02-04T17:23:46.268Z Local: 2/5/2020, 1:23:46 AM Created farmers_table 
2020-02-04T17:23:46.268Z Local: 2/5/2020, 1:23:46 AM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T17:23:46.270Z Local: 2/5/2020, 1:23:46 AM command: DO, rowCount: null 
2020-02-04T17:23:46.271Z Local: 2/5/2020, 1:23:46 AM Created Spec type 
2020-02-04T17:23:46.271Z Local: 2/5/2020, 1:23:46 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T17:23:46.277Z Local: 2/5/2020, 1:23:46 AM command: CREATE, rowCount: null 
2020-02-04T17:23:46.278Z Local: 2/5/2020, 1:23:46 AM Created items_table 
2020-02-04T17:23:46.278Z Local: 2/5/2020, 1:23:46 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T17:23:51.506Z Local: 2/5/2020, 1:23:51 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:23:51.537Z Local: 2/5/2020, 1:23:51 AM command: DO, rowCount: null 
2020-02-04T17:23:51.543Z Local: 2/5/2020, 1:23:51 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:23:51.545Z Local: 2/5/2020, 1:23:51 AM command: DO, rowCount: null 
2020-02-04T17:23:51.547Z Local: 2/5/2020, 1:23:51 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T17:23:51.552Z Local: 2/5/2020, 1:23:51 AM command: CREATE, rowCount: null 
2020-02-04T17:23:51.554Z Local: 2/5/2020, 1:23:51 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T17:23:51.565Z Local: 2/5/2020, 1:23:51 AM command: SELECT, rowCount: 1 
2020-02-04T17:23:51.567Z Local: 2/5/2020, 1:23:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T17:23:51.576Z Local: 2/5/2020, 1:23:51 AM command: INSERT, rowCount: 1 
2020-02-04T17:23:51.578Z Local: 2/5/2020, 1:23:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T17:23:51.582Z Local: 2/5/2020, 1:23:51 AM command: INSERT, rowCount: 1 
2020-02-04T17:23:51.584Z Local: 2/5/2020, 1:23:51 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:23:51.605Z Local: 2/5/2020, 1:23:51 AM command: SELECT, rowCount: 3 
2020-02-04T17:23:51.606Z Local: 2/5/2020, 1:23:51 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T17:23:51.649Z Local: 2/5/2020, 1:23:51 AM command: SELECT, rowCount: 53 
2020-02-04T17:23:51.651Z Local: 2/5/2020, 1:23:51 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T17:23:51.695Z Local: 2/5/2020, 1:23:51 AM command: SELECT, rowCount: 53 
2020-02-04T17:23:51.697Z Local: 2/5/2020, 1:23:51 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T17:23:51.708Z Local: 2/5/2020, 1:23:51 AM command: SELECT, rowCount: 1 
2020-02-04T17:23:51.709Z Local: 2/5/2020, 1:23:51 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T17:23:51.747Z Local: 2/5/2020, 1:23:51 AM command: SELECT, rowCount: 45 
2020-02-04T17:23:51.753Z Local: 2/5/2020, 1:23:51 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T17:23:51.772Z Local: 2/5/2020, 1:23:51 AM command: SELECT, rowCount: 7 
2020-02-04T17:23:51.775Z Local: 2/5/2020, 1:23:51 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T17:23:51.813Z Local: 2/5/2020, 1:23:51 AM command: SELECT, rowCount: 35 
2020-02-04T17:23:51.828Z Local: 2/5/2020, 1:23:51 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T17:23:51.834Z Local: 2/5/2020, 1:23:51 AM command: SELECT, rowCount: 1 
2020-02-04T17:23:51.835Z Local: 2/5/2020, 1:23:51 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:23:53.855Z Local: 2/5/2020, 1:23:53 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-04T17:23:53.872Z Local: 2/5/2020, 1:23:53 AM command: SELECT, rowCount: 1 
2020-02-04T17:23:53.877Z Local: 2/5/2020, 1:23:53 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:23:53.886Z Local: 2/5/2020, 1:23:53 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Oolong Tea'; 
2020-02-04T17:23:53.896Z Local: 2/5/2020, 1:23:53 AM command: SELECT, rowCount: 0 
2020-02-04T17:23:53.897Z Local: 2/5/2020, 1:23:53 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:23:57.927Z Local: 2/5/2020, 1:23:57 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-04T17:23:57.943Z Local: 2/5/2020, 1:23:57 AM command: SELECT, rowCount: 2 
2020-02-04T17:23:57.944Z Local: 2/5/2020, 1:23:57 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:23:57.950Z Local: 2/5/2020, 1:23:57 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:23:57.953Z Local: 2/5/2020, 1:23:57 AM command: DO, rowCount: null 
2020-02-04T17:23:57.955Z Local: 2/5/2020, 1:23:57 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:23:57.961Z Local: 2/5/2020, 1:23:57 AM command: DO, rowCount: null 
2020-02-04T17:23:57.963Z Local: 2/5/2020, 1:23:57 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T17:23:57.966Z Local: 2/5/2020, 1:23:57 AM command: CREATE, rowCount: null 
2020-02-04T17:23:57.968Z Local: 2/5/2020, 1:23:57 AM SELECT COUNT(*) FROM items_table; 
2020-02-04T17:23:57.976Z Local: 2/5/2020, 1:23:57 AM command: SELECT, rowCount: 1 
2020-02-04T17:23:57.978Z Local: 2/5/2020, 1:23:57 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T17:23:57.985Z Local: 2/5/2020, 1:23:57 AM command: INSERT, rowCount: 1 
2020-02-04T17:23:57.987Z Local: 2/5/2020, 1:23:57 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:23:57.994Z Local: 2/5/2020, 1:23:57 AM command: SELECT, rowCount: 3 
2020-02-04T17:23:58.000Z Local: 2/5/2020, 1:23:58 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-04T17:23:58.035Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 59 
2020-02-04T17:23:58.036Z Local: 2/5/2020, 1:23:58 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-04T17:23:58.074Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 59 
2020-02-04T17:23:58.079Z Local: 2/5/2020, 1:23:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-04T17:23:58.085Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 1 
2020-02-04T17:23:58.090Z Local: 2/5/2020, 1:23:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T17:23:58.095Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 0 
2020-02-04T17:23:58.097Z Local: 2/5/2020, 1:23:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T17:23:58.106Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 0 
2020-02-04T17:23:58.108Z Local: 2/5/2020, 1:23:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-04T17:23:58.116Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 0 
2020-02-04T17:23:58.120Z Local: 2/5/2020, 1:23:58 AM SELECT COUNT(*) FROM items_table; 
2020-02-04T17:23:58.124Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 1 
2020-02-04T17:23:58.124Z Local: 2/5/2020, 1:23:58 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:23:58.130Z Local: 2/5/2020, 1:23:58 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T17:23:58.138Z Local: 2/5/2020, 1:23:58 AM command: INSERT, rowCount: 1 
2020-02-04T17:23:58.139Z Local: 2/5/2020, 1:23:58 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:23:58.145Z Local: 2/5/2020, 1:23:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-04T17:23:58.154Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 1 
2020-02-04T17:23:58.158Z Local: 2/5/2020, 1:23:58 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:23:58.165Z Local: 2/5/2020, 1:23:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T17:23:58.174Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 0 
2020-02-04T17:23:58.175Z Local: 2/5/2020, 1:23:58 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:23:58.179Z Local: 2/5/2020, 1:23:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T17:23:58.194Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 0 
2020-02-04T17:23:58.195Z Local: 2/5/2020, 1:23:58 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:23:58.201Z Local: 2/5/2020, 1:23:58 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-04T17:23:58.208Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 0 
2020-02-04T17:23:58.209Z Local: 2/5/2020, 1:23:58 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:23:58.213Z Local: 2/5/2020, 1:23:58 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-04T17:23:58.228Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 2 
2020-02-04T17:23:58.229Z Local: 2/5/2020, 1:23:58 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:23:58.235Z Local: 2/5/2020, 1:23:58 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T17:23:58.252Z Local: 2/5/2020, 1:23:58 AM command: CREATE, rowCount: null 
2020-02-04T17:23:58.254Z Local: 2/5/2020, 1:23:58 AM SELECT COUNT(*) FROM posts_table; 
2020-02-04T17:23:58.257Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 1, post count: 40 
2020-02-04T17:23:58.259Z Local: 2/5/2020, 1:23:58 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:23:58.261Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 3 
2020-02-04T17:23:58.264Z Local: 2/5/2020, 1:23:58 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T17:23:58.267Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 40 
2020-02-04T17:23:58.269Z Local: 2/5/2020, 1:23:58 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-04T17:23:58.272Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 40 
2020-02-04T17:23:58.274Z Local: 2/5/2020, 1:23:58 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-04T17:23:58.276Z Local: 2/5/2020, 1:23:58 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:11.764Z Local: 2/5/2020, 1:34:11 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:11.796Z Local: 2/5/2020, 1:34:11 AM command: DO, rowCount: null 
2020-02-04T17:34:11.800Z Local: 2/5/2020, 1:34:11 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:11.803Z Local: 2/5/2020, 1:34:11 AM command: DO, rowCount: null 
2020-02-04T17:34:11.805Z Local: 2/5/2020, 1:34:11 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T17:34:11.810Z Local: 2/5/2020, 1:34:11 AM command: CREATE, rowCount: null 
2020-02-04T17:34:11.812Z Local: 2/5/2020, 1:34:11 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T17:34:11.820Z Local: 2/5/2020, 1:34:11 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:11.823Z Local: 2/5/2020, 1:34:11 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T17:34:11.828Z Local: 2/5/2020, 1:34:11 AM command: INSERT, rowCount: 1 
2020-02-04T17:34:11.833Z Local: 2/5/2020, 1:34:11 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T17:34:11.837Z Local: 2/5/2020, 1:34:11 AM command: INSERT, rowCount: 1 
2020-02-04T17:34:11.838Z Local: 2/5/2020, 1:34:11 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:34:11.850Z Local: 2/5/2020, 1:34:11 AM command: SELECT, rowCount: 3 
2020-02-04T17:34:11.852Z Local: 2/5/2020, 1:34:11 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T17:34:11.900Z Local: 2/5/2020, 1:34:11 AM command: SELECT, rowCount: 55 
2020-02-04T17:34:11.902Z Local: 2/5/2020, 1:34:11 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T17:34:11.951Z Local: 2/5/2020, 1:34:11 AM command: SELECT, rowCount: 55 
2020-02-04T17:34:11.953Z Local: 2/5/2020, 1:34:11 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T17:34:11.965Z Local: 2/5/2020, 1:34:11 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:11.967Z Local: 2/5/2020, 1:34:11 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T17:34:12.007Z Local: 2/5/2020, 1:34:12 AM command: SELECT, rowCount: 47 
2020-02-04T17:34:12.010Z Local: 2/5/2020, 1:34:12 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T17:34:12.025Z Local: 2/5/2020, 1:34:12 AM command: SELECT, rowCount: 7 
2020-02-04T17:34:12.031Z Local: 2/5/2020, 1:34:12 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T17:34:12.066Z Local: 2/5/2020, 1:34:12 AM command: SELECT, rowCount: 36 
2020-02-04T17:34:12.079Z Local: 2/5/2020, 1:34:12 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T17:34:12.097Z Local: 2/5/2020, 1:34:12 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:12.097Z Local: 2/5/2020, 1:34:12 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:12.117Z Local: 2/5/2020, 1:34:12 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T17:34:12.127Z Local: 2/5/2020, 1:34:12 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:12.126Z Local: 2/5/2020, 1:34:12 AM command: INSERT, rowCount: 1 
2020-02-04T17:34:12.137Z Local: 2/5/2020, 1:34:12 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-04T17:34:12.153Z Local: 2/5/2020, 1:34:12 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:12.155Z Local: 2/5/2020, 1:34:12 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:12.162Z Local: 2/5/2020, 1:34:12 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T17:34:12.214Z Local: 2/5/2020, 1:34:12 AM command: SELECT, rowCount: 47 
2020-02-04T17:34:12.221Z Local: 2/5/2020, 1:34:12 AM Sending 47 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:12.260Z Local: 2/5/2020, 1:34:12 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T17:34:12.289Z Local: 2/5/2020, 1:34:12 AM command: SELECT, rowCount: 8 
2020-02-04T17:34:12.296Z Local: 2/5/2020, 1:34:12 AM Sending 8 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:14.314Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-04T17:34:14.335Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 2 
2020-02-04T17:34:14.336Z Local: 2/5/2020, 1:34:14 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:14.341Z Local: 2/5/2020, 1:34:14 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:14.344Z Local: 2/5/2020, 1:34:14 AM command: DO, rowCount: null 
2020-02-04T17:34:14.347Z Local: 2/5/2020, 1:34:14 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:14.354Z Local: 2/5/2020, 1:34:14 AM command: DO, rowCount: null 
2020-02-04T17:34:14.355Z Local: 2/5/2020, 1:34:14 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T17:34:14.358Z Local: 2/5/2020, 1:34:14 AM command: CREATE, rowCount: null 
2020-02-04T17:34:14.359Z Local: 2/5/2020, 1:34:14 AM SELECT COUNT(*) FROM items_table; 
2020-02-04T17:34:14.366Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:14.368Z Local: 2/5/2020, 1:34:14 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T17:34:14.380Z Local: 2/5/2020, 1:34:14 AM command: INSERT, rowCount: 1 
2020-02-04T17:34:14.381Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:34:14.394Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 3 
2020-02-04T17:34:14.396Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-04T17:34:14.432Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 61 
2020-02-04T17:34:14.436Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-04T17:34:14.471Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 61 
2020-02-04T17:34:14.475Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-04T17:34:14.481Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:14.483Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T17:34:14.491Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:14.494Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T17:34:14.502Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:14.504Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-04T17:34:14.512Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:14.516Z Local: 2/5/2020, 1:34:14 AM SELECT COUNT(*) FROM items_table; 
2020-02-04T17:34:14.519Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:14.520Z Local: 2/5/2020, 1:34:14 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:14.526Z Local: 2/5/2020, 1:34:14 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T17:34:14.538Z Local: 2/5/2020, 1:34:14 AM command: INSERT, rowCount: 1 
2020-02-04T17:34:14.539Z Local: 2/5/2020, 1:34:14 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:14.546Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-04T17:34:14.557Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:14.557Z Local: 2/5/2020, 1:34:14 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:14.566Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T17:34:14.571Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:14.572Z Local: 2/5/2020, 1:34:14 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:14.576Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T17:34:14.586Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:14.587Z Local: 2/5/2020, 1:34:14 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:14.592Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-04T17:34:14.605Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:14.606Z Local: 2/5/2020, 1:34:14 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:14.612Z Local: 2/5/2020, 1:34:14 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-04T17:34:14.621Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 2 
2020-02-04T17:34:14.621Z Local: 2/5/2020, 1:34:14 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:14.626Z Local: 2/5/2020, 1:34:14 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T17:34:14.643Z Local: 2/5/2020, 1:34:14 AM command: CREATE, rowCount: null 
2020-02-04T17:34:14.646Z Local: 2/5/2020, 1:34:14 AM SELECT COUNT(*) FROM posts_table; 
2020-02-04T17:34:14.648Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 1, post count: 40 
2020-02-04T17:34:14.650Z Local: 2/5/2020, 1:34:14 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:34:14.652Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 3 
2020-02-04T17:34:14.655Z Local: 2/5/2020, 1:34:14 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T17:34:14.657Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 40 
2020-02-04T17:34:14.659Z Local: 2/5/2020, 1:34:14 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-04T17:34:14.661Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 40 
2020-02-04T17:34:14.664Z Local: 2/5/2020, 1:34:14 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-04T17:34:14.670Z Local: 2/5/2020, 1:34:14 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:16.664Z Local: 2/5/2020, 1:34:16 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:16.673Z Local: 2/5/2020, 1:34:16 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:16.677Z Local: 2/5/2020, 1:34:16 AM Server is listening on port 8000 
2020-02-04T17:34:16.707Z Local: 2/5/2020, 1:34:16 AM command: DO, rowCount: null 
2020-02-04T17:34:16.708Z Local: 2/5/2020, 1:34:16 AM Created Producer type 
2020-02-04T17:34:16.708Z Local: 2/5/2020, 1:34:16 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:16.711Z Local: 2/5/2020, 1:34:16 AM command: DO, rowCount: null 
2020-02-04T17:34:16.711Z Local: 2/5/2020, 1:34:16 AM Created Spec type 
2020-02-04T17:34:16.712Z Local: 2/5/2020, 1:34:16 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T17:34:16.715Z Local: 2/5/2020, 1:34:16 AM command: DO, rowCount: null 
2020-02-04T17:34:16.719Z Local: 2/5/2020, 1:34:16 AM Created Good type 
2020-02-04T17:34:16.720Z Local: 2/5/2020, 1:34:16 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:16.723Z Local: 2/5/2020, 1:34:16 AM command: CREATE, rowCount: null 
2020-02-04T17:34:16.724Z Local: 2/5/2020, 1:34:16 AM Created items_table 
2020-02-04T17:34:16.725Z Local: 2/5/2020, 1:34:16 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T17:34:16.732Z Local: 2/5/2020, 1:34:16 AM command: DO, rowCount: null 
2020-02-04T17:34:16.732Z Local: 2/5/2020, 1:34:16 AM Created Section type 
2020-02-04T17:34:16.733Z Local: 2/5/2020, 1:34:16 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T17:34:16.736Z Local: 2/5/2020, 1:34:16 AM command: CREATE, rowCount: null 
2020-02-04T17:34:16.737Z Local: 2/5/2020, 1:34:16 AM Created farmers_table 
2020-02-04T17:34:16.737Z Local: 2/5/2020, 1:34:16 AM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T17:34:22.024Z Local: 2/5/2020, 1:34:22 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:22.054Z Local: 2/5/2020, 1:34:22 AM command: DO, rowCount: null 
2020-02-04T17:34:22.057Z Local: 2/5/2020, 1:34:22 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:22.060Z Local: 2/5/2020, 1:34:22 AM command: DO, rowCount: null 
2020-02-04T17:34:22.062Z Local: 2/5/2020, 1:34:22 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T17:34:22.068Z Local: 2/5/2020, 1:34:22 AM command: CREATE, rowCount: null 
2020-02-04T17:34:22.070Z Local: 2/5/2020, 1:34:22 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T17:34:22.074Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:22.079Z Local: 2/5/2020, 1:34:22 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T17:34:22.084Z Local: 2/5/2020, 1:34:22 AM command: INSERT, rowCount: 1 
2020-02-04T17:34:22.086Z Local: 2/5/2020, 1:34:22 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T17:34:22.094Z Local: 2/5/2020, 1:34:22 AM command: INSERT, rowCount: 1 
2020-02-04T17:34:22.096Z Local: 2/5/2020, 1:34:22 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:34:22.107Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 3 
2020-02-04T17:34:22.108Z Local: 2/5/2020, 1:34:22 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T17:34:22.161Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 58 
2020-02-04T17:34:22.163Z Local: 2/5/2020, 1:34:22 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T17:34:22.208Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 58 
2020-02-04T17:34:22.211Z Local: 2/5/2020, 1:34:22 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T17:34:22.222Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:22.228Z Local: 2/5/2020, 1:34:22 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T17:34:22.267Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 49 
2020-02-04T17:34:22.270Z Local: 2/5/2020, 1:34:22 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T17:34:22.285Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 8 
2020-02-04T17:34:22.291Z Local: 2/5/2020, 1:34:22 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T17:34:22.336Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 38 
2020-02-04T17:34:22.352Z Local: 2/5/2020, 1:34:22 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T17:34:22.358Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:22.359Z Local: 2/5/2020, 1:34:22 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:22.391Z Local: 2/5/2020, 1:34:22 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T17:34:22.402Z Local: 2/5/2020, 1:34:22 AM command: INSERT, rowCount: 1 
2020-02-04T17:34:22.403Z Local: 2/5/2020, 1:34:22 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:22.412Z Local: 2/5/2020, 1:34:22 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-04T17:34:22.434Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:22.438Z Local: 2/5/2020, 1:34:22 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:22.448Z Local: 2/5/2020, 1:34:22 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T17:34:22.499Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 49 
2020-02-04T17:34:22.509Z Local: 2/5/2020, 1:34:22 AM Sending 49 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:22.562Z Local: 2/5/2020, 1:34:22 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T17:34:22.585Z Local: 2/5/2020, 1:34:22 AM command: SELECT, rowCount: 9 
2020-02-04T17:34:22.587Z Local: 2/5/2020, 1:34:22 AM Sending 9 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:24.618Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-04T17:34:24.631Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 2 
2020-02-04T17:34:24.634Z Local: 2/5/2020, 1:34:24 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:24.639Z Local: 2/5/2020, 1:34:24 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:24.641Z Local: 2/5/2020, 1:34:24 AM command: DO, rowCount: null 
2020-02-04T17:34:24.644Z Local: 2/5/2020, 1:34:24 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:24.651Z Local: 2/5/2020, 1:34:24 AM command: DO, rowCount: null 
2020-02-04T17:34:24.652Z Local: 2/5/2020, 1:34:24 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T17:34:24.655Z Local: 2/5/2020, 1:34:24 AM command: CREATE, rowCount: null 
2020-02-04T17:34:24.656Z Local: 2/5/2020, 1:34:24 AM SELECT COUNT(*) FROM items_table; 
2020-02-04T17:34:24.663Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:24.665Z Local: 2/5/2020, 1:34:24 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T17:34:24.675Z Local: 2/5/2020, 1:34:24 AM command: INSERT, rowCount: 1 
2020-02-04T17:34:24.677Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:34:24.687Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 3 
2020-02-04T17:34:24.688Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-04T17:34:24.729Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 63 
2020-02-04T17:34:24.730Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-04T17:34:24.763Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 63 
2020-02-04T17:34:24.768Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-04T17:34:24.774Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:24.780Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T17:34:24.785Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:24.787Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T17:34:24.796Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:24.798Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-04T17:34:24.805Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:24.810Z Local: 2/5/2020, 1:34:24 AM SELECT COUNT(*) FROM items_table; 
2020-02-04T17:34:24.813Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:24.814Z Local: 2/5/2020, 1:34:24 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:24.819Z Local: 2/5/2020, 1:34:24 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T17:34:24.827Z Local: 2/5/2020, 1:34:24 AM command: INSERT, rowCount: 1 
2020-02-04T17:34:24.827Z Local: 2/5/2020, 1:34:24 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:24.834Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-04T17:34:24.841Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:24.843Z Local: 2/5/2020, 1:34:24 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:24.852Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T17:34:24.866Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:24.867Z Local: 2/5/2020, 1:34:24 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:24.872Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T17:34:24.882Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:24.883Z Local: 2/5/2020, 1:34:24 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:24.887Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-04T17:34:24.895Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 0 
2020-02-04T17:34:24.896Z Local: 2/5/2020, 1:34:24 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:24.903Z Local: 2/5/2020, 1:34:24 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-04T17:34:24.910Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 2 
2020-02-04T17:34:24.911Z Local: 2/5/2020, 1:34:24 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:34:24.915Z Local: 2/5/2020, 1:34:24 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T17:34:24.931Z Local: 2/5/2020, 1:34:24 AM command: CREATE, rowCount: null 
2020-02-04T17:34:24.933Z Local: 2/5/2020, 1:34:24 AM SELECT COUNT(*) FROM posts_table; 
2020-02-04T17:34:24.936Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 1, post count: 40 
2020-02-04T17:34:24.937Z Local: 2/5/2020, 1:34:24 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:34:24.940Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 3 
2020-02-04T17:34:24.941Z Local: 2/5/2020, 1:34:24 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T17:34:24.949Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 40 
2020-02-04T17:34:24.951Z Local: 2/5/2020, 1:34:24 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-04T17:34:24.953Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 40 
2020-02-04T17:34:24.955Z Local: 2/5/2020, 1:34:24 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-04T17:34:24.956Z Local: 2/5/2020, 1:34:24 AM command: SELECT, rowCount: 1 
2020-02-04T17:34:58.722Z Local: 2/5/2020, 1:34:58 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:58.732Z Local: 2/5/2020, 1:34:58 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:58.736Z Local: 2/5/2020, 1:34:58 AM Server is listening on port 8000 
2020-02-04T17:34:58.764Z Local: 2/5/2020, 1:34:58 AM command: DO, rowCount: null 
2020-02-04T17:34:58.765Z Local: 2/5/2020, 1:34:58 AM Created Good type 
2020-02-04T17:34:58.765Z Local: 2/5/2020, 1:34:58 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:58.768Z Local: 2/5/2020, 1:34:58 AM command: DO, rowCount: null 
2020-02-04T17:34:58.769Z Local: 2/5/2020, 1:34:58 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T17:34:58.769Z Local: 2/5/2020, 1:34:58 AM Created Section type 
2020-02-04T17:34:58.772Z Local: 2/5/2020, 1:34:58 AM command: DO, rowCount: null 
2020-02-04T17:34:58.775Z Local: 2/5/2020, 1:34:58 AM Created Producer type 
2020-02-04T17:34:58.776Z Local: 2/5/2020, 1:34:58 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:34:58.780Z Local: 2/5/2020, 1:34:58 AM command: CREATE, rowCount: null 
2020-02-04T17:34:58.780Z Local: 2/5/2020, 1:34:58 AM Created farmers_table 
2020-02-04T17:34:58.781Z Local: 2/5/2020, 1:34:58 AM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T17:34:58.782Z Local: 2/5/2020, 1:34:58 AM command: DO, rowCount: null 
2020-02-04T17:34:58.783Z Local: 2/5/2020, 1:34:58 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T17:34:58.783Z Local: 2/5/2020, 1:34:58 AM Created Spec type 
2020-02-04T17:34:58.789Z Local: 2/5/2020, 1:34:58 AM command: CREATE, rowCount: null 
2020-02-04T17:34:58.790Z Local: 2/5/2020, 1:34:58 AM Created items_table 
2020-02-04T17:34:58.790Z Local: 2/5/2020, 1:34:58 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-04T17:35:02.834Z Local: 2/5/2020, 1:35:02 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:35:02.876Z Local: 2/5/2020, 1:35:02 AM command: DO, rowCount: null 
2020-02-04T17:35:02.882Z Local: 2/5/2020, 1:35:02 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:35:02.885Z Local: 2/5/2020, 1:35:02 AM command: DO, rowCount: null 
2020-02-04T17:35:02.887Z Local: 2/5/2020, 1:35:02 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T17:35:02.893Z Local: 2/5/2020, 1:35:02 AM command: CREATE, rowCount: null 
2020-02-04T17:35:02.894Z Local: 2/5/2020, 1:35:02 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T17:35:02.899Z Local: 2/5/2020, 1:35:02 AM command: SELECT, rowCount: 1 
2020-02-04T17:35:02.905Z Local: 2/5/2020, 1:35:02 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T17:35:02.909Z Local: 2/5/2020, 1:35:02 AM command: INSERT, rowCount: 1 
2020-02-04T17:35:02.911Z Local: 2/5/2020, 1:35:02 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-04T17:35:02.918Z Local: 2/5/2020, 1:35:02 AM command: INSERT, rowCount: 1 
2020-02-04T17:35:02.920Z Local: 2/5/2020, 1:35:02 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:35:02.932Z Local: 2/5/2020, 1:35:02 AM command: SELECT, rowCount: 3 
2020-02-04T17:35:02.933Z Local: 2/5/2020, 1:35:02 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T17:35:02.988Z Local: 2/5/2020, 1:35:02 AM command: SELECT, rowCount: 61 
2020-02-04T17:35:02.989Z Local: 2/5/2020, 1:35:02 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-04T17:35:03.041Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 61 
2020-02-04T17:35:03.043Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-04T17:35:03.054Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 1 
2020-02-04T17:35:03.056Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T17:35:03.096Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 51 
2020-02-04T17:35:03.100Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T17:35:03.120Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 9 
2020-02-04T17:35:03.122Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-04T17:35:03.159Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 40 
2020-02-04T17:35:03.171Z Local: 2/5/2020, 1:35:03 AM SELECT COUNT(*) FROM farmers_table; 
2020-02-04T17:35:03.176Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 1 
2020-02-04T17:35:03.177Z Local: 2/5/2020, 1:35:03 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.211Z Local: 2/5/2020, 1:35:03 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-04T17:35:03.216Z Local: 2/5/2020, 1:35:03 AM command: INSERT, rowCount: 1 
2020-02-04T17:35:03.216Z Local: 2/5/2020, 1:35:03 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.225Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-04T17:35:03.238Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 1 
2020-02-04T17:35:03.243Z Local: 2/5/2020, 1:35:03 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.250Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-04T17:35:03.308Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 51 
2020-02-04T17:35:03.317Z Local: 2/5/2020, 1:35:03 AM Sending 51 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.370Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-04T17:35:03.395Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 10 
2020-02-04T17:35:03.397Z Local: 2/5/2020, 1:35:03 AM Sending 10 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.412Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-04T17:35:03.426Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 0 
2020-02-04T17:35:03.426Z Local: 2/5/2020, 1:35:03 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.432Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-04T17:35:03.454Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 2 
2020-02-04T17:35:03.455Z Local: 2/5/2020, 1:35:03 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.460Z Local: 2/5/2020, 1:35:03 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:35:03.463Z Local: 2/5/2020, 1:35:03 AM command: DO, rowCount: null 
2020-02-04T17:35:03.464Z Local: 2/5/2020, 1:35:03 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-04T17:35:03.467Z Local: 2/5/2020, 1:35:03 AM command: DO, rowCount: null 
2020-02-04T17:35:03.474Z Local: 2/5/2020, 1:35:03 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-04T17:35:03.477Z Local: 2/5/2020, 1:35:03 AM command: CREATE, rowCount: null 
2020-02-04T17:35:03.479Z Local: 2/5/2020, 1:35:03 AM SELECT COUNT(*) FROM items_table; 
2020-02-04T17:35:03.486Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 1 
2020-02-04T17:35:03.489Z Local: 2/5/2020, 1:35:03 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T17:35:03.493Z Local: 2/5/2020, 1:35:03 AM command: INSERT, rowCount: 1 
2020-02-04T17:35:03.498Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:35:03.506Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 3 
2020-02-04T17:35:03.510Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-04T17:35:03.548Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 65 
2020-02-04T17:35:03.549Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-04T17:35:03.583Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 65 
2020-02-04T17:35:03.589Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-04T17:35:03.594Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 1 
2020-02-04T17:35:03.596Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T17:35:03.605Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 0 
2020-02-04T17:35:03.607Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T17:35:03.614Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 0 
2020-02-04T17:35:03.615Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-04T17:35:03.624Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 0 
2020-02-04T17:35:03.627Z Local: 2/5/2020, 1:35:03 AM SELECT COUNT(*) FROM items_table; 
2020-02-04T17:35:03.630Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 1 
2020-02-04T17:35:03.631Z Local: 2/5/2020, 1:35:03 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.638Z Local: 2/5/2020, 1:35:03 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-04T17:35:03.648Z Local: 2/5/2020, 1:35:03 AM command: INSERT, rowCount: 1 
2020-02-04T17:35:03.648Z Local: 2/5/2020, 1:35:03 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.657Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-04T17:35:03.664Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 1 
2020-02-04T17:35:03.665Z Local: 2/5/2020, 1:35:03 AM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.674Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-04T17:35:03.679Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 0 
2020-02-04T17:35:03.680Z Local: 2/5/2020, 1:35:03 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.686Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-04T17:35:03.696Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 0 
2020-02-04T17:35:03.697Z Local: 2/5/2020, 1:35:03 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.703Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-04T17:35:03.711Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 0 
2020-02-04T17:35:03.712Z Local: 2/5/2020, 1:35:03 AM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.718Z Local: 2/5/2020, 1:35:03 AM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-04T17:35:03.728Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 2 
2020-02-04T17:35:03.729Z Local: 2/5/2020, 1:35:03 AM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-04T17:35:03.738Z Local: 2/5/2020, 1:35:03 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-04T17:35:03.754Z Local: 2/5/2020, 1:35:03 AM command: CREATE, rowCount: null 
2020-02-04T17:35:03.755Z Local: 2/5/2020, 1:35:03 AM SELECT COUNT(*) FROM posts_table; 
2020-02-04T17:35:03.760Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 1, post count: 40 
2020-02-04T17:35:03.762Z Local: 2/5/2020, 1:35:03 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-04T17:35:03.764Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 3 
2020-02-04T17:35:03.765Z Local: 2/5/2020, 1:35:03 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-04T17:35:03.770Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 40 
2020-02-04T17:35:03.771Z Local: 2/5/2020, 1:35:03 AM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-04T17:35:03.774Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 40 
2020-02-04T17:35:03.778Z Local: 2/5/2020, 1:35:03 AM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-04T17:35:03.779Z Local: 2/5/2020, 1:35:03 AM command: SELECT, rowCount: 1 
2020-02-05T05:46:40.125Z Local: 2/5/2020, 1:46:40 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:46:40.149Z Local: 2/5/2020, 1:46:40 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:46:40.159Z Local: 2/5/2020, 1:46:40 PM Server is listening on port 8000 
2020-02-05T05:46:40.237Z Local: 2/5/2020, 1:46:40 PM command: DO, rowCount: null 
2020-02-05T05:46:40.239Z Local: 2/5/2020, 1:46:40 PM Created Good type 
2020-02-05T05:46:40.241Z Local: 2/5/2020, 1:46:40 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:46:40.251Z Local: 2/5/2020, 1:46:40 PM command: DO, rowCount: null 
2020-02-05T05:46:40.253Z Local: 2/5/2020, 1:46:40 PM Created Producer type 
2020-02-05T05:46:40.255Z Local: 2/5/2020, 1:46:40 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:46:40.262Z Local: 2/5/2020, 1:46:40 PM command: DO, rowCount: null 
2020-02-05T05:46:40.269Z Local: 2/5/2020, 1:46:40 PM Created Section type 
2020-02-05T05:46:40.272Z Local: 2/5/2020, 1:46:40 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:46:40.280Z Local: 2/5/2020, 1:46:40 PM command: DO, rowCount: null 
2020-02-05T05:46:40.283Z Local: 2/5/2020, 1:46:40 PM Created Spec type 
2020-02-05T05:46:40.285Z Local: 2/5/2020, 1:46:40 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:46:40.291Z Local: 2/5/2020, 1:46:40 PM command: CREATE, rowCount: null 
2020-02-05T05:46:40.299Z Local: 2/5/2020, 1:46:40 PM Created farmers_table 
2020-02-05T05:46:40.301Z Local: 2/5/2020, 1:46:40 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:46:40.306Z Local: 2/5/2020, 1:46:40 PM command: CREATE, rowCount: null 
2020-02-05T05:46:40.313Z Local: 2/5/2020, 1:46:40 PM Created items_table 
2020-02-05T05:46:40.314Z Local: 2/5/2020, 1:46:40 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:47:08.007Z Local: 2/5/2020, 1:47:08 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:47:08.022Z Local: 2/5/2020, 1:47:08 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:47:08.029Z Local: 2/5/2020, 1:47:08 PM Server is listening on port 8000 
2020-02-05T05:47:08.082Z Local: 2/5/2020, 1:47:08 PM command: DO, rowCount: null 
2020-02-05T05:47:08.085Z Local: 2/5/2020, 1:47:08 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:47:08.083Z Local: 2/5/2020, 1:47:08 PM Created Producer type 
2020-02-05T05:47:08.089Z Local: 2/5/2020, 1:47:08 PM command: DO, rowCount: null 
2020-02-05T05:47:08.090Z Local: 2/5/2020, 1:47:08 PM Created Spec type 
2020-02-05T05:47:08.092Z Local: 2/5/2020, 1:47:08 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:47:08.098Z Local: 2/5/2020, 1:47:08 PM command: CREATE, rowCount: null 
2020-02-05T05:47:08.103Z Local: 2/5/2020, 1:47:08 PM Created items_table 
2020-02-05T05:47:08.104Z Local: 2/5/2020, 1:47:08 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:47:08.108Z Local: 2/5/2020, 1:47:08 PM command: DO, rowCount: null 
2020-02-05T05:47:08.112Z Local: 2/5/2020, 1:47:08 PM Created Good type 
2020-02-05T05:47:08.114Z Local: 2/5/2020, 1:47:08 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:47:08.127Z Local: 2/5/2020, 1:47:08 PM Created Section type 
2020-02-05T05:47:08.129Z Local: 2/5/2020, 1:47:08 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:47:08.125Z Local: 2/5/2020, 1:47:08 PM command: DO, rowCount: null 
2020-02-05T05:47:08.134Z Local: 2/5/2020, 1:47:08 PM command: CREATE, rowCount: null 
2020-02-05T05:47:08.138Z Local: 2/5/2020, 1:47:08 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:47:08.136Z Local: 2/5/2020, 1:47:08 PM Created farmers_table 
2020-02-05T05:47:26.421Z Local: 2/5/2020, 1:47:26 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:47:26.496Z Local: 2/5/2020, 1:47:26 PM command: DO, rowCount: null 
2020-02-05T05:47:26.512Z Local: 2/5/2020, 1:47:26 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:47:26.518Z Local: 2/5/2020, 1:47:26 PM command: DO, rowCount: null 
2020-02-05T05:47:26.532Z Local: 2/5/2020, 1:47:26 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:47:26.542Z Local: 2/5/2020, 1:47:26 PM command: CREATE, rowCount: null 
2020-02-05T05:47:26.549Z Local: 2/5/2020, 1:47:26 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:47:26.578Z Local: 2/5/2020, 1:47:26 PM command: SELECT, rowCount: 1 
2020-02-05T05:47:26.589Z Local: 2/5/2020, 1:47:26 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:47:26.624Z Local: 2/5/2020, 1:47:26 PM command: INSERT, rowCount: 1 
2020-02-05T05:47:26.630Z Local: 2/5/2020, 1:47:26 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-05T05:47:26.650Z Local: 2/5/2020, 1:47:26 PM command: INSERT, rowCount: 1 
2020-02-05T05:47:26.661Z Local: 2/5/2020, 1:47:26 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:47:26.716Z Local: 2/5/2020, 1:47:26 PM command: SELECT, rowCount: 3 
2020-02-05T05:47:26.724Z Local: 2/5/2020, 1:47:26 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:47:26.955Z Local: 2/5/2020, 1:47:26 PM command: SELECT, rowCount: 64 
2020-02-05T05:47:26.975Z Local: 2/5/2020, 1:47:26 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:47:27.220Z Local: 2/5/2020, 1:47:27 PM command: SELECT, rowCount: 64 
2020-02-05T05:47:27.228Z Local: 2/5/2020, 1:47:27 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-05T05:47:27.266Z Local: 2/5/2020, 1:47:27 PM command: SELECT, rowCount: 1 
2020-02-05T05:47:27.272Z Local: 2/5/2020, 1:47:27 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:47:27.466Z Local: 2/5/2020, 1:47:27 PM command: SELECT, rowCount: 53 
2020-02-05T05:47:27.489Z Local: 2/5/2020, 1:47:27 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:47:27.571Z Local: 2/5/2020, 1:47:27 PM command: SELECT, rowCount: 10 
2020-02-05T05:47:27.590Z Local: 2/5/2020, 1:47:27 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T05:47:27.758Z Local: 2/5/2020, 1:47:27 PM command: SELECT, rowCount: 42 
2020-02-05T05:47:27.807Z Local: 2/5/2020, 1:47:27 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:47:27.897Z Local: 2/5/2020, 1:47:27 PM command: SELECT, rowCount: 1 
2020-02-05T05:47:27.901Z Local: 2/5/2020, 1:47:27 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:28.031Z Local: 2/5/2020, 1:47:28 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:47:28.066Z Local: 2/5/2020, 1:47:28 PM command: INSERT, rowCount: 1 
2020-02-05T05:47:28.072Z Local: 2/5/2020, 1:47:28 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:28.112Z Local: 2/5/2020, 1:47:28 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-05T05:47:28.154Z Local: 2/5/2020, 1:47:28 PM command: SELECT, rowCount: 1 
2020-02-05T05:47:28.189Z Local: 2/5/2020, 1:47:28 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:28.217Z Local: 2/5/2020, 1:47:28 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:47:28.413Z Local: 2/5/2020, 1:47:28 PM command: SELECT, rowCount: 53 
2020-02-05T05:47:28.458Z Local: 2/5/2020, 1:47:28 PM Sending 53 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:28.638Z Local: 2/5/2020, 1:47:28 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:47:28.706Z Local: 2/5/2020, 1:47:28 PM command: SELECT, rowCount: 11 
2020-02-05T05:47:28.722Z Local: 2/5/2020, 1:47:28 PM Sending 11 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:28.774Z Local: 2/5/2020, 1:47:28 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-05T05:47:28.810Z Local: 2/5/2020, 1:47:28 PM command: SELECT, rowCount: 0 
2020-02-05T05:47:28.812Z Local: 2/5/2020, 1:47:28 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:28.831Z Local: 2/5/2020, 1:47:28 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:47:28.866Z Local: 2/5/2020, 1:47:28 PM command: SELECT, rowCount: 2 
2020-02-05T05:47:28.868Z Local: 2/5/2020, 1:47:28 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:28.894Z Local: 2/5/2020, 1:47:28 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:47:28.900Z Local: 2/5/2020, 1:47:28 PM command: DO, rowCount: null 
2020-02-05T05:47:28.905Z Local: 2/5/2020, 1:47:28 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:47:28.919Z Local: 2/5/2020, 1:47:28 PM command: DO, rowCount: null 
2020-02-05T05:47:28.924Z Local: 2/5/2020, 1:47:28 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:47:28.930Z Local: 2/5/2020, 1:47:28 PM command: CREATE, rowCount: null 
2020-02-05T05:47:28.935Z Local: 2/5/2020, 1:47:28 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:47:28.952Z Local: 2/5/2020, 1:47:28 PM command: SELECT, rowCount: 1 
2020-02-05T05:47:28.959Z Local: 2/5/2020, 1:47:28 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:47:28.979Z Local: 2/5/2020, 1:47:28 PM command: INSERT, rowCount: 1 
2020-02-05T05:47:28.984Z Local: 2/5/2020, 1:47:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:47:29.017Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 3 
2020-02-05T05:47:29.021Z Local: 2/5/2020, 1:47:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-05T05:47:29.152Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 67 
2020-02-05T05:47:29.166Z Local: 2/5/2020, 1:47:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-05T05:47:29.280Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 67 
2020-02-05T05:47:29.286Z Local: 2/5/2020, 1:47:29 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-05T05:47:29.321Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 1 
2020-02-05T05:47:29.327Z Local: 2/5/2020, 1:47:29 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:47:29.351Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 0 
2020-02-05T05:47:29.357Z Local: 2/5/2020, 1:47:29 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:47:29.372Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 0 
2020-02-05T05:47:29.387Z Local: 2/5/2020, 1:47:29 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-05T05:47:29.402Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 0 
2020-02-05T05:47:29.425Z Local: 2/5/2020, 1:47:29 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:47:29.436Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 1 
2020-02-05T05:47:29.438Z Local: 2/5/2020, 1:47:29 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:29.476Z Local: 2/5/2020, 1:47:29 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:47:29.502Z Local: 2/5/2020, 1:47:29 PM command: INSERT, rowCount: 1 
2020-02-05T05:47:29.505Z Local: 2/5/2020, 1:47:29 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:29.528Z Local: 2/5/2020, 1:47:29 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-05T05:47:29.562Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 1 
2020-02-05T05:47:29.565Z Local: 2/5/2020, 1:47:29 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:29.590Z Local: 2/5/2020, 1:47:29 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:47:29.607Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 0 
2020-02-05T05:47:29.619Z Local: 2/5/2020, 1:47:29 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:29.638Z Local: 2/5/2020, 1:47:29 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:47:29.662Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 0 
2020-02-05T05:47:29.664Z Local: 2/5/2020, 1:47:29 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:29.684Z Local: 2/5/2020, 1:47:29 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-05T05:47:29.705Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 0 
2020-02-05T05:47:29.707Z Local: 2/5/2020, 1:47:29 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:29.729Z Local: 2/5/2020, 1:47:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:47:29.762Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 2 
2020-02-05T05:47:29.764Z Local: 2/5/2020, 1:47:29 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:47:29.781Z Local: 2/5/2020, 1:47:29 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:47:29.849Z Local: 2/5/2020, 1:47:29 PM command: CREATE, rowCount: null 
2020-02-05T05:47:29.857Z Local: 2/5/2020, 1:47:29 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T05:47:29.865Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-05T05:47:29.872Z Local: 2/5/2020, 1:47:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:47:29.885Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 3 
2020-02-05T05:47:29.893Z Local: 2/5/2020, 1:47:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:47:29.902Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 40 
2020-02-05T05:47:29.909Z Local: 2/5/2020, 1:47:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:47:29.917Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 40 
2020-02-05T05:47:29.927Z Local: 2/5/2020, 1:47:29 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T05:47:29.932Z Local: 2/5/2020, 1:47:29 PM command: SELECT, rowCount: 1 
2020-02-05T05:48:29.779Z Local: 2/5/2020, 1:48:29 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:48:29.793Z Local: 2/5/2020, 1:48:29 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:48:29.800Z Local: 2/5/2020, 1:48:29 PM Server is listening on port 8000 
2020-02-05T05:48:29.860Z Local: 2/5/2020, 1:48:29 PM command: DO, rowCount: null 
2020-02-05T05:48:29.861Z Local: 2/5/2020, 1:48:29 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:48:29.861Z Local: 2/5/2020, 1:48:29 PM Created Good type 
2020-02-05T05:48:29.865Z Local: 2/5/2020, 1:48:29 PM command: DO, rowCount: null 
2020-02-05T05:48:29.865Z Local: 2/5/2020, 1:48:29 PM Created Section type 
2020-02-05T05:48:29.866Z Local: 2/5/2020, 1:48:29 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:48:29.869Z Local: 2/5/2020, 1:48:29 PM command: DO, rowCount: null 
2020-02-05T05:48:29.870Z Local: 2/5/2020, 1:48:29 PM Created Producer type 
2020-02-05T05:48:29.871Z Local: 2/5/2020, 1:48:29 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:48:29.875Z Local: 2/5/2020, 1:48:29 PM command: CREATE, rowCount: null 
2020-02-05T05:48:29.880Z Local: 2/5/2020, 1:48:29 PM Created farmers_table 
2020-02-05T05:48:29.881Z Local: 2/5/2020, 1:48:29 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:48:29.883Z Local: 2/5/2020, 1:48:29 PM command: DO, rowCount: null 
2020-02-05T05:48:29.884Z Local: 2/5/2020, 1:48:29 PM Created Spec type 
2020-02-05T05:48:29.885Z Local: 2/5/2020, 1:48:29 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:48:29.888Z Local: 2/5/2020, 1:48:29 PM command: CREATE, rowCount: null 
2020-02-05T05:48:29.889Z Local: 2/5/2020, 1:48:29 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:48:29.889Z Local: 2/5/2020, 1:48:29 PM Created items_table 
2020-02-05T05:48:35.148Z Local: 2/5/2020, 1:48:35 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:48:35.241Z Local: 2/5/2020, 1:48:35 PM command: DO, rowCount: null 
2020-02-05T05:48:35.254Z Local: 2/5/2020, 1:48:35 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:48:35.263Z Local: 2/5/2020, 1:48:35 PM command: DO, rowCount: null 
2020-02-05T05:48:35.280Z Local: 2/5/2020, 1:48:35 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:48:35.289Z Local: 2/5/2020, 1:48:35 PM command: CREATE, rowCount: null 
2020-02-05T05:48:35.296Z Local: 2/5/2020, 1:48:35 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:48:35.311Z Local: 2/5/2020, 1:48:35 PM command: SELECT, rowCount: 1 
2020-02-05T05:48:35.314Z Local: 2/5/2020, 1:48:35 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:48:35.327Z Local: 2/5/2020, 1:48:35 PM command: INSERT, rowCount: 1 
2020-02-05T05:48:35.329Z Local: 2/5/2020, 1:48:35 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-05T05:48:35.339Z Local: 2/5/2020, 1:48:35 PM command: INSERT, rowCount: 1 
2020-02-05T05:48:35.342Z Local: 2/5/2020, 1:48:35 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:48:35.360Z Local: 2/5/2020, 1:48:35 PM command: SELECT, rowCount: 3 
2020-02-05T05:48:35.367Z Local: 2/5/2020, 1:48:35 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:48:35.488Z Local: 2/5/2020, 1:48:35 PM command: SELECT, rowCount: 67 
2020-02-05T05:48:35.502Z Local: 2/5/2020, 1:48:35 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:48:35.704Z Local: 2/5/2020, 1:48:35 PM command: SELECT, rowCount: 67 
2020-02-05T05:48:35.721Z Local: 2/5/2020, 1:48:35 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-05T05:48:35.754Z Local: 2/5/2020, 1:48:35 PM command: SELECT, rowCount: 1 
2020-02-05T05:48:35.760Z Local: 2/5/2020, 1:48:35 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:48:35.944Z Local: 2/5/2020, 1:48:35 PM command: SELECT, rowCount: 55 
2020-02-05T05:48:35.967Z Local: 2/5/2020, 1:48:35 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:48:36.054Z Local: 2/5/2020, 1:48:36 PM command: SELECT, rowCount: 11 
2020-02-05T05:48:36.062Z Local: 2/5/2020, 1:48:36 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T05:48:36.234Z Local: 2/5/2020, 1:48:36 PM command: SELECT, rowCount: 44 
2020-02-05T05:48:36.289Z Local: 2/5/2020, 1:48:36 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:48:36.310Z Local: 2/5/2020, 1:48:36 PM command: SELECT, rowCount: 1 
2020-02-05T05:48:36.324Z Local: 2/5/2020, 1:48:36 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:36.434Z Local: 2/5/2020, 1:48:36 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:48:36.465Z Local: 2/5/2020, 1:48:36 PM command: INSERT, rowCount: 1 
2020-02-05T05:48:36.468Z Local: 2/5/2020, 1:48:36 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:36.495Z Local: 2/5/2020, 1:48:36 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-05T05:48:36.536Z Local: 2/5/2020, 1:48:36 PM command: SELECT, rowCount: 1 
2020-02-05T05:48:36.555Z Local: 2/5/2020, 1:48:36 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:36.589Z Local: 2/5/2020, 1:48:36 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:48:36.775Z Local: 2/5/2020, 1:48:36 PM command: SELECT, rowCount: 55 
2020-02-05T05:48:36.827Z Local: 2/5/2020, 1:48:36 PM Sending 55 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:36.924Z Local: 2/5/2020, 1:48:36 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:48:36.970Z Local: 2/5/2020, 1:48:36 PM command: SELECT, rowCount: 12 
2020-02-05T05:48:36.974Z Local: 2/5/2020, 1:48:36 PM Sending 12 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:37.013Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-05T05:48:37.027Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 0 
2020-02-05T05:48:37.028Z Local: 2/5/2020, 1:48:37 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:37.047Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:48:37.070Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 2 
2020-02-05T05:48:37.071Z Local: 2/5/2020, 1:48:37 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:37.081Z Local: 2/5/2020, 1:48:37 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:48:37.085Z Local: 2/5/2020, 1:48:37 PM command: DO, rowCount: null 
2020-02-05T05:48:37.088Z Local: 2/5/2020, 1:48:37 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:48:37.105Z Local: 2/5/2020, 1:48:37 PM command: DO, rowCount: null 
2020-02-05T05:48:37.110Z Local: 2/5/2020, 1:48:37 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:48:37.114Z Local: 2/5/2020, 1:48:37 PM command: CREATE, rowCount: null 
2020-02-05T05:48:37.117Z Local: 2/5/2020, 1:48:37 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:48:37.122Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 1 
2020-02-05T05:48:37.132Z Local: 2/5/2020, 1:48:37 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:48:37.148Z Local: 2/5/2020, 1:48:37 PM command: INSERT, rowCount: 1 
2020-02-05T05:48:37.152Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:48:37.172Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 3 
2020-02-05T05:48:37.180Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-05T05:48:37.284Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 69 
2020-02-05T05:48:37.287Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-05T05:48:37.406Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 69 
2020-02-05T05:48:37.426Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-05T05:48:37.453Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 1 
2020-02-05T05:48:37.459Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:48:37.473Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 0 
2020-02-05T05:48:37.488Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:48:37.503Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 0 
2020-02-05T05:48:37.518Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-05T05:48:37.532Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 0 
2020-02-05T05:48:37.544Z Local: 2/5/2020, 1:48:37 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:48:37.554Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 1 
2020-02-05T05:48:37.556Z Local: 2/5/2020, 1:48:37 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:37.577Z Local: 2/5/2020, 1:48:37 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:48:37.593Z Local: 2/5/2020, 1:48:37 PM command: INSERT, rowCount: 1 
2020-02-05T05:48:37.605Z Local: 2/5/2020, 1:48:37 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:37.625Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-05T05:48:37.649Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 1 
2020-02-05T05:48:37.651Z Local: 2/5/2020, 1:48:37 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:37.671Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:48:37.686Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 0 
2020-02-05T05:48:37.688Z Local: 2/5/2020, 1:48:37 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:37.706Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:48:37.721Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 0 
2020-02-05T05:48:37.723Z Local: 2/5/2020, 1:48:37 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:37.742Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-05T05:48:37.757Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 0 
2020-02-05T05:48:37.759Z Local: 2/5/2020, 1:48:37 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:37.786Z Local: 2/5/2020, 1:48:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:48:37.811Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 2 
2020-02-05T05:48:37.813Z Local: 2/5/2020, 1:48:37 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:48:37.837Z Local: 2/5/2020, 1:48:37 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:48:37.894Z Local: 2/5/2020, 1:48:37 PM command: CREATE, rowCount: null 
2020-02-05T05:48:37.902Z Local: 2/5/2020, 1:48:37 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T05:48:37.909Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-05T05:48:37.920Z Local: 2/5/2020, 1:48:37 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:48:37.928Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 3 
2020-02-05T05:48:37.934Z Local: 2/5/2020, 1:48:37 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:48:37.944Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 40 
2020-02-05T05:48:37.948Z Local: 2/5/2020, 1:48:37 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:48:37.955Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 40 
2020-02-05T05:48:37.965Z Local: 2/5/2020, 1:48:37 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T05:48:37.970Z Local: 2/5/2020, 1:48:37 PM command: SELECT, rowCount: 1 
2020-02-05T05:51:18.485Z Local: 2/5/2020, 1:51:18 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:51:18.512Z Local: 2/5/2020, 1:51:18 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:51:18.524Z Local: 2/5/2020, 1:51:18 PM Server is listening on port 8000 
2020-02-05T05:51:18.610Z Local: 2/5/2020, 1:51:18 PM command: DO, rowCount: null 
2020-02-05T05:51:18.611Z Local: 2/5/2020, 1:51:18 PM Created Producer type 
2020-02-05T05:51:18.613Z Local: 2/5/2020, 1:51:18 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:51:18.619Z Local: 2/5/2020, 1:51:18 PM command: DO, rowCount: null 
2020-02-05T05:51:18.620Z Local: 2/5/2020, 1:51:18 PM Created Spec type 
2020-02-05T05:51:18.622Z Local: 2/5/2020, 1:51:18 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:51:18.637Z Local: 2/5/2020, 1:51:18 PM Created Good type 
2020-02-05T05:51:18.636Z Local: 2/5/2020, 1:51:18 PM command: DO, rowCount: null 
2020-02-05T05:51:18.639Z Local: 2/5/2020, 1:51:18 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:51:18.650Z Local: 2/5/2020, 1:51:18 PM command: CREATE, rowCount: null 
2020-02-05T05:51:18.651Z Local: 2/5/2020, 1:51:18 PM Created items_table 
2020-02-05T05:51:18.653Z Local: 2/5/2020, 1:51:18 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:51:18.668Z Local: 2/5/2020, 1:51:18 PM Created Section type 
2020-02-05T05:51:18.670Z Local: 2/5/2020, 1:51:18 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:51:18.667Z Local: 2/5/2020, 1:51:18 PM command: DO, rowCount: null 
2020-02-05T05:51:18.679Z Local: 2/5/2020, 1:51:18 PM command: CREATE, rowCount: null 
2020-02-05T05:51:18.681Z Local: 2/5/2020, 1:51:18 PM Created farmers_table 
2020-02-05T05:51:18.682Z Local: 2/5/2020, 1:51:18 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:51:23.957Z Local: 2/5/2020, 1:51:23 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:51:24.076Z Local: 2/5/2020, 1:51:24 PM command: DO, rowCount: null 
2020-02-05T05:51:24.088Z Local: 2/5/2020, 1:51:24 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:51:24.098Z Local: 2/5/2020, 1:51:24 PM command: DO, rowCount: null 
2020-02-05T05:51:24.105Z Local: 2/5/2020, 1:51:24 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:51:24.125Z Local: 2/5/2020, 1:51:24 PM command: CREATE, rowCount: null 
2020-02-05T05:51:24.132Z Local: 2/5/2020, 1:51:24 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:51:24.177Z Local: 2/5/2020, 1:51:24 PM command: SELECT, rowCount: 1 
2020-02-05T05:51:24.195Z Local: 2/5/2020, 1:51:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:51:24.229Z Local: 2/5/2020, 1:51:24 PM command: INSERT, rowCount: 1 
2020-02-05T05:51:24.234Z Local: 2/5/2020, 1:51:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-05T05:51:24.255Z Local: 2/5/2020, 1:51:24 PM command: INSERT, rowCount: 1 
2020-02-05T05:51:24.262Z Local: 2/5/2020, 1:51:24 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:51:24.313Z Local: 2/5/2020, 1:51:24 PM command: SELECT, rowCount: 3 
2020-02-05T05:51:24.319Z Local: 2/5/2020, 1:51:24 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:51:24.421Z Local: 2/5/2020, 1:51:24 PM command: SELECT, rowCount: 70 
2020-02-05T05:51:24.423Z Local: 2/5/2020, 1:51:24 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:51:24.639Z Local: 2/5/2020, 1:51:24 PM command: SELECT, rowCount: 70 
2020-02-05T05:51:24.646Z Local: 2/5/2020, 1:51:24 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-05T05:51:24.683Z Local: 2/5/2020, 1:51:24 PM command: SELECT, rowCount: 1 
2020-02-05T05:51:24.689Z Local: 2/5/2020, 1:51:24 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:51:24.849Z Local: 2/5/2020, 1:51:24 PM command: SELECT, rowCount: 57 
2020-02-05T05:51:24.858Z Local: 2/5/2020, 1:51:24 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:51:24.905Z Local: 2/5/2020, 1:51:24 PM command: SELECT, rowCount: 12 
2020-02-05T05:51:24.917Z Local: 2/5/2020, 1:51:24 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T05:51:25.009Z Local: 2/5/2020, 1:51:25 PM command: SELECT, rowCount: 46 
2020-02-05T05:51:25.043Z Local: 2/5/2020, 1:51:25 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:51:25.054Z Local: 2/5/2020, 1:51:25 PM command: SELECT, rowCount: 1 
2020-02-05T05:51:25.056Z Local: 2/5/2020, 1:51:25 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:25.123Z Local: 2/5/2020, 1:51:25 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:51:25.146Z Local: 2/5/2020, 1:51:25 PM command: INSERT, rowCount: 1 
2020-02-05T05:51:25.148Z Local: 2/5/2020, 1:51:25 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:25.164Z Local: 2/5/2020, 1:51:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-05T05:51:25.204Z Local: 2/5/2020, 1:51:25 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:25.193Z Local: 2/5/2020, 1:51:25 PM command: SELECT, rowCount: 1 
2020-02-05T05:51:25.225Z Local: 2/5/2020, 1:51:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:51:25.348Z Local: 2/5/2020, 1:51:25 PM command: SELECT, rowCount: 57 
2020-02-05T05:51:25.388Z Local: 2/5/2020, 1:51:25 PM Sending 57 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:25.602Z Local: 2/5/2020, 1:51:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:51:25.684Z Local: 2/5/2020, 1:51:25 PM command: SELECT, rowCount: 13 
2020-02-05T05:51:25.691Z Local: 2/5/2020, 1:51:25 PM Sending 13 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:25.747Z Local: 2/5/2020, 1:51:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-05T05:51:25.784Z Local: 2/5/2020, 1:51:25 PM command: SELECT, rowCount: 0 
2020-02-05T05:51:25.786Z Local: 2/5/2020, 1:51:25 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:25.806Z Local: 2/5/2020, 1:51:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:51:25.853Z Local: 2/5/2020, 1:51:25 PM command: SELECT, rowCount: 2 
2020-02-05T05:51:25.855Z Local: 2/5/2020, 1:51:25 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:25.874Z Local: 2/5/2020, 1:51:25 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:51:25.883Z Local: 2/5/2020, 1:51:25 PM command: DO, rowCount: null 
2020-02-05T05:51:25.888Z Local: 2/5/2020, 1:51:25 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:51:25.905Z Local: 2/5/2020, 1:51:25 PM command: DO, rowCount: null 
2020-02-05T05:51:25.911Z Local: 2/5/2020, 1:51:25 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:51:25.919Z Local: 2/5/2020, 1:51:25 PM command: CREATE, rowCount: null 
2020-02-05T05:51:25.935Z Local: 2/5/2020, 1:51:25 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:51:25.987Z Local: 2/5/2020, 1:51:25 PM command: SELECT, rowCount: 1 
2020-02-05T05:51:25.994Z Local: 2/5/2020, 1:51:25 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:51:26.007Z Local: 2/5/2020, 1:51:26 PM command: INSERT, rowCount: 1 
2020-02-05T05:51:26.023Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:51:26.059Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 3 
2020-02-05T05:51:26.063Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-05T05:51:26.228Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 71 
2020-02-05T05:51:26.232Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-05T05:51:26.418Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 71 
2020-02-05T05:51:26.427Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-05T05:51:26.468Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 1 
2020-02-05T05:51:26.492Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:51:26.528Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 0 
2020-02-05T05:51:26.533Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:51:26.545Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 0 
2020-02-05T05:51:26.548Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-05T05:51:26.562Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 0 
2020-02-05T05:51:26.569Z Local: 2/5/2020, 1:51:26 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:51:26.575Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 1 
2020-02-05T05:51:26.577Z Local: 2/5/2020, 1:51:26 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:26.587Z Local: 2/5/2020, 1:51:26 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:51:26.599Z Local: 2/5/2020, 1:51:26 PM command: INSERT, rowCount: 1 
2020-02-05T05:51:26.601Z Local: 2/5/2020, 1:51:26 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:26.610Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-05T05:51:26.630Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 1 
2020-02-05T05:51:26.631Z Local: 2/5/2020, 1:51:26 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:26.644Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:51:26.663Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 0 
2020-02-05T05:51:26.664Z Local: 2/5/2020, 1:51:26 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:26.676Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:51:26.693Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 0 
2020-02-05T05:51:26.695Z Local: 2/5/2020, 1:51:26 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:26.703Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-05T05:51:26.712Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 0 
2020-02-05T05:51:26.713Z Local: 2/5/2020, 1:51:26 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:26.729Z Local: 2/5/2020, 1:51:26 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:51:26.741Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 2 
2020-02-05T05:51:26.742Z Local: 2/5/2020, 1:51:26 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:51:26.754Z Local: 2/5/2020, 1:51:26 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:51:26.800Z Local: 2/5/2020, 1:51:26 PM command: CREATE, rowCount: null 
2020-02-05T05:51:26.804Z Local: 2/5/2020, 1:51:26 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T05:51:26.810Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-05T05:51:26.817Z Local: 2/5/2020, 1:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:51:26.822Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 3 
2020-02-05T05:51:26.824Z Local: 2/5/2020, 1:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:51:26.831Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 40 
2020-02-05T05:51:26.834Z Local: 2/5/2020, 1:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:51:26.841Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 40 
2020-02-05T05:51:26.847Z Local: 2/5/2020, 1:51:26 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T05:51:26.850Z Local: 2/5/2020, 1:51:26 PM command: SELECT, rowCount: 1 
2020-02-05T05:52:57.487Z Local: 2/5/2020, 1:52:57 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:52:57.508Z Local: 2/5/2020, 1:52:57 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:52:57.517Z Local: 2/5/2020, 1:52:57 PM Server is listening on port 8000 
2020-02-05T05:52:57.580Z Local: 2/5/2020, 1:52:57 PM command: DO, rowCount: null 
2020-02-05T05:52:57.581Z Local: 2/5/2020, 1:52:57 PM Created Producer type 
2020-02-05T05:52:57.582Z Local: 2/5/2020, 1:52:57 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:52:57.587Z Local: 2/5/2020, 1:52:57 PM command: DO, rowCount: null 
2020-02-05T05:52:57.588Z Local: 2/5/2020, 1:52:57 PM Created Spec type 
2020-02-05T05:52:57.589Z Local: 2/5/2020, 1:52:57 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:52:57.595Z Local: 2/5/2020, 1:52:57 PM Created Good type 
2020-02-05T05:52:57.594Z Local: 2/5/2020, 1:52:57 PM command: DO, rowCount: null 
2020-02-05T05:52:57.596Z Local: 2/5/2020, 1:52:57 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:52:57.609Z Local: 2/5/2020, 1:52:57 PM command: CREATE, rowCount: null 
2020-02-05T05:52:57.610Z Local: 2/5/2020, 1:52:57 PM Created items_table 
2020-02-05T05:52:57.611Z Local: 2/5/2020, 1:52:57 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:52:57.623Z Local: 2/5/2020, 1:52:57 PM command: DO, rowCount: null 
2020-02-05T05:52:57.626Z Local: 2/5/2020, 1:52:57 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:52:57.625Z Local: 2/5/2020, 1:52:57 PM Created Section type 
2020-02-05T05:52:57.637Z Local: 2/5/2020, 1:52:57 PM command: CREATE, rowCount: null 
2020-02-05T05:52:57.639Z Local: 2/5/2020, 1:52:57 PM Created farmers_table 
2020-02-05T05:52:57.640Z Local: 2/5/2020, 1:52:57 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:53:01.936Z Local: 2/5/2020, 1:53:01 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:53:02.017Z Local: 2/5/2020, 1:53:02 PM command: DO, rowCount: null 
2020-02-05T05:53:02.024Z Local: 2/5/2020, 1:53:02 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:53:02.032Z Local: 2/5/2020, 1:53:02 PM command: DO, rowCount: null 
2020-02-05T05:53:02.036Z Local: 2/5/2020, 1:53:02 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:53:02.042Z Local: 2/5/2020, 1:53:02 PM command: CREATE, rowCount: null 
2020-02-05T05:53:02.052Z Local: 2/5/2020, 1:53:02 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:53:02.067Z Local: 2/5/2020, 1:53:02 PM command: SELECT, rowCount: 1 
2020-02-05T05:53:02.071Z Local: 2/5/2020, 1:53:02 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:53:02.091Z Local: 2/5/2020, 1:53:02 PM command: INSERT, rowCount: 1 
2020-02-05T05:53:02.098Z Local: 2/5/2020, 1:53:02 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-05T05:53:02.103Z Local: 2/5/2020, 1:53:02 PM command: INSERT, rowCount: 1 
2020-02-05T05:53:02.106Z Local: 2/5/2020, 1:53:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:53:02.122Z Local: 2/5/2020, 1:53:02 PM command: SELECT, rowCount: 3 
2020-02-05T05:53:02.129Z Local: 2/5/2020, 1:53:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:53:02.208Z Local: 2/5/2020, 1:53:02 PM command: SELECT, rowCount: 73 
2020-02-05T05:53:02.210Z Local: 2/5/2020, 1:53:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:53:02.301Z Local: 2/5/2020, 1:53:02 PM command: SELECT, rowCount: 73 
2020-02-05T05:53:02.304Z Local: 2/5/2020, 1:53:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-05T05:53:02.325Z Local: 2/5/2020, 1:53:02 PM command: SELECT, rowCount: 1 
2020-02-05T05:53:02.328Z Local: 2/5/2020, 1:53:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:53:02.394Z Local: 2/5/2020, 1:53:02 PM command: SELECT, rowCount: 59 
2020-02-05T05:53:02.406Z Local: 2/5/2020, 1:53:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:53:02.447Z Local: 2/5/2020, 1:53:02 PM command: SELECT, rowCount: 13 
2020-02-05T05:53:02.452Z Local: 2/5/2020, 1:53:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T05:53:02.516Z Local: 2/5/2020, 1:53:02 PM command: SELECT, rowCount: 48 
2020-02-05T05:53:02.551Z Local: 2/5/2020, 1:53:02 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:53:02.562Z Local: 2/5/2020, 1:53:02 PM command: SELECT, rowCount: 1 
2020-02-05T05:53:02.564Z Local: 2/5/2020, 1:53:02 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:02.629Z Local: 2/5/2020, 1:53:02 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:53:02.653Z Local: 2/5/2020, 1:53:02 PM command: INSERT, rowCount: 1 
2020-02-05T05:53:02.656Z Local: 2/5/2020, 1:53:02 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:02.677Z Local: 2/5/2020, 1:53:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-05T05:53:02.709Z Local: 2/5/2020, 1:53:02 PM command: SELECT, rowCount: 1 
2020-02-05T05:53:02.719Z Local: 2/5/2020, 1:53:02 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:02.736Z Local: 2/5/2020, 1:53:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:53:02.853Z Local: 2/5/2020, 1:53:02 PM command: SELECT, rowCount: 59 
2020-02-05T05:53:02.874Z Local: 2/5/2020, 1:53:02 PM Sending 59 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:02.984Z Local: 2/5/2020, 1:53:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:53:03.026Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 14 
2020-02-05T05:53:03.031Z Local: 2/5/2020, 1:53:03 PM Sending 14 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:03.069Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-05T05:53:03.097Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:53:03.098Z Local: 2/5/2020, 1:53:03 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:03.113Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:53:03.142Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 2 
2020-02-05T05:53:03.143Z Local: 2/5/2020, 1:53:03 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:03.142Z Local: 2/5/2020, 1:53:03 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:53:03.148Z Local: 2/5/2020, 1:53:03 PM command: DO, rowCount: null 
2020-02-05T05:53:03.152Z Local: 2/5/2020, 1:53:03 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:53:03.156Z Local: 2/5/2020, 1:53:03 PM command: DO, rowCount: null 
2020-02-05T05:53:03.160Z Local: 2/5/2020, 1:53:03 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:53:03.170Z Local: 2/5/2020, 1:53:03 PM command: CREATE, rowCount: null 
2020-02-05T05:53:03.174Z Local: 2/5/2020, 1:53:03 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:53:03.181Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 1 
2020-02-05T05:53:03.185Z Local: 2/5/2020, 1:53:03 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:53:03.202Z Local: 2/5/2020, 1:53:03 PM command: INSERT, rowCount: 1 
2020-02-05T05:53:03.206Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:53:03.225Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 3 
2020-02-05T05:53:03.232Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-05T05:53:03.286Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 73 
2020-02-05T05:53:03.288Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-05T05:53:03.336Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 73 
2020-02-05T05:53:03.339Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-05T05:53:03.352Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 1 
2020-02-05T05:53:03.354Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:53:03.362Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:53:03.365Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:53:03.372Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:53:03.375Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-05T05:53:03.388Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:53:03.405Z Local: 2/5/2020, 1:53:03 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:53:03.411Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 1 
2020-02-05T05:53:03.413Z Local: 2/5/2020, 1:53:03 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:03.423Z Local: 2/5/2020, 1:53:03 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:53:03.432Z Local: 2/5/2020, 1:53:03 PM command: INSERT, rowCount: 1 
2020-02-05T05:53:03.434Z Local: 2/5/2020, 1:53:03 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:03.449Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-05T05:53:03.463Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 1 
2020-02-05T05:53:03.465Z Local: 2/5/2020, 1:53:03 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:03.477Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:53:03.490Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:53:03.491Z Local: 2/5/2020, 1:53:03 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:03.502Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:53:03.520Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:53:03.521Z Local: 2/5/2020, 1:53:03 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:03.541Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-05T05:53:03.553Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:53:03.554Z Local: 2/5/2020, 1:53:03 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:03.565Z Local: 2/5/2020, 1:53:03 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:53:03.577Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 2 
2020-02-05T05:53:03.578Z Local: 2/5/2020, 1:53:03 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:53:03.576Z Local: 2/5/2020, 1:53:03 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:53:03.577Z Local: 2/5/2020, 1:53:03 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:53:03.582Z Local: 2/5/2020, 1:53:03 PM command: CREATE, rowCount: null 
2020-02-05T05:53:03.586Z Local: 2/5/2020, 1:53:03 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T05:53:03.627Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 1, post count: 40 
2020-02-05T05:53:03.632Z Local: 2/5/2020, 1:53:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:53:03.636Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 3 
2020-02-05T05:53:03.637Z Local: 2/5/2020, 1:53:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:53:03.641Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 40 
2020-02-05T05:53:03.644Z Local: 2/5/2020, 1:53:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:53:03.649Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 40 
2020-02-05T05:53:03.652Z Local: 2/5/2020, 1:53:03 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T05:53:03.654Z Local: 2/5/2020, 1:53:03 PM command: SELECT, rowCount: 1 
2020-02-05T05:53:56.702Z Local: 2/5/2020, 1:53:56 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:53:56.716Z Local: 2/5/2020, 1:53:56 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:53:56.722Z Local: 2/5/2020, 1:53:56 PM Server is listening on port 8000 
2020-02-05T05:53:56.779Z Local: 2/5/2020, 1:53:56 PM command: DO, rowCount: null 
2020-02-05T05:53:56.780Z Local: 2/5/2020, 1:53:56 PM Created Producer type 
2020-02-05T05:53:56.781Z Local: 2/5/2020, 1:53:56 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:53:56.784Z Local: 2/5/2020, 1:53:56 PM command: DO, rowCount: null 
2020-02-05T05:53:56.785Z Local: 2/5/2020, 1:53:56 PM Created Spec type 
2020-02-05T05:53:56.786Z Local: 2/5/2020, 1:53:56 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:53:56.795Z Local: 2/5/2020, 1:53:56 PM command: DO, rowCount: null 
2020-02-05T05:53:56.796Z Local: 2/5/2020, 1:53:56 PM Created Good type 
2020-02-05T05:53:56.797Z Local: 2/5/2020, 1:53:56 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:53:56.800Z Local: 2/5/2020, 1:53:56 PM command: CREATE, rowCount: null 
2020-02-05T05:53:56.801Z Local: 2/5/2020, 1:53:56 PM Created items_table 
2020-02-05T05:53:56.802Z Local: 2/5/2020, 1:53:56 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:53:56.804Z Local: 2/5/2020, 1:53:56 PM command: DO, rowCount: null 
2020-02-05T05:53:56.805Z Local: 2/5/2020, 1:53:56 PM Created Section type 
2020-02-05T05:53:56.811Z Local: 2/5/2020, 1:53:56 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:53:56.815Z Local: 2/5/2020, 1:53:56 PM command: CREATE, rowCount: null 
2020-02-05T05:53:56.815Z Local: 2/5/2020, 1:53:56 PM Created farmers_table 
2020-02-05T05:53:56.816Z Local: 2/5/2020, 1:53:56 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:54:01.436Z Local: 2/5/2020, 1:54:01 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:54:01.558Z Local: 2/5/2020, 1:54:01 PM command: DO, rowCount: null 
2020-02-05T05:54:01.570Z Local: 2/5/2020, 1:54:01 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:54:01.584Z Local: 2/5/2020, 1:54:01 PM command: DO, rowCount: null 
2020-02-05T05:54:01.591Z Local: 2/5/2020, 1:54:01 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:54:01.612Z Local: 2/5/2020, 1:54:01 PM command: CREATE, rowCount: null 
2020-02-05T05:54:01.619Z Local: 2/5/2020, 1:54:01 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:54:01.641Z Local: 2/5/2020, 1:54:01 PM command: SELECT, rowCount: 1 
2020-02-05T05:54:01.650Z Local: 2/5/2020, 1:54:01 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:54:01.699Z Local: 2/5/2020, 1:54:01 PM command: INSERT, rowCount: 1 
2020-02-05T05:54:01.704Z Local: 2/5/2020, 1:54:01 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-05T05:54:01.725Z Local: 2/5/2020, 1:54:01 PM command: INSERT, rowCount: 1 
2020-02-05T05:54:01.733Z Local: 2/5/2020, 1:54:01 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:54:01.797Z Local: 2/5/2020, 1:54:01 PM command: SELECT, rowCount: 3 
2020-02-05T05:54:01.803Z Local: 2/5/2020, 1:54:01 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:54:02.070Z Local: 2/5/2020, 1:54:02 PM command: SELECT, rowCount: 76 
2020-02-05T05:54:02.074Z Local: 2/5/2020, 1:54:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:54:02.330Z Local: 2/5/2020, 1:54:02 PM command: SELECT, rowCount: 76 
2020-02-05T05:54:02.336Z Local: 2/5/2020, 1:54:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-05T05:54:02.373Z Local: 2/5/2020, 1:54:02 PM command: SELECT, rowCount: 1 
2020-02-05T05:54:02.379Z Local: 2/5/2020, 1:54:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:54:02.549Z Local: 2/5/2020, 1:54:02 PM command: SELECT, rowCount: 61 
2020-02-05T05:54:02.557Z Local: 2/5/2020, 1:54:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:54:02.603Z Local: 2/5/2020, 1:54:02 PM command: SELECT, rowCount: 14 
2020-02-05T05:54:02.607Z Local: 2/5/2020, 1:54:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T05:54:02.688Z Local: 2/5/2020, 1:54:02 PM command: SELECT, rowCount: 50 
2020-02-05T05:54:02.715Z Local: 2/5/2020, 1:54:02 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:54:02.726Z Local: 2/5/2020, 1:54:02 PM command: SELECT, rowCount: 1 
2020-02-05T05:54:02.728Z Local: 2/5/2020, 1:54:02 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:02.790Z Local: 2/5/2020, 1:54:02 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:54:02.819Z Local: 2/5/2020, 1:54:02 PM command: INSERT, rowCount: 1 
2020-02-05T05:54:02.821Z Local: 2/5/2020, 1:54:02 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:02.836Z Local: 2/5/2020, 1:54:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-05T05:54:02.869Z Local: 2/5/2020, 1:54:02 PM command: SELECT, rowCount: 1 
2020-02-05T05:54:02.879Z Local: 2/5/2020, 1:54:02 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:02.894Z Local: 2/5/2020, 1:54:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:54:03.020Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 61 
2020-02-05T05:54:03.050Z Local: 2/5/2020, 1:54:03 PM Sending 61 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:03.165Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:54:03.214Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 15 
2020-02-05T05:54:03.219Z Local: 2/5/2020, 1:54:03 PM Sending 15 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:03.257Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-05T05:54:03.288Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:54:03.289Z Local: 2/5/2020, 1:54:03 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:03.301Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:54:03.328Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 2 
2020-02-05T05:54:03.330Z Local: 2/5/2020, 1:54:03 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:03.343Z Local: 2/5/2020, 1:54:03 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:54:03.348Z Local: 2/5/2020, 1:54:03 PM command: DO, rowCount: null 
2020-02-05T05:54:03.353Z Local: 2/5/2020, 1:54:03 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:54:03.358Z Local: 2/5/2020, 1:54:03 PM command: DO, rowCount: null 
2020-02-05T05:54:03.361Z Local: 2/5/2020, 1:54:03 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:54:03.373Z Local: 2/5/2020, 1:54:03 PM command: CREATE, rowCount: null 
2020-02-05T05:54:03.375Z Local: 2/5/2020, 1:54:03 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:54:03.386Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 1 
2020-02-05T05:54:03.391Z Local: 2/5/2020, 1:54:03 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:54:03.404Z Local: 2/5/2020, 1:54:03 PM command: INSERT, rowCount: 1 
2020-02-05T05:54:03.408Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:54:03.429Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 3 
2020-02-05T05:54:03.438Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-05T05:54:03.491Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 75 
2020-02-05T05:54:03.493Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-05T05:54:03.557Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 75 
2020-02-05T05:54:03.572Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-05T05:54:03.594Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 1 
2020-02-05T05:54:03.613Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:54:03.645Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:54:03.651Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:54:03.683Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:54:03.690Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-05T05:54:03.727Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:54:03.736Z Local: 2/5/2020, 1:54:03 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:54:03.749Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 1 
2020-02-05T05:54:03.751Z Local: 2/5/2020, 1:54:03 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:03.780Z Local: 2/5/2020, 1:54:03 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:54:03.801Z Local: 2/5/2020, 1:54:03 PM command: INSERT, rowCount: 1 
2020-02-05T05:54:03.804Z Local: 2/5/2020, 1:54:03 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:03.844Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-05T05:54:03.878Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 1 
2020-02-05T05:54:03.881Z Local: 2/5/2020, 1:54:03 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:03.908Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:54:03.941Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:54:03.943Z Local: 2/5/2020, 1:54:03 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:03.965Z Local: 2/5/2020, 1:54:03 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:54:03.999Z Local: 2/5/2020, 1:54:03 PM command: SELECT, rowCount: 0 
2020-02-05T05:54:04.001Z Local: 2/5/2020, 1:54:04 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:04.023Z Local: 2/5/2020, 1:54:04 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-05T05:54:04.063Z Local: 2/5/2020, 1:54:04 PM command: SELECT, rowCount: 0 
2020-02-05T05:54:04.065Z Local: 2/5/2020, 1:54:04 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:04.085Z Local: 2/5/2020, 1:54:04 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:54:04.123Z Local: 2/5/2020, 1:54:04 PM command: SELECT, rowCount: 2 
2020-02-05T05:54:04.125Z Local: 2/5/2020, 1:54:04 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:54:04.143Z Local: 2/5/2020, 1:54:04 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:54:04.145Z Local: 2/5/2020, 1:54:04 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:54:04.154Z Local: 2/5/2020, 1:54:04 PM command: CREATE, rowCount: null 
2020-02-05T05:54:04.160Z Local: 2/5/2020, 1:54:04 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T05:54:04.171Z Local: 2/5/2020, 1:54:04 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T05:54:04.181Z Local: 2/5/2020, 1:54:04 PM command: SELECT, rowCount: 1 
2020-02-05T05:54:04.187Z Local: 2/5/2020, 1:54:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:54:04.189Z Local: 2/5/2020, 1:54:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:54:04.358Z Local: 2/5/2020, 1:54:04 PM command: SELECT, rowCount: 3 
2020-02-05T05:54:04.362Z Local: 2/5/2020, 1:54:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:54:04.364Z Local: 2/5/2020, 1:54:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:54:05.194Z Local: 2/5/2020, 1:54:05 PM command: SELECT, rowCount: 40 
2020-02-05T05:54:05.198Z Local: 2/5/2020, 1:54:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:54:05.200Z Local: 2/5/2020, 1:54:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:54:06.027Z Local: 2/5/2020, 1:54:06 PM command: SELECT, rowCount: 40 
2020-02-05T05:54:06.041Z Local: 2/5/2020, 1:54:06 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T05:54:06.043Z Local: 2/5/2020, 1:54:06 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T05:54:06.059Z Local: 2/5/2020, 1:54:06 PM command: SELECT, rowCount: 1 
2020-02-05T05:56:47.753Z Local: 2/5/2020, 1:56:47 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:56:47.768Z Local: 2/5/2020, 1:56:47 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:56:47.774Z Local: 2/5/2020, 1:56:47 PM Server is listening on port 8000 
2020-02-05T05:56:47.831Z Local: 2/5/2020, 1:56:47 PM command: DO, rowCount: null 
2020-02-05T05:56:47.834Z Local: 2/5/2020, 1:56:47 PM Created Producer type 
2020-02-05T05:56:47.835Z Local: 2/5/2020, 1:56:47 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:56:47.838Z Local: 2/5/2020, 1:56:47 PM command: DO, rowCount: null 
2020-02-05T05:56:47.840Z Local: 2/5/2020, 1:56:47 PM Created Spec type 
2020-02-05T05:56:47.841Z Local: 2/5/2020, 1:56:47 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:56:47.846Z Local: 2/5/2020, 1:56:47 PM command: CREATE, rowCount: null 
2020-02-05T05:56:47.850Z Local: 2/5/2020, 1:56:47 PM Created items_table 
2020-02-05T05:56:47.851Z Local: 2/5/2020, 1:56:47 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:56:47.853Z Local: 2/5/2020, 1:56:47 PM command: DO, rowCount: null 
2020-02-05T05:56:47.855Z Local: 2/5/2020, 1:56:47 PM Created Good type 
2020-02-05T05:56:47.856Z Local: 2/5/2020, 1:56:47 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:56:47.864Z Local: 2/5/2020, 1:56:47 PM Created Section type 
2020-02-05T05:56:47.860Z Local: 2/5/2020, 1:56:47 PM command: DO, rowCount: null 
2020-02-05T05:56:47.866Z Local: 2/5/2020, 1:56:47 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:56:47.870Z Local: 2/5/2020, 1:56:47 PM command: CREATE, rowCount: null 
2020-02-05T05:56:47.871Z Local: 2/5/2020, 1:56:47 PM Created farmers_table 
2020-02-05T05:56:47.872Z Local: 2/5/2020, 1:56:47 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:56:52.365Z Local: 2/5/2020, 1:56:52 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:56:52.433Z Local: 2/5/2020, 1:56:52 PM command: DO, rowCount: null 
2020-02-05T05:56:52.441Z Local: 2/5/2020, 1:56:52 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:56:52.445Z Local: 2/5/2020, 1:56:52 PM command: DO, rowCount: null 
2020-02-05T05:56:52.454Z Local: 2/5/2020, 1:56:52 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:56:52.458Z Local: 2/5/2020, 1:56:52 PM command: CREATE, rowCount: null 
2020-02-05T05:56:52.468Z Local: 2/5/2020, 1:56:52 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:56:52.493Z Local: 2/5/2020, 1:56:52 PM command: SELECT, rowCount: 1 
2020-02-05T05:56:52.498Z Local: 2/5/2020, 1:56:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:56:52.513Z Local: 2/5/2020, 1:56:52 PM command: INSERT, rowCount: 1 
2020-02-05T05:56:52.518Z Local: 2/5/2020, 1:56:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-05T05:56:52.522Z Local: 2/5/2020, 1:56:52 PM command: INSERT, rowCount: 1 
2020-02-05T05:56:52.525Z Local: 2/5/2020, 1:56:52 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:56:52.531Z Local: 2/5/2020, 1:56:52 PM command: SELECT, rowCount: 3 
2020-02-05T05:56:52.533Z Local: 2/5/2020, 1:56:52 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:56:52.542Z Local: 2/5/2020, 1:56:52 PM command: SELECT, rowCount: 79 
2020-02-05T05:56:52.547Z Local: 2/5/2020, 1:56:52 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:56:52.555Z Local: 2/5/2020, 1:56:52 PM command: SELECT, rowCount: 79 
2020-02-05T05:56:52.558Z Local: 2/5/2020, 1:56:52 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-05T05:56:52.564Z Local: 2/5/2020, 1:56:52 PM command: SELECT, rowCount: 1 
2020-02-05T05:56:52.567Z Local: 2/5/2020, 1:56:52 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:56:52.580Z Local: 2/5/2020, 1:56:52 PM command: SELECT, rowCount: 63 
2020-02-05T05:56:52.589Z Local: 2/5/2020, 1:56:52 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:56:52.594Z Local: 2/5/2020, 1:56:52 PM command: SELECT, rowCount: 15 
2020-02-05T05:56:52.601Z Local: 2/5/2020, 1:56:52 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T05:56:52.606Z Local: 2/5/2020, 1:56:52 PM command: SELECT, rowCount: 52 
2020-02-05T05:56:52.629Z Local: 2/5/2020, 1:56:52 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:56:52.638Z Local: 2/5/2020, 1:56:52 PM command: SELECT, rowCount: 1 
2020-02-05T05:56:52.640Z Local: 2/5/2020, 1:56:52 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:52.712Z Local: 2/5/2020, 1:56:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:56:52.729Z Local: 2/5/2020, 1:56:52 PM command: INSERT, rowCount: 1 
2020-02-05T05:56:52.734Z Local: 2/5/2020, 1:56:52 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:52.749Z Local: 2/5/2020, 1:56:52 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-05T05:56:52.756Z Local: 2/5/2020, 1:56:52 PM command: SELECT, rowCount: 1 
2020-02-05T05:56:52.769Z Local: 2/5/2020, 1:56:52 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:52.785Z Local: 2/5/2020, 1:56:52 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:56:52.799Z Local: 2/5/2020, 1:56:52 PM command: SELECT, rowCount: 63 
2020-02-05T05:56:52.825Z Local: 2/5/2020, 1:56:52 PM Sending 63 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:53.009Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:56:53.034Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 16 
2020-02-05T05:56:53.044Z Local: 2/5/2020, 1:56:53 PM Sending 16 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:53.113Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-05T05:56:53.119Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 0 
2020-02-05T05:56:53.122Z Local: 2/5/2020, 1:56:53 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:53.145Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:56:53.162Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 2 
2020-02-05T05:56:53.171Z Local: 2/5/2020, 1:56:53 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:53.191Z Local: 2/5/2020, 1:56:53 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:56:53.196Z Local: 2/5/2020, 1:56:53 PM command: DO, rowCount: null 
2020-02-05T05:56:53.202Z Local: 2/5/2020, 1:56:53 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:56:53.206Z Local: 2/5/2020, 1:56:53 PM command: DO, rowCount: null 
2020-02-05T05:56:53.221Z Local: 2/5/2020, 1:56:53 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:56:53.226Z Local: 2/5/2020, 1:56:53 PM command: CREATE, rowCount: null 
2020-02-05T05:56:53.232Z Local: 2/5/2020, 1:56:53 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:56:53.268Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 1 
2020-02-05T05:56:53.277Z Local: 2/5/2020, 1:56:53 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:56:53.291Z Local: 2/5/2020, 1:56:53 PM command: INSERT, rowCount: 1 
2020-02-05T05:56:53.301Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:56:53.311Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 3 
2020-02-05T05:56:53.316Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-05T05:56:53.330Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 77 
2020-02-05T05:56:53.333Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-05T05:56:53.352Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 77 
2020-02-05T05:56:53.359Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-05T05:56:53.365Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 1 
2020-02-05T05:56:53.384Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:56:53.396Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 0 
2020-02-05T05:56:53.404Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:56:53.409Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 0 
2020-02-05T05:56:53.416Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-05T05:56:53.430Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 0 
2020-02-05T05:56:53.442Z Local: 2/5/2020, 1:56:53 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:56:53.449Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 1 
2020-02-05T05:56:53.452Z Local: 2/5/2020, 1:56:53 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:53.474Z Local: 2/5/2020, 1:56:53 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:56:53.482Z Local: 2/5/2020, 1:56:53 PM command: INSERT, rowCount: 1 
2020-02-05T05:56:53.489Z Local: 2/5/2020, 1:56:53 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:53.513Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-05T05:56:53.524Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 1 
2020-02-05T05:56:53.527Z Local: 2/5/2020, 1:56:53 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:53.550Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:56:53.556Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 0 
2020-02-05T05:56:53.559Z Local: 2/5/2020, 1:56:53 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:53.576Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:56:53.582Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 0 
2020-02-05T05:56:53.592Z Local: 2/5/2020, 1:56:53 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:53.611Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-05T05:56:53.617Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 0 
2020-02-05T05:56:53.623Z Local: 2/5/2020, 1:56:53 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:53.643Z Local: 2/5/2020, 1:56:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:56:53.680Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 2 
2020-02-05T05:56:53.682Z Local: 2/5/2020, 1:56:53 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:56:53.701Z Local: 2/5/2020, 1:56:53 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:56:53.703Z Local: 2/5/2020, 1:56:53 PM command: CREATE, rowCount: null 
2020-02-05T05:56:53.705Z Local: 2/5/2020, 1:56:53 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T05:56:53.708Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 1 
2020-02-05T05:56:53.711Z Local: 2/5/2020, 1:56:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:56:53.720Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 3 
2020-02-05T05:56:53.722Z Local: 2/5/2020, 1:56:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:56:53.730Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 40 
2020-02-05T05:56:53.732Z Local: 2/5/2020, 1:56:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:56:53.736Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 40 
2020-02-05T05:56:53.738Z Local: 2/5/2020, 1:56:53 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T05:56:53.740Z Local: 2/5/2020, 1:56:53 PM command: SELECT, rowCount: 1 
2020-02-05T05:58:29.492Z Local: 2/5/2020, 1:58:29 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:58:29.507Z Local: 2/5/2020, 1:58:29 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:58:29.514Z Local: 2/5/2020, 1:58:29 PM Server is listening on port 8000 
2020-02-05T05:58:29.570Z Local: 2/5/2020, 1:58:29 PM command: DO, rowCount: null 
2020-02-05T05:58:29.573Z Local: 2/5/2020, 1:58:29 PM Created Good type 
2020-02-05T05:58:29.574Z Local: 2/5/2020, 1:58:29 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:58:29.578Z Local: 2/5/2020, 1:58:29 PM command: DO, rowCount: null 
2020-02-05T05:58:29.580Z Local: 2/5/2020, 1:58:29 PM Created Section type 
2020-02-05T05:58:29.581Z Local: 2/5/2020, 1:58:29 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:58:29.585Z Local: 2/5/2020, 1:58:29 PM command: CREATE, rowCount: null 
2020-02-05T05:58:29.589Z Local: 2/5/2020, 1:58:29 PM Created farmers_table 
2020-02-05T05:58:29.590Z Local: 2/5/2020, 1:58:29 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:58:29.592Z Local: 2/5/2020, 1:58:29 PM command: DO, rowCount: null 
2020-02-05T05:58:29.593Z Local: 2/5/2020, 1:58:29 PM Created Producer type 
2020-02-05T05:58:29.594Z Local: 2/5/2020, 1:58:29 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:58:29.596Z Local: 2/5/2020, 1:58:29 PM command: DO, rowCount: null 
2020-02-05T05:58:29.597Z Local: 2/5/2020, 1:58:29 PM Created Spec type 
2020-02-05T05:58:29.598Z Local: 2/5/2020, 1:58:29 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:58:29.605Z Local: 2/5/2020, 1:58:29 PM command: CREATE, rowCount: null 
2020-02-05T05:58:29.606Z Local: 2/5/2020, 1:58:29 PM Created items_table 
2020-02-05T05:58:29.609Z Local: 2/5/2020, 1:58:29 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T05:58:33.191Z Local: 2/5/2020, 1:58:33 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:58:33.268Z Local: 2/5/2020, 1:58:33 PM command: DO, rowCount: null 
2020-02-05T05:58:33.279Z Local: 2/5/2020, 1:58:33 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:58:33.283Z Local: 2/5/2020, 1:58:33 PM command: DO, rowCount: null 
2020-02-05T05:58:33.288Z Local: 2/5/2020, 1:58:33 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:58:33.301Z Local: 2/5/2020, 1:58:33 PM command: CREATE, rowCount: null 
2020-02-05T05:58:33.306Z Local: 2/5/2020, 1:58:33 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:58:33.317Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 1 
2020-02-05T05:58:33.324Z Local: 2/5/2020, 1:58:33 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:58:33.352Z Local: 2/5/2020, 1:58:33 PM command: INSERT, rowCount: 1 
2020-02-05T05:58:33.357Z Local: 2/5/2020, 1:58:33 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-05T05:58:33.364Z Local: 2/5/2020, 1:58:33 PM command: INSERT, rowCount: 1 
2020-02-05T05:58:33.373Z Local: 2/5/2020, 1:58:33 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:58:33.382Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 3 
2020-02-05T05:58:33.387Z Local: 2/5/2020, 1:58:33 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:58:33.401Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 82 
2020-02-05T05:58:33.407Z Local: 2/5/2020, 1:58:33 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:58:33.416Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 82 
2020-02-05T05:58:33.419Z Local: 2/5/2020, 1:58:33 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-05T05:58:33.422Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 1 
2020-02-05T05:58:33.429Z Local: 2/5/2020, 1:58:33 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:58:33.441Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 65 
2020-02-05T05:58:33.451Z Local: 2/5/2020, 1:58:33 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:58:33.455Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 16 
2020-02-05T05:58:33.459Z Local: 2/5/2020, 1:58:33 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T05:58:33.469Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 54 
2020-02-05T05:58:33.492Z Local: 2/5/2020, 1:58:33 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T05:58:33.502Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 1 
2020-02-05T05:58:33.504Z Local: 2/5/2020, 1:58:33 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:33.578Z Local: 2/5/2020, 1:58:33 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T05:58:33.596Z Local: 2/5/2020, 1:58:33 PM command: INSERT, rowCount: 1 
2020-02-05T05:58:33.597Z Local: 2/5/2020, 1:58:33 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:33.615Z Local: 2/5/2020, 1:58:33 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-05T05:58:33.620Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 1 
2020-02-05T05:58:33.634Z Local: 2/5/2020, 1:58:33 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:33.653Z Local: 2/5/2020, 1:58:33 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T05:58:33.665Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 65 
2020-02-05T05:58:33.690Z Local: 2/5/2020, 1:58:33 PM Sending 65 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:33.875Z Local: 2/5/2020, 1:58:33 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T05:58:33.896Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 17 
2020-02-05T05:58:33.910Z Local: 2/5/2020, 1:58:33 PM Sending 17 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:33.977Z Local: 2/5/2020, 1:58:33 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-05T05:58:33.983Z Local: 2/5/2020, 1:58:33 PM command: SELECT, rowCount: 0 
2020-02-05T05:58:33.986Z Local: 2/5/2020, 1:58:33 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:34.009Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:58:34.020Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 2 
2020-02-05T05:58:34.022Z Local: 2/5/2020, 1:58:34 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:34.052Z Local: 2/5/2020, 1:58:34 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:58:34.057Z Local: 2/5/2020, 1:58:34 PM command: DO, rowCount: null 
2020-02-05T05:58:34.070Z Local: 2/5/2020, 1:58:34 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T05:58:34.075Z Local: 2/5/2020, 1:58:34 PM command: DO, rowCount: null 
2020-02-05T05:58:34.086Z Local: 2/5/2020, 1:58:34 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T05:58:34.091Z Local: 2/5/2020, 1:58:34 PM command: CREATE, rowCount: null 
2020-02-05T05:58:34.098Z Local: 2/5/2020, 1:58:34 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:58:34.104Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 1 
2020-02-05T05:58:34.120Z Local: 2/5/2020, 1:58:34 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:58:34.131Z Local: 2/5/2020, 1:58:34 PM command: INSERT, rowCount: 1 
2020-02-05T05:58:34.135Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:58:34.148Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 3 
2020-02-05T05:58:34.150Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-05T05:58:34.159Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 79 
2020-02-05T05:58:34.162Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-05T05:58:34.173Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 79 
2020-02-05T05:58:34.177Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-05T05:58:34.180Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 1 
2020-02-05T05:58:34.183Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:58:34.190Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 0 
2020-02-05T05:58:34.194Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:58:34.196Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 0 
2020-02-05T05:58:34.205Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-05T05:58:34.207Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 0 
2020-02-05T05:58:34.212Z Local: 2/5/2020, 1:58:34 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T05:58:34.217Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 1 
2020-02-05T05:58:34.218Z Local: 2/5/2020, 1:58:34 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:34.230Z Local: 2/5/2020, 1:58:34 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T05:58:34.239Z Local: 2/5/2020, 1:58:34 PM command: INSERT, rowCount: 1 
2020-02-05T05:58:34.241Z Local: 2/5/2020, 1:58:34 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:34.257Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-05T05:58:34.262Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 1 
2020-02-05T05:58:34.264Z Local: 2/5/2020, 1:58:34 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:34.276Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T05:58:34.286Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 0 
2020-02-05T05:58:34.288Z Local: 2/5/2020, 1:58:34 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:34.300Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T05:58:34.302Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 0 
2020-02-05T05:58:34.304Z Local: 2/5/2020, 1:58:34 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:34.316Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-05T05:58:34.319Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 0 
2020-02-05T05:58:34.320Z Local: 2/5/2020, 1:58:34 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:34.334Z Local: 2/5/2020, 1:58:34 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-05T05:58:34.338Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 2 
2020-02-05T05:58:34.339Z Local: 2/5/2020, 1:58:34 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T05:58:34.358Z Local: 2/5/2020, 1:58:34 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T05:58:34.361Z Local: 2/5/2020, 1:58:34 PM command: CREATE, rowCount: null 
2020-02-05T05:58:34.363Z Local: 2/5/2020, 1:58:34 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T05:58:34.366Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 1 
2020-02-05T05:58:34.368Z Local: 2/5/2020, 1:58:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T05:58:34.371Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 3 
2020-02-05T05:58:34.372Z Local: 2/5/2020, 1:58:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T05:58:34.382Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 40 
2020-02-05T05:58:34.384Z Local: 2/5/2020, 1:58:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T05:58:34.388Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 40 
2020-02-05T05:58:34.391Z Local: 2/5/2020, 1:58:34 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T05:58:34.394Z Local: 2/5/2020, 1:58:34 PM command: SELECT, rowCount: 1 
2020-02-05T06:02:12.880Z Local: 2/5/2020, 2:02:12 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:02:12.894Z Local: 2/5/2020, 2:02:12 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:02:12.895Z Local: 2/5/2020, 2:02:12 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:02:12.901Z Local: 2/5/2020, 2:02:12 PM Server is listening on port 8000 
2020-02-05T06:02:12.955Z Local: 2/5/2020, 2:02:12 PM command: DO, rowCount: null 
2020-02-05T06:02:12.958Z Local: 2/5/2020, 2:02:12 PM Created Producer type 
2020-02-05T06:02:12.959Z Local: 2/5/2020, 2:02:12 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:02:12.962Z Local: 2/5/2020, 2:02:12 PM command: DO, rowCount: null 
2020-02-05T06:02:12.963Z Local: 2/5/2020, 2:02:12 PM Created Spec type 
2020-02-05T06:02:12.965Z Local: 2/5/2020, 2:02:12 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:02:12.968Z Local: 2/5/2020, 2:02:12 PM command: CREATE, rowCount: null 
2020-02-05T06:02:12.969Z Local: 2/5/2020, 2:02:12 PM Created posts_table 
2020-02-05T06:02:12.969Z Local: 2/5/2020, 2:02:12 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:02:12.971Z Local: 2/5/2020, 2:02:12 PM command: CREATE, rowCount: null 
2020-02-05T06:02:12.972Z Local: 2/5/2020, 2:02:12 PM Created items_table 
2020-02-05T06:02:12.973Z Local: 2/5/2020, 2:02:12 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:02:12.988Z Local: 2/5/2020, 2:02:12 PM command: DO, rowCount: null 
2020-02-05T06:02:12.989Z Local: 2/5/2020, 2:02:12 PM Created Good type 
2020-02-05T06:02:12.993Z Local: 2/5/2020, 2:02:12 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:02:12.995Z Local: 2/5/2020, 2:02:12 PM command: DO, rowCount: null 
2020-02-05T06:02:12.996Z Local: 2/5/2020, 2:02:12 PM Created Section type 
2020-02-05T06:02:12.998Z Local: 2/5/2020, 2:02:12 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:02:13.001Z Local: 2/5/2020, 2:02:13 PM command: CREATE, rowCount: null 
2020-02-05T06:02:13.003Z Local: 2/5/2020, 2:02:13 PM Created farmers_table 
2020-02-05T06:02:13.004Z Local: 2/5/2020, 2:02:13 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:02:16.914Z Local: 2/5/2020, 2:02:16 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:02:16.996Z Local: 2/5/2020, 2:02:16 PM command: DO, rowCount: null 
2020-02-05T06:02:17.007Z Local: 2/5/2020, 2:02:17 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:02:17.010Z Local: 2/5/2020, 2:02:17 PM command: DO, rowCount: null 
2020-02-05T06:02:17.013Z Local: 2/5/2020, 2:02:17 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:02:17.023Z Local: 2/5/2020, 2:02:17 PM command: CREATE, rowCount: null 
2020-02-05T06:02:17.028Z Local: 2/5/2020, 2:02:17 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T06:02:17.056Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 1 
2020-02-05T06:02:17.060Z Local: 2/5/2020, 2:02:17 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T06:02:17.075Z Local: 2/5/2020, 2:02:17 PM command: INSERT, rowCount: 1 
2020-02-05T06:02:17.078Z Local: 2/5/2020, 2:02:17 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-05T06:02:17.086Z Local: 2/5/2020, 2:02:17 PM command: INSERT, rowCount: 1 
2020-02-05T06:02:17.091Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:02:17.101Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 3 
2020-02-05T06:02:17.104Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T06:02:17.122Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 85 
2020-02-05T06:02:17.124Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-05T06:02:17.134Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 85 
2020-02-05T06:02:17.137Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-05T06:02:17.140Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 1 
2020-02-05T06:02:17.143Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T06:02:17.153Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 67 
2020-02-05T06:02:17.159Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T06:02:17.164Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 17 
2020-02-05T06:02:17.169Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T06:02:17.175Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 56 
2020-02-05T06:02:17.202Z Local: 2/5/2020, 2:02:17 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T06:02:17.212Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 1 
2020-02-05T06:02:17.214Z Local: 2/5/2020, 2:02:17 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.286Z Local: 2/5/2020, 2:02:17 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T06:02:17.304Z Local: 2/5/2020, 2:02:17 PM command: INSERT, rowCount: 1 
2020-02-05T06:02:17.305Z Local: 2/5/2020, 2:02:17 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.321Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-05T06:02:17.327Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 1 
2020-02-05T06:02:17.341Z Local: 2/5/2020, 2:02:17 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.360Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T06:02:17.371Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 67 
2020-02-05T06:02:17.398Z Local: 2/5/2020, 2:02:17 PM Sending 67 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.518Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T06:02:17.526Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 18 
2020-02-05T06:02:17.533Z Local: 2/5/2020, 2:02:17 PM Sending 18 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.579Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-05T06:02:17.588Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 0 
2020-02-05T06:02:17.590Z Local: 2/5/2020, 2:02:17 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.604Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T06:02:17.610Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 2 
2020-02-05T06:02:17.611Z Local: 2/5/2020, 2:02:17 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.630Z Local: 2/5/2020, 2:02:17 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:02:17.635Z Local: 2/5/2020, 2:02:17 PM command: DO, rowCount: null 
2020-02-05T06:02:17.637Z Local: 2/5/2020, 2:02:17 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:02:17.639Z Local: 2/5/2020, 2:02:17 PM command: DO, rowCount: null 
2020-02-05T06:02:17.642Z Local: 2/5/2020, 2:02:17 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:02:17.644Z Local: 2/5/2020, 2:02:17 PM command: CREATE, rowCount: null 
2020-02-05T06:02:17.652Z Local: 2/5/2020, 2:02:17 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T06:02:17.677Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 1 
2020-02-05T06:02:17.686Z Local: 2/5/2020, 2:02:17 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T06:02:17.715Z Local: 2/5/2020, 2:02:17 PM command: INSERT, rowCount: 1 
2020-02-05T06:02:17.721Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:02:17.726Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 3 
2020-02-05T06:02:17.735Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-05T06:02:17.749Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 81 
2020-02-05T06:02:17.755Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-05T06:02:17.763Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 81 
2020-02-05T06:02:17.769Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-05T06:02:17.772Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 1 
2020-02-05T06:02:17.775Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T06:02:17.777Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 0 
2020-02-05T06:02:17.784Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T06:02:17.786Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 0 
2020-02-05T06:02:17.788Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-05T06:02:17.790Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 0 
2020-02-05T06:02:17.794Z Local: 2/5/2020, 2:02:17 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T06:02:17.798Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 1 
2020-02-05T06:02:17.799Z Local: 2/5/2020, 2:02:17 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.808Z Local: 2/5/2020, 2:02:17 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T06:02:17.814Z Local: 2/5/2020, 2:02:17 PM command: INSERT, rowCount: 1 
2020-02-05T06:02:17.820Z Local: 2/5/2020, 2:02:17 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.834Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-05T06:02:17.837Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 1 
2020-02-05T06:02:17.839Z Local: 2/5/2020, 2:02:17 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.853Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T06:02:17.856Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 0 
2020-02-05T06:02:17.858Z Local: 2/5/2020, 2:02:17 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.873Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T06:02:17.876Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 0 
2020-02-05T06:02:17.878Z Local: 2/5/2020, 2:02:17 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.892Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-05T06:02:17.895Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 0 
2020-02-05T06:02:17.897Z Local: 2/5/2020, 2:02:17 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.910Z Local: 2/5/2020, 2:02:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-05T06:02:17.914Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 2 
2020-02-05T06:02:17.916Z Local: 2/5/2020, 2:02:17 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:02:17.931Z Local: 2/5/2020, 2:02:17 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:02:17.934Z Local: 2/5/2020, 2:02:17 PM command: CREATE, rowCount: null 
2020-02-05T06:02:17.941Z Local: 2/5/2020, 2:02:17 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T06:02:17.945Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 1 
2020-02-05T06:02:17.951Z Local: 2/5/2020, 2:02:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:02:17.957Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 3 
2020-02-05T06:02:17.959Z Local: 2/5/2020, 2:02:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T06:02:17.966Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 40 
2020-02-05T06:02:17.971Z Local: 2/5/2020, 2:02:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T06:02:17.977Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 40 
2020-02-05T06:02:17.981Z Local: 2/5/2020, 2:02:17 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T06:02:17.985Z Local: 2/5/2020, 2:02:17 PM command: SELECT, rowCount: 1 
2020-02-05T06:04:42.932Z Local: 2/5/2020, 2:04:42 PM SELECT * FROM posts_table WHERE id = '1'; 
2020-02-05T06:04:42.964Z Local: 2/5/2020, 2:04:42 PM command: SELECT, rowCount: 1 
2020-02-05T06:04:42.966Z Local: 2/5/2020, 2:04:42 PM Sending 1 rows to ::1 with  
2020-02-05T06:11:11.628Z Local: 2/5/2020, 2:11:11 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:11:11.652Z Local: 2/5/2020, 2:11:11 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:11:11.655Z Local: 2/5/2020, 2:11:11 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:11:11.664Z Local: 2/5/2020, 2:11:11 PM Server is listening on port 8000 
2020-02-05T06:11:13.703Z Local: 2/5/2020, 2:11:13 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-05T06:11:13.707Z Local: 2/5/2020, 2:11:13 PM Created Producer type 
2020-02-05T06:11:13.709Z Local: 2/5/2020, 2:11:13 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:11:13.715Z Local: 2/5/2020, 2:11:13 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-05T06:11:13.723Z Local: 2/5/2020, 2:11:13 PM Created posts_table 
2020-02-05T06:11:13.726Z Local: 2/5/2020, 2:11:13 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:11:13.730Z Local: 2/5/2020, 2:11:13 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-05T06:11:13.739Z Local: 2/5/2020, 2:11:13 PM Created Good type 
2020-02-05T06:11:13.743Z Local: 2/5/2020, 2:11:13 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:11:15.774Z Local: 2/5/2020, 2:11:15 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-05T06:11:15.786Z Local: 2/5/2020, 2:11:15 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:11:15.779Z Local: 2/5/2020, 2:11:15 PM Created Spec type 
2020-02-05T06:11:15.802Z Local: 2/5/2020, 2:11:15 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-05T06:11:15.809Z Local: 2/5/2020, 2:11:15 PM Created Section type 
2020-02-05T06:11:15.812Z Local: 2/5/2020, 2:11:15 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:11:17.865Z Local: 2/5/2020, 2:11:17 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-05T06:11:17.890Z Local: 2/5/2020, 2:11:17 PM Created items_table 
2020-02-05T06:11:17.894Z Local: 2/5/2020, 2:11:17 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:11:17.905Z Local: 2/5/2020, 2:11:17 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-05T06:11:17.909Z Local: 2/5/2020, 2:11:17 PM Created farmers_table 
2020-02-05T06:11:17.913Z Local: 2/5/2020, 2:11:17 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:12:39.186Z Local: 2/5/2020, 2:12:39 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:12:39.199Z Local: 2/5/2020, 2:12:39 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:12:39.202Z Local: 2/5/2020, 2:12:39 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:12:39.209Z Local: 2/5/2020, 2:12:39 PM Server is listening on port 8000 
2020-02-05T06:12:39.265Z Local: 2/5/2020, 2:12:39 PM command: CREATE, rowCount: null 
2020-02-05T06:12:39.268Z Local: 2/5/2020, 2:12:39 PM Created posts_table 
2020-02-05T06:12:39.272Z Local: 2/5/2020, 2:12:39 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:12:39.278Z Local: 2/5/2020, 2:12:39 PM command: DO, rowCount: null 
2020-02-05T06:12:39.280Z Local: 2/5/2020, 2:12:39 PM Created Producer type 
2020-02-05T06:12:39.281Z Local: 2/5/2020, 2:12:39 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:12:39.284Z Local: 2/5/2020, 2:12:39 PM command: DO, rowCount: null 
2020-02-05T06:12:39.288Z Local: 2/5/2020, 2:12:39 PM Created Spec type 
2020-02-05T06:12:39.290Z Local: 2/5/2020, 2:12:39 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:12:39.293Z Local: 2/5/2020, 2:12:39 PM Created Good type 
2020-02-05T06:12:39.292Z Local: 2/5/2020, 2:12:39 PM command: DO, rowCount: null 
2020-02-05T06:12:39.295Z Local: 2/5/2020, 2:12:39 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:12:39.297Z Local: 2/5/2020, 2:12:39 PM command: CREATE, rowCount: null 
2020-02-05T06:12:39.302Z Local: 2/5/2020, 2:12:39 PM Created items_table 
2020-02-05T06:12:39.304Z Local: 2/5/2020, 2:12:39 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:12:39.306Z Local: 2/5/2020, 2:12:39 PM command: DO, rowCount: null 
2020-02-05T06:12:39.308Z Local: 2/5/2020, 2:12:39 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:12:39.307Z Local: 2/5/2020, 2:12:39 PM Created Section type 
2020-02-05T06:12:39.311Z Local: 2/5/2020, 2:12:39 PM command: CREATE, rowCount: null 
2020-02-05T06:12:39.311Z Local: 2/5/2020, 2:12:39 PM Created farmers_table 
2020-02-05T06:12:39.313Z Local: 2/5/2020, 2:12:39 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:12:56.313Z Local: 2/5/2020, 2:12:56 PM SELECT * FROM posts_table WHERE id = '1'; 
2020-02-05T06:12:56.364Z Local: 2/5/2020, 2:12:56 PM command: SELECT, rowCount: 1 
2020-02-05T06:12:56.393Z Local: 2/5/2020, 2:12:56 PM Sending 1 rows to ::1 with  
2020-02-05T06:13:07.532Z Local: 2/5/2020, 2:13:07 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T06:13:07.580Z Local: 2/5/2020, 2:13:07 PM command: SELECT, rowCount: 1 
2020-02-05T06:13:07.583Z Local: 2/5/2020, 2:13:07 PM Sending 1 rows to ::1 with  
2020-02-05T06:13:43.212Z Local: 2/5/2020, 2:13:43 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T06:13:43.263Z Local: 2/5/2020, 2:13:43 PM command: SELECT, rowCount: 1 
2020-02-05T06:13:43.266Z Local: 2/5/2020, 2:13:43 PM Sending 1 rows to ::1 with  
2020-02-05T06:16:24.112Z Local: 2/5/2020, 2:16:24 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:16:24.125Z Local: 2/5/2020, 2:16:24 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:16:24.127Z Local: 2/5/2020, 2:16:24 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:16:24.136Z Local: 2/5/2020, 2:16:24 PM Server is listening on port 8000 
2020-02-05T06:16:24.190Z Local: 2/5/2020, 2:16:24 PM command: DO, rowCount: null 
2020-02-05T06:16:24.194Z Local: 2/5/2020, 2:16:24 PM Created Producer type 
2020-02-05T06:16:24.197Z Local: 2/5/2020, 2:16:24 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:16:24.201Z Local: 2/5/2020, 2:16:24 PM command: DO, rowCount: null 
2020-02-05T06:16:24.204Z Local: 2/5/2020, 2:16:24 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:16:24.202Z Local: 2/5/2020, 2:16:24 PM Created Spec type 
2020-02-05T06:16:24.210Z Local: 2/5/2020, 2:16:24 PM command: CREATE, rowCount: null 
2020-02-05T06:16:24.212Z Local: 2/5/2020, 2:16:24 PM Created posts_table 
2020-02-05T06:16:24.213Z Local: 2/5/2020, 2:16:24 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:16:24.215Z Local: 2/5/2020, 2:16:24 PM command: CREATE, rowCount: null 
2020-02-05T06:16:24.217Z Local: 2/5/2020, 2:16:24 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:16:24.216Z Local: 2/5/2020, 2:16:24 PM Created items_table 
2020-02-05T06:16:24.224Z Local: 2/5/2020, 2:16:24 PM command: DO, rowCount: null 
2020-02-05T06:16:24.228Z Local: 2/5/2020, 2:16:24 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:16:24.225Z Local: 2/5/2020, 2:16:24 PM Created Good type 
2020-02-05T06:16:24.230Z Local: 2/5/2020, 2:16:24 PM command: DO, rowCount: null 
2020-02-05T06:16:24.232Z Local: 2/5/2020, 2:16:24 PM Created Section type 
2020-02-05T06:16:24.233Z Local: 2/5/2020, 2:16:24 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:16:24.235Z Local: 2/5/2020, 2:16:24 PM command: CREATE, rowCount: null 
2020-02-05T06:16:24.240Z Local: 2/5/2020, 2:16:24 PM Created farmers_table 
2020-02-05T06:16:24.241Z Local: 2/5/2020, 2:16:24 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:17:47.792Z Local: 2/5/2020, 2:17:47 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('凍頂村的故事', 'A Test of query a post', 'SHC', '# Remarkable...', 'hill3.jpg') RETURNING id; 
2020-02-05T06:17:47.861Z Local: 2/5/2020, 2:17:47 PM command: INSERT, rowCount: 1 
2020-02-05T06:17:47.865Z Local: 2/5/2020, 2:17:47 PM Sending 1 rows to ::1 with  
2020-02-05T06:21:19.441Z Local: 2/5/2020, 2:21:19 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:21:19.469Z Local: 2/5/2020, 2:21:19 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:21:19.473Z Local: 2/5/2020, 2:21:19 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:21:19.484Z Local: 2/5/2020, 2:21:19 PM Server is listening on port 8000 
2020-02-05T06:21:19.545Z Local: 2/5/2020, 2:21:19 PM command: CREATE, rowCount: null 
2020-02-05T06:21:19.548Z Local: 2/5/2020, 2:21:19 PM Created posts_table 
2020-02-05T06:21:19.552Z Local: 2/5/2020, 2:21:19 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:21:19.584Z Local: 2/5/2020, 2:21:19 PM command: DO, rowCount: null 
2020-02-05T06:21:19.588Z Local: 2/5/2020, 2:21:19 PM Created Producer type 
2020-02-05T06:21:19.591Z Local: 2/5/2020, 2:21:19 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:21:19.595Z Local: 2/5/2020, 2:21:19 PM command: DO, rowCount: null 
2020-02-05T06:21:19.603Z Local: 2/5/2020, 2:21:19 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:21:19.598Z Local: 2/5/2020, 2:21:19 PM Created Good type 
2020-02-05T06:21:19.608Z Local: 2/5/2020, 2:21:19 PM command: DO, rowCount: null 
2020-02-05T06:21:19.610Z Local: 2/5/2020, 2:21:19 PM Created Spec type 
2020-02-05T06:21:19.619Z Local: 2/5/2020, 2:21:19 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:21:19.624Z Local: 2/5/2020, 2:21:19 PM command: DO, rowCount: null 
2020-02-05T06:21:19.630Z Local: 2/5/2020, 2:21:19 PM Created Section type 
2020-02-05T06:21:19.637Z Local: 2/5/2020, 2:21:19 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:21:19.642Z Local: 2/5/2020, 2:21:19 PM command: CREATE, rowCount: null 
2020-02-05T06:21:19.648Z Local: 2/5/2020, 2:21:19 PM Created items_table 
2020-02-05T06:21:19.651Z Local: 2/5/2020, 2:21:19 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:21:19.655Z Local: 2/5/2020, 2:21:19 PM command: CREATE, rowCount: null 
2020-02-05T06:21:19.658Z Local: 2/5/2020, 2:21:19 PM Created farmers_table 
2020-02-05T06:21:19.662Z Local: 2/5/2020, 2:21:19 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:21:37.638Z Local: 2/5/2020, 2:21:37 PM SELECT * FROM posts_table WHERE id = '1'; 
2020-02-05T06:21:37.684Z Local: 2/5/2020, 2:21:37 PM command: SELECT, rowCount: 1 
2020-02-05T06:21:37.692Z Local: 2/5/2020, 2:21:37 PM Sending 1 rows to ::1 with  
2020-02-05T06:33:32.578Z Local: 2/5/2020, 2:33:32 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:33:32.593Z Local: 2/5/2020, 2:33:32 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:33:32.595Z Local: 2/5/2020, 2:33:32 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:33:32.602Z Local: 2/5/2020, 2:33:32 PM Server is listening on port 8000 
2020-02-05T06:33:32.669Z Local: 2/5/2020, 2:33:32 PM command: DO, rowCount: null 
2020-02-05T06:33:32.677Z Local: 2/5/2020, 2:33:32 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:33:32.673Z Local: 2/5/2020, 2:33:32 PM Created Producer type 
2020-02-05T06:33:32.682Z Local: 2/5/2020, 2:33:32 PM command: DO, rowCount: null 
2020-02-05T06:33:32.685Z Local: 2/5/2020, 2:33:32 PM Created Spec type 
2020-02-05T06:33:32.690Z Local: 2/5/2020, 2:33:32 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:33:32.694Z Local: 2/5/2020, 2:33:32 PM command: CREATE, rowCount: null 
2020-02-05T06:33:32.695Z Local: 2/5/2020, 2:33:32 PM Created posts_table 
2020-02-05T06:33:32.697Z Local: 2/5/2020, 2:33:32 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:33:32.705Z Local: 2/5/2020, 2:33:32 PM Created items_table 
2020-02-05T06:33:32.700Z Local: 2/5/2020, 2:33:32 PM command: CREATE, rowCount: null 
2020-02-05T06:33:32.706Z Local: 2/5/2020, 2:33:32 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:33:32.716Z Local: 2/5/2020, 2:33:32 PM command: DO, rowCount: null 
2020-02-05T06:33:32.723Z Local: 2/5/2020, 2:33:32 PM Created Good type 
2020-02-05T06:33:32.727Z Local: 2/5/2020, 2:33:32 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:33:32.730Z Local: 2/5/2020, 2:33:32 PM command: DO, rowCount: null 
2020-02-05T06:33:32.732Z Local: 2/5/2020, 2:33:32 PM Created Section type 
2020-02-05T06:33:32.739Z Local: 2/5/2020, 2:33:32 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:33:32.743Z Local: 2/5/2020, 2:33:32 PM command: CREATE, rowCount: null 
2020-02-05T06:33:32.746Z Local: 2/5/2020, 2:33:32 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:33:32.745Z Local: 2/5/2020, 2:33:32 PM Created farmers_table 
2020-02-05T06:33:47.707Z Local: 2/5/2020, 2:33:47 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:33:47.762Z Local: 2/5/2020, 2:33:47 PM command: DO, rowCount: null 
2020-02-05T06:33:47.773Z Local: 2/5/2020, 2:33:47 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:33:47.776Z Local: 2/5/2020, 2:33:47 PM command: DO, rowCount: null 
2020-02-05T06:33:47.782Z Local: 2/5/2020, 2:33:47 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:33:47.793Z Local: 2/5/2020, 2:33:47 PM command: CREATE, rowCount: null 
2020-02-05T06:33:47.806Z Local: 2/5/2020, 2:33:47 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T06:33:47.849Z Local: 2/5/2020, 2:33:47 PM command: SELECT, rowCount: 1 
2020-02-05T06:33:47.863Z Local: 2/5/2020, 2:33:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T06:33:47.986Z Local: 2/5/2020, 2:33:47 PM command: INSERT, rowCount: 1 
2020-02-05T06:33:47.994Z Local: 2/5/2020, 2:33:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-05T06:33:48.000Z Local: 2/5/2020, 2:33:48 PM command: INSERT, rowCount: 1 
2020-02-05T06:33:48.012Z Local: 2/5/2020, 2:33:48 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:33:48.106Z Local: 2/5/2020, 2:33:48 PM command: SELECT, rowCount: 3 
2020-02-05T06:33:48.113Z Local: 2/5/2020, 2:33:48 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T06:33:48.129Z Local: 2/5/2020, 2:33:48 PM command: SELECT, rowCount: 88 
2020-02-05T06:33:48.139Z Local: 2/5/2020, 2:33:48 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-05T06:33:48.157Z Local: 2/5/2020, 2:33:48 PM command: SELECT, rowCount: 88 
2020-02-05T06:33:48.167Z Local: 2/5/2020, 2:33:48 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-05T06:33:48.173Z Local: 2/5/2020, 2:33:48 PM command: SELECT, rowCount: 1 
2020-02-05T06:33:48.187Z Local: 2/5/2020, 2:33:48 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T06:33:48.207Z Local: 2/5/2020, 2:33:48 PM command: SELECT, rowCount: 69 
2020-02-05T06:33:48.222Z Local: 2/5/2020, 2:33:48 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T06:33:48.244Z Local: 2/5/2020, 2:33:48 PM command: SELECT, rowCount: 18 
2020-02-05T06:33:48.257Z Local: 2/5/2020, 2:33:48 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T06:33:48.269Z Local: 2/5/2020, 2:33:48 PM command: SELECT, rowCount: 58 
2020-02-05T06:33:48.307Z Local: 2/5/2020, 2:33:48 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T06:33:48.352Z Local: 2/5/2020, 2:33:48 PM command: SELECT, rowCount: 1 
2020-02-05T06:33:48.356Z Local: 2/5/2020, 2:33:48 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:48.439Z Local: 2/5/2020, 2:33:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T06:33:48.460Z Local: 2/5/2020, 2:33:48 PM command: INSERT, rowCount: 1 
2020-02-05T06:33:48.464Z Local: 2/5/2020, 2:33:48 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:48.493Z Local: 2/5/2020, 2:33:48 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-05T06:33:48.499Z Local: 2/5/2020, 2:33:48 PM command: SELECT, rowCount: 1 
2020-02-05T06:33:48.514Z Local: 2/5/2020, 2:33:48 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:48.546Z Local: 2/5/2020, 2:33:48 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T06:33:48.578Z Local: 2/5/2020, 2:33:48 PM command: SELECT, rowCount: 69 
2020-02-05T06:33:48.635Z Local: 2/5/2020, 2:33:48 PM Sending 69 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:48.882Z Local: 2/5/2020, 2:33:48 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T06:33:48.908Z Local: 2/5/2020, 2:33:48 PM command: SELECT, rowCount: 19 
2020-02-05T06:33:48.921Z Local: 2/5/2020, 2:33:48 PM Sending 19 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:49.002Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-05T06:33:49.010Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 0 
2020-02-05T06:33:49.014Z Local: 2/5/2020, 2:33:49 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:49.053Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T06:33:49.075Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 2 
2020-02-05T06:33:49.078Z Local: 2/5/2020, 2:33:49 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:49.112Z Local: 2/5/2020, 2:33:49 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:33:49.118Z Local: 2/5/2020, 2:33:49 PM command: DO, rowCount: null 
2020-02-05T06:33:49.132Z Local: 2/5/2020, 2:33:49 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:33:49.139Z Local: 2/5/2020, 2:33:49 PM command: DO, rowCount: null 
2020-02-05T06:33:49.158Z Local: 2/5/2020, 2:33:49 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:33:49.164Z Local: 2/5/2020, 2:33:49 PM command: CREATE, rowCount: null 
2020-02-05T06:33:49.180Z Local: 2/5/2020, 2:33:49 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T06:33:49.225Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 1 
2020-02-05T06:33:49.246Z Local: 2/5/2020, 2:33:49 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T06:33:49.312Z Local: 2/5/2020, 2:33:49 PM command: INSERT, rowCount: 1 
2020-02-05T06:33:49.326Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:33:49.358Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 3 
2020-02-05T06:33:49.369Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-05T06:33:49.384Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 83 
2020-02-05T06:33:49.397Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-05T06:33:49.421Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 83 
2020-02-05T06:33:49.439Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-05T06:33:49.445Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 1 
2020-02-05T06:33:49.464Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T06:33:49.470Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 0 
2020-02-05T06:33:49.491Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T06:33:49.498Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 0 
2020-02-05T06:33:49.511Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-05T06:33:49.523Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 0 
2020-02-05T06:33:49.541Z Local: 2/5/2020, 2:33:49 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T06:33:49.553Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 1 
2020-02-05T06:33:49.557Z Local: 2/5/2020, 2:33:49 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:49.592Z Local: 2/5/2020, 2:33:49 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T06:33:49.610Z Local: 2/5/2020, 2:33:49 PM command: INSERT, rowCount: 1 
2020-02-05T06:33:49.614Z Local: 2/5/2020, 2:33:49 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:49.657Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-05T06:33:49.664Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 1 
2020-02-05T06:33:49.673Z Local: 2/5/2020, 2:33:49 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:49.706Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T06:33:49.713Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 0 
2020-02-05T06:33:49.721Z Local: 2/5/2020, 2:33:49 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:49.751Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T06:33:49.757Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 0 
2020-02-05T06:33:49.761Z Local: 2/5/2020, 2:33:49 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:49.790Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-05T06:33:49.796Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 0 
2020-02-05T06:33:49.801Z Local: 2/5/2020, 2:33:49 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:49.838Z Local: 2/5/2020, 2:33:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-05T06:33:49.853Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 2 
2020-02-05T06:33:49.856Z Local: 2/5/2020, 2:33:49 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:33:49.889Z Local: 2/5/2020, 2:33:49 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:33:49.895Z Local: 2/5/2020, 2:33:49 PM command: CREATE, rowCount: null 
2020-02-05T06:33:49.915Z Local: 2/5/2020, 2:33:49 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T06:33:49.963Z Local: 2/5/2020, 2:33:49 PM command: SELECT, rowCount: 1 
2020-02-05T06:33:49.984Z Local: 2/5/2020, 2:33:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:33:50.033Z Local: 2/5/2020, 2:33:50 PM command: SELECT, rowCount: 3 
2020-02-05T06:33:50.044Z Local: 2/5/2020, 2:33:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T06:33:50.058Z Local: 2/5/2020, 2:33:50 PM command: SELECT, rowCount: 41 
2020-02-05T06:33:50.065Z Local: 2/5/2020, 2:33:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T06:33:50.082Z Local: 2/5/2020, 2:33:50 PM command: SELECT, rowCount: 41 
2020-02-05T06:33:50.098Z Local: 2/5/2020, 2:33:50 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T06:33:50.107Z Local: 2/5/2020, 2:33:50 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:49.713Z Local: 2/5/2020, 2:34:49 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:34:49.726Z Local: 2/5/2020, 2:34:49 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:34:49.729Z Local: 2/5/2020, 2:34:49 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:34:49.736Z Local: 2/5/2020, 2:34:49 PM Server is listening on port 8000 
2020-02-05T06:34:49.793Z Local: 2/5/2020, 2:34:49 PM command: CREATE, rowCount: null 
2020-02-05T06:34:49.796Z Local: 2/5/2020, 2:34:49 PM Created posts_table 
2020-02-05T06:34:49.800Z Local: 2/5/2020, 2:34:49 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:34:49.816Z Local: 2/5/2020, 2:34:49 PM command: DO, rowCount: null 
2020-02-05T06:34:49.821Z Local: 2/5/2020, 2:34:49 PM Created Producer type 
2020-02-05T06:34:49.823Z Local: 2/5/2020, 2:34:49 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:34:49.826Z Local: 2/5/2020, 2:34:49 PM command: DO, rowCount: null 
2020-02-05T06:34:49.828Z Local: 2/5/2020, 2:34:49 PM Created Spec type 
2020-02-05T06:34:49.829Z Local: 2/5/2020, 2:34:49 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:34:49.832Z Local: 2/5/2020, 2:34:49 PM command: DO, rowCount: null 
2020-02-05T06:34:49.836Z Local: 2/5/2020, 2:34:49 PM Created Good type 
2020-02-05T06:34:49.837Z Local: 2/5/2020, 2:34:49 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:34:49.841Z Local: 2/5/2020, 2:34:49 PM command: CREATE, rowCount: null 
2020-02-05T06:34:49.844Z Local: 2/5/2020, 2:34:49 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:34:49.843Z Local: 2/5/2020, 2:34:49 PM Created items_table 
2020-02-05T06:34:49.846Z Local: 2/5/2020, 2:34:49 PM command: DO, rowCount: null 
2020-02-05T06:34:49.850Z Local: 2/5/2020, 2:34:49 PM Created Section type 
2020-02-05T06:34:49.854Z Local: 2/5/2020, 2:34:49 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:34:49.857Z Local: 2/5/2020, 2:34:49 PM command: CREATE, rowCount: null 
2020-02-05T06:34:49.862Z Local: 2/5/2020, 2:34:49 PM Created farmers_table 
2020-02-05T06:34:49.863Z Local: 2/5/2020, 2:34:49 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:34:53.321Z Local: 2/5/2020, 2:34:53 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:34:53.393Z Local: 2/5/2020, 2:34:53 PM command: DO, rowCount: null 
2020-02-05T06:34:53.406Z Local: 2/5/2020, 2:34:53 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:34:53.410Z Local: 2/5/2020, 2:34:53 PM command: DO, rowCount: null 
2020-02-05T06:34:53.422Z Local: 2/5/2020, 2:34:53 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:34:53.428Z Local: 2/5/2020, 2:34:53 PM command: CREATE, rowCount: null 
2020-02-05T06:34:53.438Z Local: 2/5/2020, 2:34:53 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T06:34:53.447Z Local: 2/5/2020, 2:34:53 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:53.460Z Local: 2/5/2020, 2:34:53 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T06:34:53.481Z Local: 2/5/2020, 2:34:53 PM command: INSERT, rowCount: 1 
2020-02-05T06:34:53.490Z Local: 2/5/2020, 2:34:53 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-05T06:34:53.497Z Local: 2/5/2020, 2:34:53 PM command: INSERT, rowCount: 1 
2020-02-05T06:34:53.509Z Local: 2/5/2020, 2:34:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:34:53.522Z Local: 2/5/2020, 2:34:53 PM command: SELECT, rowCount: 3 
2020-02-05T06:34:53.528Z Local: 2/5/2020, 2:34:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T06:34:53.550Z Local: 2/5/2020, 2:34:53 PM command: SELECT, rowCount: 91 
2020-02-05T06:34:53.558Z Local: 2/5/2020, 2:34:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-05T06:34:53.569Z Local: 2/5/2020, 2:34:53 PM command: SELECT, rowCount: 91 
2020-02-05T06:34:53.578Z Local: 2/5/2020, 2:34:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-05T06:34:53.582Z Local: 2/5/2020, 2:34:53 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:53.591Z Local: 2/5/2020, 2:34:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T06:34:53.601Z Local: 2/5/2020, 2:34:53 PM command: SELECT, rowCount: 71 
2020-02-05T06:34:53.616Z Local: 2/5/2020, 2:34:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T06:34:53.623Z Local: 2/5/2020, 2:34:53 PM command: SELECT, rowCount: 19 
2020-02-05T06:34:53.629Z Local: 2/5/2020, 2:34:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T06:34:53.636Z Local: 2/5/2020, 2:34:53 PM command: SELECT, rowCount: 60 
2020-02-05T06:34:53.662Z Local: 2/5/2020, 2:34:53 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T06:34:53.672Z Local: 2/5/2020, 2:34:53 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:53.675Z Local: 2/5/2020, 2:34:53 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:53.758Z Local: 2/5/2020, 2:34:53 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T06:34:53.776Z Local: 2/5/2020, 2:34:53 PM command: INSERT, rowCount: 1 
2020-02-05T06:34:53.779Z Local: 2/5/2020, 2:34:53 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:53.808Z Local: 2/5/2020, 2:34:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-05T06:34:53.820Z Local: 2/5/2020, 2:34:53 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:53.833Z Local: 2/5/2020, 2:34:53 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:53.868Z Local: 2/5/2020, 2:34:53 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T06:34:53.901Z Local: 2/5/2020, 2:34:53 PM command: SELECT, rowCount: 71 
2020-02-05T06:34:53.936Z Local: 2/5/2020, 2:34:53 PM Sending 71 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:54.143Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T06:34:54.160Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 20 
2020-02-05T06:34:54.175Z Local: 2/5/2020, 2:34:54 PM Sending 20 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:54.254Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-05T06:34:54.261Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 0 
2020-02-05T06:34:54.263Z Local: 2/5/2020, 2:34:54 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:54.293Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T06:34:54.305Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 2 
2020-02-05T06:34:54.312Z Local: 2/5/2020, 2:34:54 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:54.341Z Local: 2/5/2020, 2:34:54 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:34:54.348Z Local: 2/5/2020, 2:34:54 PM command: DO, rowCount: null 
2020-02-05T06:34:54.365Z Local: 2/5/2020, 2:34:54 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:34:54.377Z Local: 2/5/2020, 2:34:54 PM command: DO, rowCount: null 
2020-02-05T06:34:54.391Z Local: 2/5/2020, 2:34:54 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:34:54.398Z Local: 2/5/2020, 2:34:54 PM command: CREATE, rowCount: null 
2020-02-05T06:34:54.417Z Local: 2/5/2020, 2:34:54 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T06:34:54.428Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:54.448Z Local: 2/5/2020, 2:34:54 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T06:34:54.464Z Local: 2/5/2020, 2:34:54 PM command: INSERT, rowCount: 1 
2020-02-05T06:34:54.480Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:34:54.491Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 3 
2020-02-05T06:34:54.503Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-05T06:34:54.522Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 85 
2020-02-05T06:34:54.531Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-05T06:34:54.548Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 85 
2020-02-05T06:34:54.563Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-05T06:34:54.570Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:54.590Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T06:34:54.596Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 0 
2020-02-05T06:34:54.614Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T06:34:54.621Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 0 
2020-02-05T06:34:54.640Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-05T06:34:54.647Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 0 
2020-02-05T06:34:54.668Z Local: 2/5/2020, 2:34:54 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T06:34:54.676Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:54.678Z Local: 2/5/2020, 2:34:54 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:54.716Z Local: 2/5/2020, 2:34:54 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T06:34:54.732Z Local: 2/5/2020, 2:34:54 PM command: INSERT, rowCount: 1 
2020-02-05T06:34:54.734Z Local: 2/5/2020, 2:34:54 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:54.774Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-05T06:34:54.786Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:54.788Z Local: 2/5/2020, 2:34:54 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:54.819Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T06:34:54.824Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 0 
2020-02-05T06:34:54.827Z Local: 2/5/2020, 2:34:54 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:54.855Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T06:34:54.862Z Local: 2/5/2020, 2:34:54 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:54.860Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 0 
2020-02-05T06:34:54.890Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-05T06:34:54.894Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 0 
2020-02-05T06:34:54.896Z Local: 2/5/2020, 2:34:54 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:54.922Z Local: 2/5/2020, 2:34:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-05T06:34:54.930Z Local: 2/5/2020, 2:34:54 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:54.928Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 2 
2020-02-05T06:34:54.957Z Local: 2/5/2020, 2:34:54 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:34:54.964Z Local: 2/5/2020, 2:34:54 PM command: CREATE, rowCount: null 
2020-02-05T06:34:54.978Z Local: 2/5/2020, 2:34:54 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T06:34:54.986Z Local: 2/5/2020, 2:34:54 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:55.004Z Local: 2/5/2020, 2:34:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:34:55.011Z Local: 2/5/2020, 2:34:55 PM command: SELECT, rowCount: 3 
2020-02-05T06:34:55.020Z Local: 2/5/2020, 2:34:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T06:34:55.036Z Local: 2/5/2020, 2:34:55 PM command: SELECT, rowCount: 41 
2020-02-05T06:34:55.046Z Local: 2/5/2020, 2:34:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T06:34:55.057Z Local: 2/5/2020, 2:34:55 PM command: SELECT, rowCount: 41 
2020-02-05T06:34:55.070Z Local: 2/5/2020, 2:34:55 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T06:34:55.077Z Local: 2/5/2020, 2:34:55 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:55.096Z Local: 2/5/2020, 2:34:55 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T06:34:55.103Z Local: 2/5/2020, 2:34:55 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:55.106Z Local: 2/5/2020, 2:34:55 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:55.148Z Local: 2/5/2020, 2:34:55 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('凍頂村的故事', 'A Test of query a post', 'SHC', '# Remarkable...', 'hill3.jpg') RETURNING id; 
2020-02-05T06:34:55.162Z Local: 2/5/2020, 2:34:55 PM command: INSERT, rowCount: 1 
2020-02-05T06:34:55.164Z Local: 2/5/2020, 2:34:55 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:55.207Z Local: 2/5/2020, 2:34:55 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T06:34:55.213Z Local: 2/5/2020, 2:34:55 PM command: SELECT, rowCount: 1 
2020-02-05T06:34:55.216Z Local: 2/5/2020, 2:34:55 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:34:57.225Z Local: 2/5/2020, 2:34:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T06:34:57.232Z Local: 2/5/2020, 2:34:57 PM command: SELECT, rowCount: 2 
2020-02-05T06:34:57.235Z Local: 2/5/2020, 2:34:57 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:30.844Z Local: 2/5/2020, 2:35:30 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:35:30.916Z Local: 2/5/2020, 2:35:30 PM command: DO, rowCount: null 
2020-02-05T06:35:30.928Z Local: 2/5/2020, 2:35:30 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:35:30.932Z Local: 2/5/2020, 2:35:30 PM command: DO, rowCount: null 
2020-02-05T06:35:30.945Z Local: 2/5/2020, 2:35:30 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:35:30.951Z Local: 2/5/2020, 2:35:30 PM command: CREATE, rowCount: null 
2020-02-05T06:35:30.965Z Local: 2/5/2020, 2:35:30 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T06:35:30.975Z Local: 2/5/2020, 2:35:30 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:30.992Z Local: 2/5/2020, 2:35:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T06:35:31.013Z Local: 2/5/2020, 2:35:31 PM command: INSERT, rowCount: 1 
2020-02-05T06:35:31.018Z Local: 2/5/2020, 2:35:31 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-05T06:35:31.026Z Local: 2/5/2020, 2:35:31 PM command: INSERT, rowCount: 1 
2020-02-05T06:35:31.034Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:35:31.049Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 3 
2020-02-05T06:35:31.058Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T06:35:31.076Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 94 
2020-02-05T06:35:31.082Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-05T06:35:31.102Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 94 
2020-02-05T06:35:31.117Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-05T06:35:31.125Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:31.134Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T06:35:31.149Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 73 
2020-02-05T06:35:31.170Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T06:35:31.178Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 20 
2020-02-05T06:35:31.192Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T06:35:31.204Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 62 
2020-02-05T06:35:31.237Z Local: 2/5/2020, 2:35:31 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-05T06:35:31.279Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:31.282Z Local: 2/5/2020, 2:35:31 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:31.328Z Local: 2/5/2020, 2:35:31 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-05T06:35:31.349Z Local: 2/5/2020, 2:35:31 PM command: INSERT, rowCount: 1 
2020-02-05T06:35:31.351Z Local: 2/5/2020, 2:35:31 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:31.376Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-05T06:35:31.386Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:31.388Z Local: 2/5/2020, 2:35:31 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:31.409Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-05T06:35:31.422Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 73 
2020-02-05T06:35:31.457Z Local: 2/5/2020, 2:35:31 PM Sending 73 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:31.614Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-05T06:35:31.624Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 21 
2020-02-05T06:35:31.635Z Local: 2/5/2020, 2:35:31 PM Sending 21 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:31.703Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-05T06:35:31.707Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 0 
2020-02-05T06:35:31.709Z Local: 2/5/2020, 2:35:31 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:31.730Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T06:35:31.740Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 2 
2020-02-05T06:35:31.743Z Local: 2/5/2020, 2:35:31 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:31.768Z Local: 2/5/2020, 2:35:31 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:35:31.774Z Local: 2/5/2020, 2:35:31 PM command: DO, rowCount: null 
2020-02-05T06:35:31.788Z Local: 2/5/2020, 2:35:31 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:35:31.793Z Local: 2/5/2020, 2:35:31 PM command: DO, rowCount: null 
2020-02-05T06:35:31.808Z Local: 2/5/2020, 2:35:31 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:35:31.814Z Local: 2/5/2020, 2:35:31 PM command: CREATE, rowCount: null 
2020-02-05T06:35:31.828Z Local: 2/5/2020, 2:35:31 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T06:35:31.836Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:31.851Z Local: 2/5/2020, 2:35:31 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T06:35:31.864Z Local: 2/5/2020, 2:35:31 PM command: INSERT, rowCount: 1 
2020-02-05T06:35:31.875Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:35:31.886Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 3 
2020-02-05T06:35:31.891Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-05T06:35:31.912Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 87 
2020-02-05T06:35:31.922Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-05T06:35:31.934Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 87 
2020-02-05T06:35:31.946Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-05T06:35:31.953Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:31.963Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T06:35:31.972Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 0 
2020-02-05T06:35:31.988Z Local: 2/5/2020, 2:35:31 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T06:35:31.995Z Local: 2/5/2020, 2:35:31 PM command: SELECT, rowCount: 0 
2020-02-05T06:35:32.008Z Local: 2/5/2020, 2:35:32 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-05T06:35:32.015Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 0 
2020-02-05T06:35:32.029Z Local: 2/5/2020, 2:35:32 PM SELECT COUNT(*) FROM items_table; 
2020-02-05T06:35:32.036Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:32.038Z Local: 2/5/2020, 2:35:32 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:32.064Z Local: 2/5/2020, 2:35:32 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-05T06:35:32.077Z Local: 2/5/2020, 2:35:32 PM command: INSERT, rowCount: 1 
2020-02-05T06:35:32.079Z Local: 2/5/2020, 2:35:32 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:32.106Z Local: 2/5/2020, 2:35:32 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-05T06:35:32.112Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:32.117Z Local: 2/5/2020, 2:35:32 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:32.145Z Local: 2/5/2020, 2:35:32 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-05T06:35:32.151Z Local: 2/5/2020, 2:35:32 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:32.149Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 0 
2020-02-05T06:35:32.175Z Local: 2/5/2020, 2:35:32 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-05T06:35:32.179Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 0 
2020-02-05T06:35:32.181Z Local: 2/5/2020, 2:35:32 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:32.204Z Local: 2/5/2020, 2:35:32 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-05T06:35:32.208Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 0 
2020-02-05T06:35:32.216Z Local: 2/5/2020, 2:35:32 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:32.245Z Local: 2/5/2020, 2:35:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-05T06:35:32.256Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 2 
2020-02-05T06:35:32.257Z Local: 2/5/2020, 2:35:32 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:32.286Z Local: 2/5/2020, 2:35:32 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:35:32.291Z Local: 2/5/2020, 2:35:32 PM command: CREATE, rowCount: null 
2020-02-05T06:35:32.306Z Local: 2/5/2020, 2:35:32 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T06:35:32.313Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:32.332Z Local: 2/5/2020, 2:35:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-05T06:35:32.338Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 3 
2020-02-05T06:35:32.348Z Local: 2/5/2020, 2:35:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-05T06:35:32.358Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 42 
2020-02-05T06:35:32.367Z Local: 2/5/2020, 2:35:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-05T06:35:32.377Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 42 
2020-02-05T06:35:32.388Z Local: 2/5/2020, 2:35:32 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T06:35:32.394Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:32.411Z Local: 2/5/2020, 2:35:32 PM SELECT COUNT(*) FROM posts_table; 
2020-02-05T06:35:32.416Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:32.418Z Local: 2/5/2020, 2:35:32 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:32.447Z Local: 2/5/2020, 2:35:32 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('凍頂村的故事', 'A Test of query a post', 'SHC', '# Remarkable...', 'hill3.jpg') RETURNING id; 
2020-02-05T06:35:32.456Z Local: 2/5/2020, 2:35:32 PM command: INSERT, rowCount: 1 
2020-02-05T06:35:32.458Z Local: 2/5/2020, 2:35:32 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:32.489Z Local: 2/5/2020, 2:35:32 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-05T06:35:32.494Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 1 
2020-02-05T06:35:32.496Z Local: 2/5/2020, 2:35:32 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:35:32.516Z Local: 2/5/2020, 2:35:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-05T06:35:32.519Z Local: 2/5/2020, 2:35:32 PM command: SELECT, rowCount: 2 
2020-02-05T06:35:32.521Z Local: 2/5/2020, 2:35:32 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-05T06:39:30.975Z Local: 2/5/2020, 2:39:30 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:39:30.988Z Local: 2/5/2020, 2:39:30 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:39:30.989Z Local: 2/5/2020, 2:39:30 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:39:30.995Z Local: 2/5/2020, 2:39:30 PM Server is listening on port 8000 
2020-02-05T06:39:31.049Z Local: 2/5/2020, 2:39:31 PM command: CREATE, rowCount: null 
2020-02-05T06:39:31.052Z Local: 2/5/2020, 2:39:31 PM Created posts_table 
2020-02-05T06:39:31.053Z Local: 2/5/2020, 2:39:31 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:39:31.072Z Local: 2/5/2020, 2:39:31 PM command: DO, rowCount: null 
2020-02-05T06:39:31.074Z Local: 2/5/2020, 2:39:31 PM Created Producer type 
2020-02-05T06:39:31.075Z Local: 2/5/2020, 2:39:31 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:39:31.077Z Local: 2/5/2020, 2:39:31 PM command: DO, rowCount: null 
2020-02-05T06:39:31.080Z Local: 2/5/2020, 2:39:31 PM Created Spec type 
2020-02-05T06:39:31.081Z Local: 2/5/2020, 2:39:31 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:39:31.083Z Local: 2/5/2020, 2:39:31 PM command: CREATE, rowCount: null 
2020-02-05T06:39:31.085Z Local: 2/5/2020, 2:39:31 PM Created items_table 
2020-02-05T06:39:31.085Z Local: 2/5/2020, 2:39:31 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:39:31.088Z Local: 2/5/2020, 2:39:31 PM command: DO, rowCount: null 
2020-02-05T06:39:31.089Z Local: 2/5/2020, 2:39:31 PM Created Good type 
2020-02-05T06:39:31.090Z Local: 2/5/2020, 2:39:31 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:39:31.092Z Local: 2/5/2020, 2:39:31 PM command: DO, rowCount: null 
2020-02-05T06:39:31.093Z Local: 2/5/2020, 2:39:31 PM Created Section type 
2020-02-05T06:39:31.098Z Local: 2/5/2020, 2:39:31 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:39:31.101Z Local: 2/5/2020, 2:39:31 PM command: CREATE, rowCount: null 
2020-02-05T06:39:31.102Z Local: 2/5/2020, 2:39:31 PM Created farmers_table 
2020-02-05T06:39:31.102Z Local: 2/5/2020, 2:39:31 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:50:02.857Z Local: 2/5/2020, 2:50:02 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:50:02.874Z Local: 2/5/2020, 2:50:02 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:50:02.872Z Local: 2/5/2020, 2:50:02 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:50:02.880Z Local: 2/5/2020, 2:50:02 PM Server is listening on port 8000 
2020-02-05T06:50:02.931Z Local: 2/5/2020, 2:50:02 PM command: CREATE, rowCount: null 
2020-02-05T06:50:02.934Z Local: 2/5/2020, 2:50:02 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:50:02.933Z Local: 2/5/2020, 2:50:02 PM Created posts_table 
2020-02-05T06:50:02.950Z Local: 2/5/2020, 2:50:02 PM command: DO, rowCount: null 
2020-02-05T06:50:02.952Z Local: 2/5/2020, 2:50:02 PM Created Producer type 
2020-02-05T06:50:02.953Z Local: 2/5/2020, 2:50:02 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:50:02.955Z Local: 2/5/2020, 2:50:02 PM command: DO, rowCount: null 
2020-02-05T06:50:02.957Z Local: 2/5/2020, 2:50:02 PM Created Spec type 
2020-02-05T06:50:02.958Z Local: 2/5/2020, 2:50:02 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-05T06:50:02.961Z Local: 2/5/2020, 2:50:02 PM command: CREATE, rowCount: null 
2020-02-05T06:50:02.962Z Local: 2/5/2020, 2:50:02 PM Created items_table 
2020-02-05T06:50:02.963Z Local: 2/5/2020, 2:50:02 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:50:02.970Z Local: 2/5/2020, 2:50:02 PM command: DO, rowCount: null 
2020-02-05T06:50:02.971Z Local: 2/5/2020, 2:50:02 PM Created Good type 
2020-02-05T06:50:02.972Z Local: 2/5/2020, 2:50:02 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-05T06:50:02.974Z Local: 2/5/2020, 2:50:02 PM command: DO, rowCount: null 
2020-02-05T06:50:02.975Z Local: 2/5/2020, 2:50:02 PM Created Section type 
2020-02-05T06:50:02.976Z Local: 2/5/2020, 2:50:02 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-05T06:50:02.983Z Local: 2/5/2020, 2:50:02 PM Created farmers_table 
2020-02-05T06:50:02.979Z Local: 2/5/2020, 2:50:02 PM command: CREATE, rowCount: null 
2020-02-05T06:50:02.984Z Local: 2/5/2020, 2:50:02 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-05T06:50:13.575Z Local: 2/5/2020, 2:50:13 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-05T06:50:13.662Z Local: 2/5/2020, 2:50:13 PM command: SELECT, rowCount: 63 
2020-02-05T06:50:13.696Z Local: 2/5/2020, 2:50:13 PM Sending 63 rows to ::1 with  
2020-02-06T08:11:41.954Z Local: 2/6/2020, 4:11:41 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-06T08:11:41.977Z Local: 2/6/2020, 4:11:41 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:11:41.979Z Local: 2/6/2020, 4:11:41 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:11:41.988Z Local: 2/6/2020, 4:11:41 PM Server is listening on port 8000 
2020-02-06T08:11:41.991Z Local: 2/6/2020, 4:11:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:11:41.992Z Local: 2/6/2020, 4:11:41 PM Created posts_table 
2020-02-06T08:11:41.993Z Local: 2/6/2020, 4:11:41 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-06T08:11:41.994Z Local: 2/6/2020, 4:11:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:11:41.995Z Local: 2/6/2020, 4:11:41 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:11:41.997Z Local: 2/6/2020, 4:11:41 PM Created Good type 
2020-02-06T08:11:41.996Z Local: 2/6/2020, 4:11:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:11:41.998Z Local: 2/6/2020, 4:11:41 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:11:41.994Z Local: 2/6/2020, 4:11:41 PM Created Producer type 
2020-02-06T08:11:42.000Z Local: 2/6/2020, 4:11:42 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:11:42.001Z Local: 2/6/2020, 4:11:42 PM Created Spec type 
2020-02-06T08:11:42.002Z Local: 2/6/2020, 4:11:42 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-06T08:11:42.003Z Local: 2/6/2020, 4:11:42 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:11:42.004Z Local: 2/6/2020, 4:11:42 PM Created Section type 
2020-02-06T08:11:42.004Z Local: 2/6/2020, 4:11:42 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-06T08:11:42.006Z Local: 2/6/2020, 4:11:42 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:11:42.007Z Local: 2/6/2020, 4:11:42 PM Created items_table 
2020-02-06T08:11:42.007Z Local: 2/6/2020, 4:11:42 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-06T08:11:42.008Z Local: 2/6/2020, 4:11:42 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:11:42.009Z Local: 2/6/2020, 4:11:42 PM Created farmers_table 
2020-02-06T08:11:42.010Z Local: 2/6/2020, 4:11:42 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-06T08:13:36.330Z Local: 2/6/2020, 4:13:36 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-06T08:13:36.339Z Local: 2/6/2020, 4:13:36 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:13:36.340Z Local: 2/6/2020, 4:13:36 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:13:36.348Z Local: 2/6/2020, 4:13:36 PM Server is listening on port 8000 
2020-02-06T08:13:36.352Z Local: 2/6/2020, 4:13:36 PM Created posts_table 
2020-02-06T08:13:36.351Z Local: 2/6/2020, 4:13:36 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:13:36.353Z Local: 2/6/2020, 4:13:36 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-06T08:13:36.354Z Local: 2/6/2020, 4:13:36 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:13:36.355Z Local: 2/6/2020, 4:13:36 PM Created Producer type 
2020-02-06T08:13:36.355Z Local: 2/6/2020, 4:13:36 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:13:36.357Z Local: 2/6/2020, 4:13:36 PM Created Good type 
2020-02-06T08:13:36.356Z Local: 2/6/2020, 4:13:36 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:13:36.358Z Local: 2/6/2020, 4:13:36 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:13:36.360Z Local: 2/6/2020, 4:13:36 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:13:36.362Z Local: 2/6/2020, 4:13:36 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-06T08:13:36.361Z Local: 2/6/2020, 4:13:36 PM Created Spec type 
2020-02-06T08:13:36.363Z Local: 2/6/2020, 4:13:36 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:13:36.363Z Local: 2/6/2020, 4:13:36 PM Created Section type 
2020-02-06T08:13:36.364Z Local: 2/6/2020, 4:13:36 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-06T08:13:36.366Z Local: 2/6/2020, 4:13:36 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:13:36.368Z Local: 2/6/2020, 4:13:36 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-06T08:13:36.367Z Local: 2/6/2020, 4:13:36 PM Created items_table 
2020-02-06T08:13:36.369Z Local: 2/6/2020, 4:13:36 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:13:36.369Z Local: 2/6/2020, 4:13:36 PM Created farmers_table 
2020-02-06T08:13:36.370Z Local: 2/6/2020, 4:13:36 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-06T08:14:09.448Z Local: 2/6/2020, 4:14:09 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:14:09.458Z Local: 2/6/2020, 4:14:09 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:14:11.458Z Local: 2/6/2020, 4:14:11 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:14:11.460Z Local: 2/6/2020, 4:14:11 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:14:13.463Z Local: 2/6/2020, 4:14:13 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-06T08:14:13.466Z Local: 2/6/2020, 4:14:13 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:14:15.467Z Local: 2/6/2020, 4:14:15 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-06T08:14:15.473Z Local: 2/6/2020, 4:14:15 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:14:17.475Z Local: 2/6/2020, 4:14:17 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-06T08:14:17.477Z Local: 2/6/2020, 4:14:17 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:14:19.478Z Local: 2/6/2020, 4:14:19 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-06T08:14:19.482Z Local: 2/6/2020, 4:14:19 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:14:21.482Z Local: 2/6/2020, 4:14:21 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-06T08:14:21.484Z Local: 2/6/2020, 4:14:21 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:14:23.486Z Local: 2/6/2020, 4:14:23 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-06T08:14:23.490Z Local: 2/6/2020, 4:14:23 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:14:25.491Z Local: 2/6/2020, 4:14:25 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-06T08:14:25.495Z Local: 2/6/2020, 4:14:25 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:24.000Z Local: 2/6/2020, 4:15:24 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:15:24.009Z Local: 2/6/2020, 4:15:24 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:26.009Z Local: 2/6/2020, 4:15:26 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:15:26.011Z Local: 2/6/2020, 4:15:26 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:28.013Z Local: 2/6/2020, 4:15:28 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-06T08:15:28.016Z Local: 2/6/2020, 4:15:28 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:30.018Z Local: 2/6/2020, 4:15:30 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-06T08:15:30.021Z Local: 2/6/2020, 4:15:30 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:32.025Z Local: 2/6/2020, 4:15:32 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-06T08:15:32.030Z Local: 2/6/2020, 4:15:32 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:34.027Z Local: 2/6/2020, 4:15:34 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-06T08:15:34.033Z Local: 2/6/2020, 4:15:34 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:36.033Z Local: 2/6/2020, 4:15:36 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-06T08:15:36.039Z Local: 2/6/2020, 4:15:36 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:38.037Z Local: 2/6/2020, 4:15:38 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-06T08:15:38.042Z Local: 2/6/2020, 4:15:38 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:40.040Z Local: 2/6/2020, 4:15:40 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-06T08:15:40.046Z Local: 2/6/2020, 4:15:40 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:42.047Z Local: 2/6/2020, 4:15:42 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-06T08:15:42.050Z Local: 2/6/2020, 4:15:42 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:44.052Z Local: 2/6/2020, 4:15:44 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-06T08:15:44.055Z Local: 2/6/2020, 4:15:44 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:46.057Z Local: 2/6/2020, 4:15:46 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-06T08:15:46.063Z Local: 2/6/2020, 4:15:46 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:48.059Z Local: 2/6/2020, 4:15:48 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-06T08:15:48.060Z Local: 2/6/2020, 4:15:48 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:50.082Z Local: 2/6/2020, 4:15:50 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-06T08:15:50.084Z Local: 2/6/2020, 4:15:50 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:50.086Z Local: 2/6/2020, 4:15:50 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-02-06T08:15:50.087Z Local: 2/6/2020, 4:15:50 PM Error: TypeError: Cannot read property '0' of undefined 
2020-02-06T08:15:52.098Z Local: 2/6/2020, 4:15:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-06T08:15:52.100Z Local: 2/6/2020, 4:15:52 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:52.103Z Local: 2/6/2020, 4:15:52 PM Error: TypeError: Cannot read property '0' of undefined 
2020-02-06T08:15:54.074Z Local: 2/6/2020, 4:15:54 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-06T08:15:54.076Z Local: 2/6/2020, 4:15:54 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:54.080Z Local: 2/6/2020, 4:15:54 PM Error: TypeError: Cannot read property '0' of undefined 
2020-02-06T08:15:56.079Z Local: 2/6/2020, 4:15:56 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-06T08:15:56.081Z Local: 2/6/2020, 4:15:56 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:56.083Z Local: 2/6/2020, 4:15:56 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-06T08:15:58.084Z Local: 2/6/2020, 4:15:58 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-06T08:15:58.086Z Local: 2/6/2020, 4:15:58 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:15:58.088Z Local: 2/6/2020, 4:15:58 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-06T08:16:00.091Z Local: 2/6/2020, 4:16:00 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-06T08:16:00.096Z Local: 2/6/2020, 4:16:00 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:00.102Z Local: 2/6/2020, 4:16:00 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-06T08:16:02.089Z Local: 2/6/2020, 4:16:02 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-06T08:16:02.091Z Local: 2/6/2020, 4:16:02 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-02-06T08:16:02.090Z Local: 2/6/2020, 4:16:02 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:04.091Z Local: 2/6/2020, 4:16:04 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:16:04.096Z Local: 2/6/2020, 4:16:04 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:06.101Z Local: 2/6/2020, 4:16:06 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:16:06.107Z Local: 2/6/2020, 4:16:06 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:08.105Z Local: 2/6/2020, 4:16:08 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-06T08:16:08.107Z Local: 2/6/2020, 4:16:08 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:10.110Z Local: 2/6/2020, 4:16:10 PM SELECT COUNT(*) FROM items_table; 
2020-02-06T08:16:10.113Z Local: 2/6/2020, 4:16:10 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:12.115Z Local: 2/6/2020, 4:16:12 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T08:16:12.118Z Local: 2/6/2020, 4:16:12 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:14.116Z Local: 2/6/2020, 4:16:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-06T08:16:14.118Z Local: 2/6/2020, 4:16:14 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:16.120Z Local: 2/6/2020, 4:16:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-06T08:16:16.126Z Local: 2/6/2020, 4:16:16 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:18.124Z Local: 2/6/2020, 4:16:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-06T08:16:18.129Z Local: 2/6/2020, 4:16:18 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:20.135Z Local: 2/6/2020, 4:16:20 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-06T08:16:20.141Z Local: 2/6/2020, 4:16:20 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:22.141Z Local: 2/6/2020, 4:16:22 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-06T08:16:22.144Z Local: 2/6/2020, 4:16:22 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:24.146Z Local: 2/6/2020, 4:16:24 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-06T08:16:24.148Z Local: 2/6/2020, 4:16:24 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:26.152Z Local: 2/6/2020, 4:16:26 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-06T08:16:26.155Z Local: 2/6/2020, 4:16:26 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:28.160Z Local: 2/6/2020, 4:16:28 PM SELECT COUNT(*) FROM items_table; 
2020-02-06T08:16:28.163Z Local: 2/6/2020, 4:16:28 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-02-06T08:16:28.161Z Local: 2/6/2020, 4:16:28 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:28.164Z Local: 2/6/2020, 4:16:28 PM Error: TypeError: Cannot read property '0' of undefined 
2020-02-06T08:16:30.169Z Local: 2/6/2020, 4:16:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T08:16:30.175Z Local: 2/6/2020, 4:16:30 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:30.180Z Local: 2/6/2020, 4:16:30 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-02-06T08:16:30.184Z Local: 2/6/2020, 4:16:30 PM Error: TypeError: Cannot read property '0' of undefined 
2020-02-06T08:16:32.168Z Local: 2/6/2020, 4:16:32 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-06T08:16:32.170Z Local: 2/6/2020, 4:16:32 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:32.171Z Local: 2/6/2020, 4:16:32 PM Error: TypeError: Cannot read property '0' of undefined 
2020-02-06T08:16:34.172Z Local: 2/6/2020, 4:16:34 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-06T08:16:34.174Z Local: 2/6/2020, 4:16:34 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:34.176Z Local: 2/6/2020, 4:16:34 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-06T08:16:36.178Z Local: 2/6/2020, 4:16:36 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-06T08:16:36.180Z Local: 2/6/2020, 4:16:36 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:36.182Z Local: 2/6/2020, 4:16:36 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-06T08:16:38.183Z Local: 2/6/2020, 4:16:38 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-06T08:16:38.185Z Local: 2/6/2020, 4:16:38 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:38.187Z Local: 2/6/2020, 4:16:38 PM Error: TypeError: Cannot read property 'map' of undefined 
2020-02-06T08:16:40.193Z Local: 2/6/2020, 4:16:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-06T08:16:40.200Z Local: 2/6/2020, 4:16:40 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:40.208Z Local: 2/6/2020, 4:16:40 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-02-06T08:16:42.190Z Local: 2/6/2020, 4:16:42 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-06T08:16:42.198Z Local: 2/6/2020, 4:16:42 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:44.195Z Local: 2/6/2020, 4:16:44 PM SELECT COUNT(*) FROM posts_table; 
2020-02-06T08:16:44.207Z Local: 2/6/2020, 4:16:44 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:46.199Z Local: 2/6/2020, 4:16:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-06T08:16:46.207Z Local: 2/6/2020, 4:16:46 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:48.202Z Local: 2/6/2020, 4:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-06T08:16:48.205Z Local: 2/6/2020, 4:16:48 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:50.203Z Local: 2/6/2020, 4:16:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-06T08:16:50.208Z Local: 2/6/2020, 4:16:50 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:52.208Z Local: 2/6/2020, 4:16:52 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-06T08:16:52.214Z Local: 2/6/2020, 4:16:52 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:54.216Z Local: 2/6/2020, 4:16:54 PM SELECT COUNT(*) FROM posts_table; 
2020-02-06T08:16:54.218Z Local: 2/6/2020, 4:16:54 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:54.220Z Local: 2/6/2020, 4:16:54 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-02-06T08:16:54.221Z Local: 2/6/2020, 4:16:54 PM Error: TypeError: Cannot read property '0' of undefined 
2020-02-06T08:16:56.227Z Local: 2/6/2020, 4:16:56 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('凍頂村的故事', 'A Test of query a post', 'SHC', '# Remarkable...', 'hill3.jpg') RETURNING id; 
2020-02-06T08:16:56.229Z Local: 2/6/2020, 4:16:56 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:56.231Z Local: 2/6/2020, 4:16:56 PM Sending undefined rows to ::ffff:127.0.0.1 with  
2020-02-06T08:16:56.232Z Local: 2/6/2020, 4:16:56 PM Error: TypeError: Cannot read property '0' of undefined 
2020-02-06T08:16:58.229Z Local: 2/6/2020, 4:16:58 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-06T08:16:58.231Z Local: 2/6/2020, 4:16:58 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:16:58.232Z Local: 2/6/2020, 4:16:58 PM Error: TypeError: Cannot read property '0' of undefined 
2020-02-06T08:18:01.146Z Local: 2/6/2020, 4:18:01 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-06T08:18:01.155Z Local: 2/6/2020, 4:18:01 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:18:01.157Z Local: 2/6/2020, 4:18:01 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:18:01.165Z Local: 2/6/2020, 4:18:01 PM Server is listening on port 8000 
2020-02-06T08:18:01.169Z Local: 2/6/2020, 4:18:01 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:18:01.169Z Local: 2/6/2020, 4:18:01 PM Created posts_table 
2020-02-06T08:18:01.170Z Local: 2/6/2020, 4:18:01 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-06T08:18:01.171Z Local: 2/6/2020, 4:18:01 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:18:01.172Z Local: 2/6/2020, 4:18:01 PM Created Producer type 
2020-02-06T08:18:01.173Z Local: 2/6/2020, 4:18:01 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:18:01.174Z Local: 2/6/2020, 4:18:01 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:18:01.174Z Local: 2/6/2020, 4:18:01 PM Created Good type 
2020-02-06T08:18:01.175Z Local: 2/6/2020, 4:18:01 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T08:18:01.177Z Local: 2/6/2020, 4:18:01 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:18:01.178Z Local: 2/6/2020, 4:18:01 PM Created Spec type 
2020-02-06T08:18:01.179Z Local: 2/6/2020, 4:18:01 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-06T08:18:01.180Z Local: 2/6/2020, 4:18:01 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:18:01.181Z Local: 2/6/2020, 4:18:01 PM Created Section type 
2020-02-06T08:18:01.182Z Local: 2/6/2020, 4:18:01 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-06T08:18:01.183Z Local: 2/6/2020, 4:18:01 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:18:01.184Z Local: 2/6/2020, 4:18:01 PM Created items_table 
2020-02-06T08:18:01.185Z Local: 2/6/2020, 4:18:01 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-06T08:18:01.186Z Local: 2/6/2020, 4:18:01 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-06T08:18:01.187Z Local: 2/6/2020, 4:18:01 PM Created farmers_table 
2020-02-06T08:18:01.187Z Local: 2/6/2020, 4:18:01 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-06T13:37:52.434Z Local: 2/6/2020, 9:37:52 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-06T13:37:52.457Z Local: 2/6/2020, 9:37:52 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-06T13:37:52.459Z Local: 2/6/2020, 9:37:52 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-06T13:37:52.459Z Local: 2/6/2020, 9:37:52 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-06T13:37:52.460Z Local: 2/6/2020, 9:37:52 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-06T13:37:52.461Z Local: 2/6/2020, 9:37:52 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-06T13:37:52.462Z Local: 2/6/2020, 9:37:52 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-06T13:37:52.463Z Local: 2/6/2020, 9:37:52 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-06T13:37:52.464Z Local: 2/6/2020, 9:37:52 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-06T13:37:52.465Z Local: 2/6/2020, 9:37:52 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-06T13:37:52.568Z Local: 2/6/2020, 9:37:52 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T13:37:52.569Z Local: 2/6/2020, 9:37:52 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T13:37:52.570Z Local: 2/6/2020, 9:37:52 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T13:37:52.570Z Local: 2/6/2020, 9:37:52 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T13:37:52.571Z Local: 2/6/2020, 9:37:52 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T13:37:52.572Z Local: 2/6/2020, 9:37:52 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T13:37:52.572Z Local: 2/6/2020, 9:37:52 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T13:37:52.573Z Local: 2/6/2020, 9:37:52 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T13:37:52.574Z Local: 2/6/2020, 9:37:52 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T13:37:52.574Z Local: 2/6/2020, 9:37:52 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-06T13:37:52.577Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-06T13:37:52.578Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-06T13:37:52.579Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-06T13:37:52.580Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-06T13:37:52.580Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-06T13:37:52.581Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-06T13:37:52.582Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-06T13:37:52.582Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-06T13:37:52.583Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-06T13:37:52.584Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-06T13:37:52.585Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-06T13:37:52.585Z Local: 2/6/2020, 9:37:52 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-06T13:37:52.619Z Local: 2/6/2020, 9:37:52 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-06T13:37:52.620Z Local: 2/6/2020, 9:37:52 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T13:37:52.621Z Local: 2/6/2020, 9:37:52 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T13:37:52.630Z Local: 2/6/2020, 9:37:52 PM Server is listening on port 8000 
2020-02-06T13:37:52.661Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.662Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.666Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.668Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.669Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.670Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.673Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.674Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.675Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.676Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.679Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.681Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.685Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.686Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.688Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.689Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.691Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.693Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.695Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.696Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.699Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.701Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.703Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.705Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.707Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.708Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.710Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.712Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.713Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.714Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.715Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.719Z Local: 2/6/2020, 9:37:52 PM Created posts_table 
2020-02-06T13:37:52.717Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.719Z Local: 2/6/2020, 9:37:52 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-06T13:37:52.720Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.722Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.723Z Local: 2/6/2020, 9:37:52 PM Created Good type 
2020-02-06T13:37:52.724Z Local: 2/6/2020, 9:37:52 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T13:37:52.725Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.726Z Local: 2/6/2020, 9:37:52 PM Created Producer type 
2020-02-06T13:37:52.727Z Local: 2/6/2020, 9:37:52 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-06T13:37:52.730Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.731Z Local: 2/6/2020, 9:37:52 PM Created Section type 
2020-02-06T13:37:52.732Z Local: 2/6/2020, 9:37:52 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-06T13:37:52.733Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.735Z Local: 2/6/2020, 9:37:52 PM Created Spec type 
2020-02-06T13:37:52.736Z Local: 2/6/2020, 9:37:52 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-06T13:37:52.738Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.739Z Local: 2/6/2020, 9:37:52 PM Created farmers_table 
2020-02-06T13:37:52.740Z Local: 2/6/2020, 9:37:52 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-06T13:37:52.741Z Local: 2/6/2020, 9:37:52 PM Error: error: password authentication failed for user "postgres" 
2020-02-06T13:37:52.742Z Local: 2/6/2020, 9:37:52 PM Created items_table 
2020-02-06T13:37:52.743Z Local: 2/6/2020, 9:37:52 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-08T20:00:44.812Z Local: 2/9/2020, 4:00:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-08T20:00:44.835Z Local: 2/9/2020, 4:00:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-08T20:00:44.836Z Local: 2/9/2020, 4:00:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-08T20:00:44.838Z Local: 2/9/2020, 4:00:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-08T20:00:44.839Z Local: 2/9/2020, 4:00:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-08T20:00:44.841Z Local: 2/9/2020, 4:00:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-08T20:00:44.842Z Local: 2/9/2020, 4:00:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-08T20:00:44.843Z Local: 2/9/2020, 4:00:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-08T20:00:44.844Z Local: 2/9/2020, 4:00:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-08T20:00:44.948Z Local: 2/9/2020, 4:00:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-08T20:00:44.949Z Local: 2/9/2020, 4:00:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-08T20:00:44.950Z Local: 2/9/2020, 4:00:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-08T20:00:44.951Z Local: 2/9/2020, 4:00:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-08T20:00:44.951Z Local: 2/9/2020, 4:00:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-08T20:00:44.952Z Local: 2/9/2020, 4:00:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-08T20:00:44.953Z Local: 2/9/2020, 4:00:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-08T20:00:44.953Z Local: 2/9/2020, 4:00:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-08T20:00:44.954Z Local: 2/9/2020, 4:00:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-08T20:00:44.955Z Local: 2/9/2020, 4:00:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-08T20:00:44.957Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-08T20:00:44.958Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-08T20:00:44.959Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-08T20:00:44.960Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-08T20:00:44.960Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-08T20:00:44.961Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-08T20:00:44.962Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-08T20:00:44.963Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-08T20:00:44.963Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-08T20:00:44.964Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-08T20:00:44.966Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-08T20:00:44.966Z Local: 2/9/2020, 4:00:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-08T20:00:44.997Z Local: 2/9/2020, 4:00:44 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-08T20:00:44.837Z Local: 2/9/2020, 4:00:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-08T20:00:44.998Z Local: 2/9/2020, 4:00:44 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-08T20:00:44.999Z Local: 2/9/2020, 4:00:44 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-08T20:00:45.008Z Local: 2/9/2020, 4:00:45 AM Server is listening on port 8000 
2020-02-08T20:00:45.020Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.022Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.024Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.025Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.027Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.029Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.031Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.032Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.033Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.038Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.040Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.042Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.044Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.045Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.047Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.051Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.052Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.053Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.055Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.058Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.060Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.063Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.065Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.066Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.068Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.071Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.073Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.075Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.076Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.079Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.080Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.082Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.083Z Local: 2/9/2020, 4:00:45 AM Created posts_table 
2020-02-08T20:00:45.084Z Local: 2/9/2020, 4:00:45 AM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-08T20:00:45.086Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.085Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.086Z Local: 2/9/2020, 4:00:45 AM Created Producer type 
2020-02-08T20:00:45.087Z Local: 2/9/2020, 4:00:45 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-08T20:00:45.088Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.089Z Local: 2/9/2020, 4:00:45 AM Created Good type 
2020-02-08T20:00:45.090Z Local: 2/9/2020, 4:00:45 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-08T20:00:45.093Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.095Z Local: 2/9/2020, 4:00:45 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-08T20:00:45.094Z Local: 2/9/2020, 4:00:45 AM Created Spec type 
2020-02-08T20:00:45.096Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.097Z Local: 2/9/2020, 4:00:45 AM Created Section type 
2020-02-08T20:00:45.098Z Local: 2/9/2020, 4:00:45 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-08T20:00:45.102Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.103Z Local: 2/9/2020, 4:00:45 AM Created items_table 
2020-02-08T20:00:45.104Z Local: 2/9/2020, 4:00:45 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-08T20:00:45.105Z Local: 2/9/2020, 4:00:45 AM Error: error: password authentication failed for user "workspace" 
2020-02-08T20:00:45.106Z Local: 2/9/2020, 4:00:45 AM Created farmers_table 
2020-02-08T20:00:45.107Z Local: 2/9/2020, 4:00:45 AM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:17:15.399Z Local: 2/11/2020, 10:17:15 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:17:15.409Z Local: 2/11/2020, 10:17:15 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:17:15.411Z Local: 2/11/2020, 10:17:15 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:17:15.411Z Local: 2/11/2020, 10:17:15 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:17:15.412Z Local: 2/11/2020, 10:17:15 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:17:15.413Z Local: 2/11/2020, 10:17:15 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:17:15.414Z Local: 2/11/2020, 10:17:15 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:17:15.415Z Local: 2/11/2020, 10:17:15 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:17:15.416Z Local: 2/11/2020, 10:17:15 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:17:15.417Z Local: 2/11/2020, 10:17:15 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:17:15.493Z Local: 2/11/2020, 10:17:15 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:17:15.494Z Local: 2/11/2020, 10:17:15 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:17:15.495Z Local: 2/11/2020, 10:17:15 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:17:15.496Z Local: 2/11/2020, 10:17:15 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:17:15.497Z Local: 2/11/2020, 10:17:15 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:17:15.497Z Local: 2/11/2020, 10:17:15 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:17:15.498Z Local: 2/11/2020, 10:17:15 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:17:15.499Z Local: 2/11/2020, 10:17:15 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:17:15.499Z Local: 2/11/2020, 10:17:15 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:17:15.500Z Local: 2/11/2020, 10:17:15 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:17:15.503Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:17:15.503Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:17:15.504Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:17:15.505Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:17:15.506Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:17:15.507Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:17:15.507Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:17:15.508Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:17:15.509Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:17:15.510Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:17:15.510Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:17:15.511Z Local: 2/11/2020, 10:17:15 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:17:15.534Z Local: 2/11/2020, 10:17:15 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T14:17:15.535Z Local: 2/11/2020, 10:17:15 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:17:15.535Z Local: 2/11/2020, 10:17:15 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:17:15.545Z Local: 2/11/2020, 10:17:15 PM Server is listening on port 8000 
2020-02-11T14:17:15.560Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.562Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.565Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.566Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.567Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.568Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.569Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.570Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.571Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.573Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.577Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.579Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.581Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.582Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.585Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.587Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.590Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.592Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.595Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.597Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.600Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.602Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.603Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.606Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.609Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.610Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.612Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.613Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.615Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.616Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.618Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.620Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.621Z Local: 2/11/2020, 10:17:15 PM Created posts_table 
2020-02-11T14:17:15.622Z Local: 2/11/2020, 10:17:15 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:17:15.624Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.625Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.626Z Local: 2/11/2020, 10:17:15 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:17:15.626Z Local: 2/11/2020, 10:17:15 PM Created Producer type 
2020-02-11T14:17:15.628Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.629Z Local: 2/11/2020, 10:17:15 PM Created Good type 
2020-02-11T14:17:15.630Z Local: 2/11/2020, 10:17:15 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:17:15.632Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.634Z Local: 2/11/2020, 10:17:15 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-11T14:17:15.633Z Local: 2/11/2020, 10:17:15 PM Created Spec type 
2020-02-11T14:17:15.636Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.637Z Local: 2/11/2020, 10:17:15 PM Created Section type 
2020-02-11T14:17:15.638Z Local: 2/11/2020, 10:17:15 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T14:17:15.640Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.641Z Local: 2/11/2020, 10:17:15 PM Created items_table 
2020-02-11T14:17:15.643Z Local: 2/11/2020, 10:17:15 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:17:15.644Z Local: 2/11/2020, 10:17:15 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:17:15.646Z Local: 2/11/2020, 10:17:15 PM Created farmers_table 
2020-02-11T14:17:15.646Z Local: 2/11/2020, 10:17:15 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:18:04.462Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:18:04.471Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:18:04.472Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:18:04.473Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:18:04.474Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:18:04.475Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:18:04.475Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:18:04.476Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:18:04.477Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:18:04.478Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:18:04.480Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:18:04.481Z Local: 2/11/2020, 10:18:04 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:18:04.500Z Local: 2/11/2020, 10:18:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:18:04.501Z Local: 2/11/2020, 10:18:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:18:04.502Z Local: 2/11/2020, 10:18:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:18:04.502Z Local: 2/11/2020, 10:18:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:18:04.503Z Local: 2/11/2020, 10:18:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:18:04.504Z Local: 2/11/2020, 10:18:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:18:04.505Z Local: 2/11/2020, 10:18:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:18:04.505Z Local: 2/11/2020, 10:18:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:18:04.506Z Local: 2/11/2020, 10:18:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:18:04.507Z Local: 2/11/2020, 10:18:04 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:18:04.510Z Local: 2/11/2020, 10:18:04 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:18:04.511Z Local: 2/11/2020, 10:18:04 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:18:04.512Z Local: 2/11/2020, 10:18:04 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:18:04.512Z Local: 2/11/2020, 10:18:04 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:18:04.513Z Local: 2/11/2020, 10:18:04 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:18:04.514Z Local: 2/11/2020, 10:18:04 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:18:04.515Z Local: 2/11/2020, 10:18:04 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:18:04.515Z Local: 2/11/2020, 10:18:04 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:18:04.516Z Local: 2/11/2020, 10:18:04 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:18:04.517Z Local: 2/11/2020, 10:18:04 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:18:04.536Z Local: 2/11/2020, 10:18:04 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:18:04.540Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.542Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.543Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.544Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.548Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.549Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.550Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.551Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.552Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.554Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.560Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.562Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.565Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.568Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.569Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.570Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.576Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.578Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.579Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.580Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.583Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.586Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.588Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.589Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.592Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.594Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.595Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.597Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.596Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.598Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.600Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.601Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:04.602Z Local: 2/11/2020, 10:18:04 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:06.548Z Local: 2/11/2020, 10:18:06 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:18:06.563Z Local: 2/11/2020, 10:18:06 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:08.553Z Local: 2/11/2020, 10:18:08 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T14:18:08.570Z Local: 2/11/2020, 10:18:08 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:10.557Z Local: 2/11/2020, 10:18:10 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-11T14:18:10.572Z Local: 2/11/2020, 10:18:10 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:12.559Z Local: 2/11/2020, 10:18:12 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:18:12.574Z Local: 2/11/2020, 10:18:12 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:14.564Z Local: 2/11/2020, 10:18:14 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:18:14.586Z Local: 2/11/2020, 10:18:14 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:16.566Z Local: 2/11/2020, 10:18:16 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-11T14:18:16.569Z Local: 2/11/2020, 10:18:16 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:18.569Z Local: 2/11/2020, 10:18:18 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-11T14:18:18.575Z Local: 2/11/2020, 10:18:18 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:20.572Z Local: 2/11/2020, 10:18:20 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-11T14:18:20.579Z Local: 2/11/2020, 10:18:20 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:22.577Z Local: 2/11/2020, 10:18:22 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-11T14:18:22.593Z Local: 2/11/2020, 10:18:22 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:24.580Z Local: 2/11/2020, 10:18:24 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-11T14:18:24.592Z Local: 2/11/2020, 10:18:24 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:26.584Z Local: 2/11/2020, 10:18:26 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-11T14:18:26.599Z Local: 2/11/2020, 10:18:26 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:18:28.589Z Local: 2/11/2020, 10:18:28 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-11T14:18:28.603Z Local: 2/11/2020, 10:18:28 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:41.859Z Local: 2/11/2020, 10:49:41 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:49:41.897Z Local: 2/11/2020, 10:49:41 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:49:41.899Z Local: 2/11/2020, 10:49:41 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:49:41.901Z Local: 2/11/2020, 10:49:41 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:49:41.902Z Local: 2/11/2020, 10:49:41 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:49:41.903Z Local: 2/11/2020, 10:49:41 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:49:41.905Z Local: 2/11/2020, 10:49:41 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:49:41.906Z Local: 2/11/2020, 10:49:41 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:49:41.907Z Local: 2/11/2020, 10:49:41 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:49:41.907Z Local: 2/11/2020, 10:49:41 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:49:42.030Z Local: 2/11/2020, 10:49:42 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:49:42.031Z Local: 2/11/2020, 10:49:42 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:49:42.032Z Local: 2/11/2020, 10:49:42 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:49:42.032Z Local: 2/11/2020, 10:49:42 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:49:42.033Z Local: 2/11/2020, 10:49:42 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:49:42.034Z Local: 2/11/2020, 10:49:42 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:49:42.034Z Local: 2/11/2020, 10:49:42 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:49:42.035Z Local: 2/11/2020, 10:49:42 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:49:42.036Z Local: 2/11/2020, 10:49:42 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:49:42.037Z Local: 2/11/2020, 10:49:42 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:49:42.040Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:49:42.041Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:49:42.041Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:49:42.042Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:49:42.043Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:49:42.044Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:49:42.045Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:49:42.046Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:49:42.047Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:49:42.047Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:49:42.048Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:49:42.049Z Local: 2/11/2020, 10:49:42 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:49:42.092Z Local: 2/11/2020, 10:49:42 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T14:49:42.093Z Local: 2/11/2020, 10:49:42 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:49:42.094Z Local: 2/11/2020, 10:49:42 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:49:42.103Z Local: 2/11/2020, 10:49:42 PM Server is listening on port 8000 
2020-02-11T14:49:42.117Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.118Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.122Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.123Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.125Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.126Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.127Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.128Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.129Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.131Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.134Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.137Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.139Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.143Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.144Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.146Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.147Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.149Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.150Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.152Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.156Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.158Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.160Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.163Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.164Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.165Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.166Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.168Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.170Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.173Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.174Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.175Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.176Z Local: 2/11/2020, 10:49:42 PM Created posts_table 
2020-02-11T14:49:42.177Z Local: 2/11/2020, 10:49:42 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:49:42.178Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.179Z Local: 2/11/2020, 10:49:42 PM Created Producer type 
2020-02-11T14:49:42.180Z Local: 2/11/2020, 10:49:42 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:49:42.181Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.183Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.184Z Local: 2/11/2020, 10:49:42 PM Created Good type 
2020-02-11T14:49:42.185Z Local: 2/11/2020, 10:49:42 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:49:42.187Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.188Z Local: 2/11/2020, 10:49:42 PM Created Spec type 
2020-02-11T14:49:42.189Z Local: 2/11/2020, 10:49:42 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-11T14:49:42.190Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.192Z Local: 2/11/2020, 10:49:42 PM Created Section type 
2020-02-11T14:49:42.193Z Local: 2/11/2020, 10:49:42 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T14:49:42.194Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.196Z Local: 2/11/2020, 10:49:42 PM Created items_table 
2020-02-11T14:49:42.197Z Local: 2/11/2020, 10:49:42 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:49:42.198Z Local: 2/11/2020, 10:49:42 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:49:42.199Z Local: 2/11/2020, 10:49:42 PM Created farmers_table 
2020-02-11T14:49:42.200Z Local: 2/11/2020, 10:49:42 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:55:56.414Z Local: 2/11/2020, 10:55:56 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:55:56.423Z Local: 2/11/2020, 10:55:56 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:55:56.425Z Local: 2/11/2020, 10:55:56 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:55:56.426Z Local: 2/11/2020, 10:55:56 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:55:56.427Z Local: 2/11/2020, 10:55:56 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:55:56.427Z Local: 2/11/2020, 10:55:56 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:55:56.428Z Local: 2/11/2020, 10:55:56 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:55:56.429Z Local: 2/11/2020, 10:55:56 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:55:56.430Z Local: 2/11/2020, 10:55:56 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:55:56.431Z Local: 2/11/2020, 10:55:56 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:55:56.504Z Local: 2/11/2020, 10:55:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:55:56.505Z Local: 2/11/2020, 10:55:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:55:56.506Z Local: 2/11/2020, 10:55:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:55:56.506Z Local: 2/11/2020, 10:55:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:55:56.507Z Local: 2/11/2020, 10:55:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:55:56.508Z Local: 2/11/2020, 10:55:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:55:56.509Z Local: 2/11/2020, 10:55:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:55:56.509Z Local: 2/11/2020, 10:55:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:55:56.510Z Local: 2/11/2020, 10:55:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:55:56.511Z Local: 2/11/2020, 10:55:56 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:55:56.516Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:55:56.517Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:55:56.518Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:55:56.519Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:55:56.520Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:55:56.522Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:55:56.523Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:55:56.524Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:55:56.524Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:55:56.525Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:55:56.526Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:55:56.527Z Local: 2/11/2020, 10:55:56 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:55:56.549Z Local: 2/11/2020, 10:55:56 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T14:55:56.550Z Local: 2/11/2020, 10:55:56 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:55:56.550Z Local: 2/11/2020, 10:55:56 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:55:56.559Z Local: 2/11/2020, 10:55:56 PM Server is listening on port 8000 
2020-02-11T14:55:56.577Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.581Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.582Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.583Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.584Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.585Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.586Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.587Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.590Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.591Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.598Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.599Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.601Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.603Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.606Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.607Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.608Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.610Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.611Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.613Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.619Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.621Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.623Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.624Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.626Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.627Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.629Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.631Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.633Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.636Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.638Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.639Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.640Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.641Z Local: 2/11/2020, 10:55:56 PM Created posts_table 
2020-02-11T14:55:56.642Z Local: 2/11/2020, 10:55:56 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:55:56.643Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.644Z Local: 2/11/2020, 10:55:56 PM Created Producer type 
2020-02-11T14:55:56.645Z Local: 2/11/2020, 10:55:56 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:55:56.646Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.647Z Local: 2/11/2020, 10:55:56 PM Created Good type 
2020-02-11T14:55:56.648Z Local: 2/11/2020, 10:55:56 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:55:56.651Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.652Z Local: 2/11/2020, 10:55:56 PM Created Spec type 
2020-02-11T14:55:56.653Z Local: 2/11/2020, 10:55:56 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-11T14:55:56.656Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.658Z Local: 2/11/2020, 10:55:56 PM Created Section type 
2020-02-11T14:55:56.660Z Local: 2/11/2020, 10:55:56 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T14:55:56.662Z Local: 2/11/2020, 10:55:56 PM Created items_table 
2020-02-11T14:55:56.661Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.663Z Local: 2/11/2020, 10:55:56 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:55:56.670Z Local: 2/11/2020, 10:55:56 PM Error: error: password authentication failed for user "workspace" 
2020-02-11T14:55:56.671Z Local: 2/11/2020, 10:55:56 PM Created farmers_table 
2020-02-11T14:55:56.672Z Local: 2/11/2020, 10:55:56 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:56:47.652Z Local: 2/11/2020, 10:56:47 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:56:47.661Z Local: 2/11/2020, 10:56:47 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:56:47.662Z Local: 2/11/2020, 10:56:47 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:56:47.663Z Local: 2/11/2020, 10:56:47 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:56:47.664Z Local: 2/11/2020, 10:56:47 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:56:47.665Z Local: 2/11/2020, 10:56:47 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:56:47.666Z Local: 2/11/2020, 10:56:47 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:56:47.667Z Local: 2/11/2020, 10:56:47 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:56:47.668Z Local: 2/11/2020, 10:56:47 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:56:47.669Z Local: 2/11/2020, 10:56:47 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:56:47.742Z Local: 2/11/2020, 10:56:47 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:56:47.743Z Local: 2/11/2020, 10:56:47 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:56:47.743Z Local: 2/11/2020, 10:56:47 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:56:47.744Z Local: 2/11/2020, 10:56:47 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:56:47.745Z Local: 2/11/2020, 10:56:47 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:56:47.746Z Local: 2/11/2020, 10:56:47 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:56:47.746Z Local: 2/11/2020, 10:56:47 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:56:47.747Z Local: 2/11/2020, 10:56:47 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:56:47.748Z Local: 2/11/2020, 10:56:47 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:56:47.748Z Local: 2/11/2020, 10:56:47 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:56:47.751Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:56:47.752Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:56:47.754Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:56:47.755Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:56:47.756Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:56:47.757Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:56:47.758Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:56:47.759Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:56:47.759Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:56:47.760Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:56:47.782Z Local: 2/11/2020, 10:56:47 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:56:47.781Z Local: 2/11/2020, 10:56:47 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T14:56:47.783Z Local: 2/11/2020, 10:56:47 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:56:47.793Z Local: 2/11/2020, 10:56:47 PM Server is listening on port 8000 
2020-02-11T14:56:47.753Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:56:47.753Z Local: 2/11/2020, 10:56:47 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:56:47.813Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "posts_table" does not exist 
2020-02-11T14:56:47.814Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "posts_table" does not exist 
2020-02-11T14:56:47.816Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "posts_table" does not exist 
2020-02-11T14:56:47.817Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "posts_table" does not exist 
2020-02-11T14:56:47.820Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "posts_table" does not exist 
2020-02-11T14:56:47.823Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "posts_table" does not exist 
2020-02-11T14:56:47.829Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "posts_table" does not exist 
2020-02-11T14:56:47.832Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "posts_table" does not exist 
2020-02-11T14:56:47.834Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "posts_table" does not exist 
2020-02-11T14:56:47.836Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "posts_table" does not exist 
2020-02-11T14:56:47.844Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "items_table" does not exist 
2020-02-11T14:56:47.846Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "items_table" does not exist 
2020-02-11T14:56:47.848Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "items_table" does not exist 
2020-02-11T14:56:47.849Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "items_table" does not exist 
2020-02-11T14:56:47.854Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "items_table" does not exist 
2020-02-11T14:56:47.856Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "items_table" does not exist 
2020-02-11T14:56:47.858Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "items_table" does not exist 
2020-02-11T14:56:47.860Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "items_table" does not exist 
2020-02-11T14:56:47.862Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "items_table" does not exist 
2020-02-11T14:56:47.865Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "items_table" does not exist 
2020-02-11T14:56:47.870Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.874Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.877Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.878Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.882Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.884Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.885Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.887Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.889Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.892Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.894Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.897Z Local: 2/11/2020, 10:56:47 PM Error: error: relation "farmers_table" does not exist 
2020-02-11T14:56:47.911Z Local: 2/11/2020, 10:56:47 PM command: DO, rowCount: null 
2020-02-11T14:56:47.912Z Local: 2/11/2020, 10:56:47 PM Created Producer type 
2020-02-11T14:56:47.913Z Local: 2/11/2020, 10:56:47 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:56:47.914Z Local: 2/11/2020, 10:56:47 PM command: DO, rowCount: null 
2020-02-11T14:56:47.915Z Local: 2/11/2020, 10:56:47 PM Created Good type 
2020-02-11T14:56:47.916Z Local: 2/11/2020, 10:56:47 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:56:47.917Z Local: 2/11/2020, 10:56:47 PM command: CREATE, rowCount: null 
2020-02-11T14:56:47.918Z Local: 2/11/2020, 10:56:47 PM Created posts_table 
2020-02-11T14:56:47.919Z Local: 2/11/2020, 10:56:47 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:56:47.920Z Local: 2/11/2020, 10:56:47 PM command: DO, rowCount: null 
2020-02-11T14:56:47.921Z Local: 2/11/2020, 10:56:47 PM Created Section type 
2020-02-11T14:56:47.922Z Local: 2/11/2020, 10:56:47 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T14:56:47.923Z Local: 2/11/2020, 10:56:47 PM command: DO, rowCount: null 
2020-02-11T14:56:47.924Z Local: 2/11/2020, 10:56:47 PM Created Spec type 
2020-02-11T14:56:47.925Z Local: 2/11/2020, 10:56:47 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-11T14:56:47.930Z Local: 2/11/2020, 10:56:47 PM command: CREATE, rowCount: null 
2020-02-11T14:56:47.931Z Local: 2/11/2020, 10:56:47 PM Created farmers_table 
2020-02-11T14:56:47.932Z Local: 2/11/2020, 10:56:47 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:56:47.933Z Local: 2/11/2020, 10:56:47 PM command: CREATE, rowCount: null 
2020-02-11T14:56:47.934Z Local: 2/11/2020, 10:56:47 PM Created items_table 
2020-02-11T14:56:47.935Z Local: 2/11/2020, 10:56:47 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T14:57:30.047Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:57:30.055Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:57:30.057Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:57:30.058Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:57:30.059Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:57:30.060Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:57:30.060Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:57:30.061Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:57:30.062Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:57:30.064Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:57:30.065Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:57:30.065Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:57:30.087Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.088Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.089Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.089Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.090Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.091Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.091Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.092Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.093Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.093Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.097Z Local: 2/11/2020, 10:57:30 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:57:30.098Z Local: 2/11/2020, 10:57:30 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:57:30.098Z Local: 2/11/2020, 10:57:30 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:57:30.099Z Local: 2/11/2020, 10:57:30 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:57:30.100Z Local: 2/11/2020, 10:57:30 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:57:30.101Z Local: 2/11/2020, 10:57:30 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:57:30.101Z Local: 2/11/2020, 10:57:30 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:57:30.102Z Local: 2/11/2020, 10:57:30 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:57:30.103Z Local: 2/11/2020, 10:57:30 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:57:30.103Z Local: 2/11/2020, 10:57:30 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T14:57:30.125Z Local: 2/11/2020, 10:57:30 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:57:30.128Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.131Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.133Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.135Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.136Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.137Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.139Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.140Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.141Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.142Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.143Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.144Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.146Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.147Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.148Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.149Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.151Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.152Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.153Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.155Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.156Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.157Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.158Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.159Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.160Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.162Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.163Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.164Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.165Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.166Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.166Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.167Z Local: 2/11/2020, 10:57:30 PM command: DO, rowCount: null 
2020-02-11T14:57:30.170Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.172Z Local: 2/11/2020, 10:57:30 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:57:30.175Z Local: 2/11/2020, 10:57:30 PM command: DO, rowCount: null 
2020-02-11T14:57:30.177Z Local: 2/11/2020, 10:57:30 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T14:57:30.179Z Local: 2/11/2020, 10:57:30 PM command: CREATE, rowCount: null 
2020-02-11T14:57:30.180Z Local: 2/11/2020, 10:57:30 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-11T14:57:30.182Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.184Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:57:30.187Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.188Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T14:57:30.191Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.193Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-11T14:57:30.195Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 3 
2020-02-11T14:57:30.197Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-11T14:57:30.199Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 14 
2020-02-11T14:57:30.200Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-11T14:57:30.203Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 14 
2020-02-11T14:57:30.205Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-11T14:57:30.207Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.210Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-11T14:57:30.211Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 2 
2020-02-11T14:57:30.215Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-11T14:57:30.217Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 12 
2020-02-11T14:57:30.219Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-11T14:57:30.221Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 13 
2020-02-11T14:57:30.233Z Local: 2/11/2020, 10:57:30 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-11T14:57:30.240Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.241Z Local: 2/11/2020, 10:57:30 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.271Z Local: 2/11/2020, 10:57:30 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T14:57:30.276Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.280Z Local: 2/11/2020, 10:57:30 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.290Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-11T14:57:30.293Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.301Z Local: 2/11/2020, 10:57:30 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.305Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-11T14:57:30.307Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 2 
2020-02-11T14:57:30.308Z Local: 2/11/2020, 10:57:30 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.312Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-11T14:57:30.315Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 13 
2020-02-11T14:57:30.319Z Local: 2/11/2020, 10:57:30 PM Sending 13 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.325Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-11T14:57:30.328Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 0 
2020-02-11T14:57:30.330Z Local: 2/11/2020, 10:57:30 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.338Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-11T14:57:30.341Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 2 
2020-02-11T14:57:30.341Z Local: 2/11/2020, 10:57:30 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.344Z Local: 2/11/2020, 10:57:30 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:57:30.345Z Local: 2/11/2020, 10:57:30 PM command: DO, rowCount: null 
2020-02-11T14:57:30.347Z Local: 2/11/2020, 10:57:30 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T14:57:30.348Z Local: 2/11/2020, 10:57:30 PM command: DO, rowCount: null 
2020-02-11T14:57:30.350Z Local: 2/11/2020, 10:57:30 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-11T14:57:30.351Z Local: 2/11/2020, 10:57:30 PM command: CREATE, rowCount: null 
2020-02-11T14:57:30.353Z Local: 2/11/2020, 10:57:30 PM SELECT COUNT(*) FROM items_table; 
2020-02-11T14:57:30.354Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.356Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.358Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.359Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-11T14:57:30.361Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 3 
2020-02-11T14:57:30.362Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-11T14:57:30.364Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 11 
2020-02-11T14:57:30.366Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-11T14:57:30.368Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 11 
2020-02-11T14:57:30.370Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-11T14:57:30.371Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.373Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-11T14:57:30.374Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 0 
2020-02-11T14:57:30.376Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-11T14:57:30.378Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 0 
2020-02-11T14:57:30.379Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-11T14:57:30.381Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 0 
2020-02-11T14:57:30.384Z Local: 2/11/2020, 10:57:30 PM SELECT COUNT(*) FROM items_table; 
2020-02-11T14:57:30.387Z Local: 2/11/2020, 10:57:30 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.386Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.391Z Local: 2/11/2020, 10:57:30 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T14:57:30.394Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.395Z Local: 2/11/2020, 10:57:30 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.400Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-11T14:57:30.401Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.403Z Local: 2/11/2020, 10:57:30 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.407Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-11T14:57:30.409Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 0 
2020-02-11T14:57:30.410Z Local: 2/11/2020, 10:57:30 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.414Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-11T14:57:30.415Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 0 
2020-02-11T14:57:30.416Z Local: 2/11/2020, 10:57:30 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.420Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-11T14:57:30.421Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 0 
2020-02-11T14:57:30.422Z Local: 2/11/2020, 10:57:30 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.426Z Local: 2/11/2020, 10:57:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-11T14:57:30.427Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 2 
2020-02-11T14:57:30.429Z Local: 2/11/2020, 10:57:30 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.433Z Local: 2/11/2020, 10:57:30 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T14:57:30.434Z Local: 2/11/2020, 10:57:30 PM command: CREATE, rowCount: null 
2020-02-11T14:57:30.436Z Local: 2/11/2020, 10:57:30 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T14:57:30.437Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.439Z Local: 2/11/2020, 10:57:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-11T14:57:30.441Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 3 
2020-02-11T14:57:30.443Z Local: 2/11/2020, 10:57:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-11T14:57:30.445Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 10 
2020-02-11T14:57:30.446Z Local: 2/11/2020, 10:57:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-11T14:57:30.448Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 10 
2020-02-11T14:57:30.450Z Local: 2/11/2020, 10:57:30 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-11T14:57:30.451Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.454Z Local: 2/11/2020, 10:57:30 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T14:57:30.455Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.456Z Local: 2/11/2020, 10:57:30 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.462Z Local: 2/11/2020, 10:57:30 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('凍頂村的故事', 'A Test of query a post', 'SHC', '# Remarkable...', 'hill3.jpg') RETURNING id; 
2020-02-11T14:57:30.464Z Local: 2/11/2020, 10:57:30 PM command: INSERT, rowCount: 1 
2020-02-11T14:57:30.465Z Local: 2/11/2020, 10:57:30 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.471Z Local: 2/11/2020, 10:57:30 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-11T14:57:30.473Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 1 
2020-02-11T14:57:30.475Z Local: 2/11/2020, 10:57:30 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T14:57:30.479Z Local: 2/11/2020, 10:57:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-11T14:57:30.481Z Local: 2/11/2020, 10:57:30 PM command: SELECT, rowCount: 2 
2020-02-11T14:57:30.481Z Local: 2/11/2020, 10:57:30 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.249Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T15:02:45.258Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T15:02:45.259Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T15:02:45.260Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T15:02:45.261Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T15:02:45.262Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T15:02:45.263Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T15:02:45.264Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T15:02:45.264Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T15:02:45.266Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T15:02:45.267Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T15:02:45.287Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.288Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.289Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.289Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.290Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.291Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.291Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.292Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.293Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.294Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.297Z Local: 2/11/2020, 11:02:45 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T15:02:45.298Z Local: 2/11/2020, 11:02:45 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T15:02:45.299Z Local: 2/11/2020, 11:02:45 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T15:02:45.299Z Local: 2/11/2020, 11:02:45 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T15:02:45.300Z Local: 2/11/2020, 11:02:45 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T15:02:45.301Z Local: 2/11/2020, 11:02:45 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T15:02:45.301Z Local: 2/11/2020, 11:02:45 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T15:02:45.302Z Local: 2/11/2020, 11:02:45 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T15:02:45.303Z Local: 2/11/2020, 11:02:45 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T15:02:45.303Z Local: 2/11/2020, 11:02:45 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T15:02:45.268Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T15:02:45.326Z Local: 2/11/2020, 11:02:45 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T15:02:45.339Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.340Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.341Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.342Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.343Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.345Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.346Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.347Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.348Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.349Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.351Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.352Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.355Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.356Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.357Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.358Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.353Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.354Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.360Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.361Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.363Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.365Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.364Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.366Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.367Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.368Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.368Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.370Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.371Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.372Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.373Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.374Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.375Z Local: 2/11/2020, 11:02:45 PM command: DO, rowCount: null 
2020-02-11T15:02:45.380Z Local: 2/11/2020, 11:02:45 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T15:02:45.381Z Local: 2/11/2020, 11:02:45 PM command: DO, rowCount: null 
2020-02-11T15:02:45.383Z Local: 2/11/2020, 11:02:45 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T15:02:45.385Z Local: 2/11/2020, 11:02:45 PM command: CREATE, rowCount: null 
2020-02-11T15:02:45.386Z Local: 2/11/2020, 11:02:45 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-11T15:02:45.388Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.389Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":1,"name":"Oolong Tea"},{"id":3,"name":"Black Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T15:02:45.392Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.393Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', null, '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        null, 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T15:02:45.398Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.400Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-11T15:02:45.403Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 3 
2020-02-11T15:02:45.404Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-11T15:02:45.407Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 29 
2020-02-11T15:02:45.409Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC  ; 
2020-02-11T15:02:45.412Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 29 
2020-02-11T15:02:45.416Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '2'; 
2020-02-11T15:02:45.417Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.419Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-11T15:02:45.421Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 4 
2020-02-11T15:02:45.423Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-11T15:02:45.426Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 25 
2020-02-11T15:02:45.428Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Oolong Tea' ); 
2020-02-11T15:02:45.431Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 27 
2020-02-11T15:02:45.441Z Local: 2/11/2020, 11:02:45 PM SELECT COUNT(*) FROM farmers_table; 
2020-02-11T15:02:45.446Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.447Z Local: 2/11/2020, 11:02:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.458Z Local: 2/11/2020, 11:02:45 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T15:02:45.461Z Local: 2/11/2020, 11:02:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.461Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.466Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id = '5'; 
2020-02-11T15:02:45.468Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.469Z Local: 2/11/2020, 11:02:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.473Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE name = 'Dai'; 
2020-02-11T15:02:45.475Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 4 
2020-02-11T15:02:45.477Z Local: 2/11/2020, 11:02:45 PM Sending 4 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.481Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).id = '2' ); 
2020-02-11T15:02:45.484Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 26 
2020-02-11T15:02:45.491Z Local: 2/11/2020, 11:02:45 PM Sending 26 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.498Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table WHERE id IN (
        SELECT id FROM (
            SELECT id, unnest(items) AS items_list FROM farmers_table
            ) AS selected_items_list  WHERE (selected_items_list.items_list).name = 'Dai' ); 
2020-02-11T15:02:45.500Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 0 
2020-02-11T15:02:45.501Z Local: 2/11/2020, 11:02:45 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.504Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    country,
    province,
    county,
    township,
    village,
    road,
    slogan,
    description,
    array_to_json(content) AS content,
    array_to_json(items) AS items,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on, 
    latest_modify
    FROM farmers_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-11T15:02:45.507Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 2 
2020-02-11T15:02:45.507Z Local: 2/11/2020, 11:02:45 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.510Z Local: 2/11/2020, 11:02:45 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T15:02:45.512Z Local: 2/11/2020, 11:02:45 PM command: DO, rowCount: null 
2020-02-11T15:02:45.513Z Local: 2/11/2020, 11:02:45 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T15:02:45.515Z Local: 2/11/2020, 11:02:45 PM command: DO, rowCount: null 
2020-02-11T15:02:45.517Z Local: 2/11/2020, 11:02:45 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-11T15:02:45.518Z Local: 2/11/2020, 11:02:45 PM command: CREATE, rowCount: null 
2020-02-11T15:02:45.520Z Local: 2/11/2020, 11:02:45 PM SELECT COUNT(*) FROM items_table; 
2020-02-11T15:02:45.521Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.523Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.525Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.527Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 2; 
2020-02-11T15:02:45.528Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 3 
2020-02-11T15:02:45.530Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  OFFSET 0; 
2020-02-11T15:02:45.532Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 23 
2020-02-11T15:02:45.533Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC  ; 
2020-02-11T15:02:45.536Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 23 
2020-02-11T15:02:45.537Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '2'; 
2020-02-11T15:02:45.539Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.541Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-11T15:02:45.542Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 0 
2020-02-11T15:02:45.543Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-11T15:02:45.545Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 0 
2020-02-11T15:02:45.547Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'dai'; 
2020-02-11T15:02:45.548Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 0 
2020-02-11T15:02:45.550Z Local: 2/11/2020, 11:02:45 PM SELECT COUNT(*) FROM items_table; 
2020-02-11T15:02:45.552Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.553Z Local: 2/11/2020, 11:02:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.557Z Local: 2/11/2020, 11:02:45 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T15:02:45.559Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.560Z Local: 2/11/2020, 11:02:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.564Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '5'; 
2020-02-11T15:02:45.566Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.567Z Local: 2/11/2020, 11:02:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.571Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table WHERE name = 'Oolong Tea'; 
2020-02-11T15:02:45.572Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 0 
2020-02-11T15:02:45.574Z Local: 2/11/2020, 11:02:45 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.578Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).id = '2'; 
2020-02-11T15:02:45.580Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 0 
2020-02-11T15:02:45.581Z Local: 2/11/2020, 11:02:45 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.584Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE (producer).name = 'Dai'; 
2020-02-11T15:02:45.586Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 0 
2020-02-11T15:02:45.587Z Local: 2/11/2020, 11:02:45 PM Sending 0 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.590Z Local: 2/11/2020, 11:02:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 2 OFFSET 3; 
2020-02-11T15:02:45.592Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 2 
2020-02-11T15:02:45.593Z Local: 2/11/2020, 11:02:45 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.595Z Local: 2/11/2020, 11:02:45 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T15:02:45.597Z Local: 2/11/2020, 11:02:45 PM command: CREATE, rowCount: null 
2020-02-11T15:02:45.599Z Local: 2/11/2020, 11:02:45 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T15:02:45.600Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.602Z Local: 2/11/2020, 11:02:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 2; 
2020-02-11T15:02:45.604Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 3 
2020-02-11T15:02:45.605Z Local: 2/11/2020, 11:02:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  OFFSET 0; 
2020-02-11T15:02:45.607Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 21 
2020-02-11T15:02:45.608Z Local: 2/11/2020, 11:02:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC  ; 
2020-02-11T15:02:45.610Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 21 
2020-02-11T15:02:45.612Z Local: 2/11/2020, 11:02:45 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-11T15:02:45.614Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.616Z Local: 2/11/2020, 11:02:45 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T15:02:45.618Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.619Z Local: 2/11/2020, 11:02:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.624Z Local: 2/11/2020, 11:02:45 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('凍頂村的故事', 'A Test of query a post', 'SHC', '# Remarkable...', 'hill3.jpg') RETURNING id; 
2020-02-11T15:02:45.626Z Local: 2/11/2020, 11:02:45 PM command: INSERT, rowCount: 1 
2020-02-11T15:02:45.627Z Local: 2/11/2020, 11:02:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.631Z Local: 2/11/2020, 11:02:45 PM SELECT * FROM posts_table WHERE id = '2'; 
2020-02-11T15:02:45.633Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 1 
2020-02-11T15:02:45.634Z Local: 2/11/2020, 11:02:45 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:02:45.638Z Local: 2/11/2020, 11:02:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 2 OFFSET 3; 
2020-02-11T15:02:45.640Z Local: 2/11/2020, 11:02:45 PM command: SELECT, rowCount: 2 
2020-02-11T15:02:45.641Z Local: 2/11/2020, 11:02:45 PM Sending 2 rows to ::ffff:127.0.0.1 with  
2020-02-11T15:34:13.644Z Local: 2/11/2020, 11:34:13 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T15:34:13.653Z Local: 2/11/2020, 11:34:13 PM command: SELECT, rowCount: 1 
2020-02-11T15:34:13.654Z Local: 2/11/2020, 11:34:13 PM Sending 1 rows to ::1 with  
2020-02-11T15:38:00.301Z Local: 2/11/2020, 11:38:00 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T15:38:00.313Z Local: 2/11/2020, 11:38:00 PM command: SELECT, rowCount: 1 
2020-02-11T15:38:00.315Z Local: 2/11/2020, 11:38:00 PM Sending 1 rows to ::1 with  
2020-02-11T15:38:22.367Z Local: 2/11/2020, 11:38:22 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T15:38:22.375Z Local: 2/11/2020, 11:38:22 PM command: SELECT, rowCount: 1 
2020-02-11T15:38:22.376Z Local: 2/11/2020, 11:38:22 PM Sending 1 rows to ::1 with  
2020-02-11T15:38:54.198Z Local: 2/11/2020, 11:38:54 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T15:38:54.205Z Local: 2/11/2020, 11:38:54 PM command: SELECT, rowCount: 1 
2020-02-11T15:38:54.207Z Local: 2/11/2020, 11:38:54 PM Sending 1 rows to ::1 with  
2020-02-11T15:38:54.331Z Local: 2/11/2020, 11:38:54 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T15:38:54.333Z Local: 2/11/2020, 11:38:54 PM command: SELECT, rowCount: 3 
2020-02-11T15:38:54.335Z Local: 2/11/2020, 11:38:54 PM Sending 3 rows to ::1 with  
2020-02-11T15:39:47.511Z Local: 2/11/2020, 11:39:47 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T15:39:47.519Z Local: 2/11/2020, 11:39:47 PM command: SELECT, rowCount: 1 
2020-02-11T15:39:47.520Z Local: 2/11/2020, 11:39:47 PM Sending 1 rows to ::1 with  
2020-02-11T15:39:47.650Z Local: 2/11/2020, 11:39:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T15:39:47.653Z Local: 2/11/2020, 11:39:47 PM command: SELECT, rowCount: 3 
2020-02-11T15:39:47.655Z Local: 2/11/2020, 11:39:47 PM Sending 3 rows to ::1 with  
2020-02-11T15:39:47.744Z Local: 2/11/2020, 11:39:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T15:39:47.746Z Local: 2/11/2020, 11:39:47 PM command: SELECT, rowCount: 3 
2020-02-11T15:39:47.748Z Local: 2/11/2020, 11:39:47 PM Sending 3 rows to ::1 with  
2020-02-11T15:39:47.808Z Local: 2/11/2020, 11:39:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T15:39:47.812Z Local: 2/11/2020, 11:39:47 PM command: SELECT, rowCount: 3 
2020-02-11T15:39:47.814Z Local: 2/11/2020, 11:39:47 PM Sending 3 rows to ::1 with  
2020-02-11T15:39:47.946Z Local: 2/11/2020, 11:39:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T15:39:47.948Z Local: 2/11/2020, 11:39:47 PM command: SELECT, rowCount: 3 
2020-02-11T15:39:47.950Z Local: 2/11/2020, 11:39:47 PM Sending 3 rows to ::1 with  
2020-02-11T15:39:48.516Z Local: 2/11/2020, 11:39:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T15:39:48.520Z Local: 2/11/2020, 11:39:48 PM command: SELECT, rowCount: 3 
2020-02-11T15:39:48.522Z Local: 2/11/2020, 11:39:48 PM Sending 3 rows to ::1 with  
2020-02-11T15:39:48.880Z Local: 2/11/2020, 11:39:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T15:39:48.887Z Local: 2/11/2020, 11:39:48 PM command: SELECT, rowCount: 3 
2020-02-11T15:39:48.889Z Local: 2/11/2020, 11:39:48 PM Sending 3 rows to ::1 with  
2020-02-11T15:39:48.956Z Local: 2/11/2020, 11:39:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T15:39:48.959Z Local: 2/11/2020, 11:39:48 PM command: SELECT, rowCount: 3 
2020-02-11T15:39:48.962Z Local: 2/11/2020, 11:39:48 PM Sending 3 rows to ::1 with  
2020-02-11T15:39:49.059Z Local: 2/11/2020, 11:39:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T15:39:49.061Z Local: 2/11/2020, 11:39:49 PM command: SELECT, rowCount: 1 
2020-02-11T15:39:49.066Z Local: 2/11/2020, 11:39:49 PM Sending 1 rows to ::1 with  
2020-02-11T15:40:18.518Z Local: 2/11/2020, 11:40:18 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T15:40:18.525Z Local: 2/11/2020, 11:40:18 PM command: SELECT, rowCount: 1 
2020-02-11T15:40:18.526Z Local: 2/11/2020, 11:40:18 PM Sending 1 rows to ::1 with  
2020-02-11T15:40:18.648Z Local: 2/11/2020, 11:40:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T15:40:18.650Z Local: 2/11/2020, 11:40:18 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:18.651Z Local: 2/11/2020, 11:40:18 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:18.687Z Local: 2/11/2020, 11:40:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T15:40:18.690Z Local: 2/11/2020, 11:40:18 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:18.692Z Local: 2/11/2020, 11:40:18 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:18.757Z Local: 2/11/2020, 11:40:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T15:40:18.763Z Local: 2/11/2020, 11:40:18 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:18.765Z Local: 2/11/2020, 11:40:18 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:18.844Z Local: 2/11/2020, 11:40:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T15:40:18.849Z Local: 2/11/2020, 11:40:18 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:18.851Z Local: 2/11/2020, 11:40:18 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:19.264Z Local: 2/11/2020, 11:40:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T15:40:19.267Z Local: 2/11/2020, 11:40:19 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:19.269Z Local: 2/11/2020, 11:40:19 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:19.339Z Local: 2/11/2020, 11:40:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T15:40:19.344Z Local: 2/11/2020, 11:40:19 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:19.348Z Local: 2/11/2020, 11:40:19 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:19.432Z Local: 2/11/2020, 11:40:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T15:40:19.437Z Local: 2/11/2020, 11:40:19 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:19.439Z Local: 2/11/2020, 11:40:19 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:19.594Z Local: 2/11/2020, 11:40:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T15:40:19.597Z Local: 2/11/2020, 11:40:19 PM command: SELECT, rowCount: 1 
2020-02-11T15:40:19.600Z Local: 2/11/2020, 11:40:19 PM Sending 1 rows to ::1 with  
2020-02-11T15:40:33.816Z Local: 2/11/2020, 11:40:33 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T15:40:33.822Z Local: 2/11/2020, 11:40:33 PM command: SELECT, rowCount: 1 
2020-02-11T15:40:33.823Z Local: 2/11/2020, 11:40:33 PM Sending 1 rows to ::1 with  
2020-02-11T15:40:34.078Z Local: 2/11/2020, 11:40:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T15:40:34.083Z Local: 2/11/2020, 11:40:34 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:34.085Z Local: 2/11/2020, 11:40:34 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:34.143Z Local: 2/11/2020, 11:40:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T15:40:34.148Z Local: 2/11/2020, 11:40:34 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:34.151Z Local: 2/11/2020, 11:40:34 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:34.271Z Local: 2/11/2020, 11:40:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T15:40:34.274Z Local: 2/11/2020, 11:40:34 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:34.276Z Local: 2/11/2020, 11:40:34 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:34.377Z Local: 2/11/2020, 11:40:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T15:40:34.382Z Local: 2/11/2020, 11:40:34 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:34.384Z Local: 2/11/2020, 11:40:34 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:34.779Z Local: 2/11/2020, 11:40:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T15:40:34.782Z Local: 2/11/2020, 11:40:34 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:34.784Z Local: 2/11/2020, 11:40:34 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:34.837Z Local: 2/11/2020, 11:40:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T15:40:34.840Z Local: 2/11/2020, 11:40:34 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:34.841Z Local: 2/11/2020, 11:40:34 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:34.905Z Local: 2/11/2020, 11:40:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T15:40:34.913Z Local: 2/11/2020, 11:40:34 PM command: SELECT, rowCount: 3 
2020-02-11T15:40:34.919Z Local: 2/11/2020, 11:40:34 PM Sending 3 rows to ::1 with  
2020-02-11T15:40:35.217Z Local: 2/11/2020, 11:40:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T15:40:35.224Z Local: 2/11/2020, 11:40:35 PM command: SELECT, rowCount: 1 
2020-02-11T15:40:35.227Z Local: 2/11/2020, 11:40:35 PM Sending 1 rows to ::1 with  
2020-02-11T15:41:49.320Z Local: 2/11/2020, 11:41:49 PM SELECT * FROM posts_table WHERE id = '9'; 
2020-02-11T15:41:49.327Z Local: 2/11/2020, 11:41:49 PM command: SELECT, rowCount: 1 
2020-02-11T15:41:49.335Z Local: 2/11/2020, 11:41:49 PM Sending 1 rows to ::1 with  
2020-02-11T15:42:00.323Z Local: 2/11/2020, 11:42:00 PM SELECT COUNT(*) FROM posts_table; 
2020-02-11T15:42:00.331Z Local: 2/11/2020, 11:42:00 PM command: SELECT, rowCount: 1 
2020-02-11T15:42:00.333Z Local: 2/11/2020, 11:42:00 PM Sending 1 rows to ::1 with  
2020-02-11T15:42:00.367Z Local: 2/11/2020, 11:42:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T15:42:00.370Z Local: 2/11/2020, 11:42:00 PM command: SELECT, rowCount: 3 
2020-02-11T15:42:00.372Z Local: 2/11/2020, 11:42:00 PM Sending 3 rows to ::1 with  
2020-02-11T15:42:00.404Z Local: 2/11/2020, 11:42:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T15:42:00.407Z Local: 2/11/2020, 11:42:00 PM command: SELECT, rowCount: 3 
2020-02-11T15:42:00.409Z Local: 2/11/2020, 11:42:00 PM Sending 3 rows to ::1 with  
2020-02-11T15:42:00.454Z Local: 2/11/2020, 11:42:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T15:42:00.460Z Local: 2/11/2020, 11:42:00 PM command: SELECT, rowCount: 3 
2020-02-11T15:42:00.464Z Local: 2/11/2020, 11:42:00 PM Sending 3 rows to ::1 with  
2020-02-11T15:42:00.514Z Local: 2/11/2020, 11:42:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T15:42:00.521Z Local: 2/11/2020, 11:42:00 PM command: SELECT, rowCount: 3 
2020-02-11T15:42:00.530Z Local: 2/11/2020, 11:42:00 PM Sending 3 rows to ::1 with  
2020-02-11T15:42:00.859Z Local: 2/11/2020, 11:42:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T15:42:00.861Z Local: 2/11/2020, 11:42:00 PM command: SELECT, rowCount: 3 
2020-02-11T15:42:00.862Z Local: 2/11/2020, 11:42:00 PM Sending 3 rows to ::1 with  
2020-02-11T15:42:00.925Z Local: 2/11/2020, 11:42:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T15:42:00.929Z Local: 2/11/2020, 11:42:00 PM command: SELECT, rowCount: 3 
2020-02-11T15:42:00.931Z Local: 2/11/2020, 11:42:00 PM Sending 3 rows to ::1 with  
2020-02-11T15:42:01.006Z Local: 2/11/2020, 11:42:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T15:42:01.013Z Local: 2/11/2020, 11:42:01 PM command: SELECT, rowCount: 3 
2020-02-11T15:42:01.014Z Local: 2/11/2020, 11:42:01 PM Sending 3 rows to ::1 with  
2020-02-11T15:42:01.299Z Local: 2/11/2020, 11:42:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T15:42:01.302Z Local: 2/11/2020, 11:42:01 PM command: SELECT, rowCount: 1 
2020-02-11T15:42:01.304Z Local: 2/11/2020, 11:42:01 PM Sending 1 rows to ::1 with  
2020-02-11T16:07:49.548Z Local: 2/12/2020, 12:07:49 AM SELECT COUNT(*) FROM posts_table; 
2020-02-11T16:07:49.554Z Local: 2/12/2020, 12:07:49 AM command: SELECT, rowCount: 1 
2020-02-11T16:07:49.555Z Local: 2/12/2020, 12:07:49 AM Sending 1 rows to ::1 with  
2020-02-11T16:07:49.584Z Local: 2/12/2020, 12:07:49 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T16:07:49.587Z Local: 2/12/2020, 12:07:49 AM command: SELECT, rowCount: 3 
2020-02-11T16:07:49.588Z Local: 2/12/2020, 12:07:49 AM Sending 3 rows to ::1 with  
2020-02-11T16:07:49.613Z Local: 2/12/2020, 12:07:49 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T16:07:49.617Z Local: 2/12/2020, 12:07:49 AM command: SELECT, rowCount: 3 
2020-02-11T16:07:49.622Z Local: 2/12/2020, 12:07:49 AM Sending 3 rows to ::1 with  
2020-02-11T16:07:49.666Z Local: 2/12/2020, 12:07:49 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T16:07:49.668Z Local: 2/12/2020, 12:07:49 AM command: SELECT, rowCount: 3 
2020-02-11T16:07:49.670Z Local: 2/12/2020, 12:07:49 AM Sending 3 rows to ::1 with  
2020-02-11T16:07:49.743Z Local: 2/12/2020, 12:07:49 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T16:07:49.748Z Local: 2/12/2020, 12:07:49 AM command: SELECT, rowCount: 3 
2020-02-11T16:07:49.750Z Local: 2/12/2020, 12:07:49 AM Sending 3 rows to ::1 with  
2020-02-11T16:07:50.063Z Local: 2/12/2020, 12:07:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T16:07:50.066Z Local: 2/12/2020, 12:07:50 AM command: SELECT, rowCount: 3 
2020-02-11T16:07:50.068Z Local: 2/12/2020, 12:07:50 AM Sending 3 rows to ::1 with  
2020-02-11T16:07:50.117Z Local: 2/12/2020, 12:07:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T16:07:50.121Z Local: 2/12/2020, 12:07:50 AM command: SELECT, rowCount: 3 
2020-02-11T16:07:50.123Z Local: 2/12/2020, 12:07:50 AM Sending 3 rows to ::1 with  
2020-02-11T16:07:50.194Z Local: 2/12/2020, 12:07:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T16:07:50.197Z Local: 2/12/2020, 12:07:50 AM command: SELECT, rowCount: 3 
2020-02-11T16:07:50.198Z Local: 2/12/2020, 12:07:50 AM Sending 3 rows to ::1 with  
2020-02-11T16:07:50.408Z Local: 2/12/2020, 12:07:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T16:07:50.415Z Local: 2/12/2020, 12:07:50 AM command: SELECT, rowCount: 1 
2020-02-11T16:07:50.417Z Local: 2/12/2020, 12:07:50 AM Sending 1 rows to ::1 with  
2020-02-11T16:20:48.822Z Local: 2/12/2020, 12:20:48 AM SELECT COUNT(*) FROM posts_table; 
2020-02-11T16:20:48.866Z Local: 2/12/2020, 12:20:48 AM command: SELECT, rowCount: 1 
2020-02-11T16:20:48.870Z Local: 2/12/2020, 12:20:48 AM Sending 1 rows to ::1 with  
2020-02-11T16:20:48.906Z Local: 2/12/2020, 12:20:48 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T16:20:48.909Z Local: 2/12/2020, 12:20:48 AM command: SELECT, rowCount: 3 
2020-02-11T16:20:48.912Z Local: 2/12/2020, 12:20:48 AM Sending 3 rows to ::1 with  
2020-02-11T16:20:48.938Z Local: 2/12/2020, 12:20:48 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T16:20:48.942Z Local: 2/12/2020, 12:20:48 AM command: SELECT, rowCount: 3 
2020-02-11T16:20:48.945Z Local: 2/12/2020, 12:20:48 AM Sending 3 rows to ::1 with  
2020-02-11T16:20:48.986Z Local: 2/12/2020, 12:20:48 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T16:20:48.989Z Local: 2/12/2020, 12:20:48 AM command: SELECT, rowCount: 3 
2020-02-11T16:20:48.990Z Local: 2/12/2020, 12:20:48 AM Sending 3 rows to ::1 with  
2020-02-11T16:20:49.036Z Local: 2/12/2020, 12:20:49 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T16:20:49.042Z Local: 2/12/2020, 12:20:49 AM Sending 3 rows to ::1 with  
2020-02-11T16:20:49.040Z Local: 2/12/2020, 12:20:49 AM command: SELECT, rowCount: 3 
2020-02-11T16:20:49.099Z Local: 2/12/2020, 12:20:49 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T16:20:49.104Z Local: 2/12/2020, 12:20:49 AM command: SELECT, rowCount: 3 
2020-02-11T16:20:49.107Z Local: 2/12/2020, 12:20:49 AM Sending 3 rows to ::1 with  
2020-02-11T16:20:49.157Z Local: 2/12/2020, 12:20:49 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T16:20:49.162Z Local: 2/12/2020, 12:20:49 AM command: SELECT, rowCount: 3 
2020-02-11T16:20:49.165Z Local: 2/12/2020, 12:20:49 AM Sending 3 rows to ::1 with  
2020-02-11T16:20:49.223Z Local: 2/12/2020, 12:20:49 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T16:20:49.226Z Local: 2/12/2020, 12:20:49 AM command: SELECT, rowCount: 3 
2020-02-11T16:20:49.228Z Local: 2/12/2020, 12:20:49 AM Sending 3 rows to ::1 with  
2020-02-11T16:20:49.297Z Local: 2/12/2020, 12:20:49 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T16:20:49.301Z Local: 2/12/2020, 12:20:49 AM command: SELECT, rowCount: 1 
2020-02-11T16:20:49.302Z Local: 2/12/2020, 12:20:49 AM Sending 1 rows to ::1 with  
2020-02-11T16:20:50.028Z Local: 2/12/2020, 12:20:50 AM SELECT * FROM posts_table WHERE id = '22'; 
2020-02-11T16:20:50.032Z Local: 2/12/2020, 12:20:50 AM command: SELECT, rowCount: 1 
2020-02-11T16:20:50.035Z Local: 2/12/2020, 12:20:50 AM Sending 1 rows to ::1 with  
2020-02-11T16:33:44.284Z Local: 2/12/2020, 12:33:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:33:44.294Z Local: 2/12/2020, 12:33:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:33:44.296Z Local: 2/12/2020, 12:33:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:33:44.297Z Local: 2/12/2020, 12:33:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:33:44.298Z Local: 2/12/2020, 12:33:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:33:44.298Z Local: 2/12/2020, 12:33:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:33:44.299Z Local: 2/12/2020, 12:33:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:33:44.300Z Local: 2/12/2020, 12:33:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:33:44.301Z Local: 2/12/2020, 12:33:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:33:44.303Z Local: 2/12/2020, 12:33:44 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:33:44.381Z Local: 2/12/2020, 12:33:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:33:44.382Z Local: 2/12/2020, 12:33:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:33:44.383Z Local: 2/12/2020, 12:33:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:33:44.384Z Local: 2/12/2020, 12:33:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:33:44.384Z Local: 2/12/2020, 12:33:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:33:44.385Z Local: 2/12/2020, 12:33:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:33:44.386Z Local: 2/12/2020, 12:33:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:33:44.386Z Local: 2/12/2020, 12:33:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:33:44.387Z Local: 2/12/2020, 12:33:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:33:44.388Z Local: 2/12/2020, 12:33:44 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:33:44.390Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:33:44.391Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:33:44.392Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:33:44.393Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:33:44.393Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:33:44.394Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:33:44.395Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:33:44.396Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:33:44.397Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:33:44.397Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:33:44.398Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:33:44.399Z Local: 2/12/2020, 12:33:44 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:33:44.425Z Local: 2/12/2020, 12:33:44 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T16:33:44.426Z Local: 2/12/2020, 12:33:44 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:33:44.426Z Local: 2/12/2020, 12:33:44 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:33:44.435Z Local: 2/12/2020, 12:33:44 AM Server is listening on port 8000 
2020-02-11T16:33:44.458Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.460Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.461Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.462Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.463Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.464Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.465Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.466Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.467Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.468Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.470Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.471Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.472Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.473Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.474Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.475Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.476Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.477Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.478Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.480Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.481Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.482Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.483Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.484Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.485Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.486Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.487Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.488Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.489Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.490Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.491Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.492Z Local: 2/12/2020, 12:33:44 AM command: CREATE, rowCount: null 
2020-02-11T16:33:44.493Z Local: 2/12/2020, 12:33:44 AM Created posts_table 
2020-02-11T16:33:44.493Z Local: 2/12/2020, 12:33:44 AM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T16:33:44.494Z Local: 2/12/2020, 12:33:44 AM command: DO, rowCount: null 
2020-02-11T16:33:44.495Z Local: 2/12/2020, 12:33:44 AM Created Producer type 
2020-02-11T16:33:44.495Z Local: 2/12/2020, 12:33:44 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:33:44.496Z Local: 2/12/2020, 12:33:44 AM command: DO, rowCount: null 
2020-02-11T16:33:44.497Z Local: 2/12/2020, 12:33:44 AM Created Good type 
2020-02-11T16:33:44.498Z Local: 2/12/2020, 12:33:44 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:33:44.499Z Local: 2/12/2020, 12:33:44 AM command: INSERT, rowCount: 1 
2020-02-11T16:33:44.500Z Local: 2/12/2020, 12:33:44 AM command: DO, rowCount: null 
2020-02-11T16:33:44.501Z Local: 2/12/2020, 12:33:44 AM Created Spec type 
2020-02-11T16:33:44.502Z Local: 2/12/2020, 12:33:44 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-11T16:33:44.503Z Local: 2/12/2020, 12:33:44 AM command: DO, rowCount: null 
2020-02-11T16:33:44.504Z Local: 2/12/2020, 12:33:44 AM Created Section type 
2020-02-11T16:33:44.505Z Local: 2/12/2020, 12:33:44 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T16:33:44.507Z Local: 2/12/2020, 12:33:44 AM command: CREATE, rowCount: null 
2020-02-11T16:33:44.507Z Local: 2/12/2020, 12:33:44 AM Created items_table 
2020-02-11T16:33:44.508Z Local: 2/12/2020, 12:33:44 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T16:33:44.509Z Local: 2/12/2020, 12:33:44 AM command: CREATE, rowCount: null 
2020-02-11T16:33:44.510Z Local: 2/12/2020, 12:33:44 AM Created farmers_table 
2020-02-11T16:33:44.510Z Local: 2/12/2020, 12:33:44 AM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T16:33:49.341Z Local: 2/12/2020, 12:33:49 AM SELECT * FROM posts_table WHERE id = '22'; 
2020-02-11T16:33:49.346Z Local: 2/12/2020, 12:33:49 AM command: SELECT, rowCount: 1 
2020-02-11T16:33:49.378Z Local: 2/12/2020, 12:33:49 AM Sending 1 rows to ::1 with  
2020-02-11T16:34:52.194Z Local: 2/12/2020, 12:34:52 AM SELECT * FROM posts_table WHERE id = '22'; 
2020-02-11T16:34:52.203Z Local: 2/12/2020, 12:34:52 AM command: SELECT, rowCount: 1 
2020-02-11T16:34:52.205Z Local: 2/12/2020, 12:34:52 AM Sending 1 rows to ::1 with  
2020-02-11T16:41:32.327Z Local: 2/12/2020, 12:41:32 AM SELECT * FROM posts_table WHERE id = '22'; 
2020-02-11T16:41:32.334Z Local: 2/12/2020, 12:41:32 AM command: SELECT, rowCount: 1 
2020-02-11T16:41:32.335Z Local: 2/12/2020, 12:41:32 AM Sending 1 rows to ::1 with  
2020-02-11T16:41:43.649Z Local: 2/12/2020, 12:41:43 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:41:43.659Z Local: 2/12/2020, 12:41:43 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:41:43.661Z Local: 2/12/2020, 12:41:43 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:41:43.662Z Local: 2/12/2020, 12:41:43 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:41:43.662Z Local: 2/12/2020, 12:41:43 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:41:43.663Z Local: 2/12/2020, 12:41:43 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:41:43.664Z Local: 2/12/2020, 12:41:43 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:41:43.665Z Local: 2/12/2020, 12:41:43 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:41:43.666Z Local: 2/12/2020, 12:41:43 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:41:43.667Z Local: 2/12/2020, 12:41:43 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:41:43.747Z Local: 2/12/2020, 12:41:43 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:41:43.748Z Local: 2/12/2020, 12:41:43 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:41:43.748Z Local: 2/12/2020, 12:41:43 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:41:43.749Z Local: 2/12/2020, 12:41:43 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:41:43.750Z Local: 2/12/2020, 12:41:43 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:41:43.751Z Local: 2/12/2020, 12:41:43 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:41:43.751Z Local: 2/12/2020, 12:41:43 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:41:43.752Z Local: 2/12/2020, 12:41:43 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:41:43.753Z Local: 2/12/2020, 12:41:43 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:41:43.753Z Local: 2/12/2020, 12:41:43 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:41:43.756Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:41:43.757Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:41:43.757Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:41:43.758Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:41:43.759Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:41:43.760Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:41:43.761Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:41:43.762Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:41:43.762Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:41:43.763Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:41:43.764Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:41:43.765Z Local: 2/12/2020, 12:41:43 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:41:43.786Z Local: 2/12/2020, 12:41:43 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T16:41:43.787Z Local: 2/12/2020, 12:41:43 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:41:43.788Z Local: 2/12/2020, 12:41:43 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:41:43.797Z Local: 2/12/2020, 12:41:43 AM Server is listening on port 8000 
2020-02-11T16:41:43.824Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.827Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.828Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.830Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.832Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.833Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.834Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.836Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.837Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.839Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.840Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.841Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.843Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.844Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.845Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.846Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.847Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.848Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.849Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.850Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.851Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.853Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.854Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.855Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.856Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.857Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.858Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.859Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.860Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.861Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.861Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.862Z Local: 2/12/2020, 12:41:43 AM command: CREATE, rowCount: null 
2020-02-11T16:41:43.863Z Local: 2/12/2020, 12:41:43 AM Created posts_table 
2020-02-11T16:41:43.864Z Local: 2/12/2020, 12:41:43 AM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T16:41:43.865Z Local: 2/12/2020, 12:41:43 AM command: DO, rowCount: null 
2020-02-11T16:41:43.865Z Local: 2/12/2020, 12:41:43 AM Created Producer type 
2020-02-11T16:41:43.866Z Local: 2/12/2020, 12:41:43 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:41:43.867Z Local: 2/12/2020, 12:41:43 AM command: DO, rowCount: null 
2020-02-11T16:41:43.868Z Local: 2/12/2020, 12:41:43 AM Created Good type 
2020-02-11T16:41:43.869Z Local: 2/12/2020, 12:41:43 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:41:43.870Z Local: 2/12/2020, 12:41:43 AM command: INSERT, rowCount: 1 
2020-02-11T16:41:43.871Z Local: 2/12/2020, 12:41:43 AM command: DO, rowCount: null 
2020-02-11T16:41:43.872Z Local: 2/12/2020, 12:41:43 AM Created Spec type 
2020-02-11T16:41:43.873Z Local: 2/12/2020, 12:41:43 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-11T16:41:43.874Z Local: 2/12/2020, 12:41:43 AM command: DO, rowCount: null 
2020-02-11T16:41:43.875Z Local: 2/12/2020, 12:41:43 AM Created Section type 
2020-02-11T16:41:43.876Z Local: 2/12/2020, 12:41:43 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T16:41:43.877Z Local: 2/12/2020, 12:41:43 AM command: CREATE, rowCount: null 
2020-02-11T16:41:43.878Z Local: 2/12/2020, 12:41:43 AM Created items_table 
2020-02-11T16:41:43.878Z Local: 2/12/2020, 12:41:43 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T16:41:43.879Z Local: 2/12/2020, 12:41:43 AM command: CREATE, rowCount: null 
2020-02-11T16:41:43.880Z Local: 2/12/2020, 12:41:43 AM Created farmers_table 
2020-02-11T16:41:43.881Z Local: 2/12/2020, 12:41:43 AM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T16:41:51.363Z Local: 2/12/2020, 12:41:51 AM SELECT COUNT(*) FROM posts_table; 
2020-02-11T16:41:51.366Z Local: 2/12/2020, 12:41:51 AM command: SELECT, rowCount: 1 
2020-02-11T16:41:51.367Z Local: 2/12/2020, 12:41:51 AM Sending 1 rows to ::1 with  
2020-02-11T16:41:51.441Z Local: 2/12/2020, 12:41:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T16:41:51.443Z Local: 2/12/2020, 12:41:51 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:51.449Z Local: 2/12/2020, 12:41:51 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:51.490Z Local: 2/12/2020, 12:41:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T16:41:51.493Z Local: 2/12/2020, 12:41:51 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:51.494Z Local: 2/12/2020, 12:41:51 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:51.533Z Local: 2/12/2020, 12:41:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T16:41:51.540Z Local: 2/12/2020, 12:41:51 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:51.542Z Local: 2/12/2020, 12:41:51 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:51.585Z Local: 2/12/2020, 12:41:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T16:41:51.588Z Local: 2/12/2020, 12:41:51 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:51.590Z Local: 2/12/2020, 12:41:51 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:51.647Z Local: 2/12/2020, 12:41:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T16:41:51.651Z Local: 2/12/2020, 12:41:51 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:51.659Z Local: 2/12/2020, 12:41:51 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:51.731Z Local: 2/12/2020, 12:41:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T16:41:51.736Z Local: 2/12/2020, 12:41:51 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:51.738Z Local: 2/12/2020, 12:41:51 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:51.810Z Local: 2/12/2020, 12:41:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T16:41:51.815Z Local: 2/12/2020, 12:41:51 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:51.818Z Local: 2/12/2020, 12:41:51 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:51.905Z Local: 2/12/2020, 12:41:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T16:41:51.909Z Local: 2/12/2020, 12:41:51 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:51.911Z Local: 2/12/2020, 12:41:51 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:52.028Z Local: 2/12/2020, 12:41:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-11T16:41:52.032Z Local: 2/12/2020, 12:41:52 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:52.034Z Local: 2/12/2020, 12:41:52 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:52.119Z Local: 2/12/2020, 12:41:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-11T16:41:52.123Z Local: 2/12/2020, 12:41:52 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:52.125Z Local: 2/12/2020, 12:41:52 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:52.225Z Local: 2/12/2020, 12:41:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-11T16:41:52.229Z Local: 2/12/2020, 12:41:52 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:52.230Z Local: 2/12/2020, 12:41:52 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:52.322Z Local: 2/12/2020, 12:41:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-11T16:41:52.325Z Local: 2/12/2020, 12:41:52 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:52.327Z Local: 2/12/2020, 12:41:52 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:52.419Z Local: 2/12/2020, 12:41:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-11T16:41:52.421Z Local: 2/12/2020, 12:41:52 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:52.423Z Local: 2/12/2020, 12:41:52 AM Sending 3 rows to ::1 with  
2020-02-11T16:41:52.534Z Local: 2/12/2020, 12:41:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-11T16:41:52.537Z Local: 2/12/2020, 12:41:52 AM command: SELECT, rowCount: 3 
2020-02-11T16:41:52.538Z Local: 2/12/2020, 12:41:52 AM Sending 3 rows to ::1 with  
2020-02-11T16:43:17.662Z Local: 2/12/2020, 12:43:17 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:43:17.671Z Local: 2/12/2020, 12:43:17 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:43:17.673Z Local: 2/12/2020, 12:43:17 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:43:17.674Z Local: 2/12/2020, 12:43:17 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:43:17.675Z Local: 2/12/2020, 12:43:17 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:43:17.675Z Local: 2/12/2020, 12:43:17 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:43:17.676Z Local: 2/12/2020, 12:43:17 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:43:17.677Z Local: 2/12/2020, 12:43:17 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:43:17.678Z Local: 2/12/2020, 12:43:17 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:43:17.680Z Local: 2/12/2020, 12:43:17 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T16:43:17.764Z Local: 2/12/2020, 12:43:17 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:43:17.765Z Local: 2/12/2020, 12:43:17 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:43:17.766Z Local: 2/12/2020, 12:43:17 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:43:17.766Z Local: 2/12/2020, 12:43:17 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:43:17.767Z Local: 2/12/2020, 12:43:17 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:43:17.768Z Local: 2/12/2020, 12:43:17 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:43:17.769Z Local: 2/12/2020, 12:43:17 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:43:17.769Z Local: 2/12/2020, 12:43:17 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:43:17.770Z Local: 2/12/2020, 12:43:17 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:43:17.771Z Local: 2/12/2020, 12:43:17 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T16:43:17.773Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:43:17.774Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:43:17.775Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:43:17.775Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:43:17.776Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:43:17.777Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:43:17.778Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:43:17.779Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:43:17.780Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:43:17.780Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T16:43:17.781Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:43:17.782Z Local: 2/12/2020, 12:43:17 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T16:43:17.807Z Local: 2/12/2020, 12:43:17 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T16:43:17.808Z Local: 2/12/2020, 12:43:17 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:43:17.809Z Local: 2/12/2020, 12:43:17 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:43:17.818Z Local: 2/12/2020, 12:43:17 AM Server is listening on port 8000 
2020-02-11T16:43:17.844Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.847Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.849Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.851Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.852Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.854Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.856Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.857Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.858Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.860Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.861Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.863Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.864Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.865Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.866Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.867Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.869Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.870Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.871Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.872Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.874Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.875Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.876Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.877Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.878Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.879Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.880Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.881Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.882Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.883Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.884Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.885Z Local: 2/12/2020, 12:43:17 AM command: CREATE, rowCount: null 
2020-02-11T16:43:17.886Z Local: 2/12/2020, 12:43:17 AM Created posts_table 
2020-02-11T16:43:17.887Z Local: 2/12/2020, 12:43:17 AM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T16:43:17.888Z Local: 2/12/2020, 12:43:17 AM command: DO, rowCount: null 
2020-02-11T16:43:17.888Z Local: 2/12/2020, 12:43:17 AM Created Producer type 
2020-02-11T16:43:17.889Z Local: 2/12/2020, 12:43:17 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:43:17.890Z Local: 2/12/2020, 12:43:17 AM command: DO, rowCount: null 
2020-02-11T16:43:17.891Z Local: 2/12/2020, 12:43:17 AM Created Good type 
2020-02-11T16:43:17.892Z Local: 2/12/2020, 12:43:17 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T16:43:17.893Z Local: 2/12/2020, 12:43:17 AM command: INSERT, rowCount: 1 
2020-02-11T16:43:17.894Z Local: 2/12/2020, 12:43:17 AM command: DO, rowCount: null 
2020-02-11T16:43:17.895Z Local: 2/12/2020, 12:43:17 AM Created Spec type 
2020-02-11T16:43:17.895Z Local: 2/12/2020, 12:43:17 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-11T16:43:17.896Z Local: 2/12/2020, 12:43:17 AM command: DO, rowCount: null 
2020-02-11T16:43:17.897Z Local: 2/12/2020, 12:43:17 AM Created Section type 
2020-02-11T16:43:17.898Z Local: 2/12/2020, 12:43:17 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T16:43:17.899Z Local: 2/12/2020, 12:43:17 AM command: CREATE, rowCount: null 
2020-02-11T16:43:17.900Z Local: 2/12/2020, 12:43:17 AM Created items_table 
2020-02-11T16:43:17.901Z Local: 2/12/2020, 12:43:17 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T16:43:17.902Z Local: 2/12/2020, 12:43:17 AM command: CREATE, rowCount: null 
2020-02-11T16:43:17.903Z Local: 2/12/2020, 12:43:17 AM Created farmers_table 
2020-02-11T16:43:17.903Z Local: 2/12/2020, 12:43:17 AM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T16:44:07.359Z Local: 2/12/2020, 12:44:07 AM SELECT COUNT(*) FROM posts_table; 
2020-02-11T16:44:07.397Z Local: 2/12/2020, 12:44:07 AM command: SELECT, rowCount: 1 
2020-02-11T16:44:07.405Z Local: 2/12/2020, 12:44:07 AM Sending 1 rows to ::1 with  
2020-02-11T16:44:07.635Z Local: 2/12/2020, 12:44:07 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T16:44:07.642Z Local: 2/12/2020, 12:44:07 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:07.644Z Local: 2/12/2020, 12:44:07 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:07.708Z Local: 2/12/2020, 12:44:07 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T16:44:07.714Z Local: 2/12/2020, 12:44:07 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:07.716Z Local: 2/12/2020, 12:44:07 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:07.785Z Local: 2/12/2020, 12:44:07 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T16:44:07.789Z Local: 2/12/2020, 12:44:07 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:07.791Z Local: 2/12/2020, 12:44:07 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:07.858Z Local: 2/12/2020, 12:44:07 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T16:44:07.868Z Local: 2/12/2020, 12:44:07 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:07.869Z Local: 2/12/2020, 12:44:07 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:07.927Z Local: 2/12/2020, 12:44:07 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T16:44:07.931Z Local: 2/12/2020, 12:44:07 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:07.933Z Local: 2/12/2020, 12:44:07 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:08.000Z Local: 2/12/2020, 12:44:08 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T16:44:08.003Z Local: 2/12/2020, 12:44:08 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:08.004Z Local: 2/12/2020, 12:44:08 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:08.100Z Local: 2/12/2020, 12:44:08 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T16:44:08.105Z Local: 2/12/2020, 12:44:08 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:08.107Z Local: 2/12/2020, 12:44:08 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:08.167Z Local: 2/12/2020, 12:44:08 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T16:44:08.172Z Local: 2/12/2020, 12:44:08 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:08.174Z Local: 2/12/2020, 12:44:08 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:08.257Z Local: 2/12/2020, 12:44:08 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-11T16:44:08.259Z Local: 2/12/2020, 12:44:08 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:08.261Z Local: 2/12/2020, 12:44:08 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:08.370Z Local: 2/12/2020, 12:44:08 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-11T16:44:08.373Z Local: 2/12/2020, 12:44:08 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:08.374Z Local: 2/12/2020, 12:44:08 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:08.479Z Local: 2/12/2020, 12:44:08 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-11T16:44:08.482Z Local: 2/12/2020, 12:44:08 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:08.484Z Local: 2/12/2020, 12:44:08 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:08.619Z Local: 2/12/2020, 12:44:08 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-11T16:44:08.621Z Local: 2/12/2020, 12:44:08 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:08.623Z Local: 2/12/2020, 12:44:08 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:08.723Z Local: 2/12/2020, 12:44:08 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-11T16:44:08.726Z Local: 2/12/2020, 12:44:08 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:08.729Z Local: 2/12/2020, 12:44:08 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:08.907Z Local: 2/12/2020, 12:44:08 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-11T16:44:08.911Z Local: 2/12/2020, 12:44:08 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:08.913Z Local: 2/12/2020, 12:44:08 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:09.016Z Local: 2/12/2020, 12:44:09 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-11T16:44:09.019Z Local: 2/12/2020, 12:44:09 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:09.021Z Local: 2/12/2020, 12:44:09 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:09.216Z Local: 2/12/2020, 12:44:09 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-11T16:44:09.220Z Local: 2/12/2020, 12:44:09 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:09.221Z Local: 2/12/2020, 12:44:09 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:09.348Z Local: 2/12/2020, 12:44:09 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-11T16:44:09.351Z Local: 2/12/2020, 12:44:09 AM command: SELECT, rowCount: 3 
2020-02-11T16:44:09.353Z Local: 2/12/2020, 12:44:09 AM Sending 3 rows to ::1 with  
2020-02-11T16:44:09.483Z Local: 2/12/2020, 12:44:09 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-11T16:44:09.486Z Local: 2/12/2020, 12:44:09 AM command: SELECT, rowCount: 1 
2020-02-11T16:44:09.488Z Local: 2/12/2020, 12:44:09 AM Sending 1 rows to ::1 with  
2020-02-11T16:49:03.932Z Local: 2/12/2020, 12:49:03 AM SELECT COUNT(*) FROM posts_table; 
2020-02-11T16:49:03.939Z Local: 2/12/2020, 12:49:03 AM command: SELECT, rowCount: 1 
2020-02-11T16:49:03.941Z Local: 2/12/2020, 12:49:03 AM Sending 1 rows to ::1 with  
2020-02-11T16:49:04.186Z Local: 2/12/2020, 12:49:04 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T16:49:04.190Z Local: 2/12/2020, 12:49:04 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:04.191Z Local: 2/12/2020, 12:49:04 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:04.251Z Local: 2/12/2020, 12:49:04 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T16:49:04.255Z Local: 2/12/2020, 12:49:04 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:04.256Z Local: 2/12/2020, 12:49:04 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:04.307Z Local: 2/12/2020, 12:49:04 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T16:49:04.310Z Local: 2/12/2020, 12:49:04 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:04.311Z Local: 2/12/2020, 12:49:04 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:04.388Z Local: 2/12/2020, 12:49:04 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T16:49:04.391Z Local: 2/12/2020, 12:49:04 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:04.396Z Local: 2/12/2020, 12:49:04 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:04.727Z Local: 2/12/2020, 12:49:04 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T16:49:04.729Z Local: 2/12/2020, 12:49:04 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:04.732Z Local: 2/12/2020, 12:49:04 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:04.806Z Local: 2/12/2020, 12:49:04 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T16:49:04.809Z Local: 2/12/2020, 12:49:04 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:04.810Z Local: 2/12/2020, 12:49:04 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:04.893Z Local: 2/12/2020, 12:49:04 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T16:49:04.897Z Local: 2/12/2020, 12:49:04 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:04.900Z Local: 2/12/2020, 12:49:04 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:05.239Z Local: 2/12/2020, 12:49:05 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T16:49:05.242Z Local: 2/12/2020, 12:49:05 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:05.245Z Local: 2/12/2020, 12:49:05 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:05.330Z Local: 2/12/2020, 12:49:05 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-11T16:49:05.335Z Local: 2/12/2020, 12:49:05 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:05.338Z Local: 2/12/2020, 12:49:05 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:05.435Z Local: 2/12/2020, 12:49:05 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-11T16:49:05.439Z Local: 2/12/2020, 12:49:05 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:05.442Z Local: 2/12/2020, 12:49:05 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:05.528Z Local: 2/12/2020, 12:49:05 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-11T16:49:05.531Z Local: 2/12/2020, 12:49:05 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:05.533Z Local: 2/12/2020, 12:49:05 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:05.630Z Local: 2/12/2020, 12:49:05 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-11T16:49:05.633Z Local: 2/12/2020, 12:49:05 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:05.635Z Local: 2/12/2020, 12:49:05 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:05.727Z Local: 2/12/2020, 12:49:05 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-11T16:49:05.729Z Local: 2/12/2020, 12:49:05 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:05.738Z Local: 2/12/2020, 12:49:05 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:05.824Z Local: 2/12/2020, 12:49:05 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-11T16:49:05.828Z Local: 2/12/2020, 12:49:05 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:05.829Z Local: 2/12/2020, 12:49:05 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:05.910Z Local: 2/12/2020, 12:49:05 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-11T16:49:05.913Z Local: 2/12/2020, 12:49:05 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:05.914Z Local: 2/12/2020, 12:49:05 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:05.999Z Local: 2/12/2020, 12:49:05 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-11T16:49:06.001Z Local: 2/12/2020, 12:49:06 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:06.002Z Local: 2/12/2020, 12:49:06 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:06.088Z Local: 2/12/2020, 12:49:06 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-11T16:49:06.091Z Local: 2/12/2020, 12:49:06 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:06.093Z Local: 2/12/2020, 12:49:06 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:06.241Z Local: 2/12/2020, 12:49:06 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-11T16:49:06.243Z Local: 2/12/2020, 12:49:06 AM command: SELECT, rowCount: 1 
2020-02-11T16:49:06.246Z Local: 2/12/2020, 12:49:06 AM Sending 1 rows to ::1 with  
2020-02-11T16:49:22.749Z Local: 2/12/2020, 12:49:22 AM SELECT COUNT(*) FROM posts_table; 
2020-02-11T16:49:22.756Z Local: 2/12/2020, 12:49:22 AM command: SELECT, rowCount: 1 
2020-02-11T16:49:22.757Z Local: 2/12/2020, 12:49:22 AM Sending 1 rows to ::1 with  
2020-02-11T16:49:22.831Z Local: 2/12/2020, 12:49:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T16:49:22.833Z Local: 2/12/2020, 12:49:22 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:22.835Z Local: 2/12/2020, 12:49:22 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:22.877Z Local: 2/12/2020, 12:49:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T16:49:22.879Z Local: 2/12/2020, 12:49:22 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:22.880Z Local: 2/12/2020, 12:49:22 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:22.918Z Local: 2/12/2020, 12:49:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T16:49:22.920Z Local: 2/12/2020, 12:49:22 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:22.921Z Local: 2/12/2020, 12:49:22 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:22.950Z Local: 2/12/2020, 12:49:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T16:49:22.953Z Local: 2/12/2020, 12:49:22 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:22.954Z Local: 2/12/2020, 12:49:22 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.156Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T16:49:23.159Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.160Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.181Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T16:49:23.182Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.183Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.210Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T16:49:23.212Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.213Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.243Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T16:49:23.244Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.245Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.285Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-11T16:49:23.287Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.289Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.321Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-11T16:49:23.323Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.325Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.367Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-11T16:49:23.369Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.370Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.416Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-11T16:49:23.419Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.421Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.466Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-11T16:49:23.470Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.471Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.513Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-11T16:49:23.515Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.516Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.555Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-11T16:49:23.557Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.558Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.602Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-11T16:49:23.603Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.604Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.850Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-11T16:49:23.853Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:23.855Z Local: 2/12/2020, 12:49:23 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:23.899Z Local: 2/12/2020, 12:49:23 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-11T16:49:23.901Z Local: 2/12/2020, 12:49:23 AM command: SELECT, rowCount: 1 
2020-02-11T16:49:23.903Z Local: 2/12/2020, 12:49:23 AM Sending 1 rows to ::1 with  
2020-02-11T16:49:53.995Z Local: 2/12/2020, 12:49:53 AM SELECT COUNT(*) FROM posts_table; 
2020-02-11T16:49:54.003Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 1 
2020-02-11T16:49:54.005Z Local: 2/12/2020, 12:49:54 AM Sending 1 rows to ::1 with  
2020-02-11T16:49:54.091Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T16:49:54.094Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.095Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.187Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T16:49:54.198Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.200Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.226Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T16:49:54.229Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.231Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.440Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T16:49:54.443Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.444Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.464Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T16:49:54.466Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.467Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.494Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T16:49:54.496Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.497Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.533Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T16:49:54.535Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.539Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.577Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T16:49:54.579Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.580Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.620Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-11T16:49:54.623Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.625Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.670Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-11T16:49:54.679Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.681Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.716Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-11T16:49:54.718Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.719Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.759Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-11T16:49:54.762Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.763Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.803Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-11T16:49:54.805Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.806Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.851Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-11T16:49:54.853Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.854Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.899Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-11T16:49:54.902Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.904Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:54.955Z Local: 2/12/2020, 12:49:54 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-11T16:49:54.957Z Local: 2/12/2020, 12:49:54 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:54.958Z Local: 2/12/2020, 12:49:54 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:55.245Z Local: 2/12/2020, 12:49:55 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-11T16:49:55.248Z Local: 2/12/2020, 12:49:55 AM command: SELECT, rowCount: 3 
2020-02-11T16:49:55.249Z Local: 2/12/2020, 12:49:55 AM Sending 3 rows to ::1 with  
2020-02-11T16:49:55.284Z Local: 2/12/2020, 12:49:55 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-11T16:49:55.286Z Local: 2/12/2020, 12:49:55 AM command: SELECT, rowCount: 1 
2020-02-11T16:49:55.289Z Local: 2/12/2020, 12:49:55 AM Sending 1 rows to ::1 with  
2020-02-11T18:57:51.080Z Local: 2/12/2020, 2:57:51 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:57:51.103Z Local: 2/12/2020, 2:57:51 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:57:51.108Z Local: 2/12/2020, 2:57:51 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:57:51.109Z Local: 2/12/2020, 2:57:51 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:57:51.105Z Local: 2/12/2020, 2:57:51 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:57:51.110Z Local: 2/12/2020, 2:57:51 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:57:51.111Z Local: 2/12/2020, 2:57:51 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:57:51.112Z Local: 2/12/2020, 2:57:51 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:57:51.113Z Local: 2/12/2020, 2:57:51 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:57:51.197Z Local: 2/12/2020, 2:57:51 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:57:51.196Z Local: 2/12/2020, 2:57:51 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:57:51.198Z Local: 2/12/2020, 2:57:51 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:57:51.199Z Local: 2/12/2020, 2:57:51 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:57:51.200Z Local: 2/12/2020, 2:57:51 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:57:51.200Z Local: 2/12/2020, 2:57:51 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:57:51.201Z Local: 2/12/2020, 2:57:51 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:57:51.202Z Local: 2/12/2020, 2:57:51 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:57:51.202Z Local: 2/12/2020, 2:57:51 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:57:51.203Z Local: 2/12/2020, 2:57:51 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:57:51.206Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T18:57:51.207Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:57:51.207Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:57:51.208Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T18:57:51.209Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:57:51.210Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:57:51.211Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T18:57:51.211Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:57:51.212Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:57:51.213Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T18:57:51.214Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:57:51.214Z Local: 2/12/2020, 2:57:51 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:57:51.236Z Local: 2/12/2020, 2:57:51 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T18:57:51.237Z Local: 2/12/2020, 2:57:51 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T18:57:51.238Z Local: 2/12/2020, 2:57:51 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T18:57:51.247Z Local: 2/12/2020, 2:57:51 AM Server is listening on port 8000 
2020-02-11T18:57:51.106Z Local: 2/12/2020, 2:57:51 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:57:51.251Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.252Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.254Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.253Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.254Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.256Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.257Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.258Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.260Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.261Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.264Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.265Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.266Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.266Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.268Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.269Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.270Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.271Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.272Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.273Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.274Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.275Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.276Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.277Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.278Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.279Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.280Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.280Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.281Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.282Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.283Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.284Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.285Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.286Z Local: 2/12/2020, 2:57:51 AM Created posts_table 
2020-02-11T18:57:51.287Z Local: 2/12/2020, 2:57:51 AM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T18:57:51.288Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.290Z Local: 2/12/2020, 2:57:51 AM Created Producer type 
2020-02-11T18:57:51.291Z Local: 2/12/2020, 2:57:51 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T18:57:51.292Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.293Z Local: 2/12/2020, 2:57:51 AM Created Good type 
2020-02-11T18:57:51.293Z Local: 2/12/2020, 2:57:51 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T18:57:51.295Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.296Z Local: 2/12/2020, 2:57:51 AM Created Spec type 
2020-02-11T18:57:51.297Z Local: 2/12/2020, 2:57:51 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-11T18:57:51.298Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.298Z Local: 2/12/2020, 2:57:51 AM Created Section type 
2020-02-11T18:57:51.299Z Local: 2/12/2020, 2:57:51 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T18:57:51.302Z Local: 2/12/2020, 2:57:51 AM Created items_table 
2020-02-11T18:57:51.303Z Local: 2/12/2020, 2:57:51 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T18:57:51.301Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.304Z Local: 2/12/2020, 2:57:51 AM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-11T18:57:51.305Z Local: 2/12/2020, 2:57:51 AM Created farmers_table 
2020-02-11T18:57:51.305Z Local: 2/12/2020, 2:57:51 AM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T18:58:39.536Z Local: 2/12/2020, 2:58:39 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:58:39.545Z Local: 2/12/2020, 2:58:39 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:58:39.547Z Local: 2/12/2020, 2:58:39 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:58:39.548Z Local: 2/12/2020, 2:58:39 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:58:39.548Z Local: 2/12/2020, 2:58:39 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:58:39.549Z Local: 2/12/2020, 2:58:39 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:58:39.550Z Local: 2/12/2020, 2:58:39 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:58:39.551Z Local: 2/12/2020, 2:58:39 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:58:39.552Z Local: 2/12/2020, 2:58:39 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:58:39.553Z Local: 2/12/2020, 2:58:39 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-11T18:58:39.634Z Local: 2/12/2020, 2:58:39 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:58:39.635Z Local: 2/12/2020, 2:58:39 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:58:39.636Z Local: 2/12/2020, 2:58:39 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:58:39.637Z Local: 2/12/2020, 2:58:39 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:58:39.637Z Local: 2/12/2020, 2:58:39 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:58:39.638Z Local: 2/12/2020, 2:58:39 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:58:39.639Z Local: 2/12/2020, 2:58:39 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:58:39.639Z Local: 2/12/2020, 2:58:39 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:58:39.640Z Local: 2/12/2020, 2:58:39 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:58:39.641Z Local: 2/12/2020, 2:58:39 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-11T18:58:39.643Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T18:58:39.644Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:58:39.645Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:58:39.646Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T18:58:39.647Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:58:39.648Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:58:39.649Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T18:58:39.651Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:58:39.652Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:58:39.653Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-11T18:58:39.655Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:58:39.656Z Local: 2/12/2020, 2:58:39 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-11T18:58:39.681Z Local: 2/12/2020, 2:58:39 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T18:58:39.682Z Local: 2/12/2020, 2:58:39 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T18:58:39.683Z Local: 2/12/2020, 2:58:39 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T18:58:39.692Z Local: 2/12/2020, 2:58:39 AM Server is listening on port 8000 
2020-02-11T18:58:39.726Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.728Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.729Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.730Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.731Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.732Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.733Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.735Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.736Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.738Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.739Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.740Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.741Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.743Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.744Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.745Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.746Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.748Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.749Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.750Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.751Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.752Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.753Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.755Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.756Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.757Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.758Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.759Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.760Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.761Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.762Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.763Z Local: 2/12/2020, 2:58:39 AM command: CREATE, rowCount: null 
2020-02-11T18:58:39.764Z Local: 2/12/2020, 2:58:39 AM Created posts_table 
2020-02-11T18:58:39.764Z Local: 2/12/2020, 2:58:39 AM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T18:58:39.765Z Local: 2/12/2020, 2:58:39 AM command: DO, rowCount: null 
2020-02-11T18:58:39.766Z Local: 2/12/2020, 2:58:39 AM Created Producer type 
2020-02-11T18:58:39.767Z Local: 2/12/2020, 2:58:39 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T18:58:39.768Z Local: 2/12/2020, 2:58:39 AM command: DO, rowCount: null 
2020-02-11T18:58:39.768Z Local: 2/12/2020, 2:58:39 AM Created Good type 
2020-02-11T18:58:39.769Z Local: 2/12/2020, 2:58:39 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-11T18:58:39.771Z Local: 2/12/2020, 2:58:39 AM command: INSERT, rowCount: 1 
2020-02-11T18:58:39.772Z Local: 2/12/2020, 2:58:39 AM Created Spec type 
2020-02-11T18:58:39.773Z Local: 2/12/2020, 2:58:39 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-11T18:58:39.771Z Local: 2/12/2020, 2:58:39 AM command: DO, rowCount: null 
2020-02-11T18:58:39.774Z Local: 2/12/2020, 2:58:39 AM command: DO, rowCount: null 
2020-02-11T18:58:39.775Z Local: 2/12/2020, 2:58:39 AM Created Section type 
2020-02-11T18:58:39.775Z Local: 2/12/2020, 2:58:39 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-11T18:58:39.777Z Local: 2/12/2020, 2:58:39 AM command: CREATE, rowCount: null 
2020-02-11T18:58:39.778Z Local: 2/12/2020, 2:58:39 AM Created items_table 
2020-02-11T18:58:39.778Z Local: 2/12/2020, 2:58:39 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T18:58:39.779Z Local: 2/12/2020, 2:58:39 AM command: CREATE, rowCount: null 
2020-02-11T18:58:39.780Z Local: 2/12/2020, 2:58:39 AM Created farmers_table 
2020-02-11T18:58:39.781Z Local: 2/12/2020, 2:58:39 AM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-11T18:59:18.716Z Local: 2/12/2020, 2:59:18 AM SELECT COUNT(*) FROM posts_table; 
2020-02-11T18:59:18.734Z Local: 2/12/2020, 2:59:18 AM command: SELECT, rowCount: 1 
2020-02-11T18:59:18.740Z Local: 2/12/2020, 2:59:18 AM Sending 1 rows to ::1 with  
2020-02-11T18:59:18.795Z Local: 2/12/2020, 2:59:18 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-11T18:59:18.801Z Local: 2/12/2020, 2:59:18 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:18.803Z Local: 2/12/2020, 2:59:18 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:18.826Z Local: 2/12/2020, 2:59:18 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-11T18:59:18.829Z Local: 2/12/2020, 2:59:18 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:18.832Z Local: 2/12/2020, 2:59:18 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:18.872Z Local: 2/12/2020, 2:59:18 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-11T18:59:18.878Z Local: 2/12/2020, 2:59:18 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:18.880Z Local: 2/12/2020, 2:59:18 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:18.963Z Local: 2/12/2020, 2:59:18 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-11T18:59:18.967Z Local: 2/12/2020, 2:59:18 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:18.968Z Local: 2/12/2020, 2:59:18 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:19.282Z Local: 2/12/2020, 2:59:19 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-11T18:59:19.285Z Local: 2/12/2020, 2:59:19 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:19.287Z Local: 2/12/2020, 2:59:19 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:19.335Z Local: 2/12/2020, 2:59:19 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-11T18:59:19.337Z Local: 2/12/2020, 2:59:19 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:19.339Z Local: 2/12/2020, 2:59:19 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:19.400Z Local: 2/12/2020, 2:59:19 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-11T18:59:19.403Z Local: 2/12/2020, 2:59:19 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:19.404Z Local: 2/12/2020, 2:59:19 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:19.722Z Local: 2/12/2020, 2:59:19 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-11T18:59:19.724Z Local: 2/12/2020, 2:59:19 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:19.725Z Local: 2/12/2020, 2:59:19 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:19.756Z Local: 2/12/2020, 2:59:19 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-11T18:59:19.757Z Local: 2/12/2020, 2:59:19 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:19.759Z Local: 2/12/2020, 2:59:19 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:19.819Z Local: 2/12/2020, 2:59:19 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-11T18:59:19.823Z Local: 2/12/2020, 2:59:19 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:19.825Z Local: 2/12/2020, 2:59:19 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:19.896Z Local: 2/12/2020, 2:59:19 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-11T18:59:19.898Z Local: 2/12/2020, 2:59:19 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:19.901Z Local: 2/12/2020, 2:59:19 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:19.982Z Local: 2/12/2020, 2:59:19 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-11T18:59:19.994Z Local: 2/12/2020, 2:59:19 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:19.995Z Local: 2/12/2020, 2:59:19 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:20.073Z Local: 2/12/2020, 2:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-11T18:59:20.075Z Local: 2/12/2020, 2:59:20 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:20.076Z Local: 2/12/2020, 2:59:20 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:20.149Z Local: 2/12/2020, 2:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-11T18:59:20.151Z Local: 2/12/2020, 2:59:20 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:20.154Z Local: 2/12/2020, 2:59:20 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:20.200Z Local: 2/12/2020, 2:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-11T18:59:20.202Z Local: 2/12/2020, 2:59:20 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:20.203Z Local: 2/12/2020, 2:59:20 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:20.277Z Local: 2/12/2020, 2:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-11T18:59:20.279Z Local: 2/12/2020, 2:59:20 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:20.280Z Local: 2/12/2020, 2:59:20 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:20.366Z Local: 2/12/2020, 2:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-11T18:59:20.372Z Local: 2/12/2020, 2:59:20 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:20.375Z Local: 2/12/2020, 2:59:20 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:20.494Z Local: 2/12/2020, 2:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-11T18:59:20.497Z Local: 2/12/2020, 2:59:20 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:20.499Z Local: 2/12/2020, 2:59:20 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:20.607Z Local: 2/12/2020, 2:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-11T18:59:20.612Z Local: 2/12/2020, 2:59:20 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:20.614Z Local: 2/12/2020, 2:59:20 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:20.707Z Local: 2/12/2020, 2:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-11T18:59:20.710Z Local: 2/12/2020, 2:59:20 AM command: SELECT, rowCount: 3 
2020-02-11T18:59:20.712Z Local: 2/12/2020, 2:59:20 AM Sending 3 rows to ::1 with  
2020-02-11T18:59:20.798Z Local: 2/12/2020, 2:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-11T18:59:20.805Z Local: 2/12/2020, 2:59:20 AM command: SELECT, rowCount: 2 
2020-02-11T18:59:20.807Z Local: 2/12/2020, 2:59:20 AM Sending 2 rows to ::1 with  
2020-02-12T13:12:24.634Z Local: 2/12/2020, 9:12:24 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T13:12:24.657Z Local: 2/12/2020, 9:12:24 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T13:12:24.658Z Local: 2/12/2020, 9:12:24 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T13:12:24.659Z Local: 2/12/2020, 9:12:24 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T13:12:24.660Z Local: 2/12/2020, 9:12:24 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T13:12:24.661Z Local: 2/12/2020, 9:12:24 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T13:12:24.662Z Local: 2/12/2020, 9:12:24 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T13:12:24.664Z Local: 2/12/2020, 9:12:24 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T13:12:24.668Z Local: 2/12/2020, 9:12:24 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T13:12:24.669Z Local: 2/12/2020, 9:12:24 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T13:12:24.824Z Local: 2/12/2020, 9:12:24 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T13:12:24.827Z Local: 2/12/2020, 9:12:24 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T13:12:24.829Z Local: 2/12/2020, 9:12:24 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T13:12:24.830Z Local: 2/12/2020, 9:12:24 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T13:12:24.834Z Local: 2/12/2020, 9:12:24 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T13:12:24.831Z Local: 2/12/2020, 9:12:24 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T13:12:24.835Z Local: 2/12/2020, 9:12:24 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T13:12:24.833Z Local: 2/12/2020, 9:12:24 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T13:12:24.836Z Local: 2/12/2020, 9:12:24 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T13:12:24.839Z Local: 2/12/2020, 9:12:24 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T13:12:24.844Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-12T13:12:24.845Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T13:12:24.846Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T13:12:24.847Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-12T13:12:24.851Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T13:12:24.852Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T13:12:24.854Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-12T13:12:24.855Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T13:12:24.856Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T13:12:24.857Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-12T13:12:24.858Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T13:12:24.936Z Local: 2/12/2020, 9:12:24 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-12T13:12:24.859Z Local: 2/12/2020, 9:12:24 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T13:12:24.939Z Local: 2/12/2020, 9:12:24 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-12T13:12:24.942Z Local: 2/12/2020, 9:12:24 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-12T13:12:24.948Z Local: 2/12/2020, 9:12:24 PM Server is listening on port 8000 
2020-02-12T13:12:25.051Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.053Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.057Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.058Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.060Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.062Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.064Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.067Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.069Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.077Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.087Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.088Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.089Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.091Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.092Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.095Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.096Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.098Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.099Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.101Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.105Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.106Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.111Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.112Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.116Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.117Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.118Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.120Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.123Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.124Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.125Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.126Z Local: 2/12/2020, 9:12:25 PM command: INSERT, rowCount: 1 
2020-02-12T13:12:25.127Z Local: 2/12/2020, 9:12:25 PM command: CREATE, rowCount: null 
2020-02-12T13:12:25.132Z Local: 2/12/2020, 9:12:25 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-12T13:12:25.129Z Local: 2/12/2020, 9:12:25 PM Created posts_table 
2020-02-12T13:12:25.142Z Local: 2/12/2020, 9:12:25 PM Created Good type 
2020-02-12T13:12:25.147Z Local: 2/12/2020, 9:12:25 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-12T13:12:25.141Z Local: 2/12/2020, 9:12:25 PM command: DO, rowCount: null 
2020-02-12T13:12:25.156Z Local: 2/12/2020, 9:12:25 PM Created Producer type 
2020-02-12T13:12:25.154Z Local: 2/12/2020, 9:12:25 PM command: DO, rowCount: null 
2020-02-12T13:12:25.157Z Local: 2/12/2020, 9:12:25 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-12T13:12:25.159Z Local: 2/12/2020, 9:12:25 PM command: DO, rowCount: null 
2020-02-12T13:12:25.162Z Local: 2/12/2020, 9:12:25 PM Created Section type 
2020-02-12T13:12:25.165Z Local: 2/12/2020, 9:12:25 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-12T13:12:25.167Z Local: 2/12/2020, 9:12:25 PM command: DO, rowCount: null 
2020-02-12T13:12:25.168Z Local: 2/12/2020, 9:12:25 PM Created Spec type 
2020-02-12T13:12:25.169Z Local: 2/12/2020, 9:12:25 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-12T13:12:25.173Z Local: 2/12/2020, 9:12:25 PM command: CREATE, rowCount: null 
2020-02-12T13:12:25.174Z Local: 2/12/2020, 9:12:25 PM Created farmers_table 
2020-02-12T13:12:25.175Z Local: 2/12/2020, 9:12:25 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-12T13:12:25.176Z Local: 2/12/2020, 9:12:25 PM command: CREATE, rowCount: null 
2020-02-12T13:12:25.177Z Local: 2/12/2020, 9:12:25 PM Created items_table 
2020-02-12T13:12:25.177Z Local: 2/12/2020, 9:12:25 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-12T13:19:35.993Z Local: 2/12/2020, 9:19:35 PM SELECT COUNT(*) FROM posts_table; 
2020-02-12T13:19:36.090Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 1 
2020-02-12T13:19:36.092Z Local: 2/12/2020, 9:19:36 PM Sending 1 rows to ::1 with  
2020-02-12T13:19:36.131Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-12T13:19:36.142Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.143Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.153Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-12T13:19:36.155Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.156Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.171Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-12T13:19:36.173Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.174Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.188Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-12T13:19:36.191Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.190Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.207Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-12T13:19:36.211Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.212Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.286Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-12T13:19:36.293Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.295Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.362Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-12T13:19:36.365Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.367Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.452Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-12T13:19:36.458Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.460Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.528Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-12T13:19:36.530Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.531Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.617Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-12T13:19:36.619Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.620Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.679Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-12T13:19:36.682Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.684Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.736Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-12T13:19:36.738Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.739Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.799Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-12T13:19:36.803Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.803Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.838Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-12T13:19:36.840Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.841Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.878Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-12T13:19:36.881Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.882Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.915Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-12T13:19:36.919Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.920Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.950Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-12T13:19:36.953Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 3 
2020-02-12T13:19:36.954Z Local: 2/12/2020, 9:19:36 PM Sending 3 rows to ::1 with  
2020-02-12T13:19:36.987Z Local: 2/12/2020, 9:19:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-12T13:19:36.989Z Local: 2/12/2020, 9:19:36 PM command: SELECT, rowCount: 2 
2020-02-12T13:19:36.989Z Local: 2/12/2020, 9:19:36 PM Sending 2 rows to ::1 with  
2020-02-12T13:21:17.083Z Local: 2/12/2020, 9:21:17 PM SELECT * FROM posts_table WHERE id = '34'; 
2020-02-12T13:21:17.113Z Local: 2/12/2020, 9:21:17 PM command: SELECT, rowCount: 1 
2020-02-12T13:21:17.125Z Local: 2/12/2020, 9:21:17 PM Sending 1 rows to ::1 with  
2020-02-12T13:21:56.381Z Local: 2/12/2020, 9:21:56 PM SELECT * FROM posts_table WHERE id = '1'; 
2020-02-12T13:21:56.402Z Local: 2/12/2020, 9:21:56 PM command: SELECT, rowCount: 1 
2020-02-12T13:21:56.405Z Local: 2/12/2020, 9:21:56 PM Sending 1 rows to ::1 with  
2020-02-12T13:22:18.060Z Local: 2/12/2020, 9:22:18 PM SELECT COUNT(*) FROM posts_table; 
2020-02-12T13:22:18.093Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 1 
2020-02-12T13:22:18.094Z Local: 2/12/2020, 9:22:18 PM Sending 1 rows to ::1 with  
2020-02-12T13:22:18.102Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-12T13:22:18.115Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.116Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.125Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-12T13:22:18.127Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.128Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.138Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-12T13:22:18.140Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.140Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.151Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-12T13:22:18.153Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.154Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.252Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-12T13:22:18.258Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.257Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.426Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-12T13:22:18.428Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.429Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.577Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-12T13:22:18.579Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.579Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.623Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-12T13:22:18.625Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.626Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.676Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-12T13:22:18.677Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.678Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.740Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-12T13:22:18.742Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.743Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.799Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-12T13:22:18.802Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.803Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.923Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-12T13:22:18.926Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:18.926Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.973Z Local: 2/12/2020, 9:22:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-12T13:22:18.975Z Local: 2/12/2020, 9:22:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:18.975Z Local: 2/12/2020, 9:22:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:19.067Z Local: 2/12/2020, 9:22:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-12T13:22:19.071Z Local: 2/12/2020, 9:22:19 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:19.071Z Local: 2/12/2020, 9:22:19 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:19.230Z Local: 2/12/2020, 9:22:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-12T13:22:19.232Z Local: 2/12/2020, 9:22:19 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:19.231Z Local: 2/12/2020, 9:22:19 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:19.255Z Local: 2/12/2020, 9:22:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-12T13:22:19.258Z Local: 2/12/2020, 9:22:19 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:19.257Z Local: 2/12/2020, 9:22:19 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:19.285Z Local: 2/12/2020, 9:22:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-12T13:22:19.288Z Local: 2/12/2020, 9:22:19 PM command: SELECT, rowCount: 3 
2020-02-12T13:22:19.289Z Local: 2/12/2020, 9:22:19 PM Sending 3 rows to ::1 with  
2020-02-12T13:22:19.305Z Local: 2/12/2020, 9:22:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-12T13:22:19.306Z Local: 2/12/2020, 9:22:19 PM command: SELECT, rowCount: 2 
2020-02-12T13:22:19.307Z Local: 2/12/2020, 9:22:19 PM Sending 2 rows to ::1 with  
2020-02-12T13:29:59.456Z Local: 2/12/2020, 9:29:59 PM SELECT * FROM posts_table WHERE id = '1'; 
2020-02-12T13:29:59.533Z Local: 2/12/2020, 9:29:59 PM command: SELECT, rowCount: 1 
2020-02-12T13:29:59.535Z Local: 2/12/2020, 9:29:59 PM Sending 1 rows to ::1 with  
2020-02-12T13:30:03.382Z Local: 2/12/2020, 9:30:03 PM SELECT COUNT(*) FROM posts_table; 
2020-02-12T13:30:03.391Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 1 
2020-02-12T13:30:03.391Z Local: 2/12/2020, 9:30:03 PM Sending 1 rows to ::1 with  
2020-02-12T13:30:03.400Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-12T13:30:03.407Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.407Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:03.417Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-12T13:30:03.419Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.420Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:03.434Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-12T13:30:03.435Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.436Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:03.450Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-12T13:30:03.452Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.452Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:03.470Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-12T13:30:03.473Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.474Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:03.513Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-12T13:30:03.515Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.516Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:03.561Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-12T13:30:03.564Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:03.563Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.615Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-12T13:30:03.617Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.618Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:03.736Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-12T13:30:03.738Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.738Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:03.793Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-12T13:30:03.797Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.798Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:03.856Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-12T13:30:03.859Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.861Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:03.985Z Local: 2/12/2020, 9:30:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-12T13:30:03.987Z Local: 2/12/2020, 9:30:03 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:03.987Z Local: 2/12/2020, 9:30:03 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:04.037Z Local: 2/12/2020, 9:30:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-12T13:30:04.039Z Local: 2/12/2020, 9:30:04 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:04.040Z Local: 2/12/2020, 9:30:04 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:04.144Z Local: 2/12/2020, 9:30:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-12T13:30:04.147Z Local: 2/12/2020, 9:30:04 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:04.147Z Local: 2/12/2020, 9:30:04 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:04.296Z Local: 2/12/2020, 9:30:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-12T13:30:04.298Z Local: 2/12/2020, 9:30:04 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:04.298Z Local: 2/12/2020, 9:30:04 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:04.321Z Local: 2/12/2020, 9:30:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-12T13:30:04.322Z Local: 2/12/2020, 9:30:04 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:04.323Z Local: 2/12/2020, 9:30:04 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:04.345Z Local: 2/12/2020, 9:30:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-12T13:30:04.347Z Local: 2/12/2020, 9:30:04 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:04.348Z Local: 2/12/2020, 9:30:04 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:04.369Z Local: 2/12/2020, 9:30:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-12T13:30:04.371Z Local: 2/12/2020, 9:30:04 PM command: SELECT, rowCount: 2 
2020-02-12T13:30:04.371Z Local: 2/12/2020, 9:30:04 PM Sending 2 rows to ::1 with  
2020-02-12T13:30:12.195Z Local: 2/12/2020, 9:30:12 PM SELECT * FROM posts_table WHERE id = '35'; 
2020-02-12T13:30:12.198Z Local: 2/12/2020, 9:30:12 PM command: SELECT, rowCount: 1 
2020-02-12T13:30:12.201Z Local: 2/12/2020, 9:30:12 PM Sending 1 rows to ::1 with  
2020-02-12T13:30:17.826Z Local: 2/12/2020, 9:30:17 PM SELECT COUNT(*) FROM posts_table; 
2020-02-12T13:30:17.828Z Local: 2/12/2020, 9:30:17 PM command: SELECT, rowCount: 1 
2020-02-12T13:30:17.830Z Local: 2/12/2020, 9:30:17 PM Sending 1 rows to ::1 with  
2020-02-12T13:30:17.839Z Local: 2/12/2020, 9:30:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-12T13:30:17.842Z Local: 2/12/2020, 9:30:17 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:17.843Z Local: 2/12/2020, 9:30:17 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:17.856Z Local: 2/12/2020, 9:30:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-12T13:30:17.858Z Local: 2/12/2020, 9:30:17 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:17.858Z Local: 2/12/2020, 9:30:17 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:17.868Z Local: 2/12/2020, 9:30:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-12T13:30:17.873Z Local: 2/12/2020, 9:30:17 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:17.874Z Local: 2/12/2020, 9:30:17 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:17.884Z Local: 2/12/2020, 9:30:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-12T13:30:17.887Z Local: 2/12/2020, 9:30:17 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:17.886Z Local: 2/12/2020, 9:30:17 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:17.897Z Local: 2/12/2020, 9:30:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-12T13:30:17.899Z Local: 2/12/2020, 9:30:17 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:17.899Z Local: 2/12/2020, 9:30:17 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:17.938Z Local: 2/12/2020, 9:30:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-12T13:30:17.945Z Local: 2/12/2020, 9:30:17 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:17.945Z Local: 2/12/2020, 9:30:17 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:17.987Z Local: 2/12/2020, 9:30:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-12T13:30:17.989Z Local: 2/12/2020, 9:30:17 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:17.991Z Local: 2/12/2020, 9:30:17 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:18.033Z Local: 2/12/2020, 9:30:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-12T13:30:18.035Z Local: 2/12/2020, 9:30:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:18.035Z Local: 2/12/2020, 9:30:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:18.079Z Local: 2/12/2020, 9:30:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-12T13:30:18.081Z Local: 2/12/2020, 9:30:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:18.082Z Local: 2/12/2020, 9:30:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:18.128Z Local: 2/12/2020, 9:30:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-12T13:30:18.129Z Local: 2/12/2020, 9:30:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:18.130Z Local: 2/12/2020, 9:30:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:18.172Z Local: 2/12/2020, 9:30:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-12T13:30:18.175Z Local: 2/12/2020, 9:30:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:18.176Z Local: 2/12/2020, 9:30:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:18.221Z Local: 2/12/2020, 9:30:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-12T13:30:18.224Z Local: 2/12/2020, 9:30:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:18.224Z Local: 2/12/2020, 9:30:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:18.271Z Local: 2/12/2020, 9:30:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-12T13:30:18.273Z Local: 2/12/2020, 9:30:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:18.274Z Local: 2/12/2020, 9:30:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:18.289Z Local: 2/12/2020, 9:30:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-12T13:30:18.293Z Local: 2/12/2020, 9:30:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:18.294Z Local: 2/12/2020, 9:30:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:18.318Z Local: 2/12/2020, 9:30:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-12T13:30:18.320Z Local: 2/12/2020, 9:30:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:18.320Z Local: 2/12/2020, 9:30:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:18.335Z Local: 2/12/2020, 9:30:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-12T13:30:18.337Z Local: 2/12/2020, 9:30:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:18.336Z Local: 2/12/2020, 9:30:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:18.358Z Local: 2/12/2020, 9:30:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-12T13:30:18.361Z Local: 2/12/2020, 9:30:18 PM command: SELECT, rowCount: 3 
2020-02-12T13:30:18.361Z Local: 2/12/2020, 9:30:18 PM Sending 3 rows to ::1 with  
2020-02-12T13:30:18.376Z Local: 2/12/2020, 9:30:18 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-12T13:30:18.379Z Local: 2/12/2020, 9:30:18 PM command: SELECT, rowCount: 2 
2020-02-12T13:30:18.379Z Local: 2/12/2020, 9:30:18 PM Sending 2 rows to ::1 with  
2020-02-12T15:23:47.267Z Local: 2/12/2020, 11:23:47 PM SELECT * FROM posts_table WHERE id = '3'; 
2020-02-12T15:23:47.350Z Local: 2/12/2020, 11:23:47 PM command: SELECT, rowCount: 1 
2020-02-12T15:23:47.353Z Local: 2/12/2020, 11:23:47 PM Sending 1 rows to ::1 with  
2020-02-12T15:23:52.636Z Local: 2/12/2020, 11:23:52 PM SELECT * FROM posts_table WHERE id = '1'; 
2020-02-12T15:23:52.654Z Local: 2/12/2020, 11:23:52 PM Sending 1 rows to ::1 with  
2020-02-12T15:23:52.651Z Local: 2/12/2020, 11:23:52 PM command: SELECT, rowCount: 1 
2020-02-12T15:27:03.474Z Local: 2/12/2020, 11:27:03 PM SELECT COUNT(*) FROM posts_table; 
2020-02-12T15:27:03.503Z Local: 2/12/2020, 11:27:03 PM command: SELECT, rowCount: 1 
2020-02-12T15:27:03.504Z Local: 2/12/2020, 11:27:03 PM Sending 1 rows to ::1 with  
2020-02-12T15:27:03.512Z Local: 2/12/2020, 11:27:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-12T15:27:03.522Z Local: 2/12/2020, 11:27:03 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:03.525Z Local: 2/12/2020, 11:27:03 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:03.535Z Local: 2/12/2020, 11:27:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-12T15:27:03.557Z Local: 2/12/2020, 11:27:03 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:03.558Z Local: 2/12/2020, 11:27:03 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:03.575Z Local: 2/12/2020, 11:27:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-12T15:27:03.578Z Local: 2/12/2020, 11:27:03 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:03.579Z Local: 2/12/2020, 11:27:03 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:03.595Z Local: 2/12/2020, 11:27:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-12T15:27:03.603Z Local: 2/12/2020, 11:27:03 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:03.599Z Local: 2/12/2020, 11:27:03 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:03.620Z Local: 2/12/2020, 11:27:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-12T15:27:03.629Z Local: 2/12/2020, 11:27:03 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:03.630Z Local: 2/12/2020, 11:27:03 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:03.674Z Local: 2/12/2020, 11:27:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-12T15:27:03.675Z Local: 2/12/2020, 11:27:03 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:03.676Z Local: 2/12/2020, 11:27:03 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:03.738Z Local: 2/12/2020, 11:27:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-12T15:27:03.740Z Local: 2/12/2020, 11:27:03 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:03.740Z Local: 2/12/2020, 11:27:03 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:03.805Z Local: 2/12/2020, 11:27:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-12T15:27:03.808Z Local: 2/12/2020, 11:27:03 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:03.808Z Local: 2/12/2020, 11:27:03 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:03.864Z Local: 2/12/2020, 11:27:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-12T15:27:03.871Z Local: 2/12/2020, 11:27:03 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:03.872Z Local: 2/12/2020, 11:27:03 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:03.941Z Local: 2/12/2020, 11:27:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-12T15:27:03.945Z Local: 2/12/2020, 11:27:03 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:03.945Z Local: 2/12/2020, 11:27:03 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:04.023Z Local: 2/12/2020, 11:27:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-12T15:27:04.025Z Local: 2/12/2020, 11:27:04 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:04.025Z Local: 2/12/2020, 11:27:04 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:04.077Z Local: 2/12/2020, 11:27:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-12T15:27:04.080Z Local: 2/12/2020, 11:27:04 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:04.082Z Local: 2/12/2020, 11:27:04 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:04.148Z Local: 2/12/2020, 11:27:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-12T15:27:04.153Z Local: 2/12/2020, 11:27:04 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:04.151Z Local: 2/12/2020, 11:27:04 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:04.187Z Local: 2/12/2020, 11:27:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-12T15:27:04.190Z Local: 2/12/2020, 11:27:04 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:04.190Z Local: 2/12/2020, 11:27:04 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:04.225Z Local: 2/12/2020, 11:27:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-12T15:27:04.228Z Local: 2/12/2020, 11:27:04 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:04.229Z Local: 2/12/2020, 11:27:04 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:04.271Z Local: 2/12/2020, 11:27:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-12T15:27:04.273Z Local: 2/12/2020, 11:27:04 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:04.274Z Local: 2/12/2020, 11:27:04 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:04.302Z Local: 2/12/2020, 11:27:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-12T15:27:04.305Z Local: 2/12/2020, 11:27:04 PM command: SELECT, rowCount: 3 
2020-02-12T15:27:04.306Z Local: 2/12/2020, 11:27:04 PM Sending 3 rows to ::1 with  
2020-02-12T15:27:04.340Z Local: 2/12/2020, 11:27:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-12T15:27:04.343Z Local: 2/12/2020, 11:27:04 PM Sending 2 rows to ::1 with  
2020-02-12T15:27:04.342Z Local: 2/12/2020, 11:27:04 PM command: SELECT, rowCount: 2 
2020-02-12T15:27:19.879Z Local: 2/12/2020, 11:27:19 PM SELECT * FROM posts_table WHERE id = '35'; 
2020-02-12T15:27:19.910Z Local: 2/12/2020, 11:27:19 PM command: SELECT, rowCount: 1 
2020-02-12T15:27:19.914Z Local: 2/12/2020, 11:27:19 PM Sending 1 rows to ::1 with  
2020-02-12T15:28:49.392Z Local: 2/12/2020, 11:28:49 PM SELECT COUNT(*) FROM posts_table; 
2020-02-12T15:28:49.421Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 1 
2020-02-12T15:28:49.423Z Local: 2/12/2020, 11:28:49 PM Sending 1 rows to ::1 with  
2020-02-12T15:28:49.434Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-12T15:28:49.436Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.436Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:49.448Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-12T15:28:49.451Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.452Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:49.469Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-12T15:28:49.474Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:49.471Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.487Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-12T15:28:49.491Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:49.490Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.507Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-12T15:28:49.510Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.511Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:49.569Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-12T15:28:49.570Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.571Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:49.641Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-12T15:28:49.647Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.649Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:49.703Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-12T15:28:49.706Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.707Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:49.770Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-12T15:28:49.785Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.787Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:49.841Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-12T15:28:49.844Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.846Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:49.908Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-12T15:28:49.911Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.913Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:49.974Z Local: 2/12/2020, 11:28:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-12T15:28:49.978Z Local: 2/12/2020, 11:28:49 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:49.978Z Local: 2/12/2020, 11:28:49 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:50.036Z Local: 2/12/2020, 11:28:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-12T15:28:50.037Z Local: 2/12/2020, 11:28:50 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:50.039Z Local: 2/12/2020, 11:28:50 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:50.065Z Local: 2/12/2020, 11:28:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-12T15:28:50.068Z Local: 2/12/2020, 11:28:50 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:50.068Z Local: 2/12/2020, 11:28:50 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:50.103Z Local: 2/12/2020, 11:28:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-12T15:28:50.106Z Local: 2/12/2020, 11:28:50 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:50.104Z Local: 2/12/2020, 11:28:50 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:50.154Z Local: 2/12/2020, 11:28:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-12T15:28:50.158Z Local: 2/12/2020, 11:28:50 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:50.159Z Local: 2/12/2020, 11:28:50 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:50.210Z Local: 2/12/2020, 11:28:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-12T15:28:50.216Z Local: 2/12/2020, 11:28:50 PM command: SELECT, rowCount: 3 
2020-02-12T15:28:50.217Z Local: 2/12/2020, 11:28:50 PM Sending 3 rows to ::1 with  
2020-02-12T15:28:50.257Z Local: 2/12/2020, 11:28:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-12T15:28:50.260Z Local: 2/12/2020, 11:28:50 PM command: SELECT, rowCount: 2 
2020-02-12T15:28:50.262Z Local: 2/12/2020, 11:28:50 PM Sending 2 rows to ::1 with  
2020-02-12T15:32:23.112Z Local: 2/12/2020, 11:32:23 PM SELECT COUNT(*) FROM posts_table; 
2020-02-12T15:32:23.145Z Local: 2/12/2020, 11:32:23 PM command: SELECT, rowCount: 1 
2020-02-12T15:32:23.146Z Local: 2/12/2020, 11:32:23 PM Sending 1 rows to ::1 with  
2020-02-12T15:32:23.171Z Local: 2/12/2020, 11:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-12T15:32:23.178Z Local: 2/12/2020, 11:32:23 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:23.179Z Local: 2/12/2020, 11:32:23 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:23.195Z Local: 2/12/2020, 11:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-12T15:32:23.199Z Local: 2/12/2020, 11:32:23 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:23.199Z Local: 2/12/2020, 11:32:23 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:23.224Z Local: 2/12/2020, 11:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-12T15:32:23.226Z Local: 2/12/2020, 11:32:23 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:23.227Z Local: 2/12/2020, 11:32:23 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:23.258Z Local: 2/12/2020, 11:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-12T15:32:23.261Z Local: 2/12/2020, 11:32:23 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:23.262Z Local: 2/12/2020, 11:32:23 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:23.294Z Local: 2/12/2020, 11:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-12T15:32:23.297Z Local: 2/12/2020, 11:32:23 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:23.299Z Local: 2/12/2020, 11:32:23 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:23.393Z Local: 2/12/2020, 11:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-12T15:32:23.395Z Local: 2/12/2020, 11:32:23 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:23.397Z Local: 2/12/2020, 11:32:23 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:23.658Z Local: 2/12/2020, 11:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-12T15:32:23.661Z Local: 2/12/2020, 11:32:23 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:23.662Z Local: 2/12/2020, 11:32:23 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:23.738Z Local: 2/12/2020, 11:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-12T15:32:23.741Z Local: 2/12/2020, 11:32:23 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:23.740Z Local: 2/12/2020, 11:32:23 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:23.830Z Local: 2/12/2020, 11:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-12T15:32:23.834Z Local: 2/12/2020, 11:32:23 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:23.836Z Local: 2/12/2020, 11:32:23 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:23.915Z Local: 2/12/2020, 11:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-12T15:32:23.919Z Local: 2/12/2020, 11:32:23 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:23.920Z Local: 2/12/2020, 11:32:23 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:24.010Z Local: 2/12/2020, 11:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-12T15:32:24.015Z Local: 2/12/2020, 11:32:24 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:24.017Z Local: 2/12/2020, 11:32:24 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:24.264Z Local: 2/12/2020, 11:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-12T15:32:24.269Z Local: 2/12/2020, 11:32:24 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:24.269Z Local: 2/12/2020, 11:32:24 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:24.326Z Local: 2/12/2020, 11:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-12T15:32:24.329Z Local: 2/12/2020, 11:32:24 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:24.329Z Local: 2/12/2020, 11:32:24 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:24.392Z Local: 2/12/2020, 11:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-12T15:32:24.395Z Local: 2/12/2020, 11:32:24 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:24.394Z Local: 2/12/2020, 11:32:24 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:24.461Z Local: 2/12/2020, 11:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-12T15:32:24.470Z Local: 2/12/2020, 11:32:24 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:24.470Z Local: 2/12/2020, 11:32:24 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:24.987Z Local: 2/12/2020, 11:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-12T15:32:24.995Z Local: 2/12/2020, 11:32:24 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:24.997Z Local: 2/12/2020, 11:32:24 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:25.034Z Local: 2/12/2020, 11:32:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-12T15:32:25.040Z Local: 2/12/2020, 11:32:25 PM command: SELECT, rowCount: 3 
2020-02-12T15:32:25.040Z Local: 2/12/2020, 11:32:25 PM Sending 3 rows to ::1 with  
2020-02-12T15:32:25.084Z Local: 2/12/2020, 11:32:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-12T15:32:25.087Z Local: 2/12/2020, 11:32:25 PM command: SELECT, rowCount: 2 
2020-02-12T15:32:25.088Z Local: 2/12/2020, 11:32:25 PM Sending 2 rows to ::1 with  
2020-02-12T18:05:11.925Z Local: 2/13/2020, 2:05:11 AM SELECT COUNT(*) FROM posts_table; 
2020-02-12T18:05:12.107Z Local: 2/13/2020, 2:05:12 AM command: SELECT, rowCount: 1 
2020-02-12T18:05:12.113Z Local: 2/13/2020, 2:05:12 AM Sending 1 rows to ::1 with  
2020-02-12T18:05:12.148Z Local: 2/13/2020, 2:05:12 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-12T18:05:12.170Z Local: 2/13/2020, 2:05:12 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:12.173Z Local: 2/13/2020, 2:05:12 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:12.219Z Local: 2/13/2020, 2:05:12 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-12T18:05:12.239Z Local: 2/13/2020, 2:05:12 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:12.242Z Local: 2/13/2020, 2:05:12 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:12.292Z Local: 2/13/2020, 2:05:12 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-12T18:05:12.299Z Local: 2/13/2020, 2:05:12 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:12.302Z Local: 2/13/2020, 2:05:12 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:12.356Z Local: 2/13/2020, 2:05:12 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-12T18:05:12.363Z Local: 2/13/2020, 2:05:12 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:12.366Z Local: 2/13/2020, 2:05:12 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:12.428Z Local: 2/13/2020, 2:05:12 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-12T18:05:12.440Z Local: 2/13/2020, 2:05:12 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:12.442Z Local: 2/13/2020, 2:05:12 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:12.635Z Local: 2/13/2020, 2:05:12 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-12T18:05:12.644Z Local: 2/13/2020, 2:05:12 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:12.646Z Local: 2/13/2020, 2:05:12 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:12.835Z Local: 2/13/2020, 2:05:12 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-12T18:05:12.843Z Local: 2/13/2020, 2:05:12 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:12.845Z Local: 2/13/2020, 2:05:12 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:13.038Z Local: 2/13/2020, 2:05:13 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-12T18:05:13.043Z Local: 2/13/2020, 2:05:13 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:13.045Z Local: 2/13/2020, 2:05:13 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:13.126Z Local: 2/13/2020, 2:05:13 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-12T18:05:13.128Z Local: 2/13/2020, 2:05:13 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:13.129Z Local: 2/13/2020, 2:05:13 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:13.212Z Local: 2/13/2020, 2:05:13 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-12T18:05:13.216Z Local: 2/13/2020, 2:05:13 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:13.217Z Local: 2/13/2020, 2:05:13 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:13.309Z Local: 2/13/2020, 2:05:13 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-12T18:05:13.312Z Local: 2/13/2020, 2:05:13 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:13.313Z Local: 2/13/2020, 2:05:13 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:13.396Z Local: 2/13/2020, 2:05:13 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-12T18:05:13.402Z Local: 2/13/2020, 2:05:13 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:13.403Z Local: 2/13/2020, 2:05:13 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:13.515Z Local: 2/13/2020, 2:05:13 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-12T18:05:13.520Z Local: 2/13/2020, 2:05:13 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:13.521Z Local: 2/13/2020, 2:05:13 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:13.580Z Local: 2/13/2020, 2:05:13 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-12T18:05:13.586Z Local: 2/13/2020, 2:05:13 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:13.587Z Local: 2/13/2020, 2:05:13 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:13.650Z Local: 2/13/2020, 2:05:13 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-12T18:05:13.655Z Local: 2/13/2020, 2:05:13 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:13.657Z Local: 2/13/2020, 2:05:13 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:13.708Z Local: 2/13/2020, 2:05:13 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-12T18:05:13.713Z Local: 2/13/2020, 2:05:13 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:13.712Z Local: 2/13/2020, 2:05:13 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:13.760Z Local: 2/13/2020, 2:05:13 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-12T18:05:13.763Z Local: 2/13/2020, 2:05:13 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:13.765Z Local: 2/13/2020, 2:05:13 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:13.810Z Local: 2/13/2020, 2:05:13 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-12T18:05:13.813Z Local: 2/13/2020, 2:05:13 AM command: SELECT, rowCount: 2 
2020-02-12T18:05:13.813Z Local: 2/13/2020, 2:05:13 AM Sending 2 rows to ::1 with  
2020-02-12T18:05:15.712Z Local: 2/13/2020, 2:05:15 AM SELECT * FROM posts_table WHERE id = '30'; 
2020-02-12T18:05:15.724Z Local: 2/13/2020, 2:05:15 AM command: SELECT, rowCount: 1 
2020-02-12T18:05:15.752Z Local: 2/13/2020, 2:05:15 AM Sending 1 rows to ::1 with  
2020-02-12T18:05:42.807Z Local: 2/13/2020, 2:05:42 AM SELECT COUNT(*) FROM posts_table; 
2020-02-12T18:05:42.923Z Local: 2/13/2020, 2:05:42 AM command: SELECT, rowCount: 1 
2020-02-12T18:05:42.929Z Local: 2/13/2020, 2:05:42 AM Sending 1 rows to ::1 with  
2020-02-12T18:05:42.950Z Local: 2/13/2020, 2:05:42 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-12T18:05:42.955Z Local: 2/13/2020, 2:05:42 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:42.957Z Local: 2/13/2020, 2:05:42 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:42.996Z Local: 2/13/2020, 2:05:42 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-12T18:05:43.004Z Local: 2/13/2020, 2:05:43 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:43.006Z Local: 2/13/2020, 2:05:43 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:43.050Z Local: 2/13/2020, 2:05:43 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-12T18:05:43.055Z Local: 2/13/2020, 2:05:43 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:43.058Z Local: 2/13/2020, 2:05:43 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:43.102Z Local: 2/13/2020, 2:05:43 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-12T18:05:43.109Z Local: 2/13/2020, 2:05:43 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:43.111Z Local: 2/13/2020, 2:05:43 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:43.164Z Local: 2/13/2020, 2:05:43 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-12T18:05:43.174Z Local: 2/13/2020, 2:05:43 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:43.172Z Local: 2/13/2020, 2:05:43 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:43.339Z Local: 2/13/2020, 2:05:43 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-12T18:05:43.348Z Local: 2/13/2020, 2:05:43 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:43.350Z Local: 2/13/2020, 2:05:43 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:43.559Z Local: 2/13/2020, 2:05:43 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-12T18:05:43.568Z Local: 2/13/2020, 2:05:43 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:43.570Z Local: 2/13/2020, 2:05:43 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:43.756Z Local: 2/13/2020, 2:05:43 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-12T18:05:43.764Z Local: 2/13/2020, 2:05:43 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:43.766Z Local: 2/13/2020, 2:05:43 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:43.965Z Local: 2/13/2020, 2:05:43 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-12T18:05:43.974Z Local: 2/13/2020, 2:05:43 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:43.977Z Local: 2/13/2020, 2:05:43 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:44.198Z Local: 2/13/2020, 2:05:44 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-12T18:05:44.205Z Local: 2/13/2020, 2:05:44 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:44.207Z Local: 2/13/2020, 2:05:44 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:44.417Z Local: 2/13/2020, 2:05:44 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-12T18:05:44.423Z Local: 2/13/2020, 2:05:44 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:44.426Z Local: 2/13/2020, 2:05:44 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:44.620Z Local: 2/13/2020, 2:05:44 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-12T18:05:44.627Z Local: 2/13/2020, 2:05:44 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:44.629Z Local: 2/13/2020, 2:05:44 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:44.803Z Local: 2/13/2020, 2:05:44 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-12T18:05:44.810Z Local: 2/13/2020, 2:05:44 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:44.812Z Local: 2/13/2020, 2:05:44 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:44.878Z Local: 2/13/2020, 2:05:44 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-12T18:05:44.883Z Local: 2/13/2020, 2:05:44 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:44.884Z Local: 2/13/2020, 2:05:44 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:44.934Z Local: 2/13/2020, 2:05:44 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-12T18:05:44.936Z Local: 2/13/2020, 2:05:44 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:44.938Z Local: 2/13/2020, 2:05:44 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:45.003Z Local: 2/13/2020, 2:05:45 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-12T18:05:45.007Z Local: 2/13/2020, 2:05:45 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:45.009Z Local: 2/13/2020, 2:05:45 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:45.065Z Local: 2/13/2020, 2:05:45 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-12T18:05:45.069Z Local: 2/13/2020, 2:05:45 AM Sending 3 rows to ::1 with  
2020-02-12T18:05:45.068Z Local: 2/13/2020, 2:05:45 AM command: SELECT, rowCount: 3 
2020-02-12T18:05:45.108Z Local: 2/13/2020, 2:05:45 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-12T18:05:45.114Z Local: 2/13/2020, 2:05:45 AM command: SELECT, rowCount: 2 
2020-02-12T18:05:45.115Z Local: 2/13/2020, 2:05:45 AM Sending 2 rows to ::1 with  
2020-02-12T18:15:55.438Z Local: 2/13/2020, 2:15:55 AM SELECT COUNT(*) FROM posts_table; 
2020-02-12T18:15:55.525Z Local: 2/13/2020, 2:15:55 AM command: SELECT, rowCount: 1 
2020-02-12T18:15:55.529Z Local: 2/13/2020, 2:15:55 AM Sending 1 rows to ::1 with  
2020-02-12T18:15:55.556Z Local: 2/13/2020, 2:15:55 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-12T18:15:55.564Z Local: 2/13/2020, 2:15:55 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:55.565Z Local: 2/13/2020, 2:15:55 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:55.607Z Local: 2/13/2020, 2:15:55 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-12T18:15:55.615Z Local: 2/13/2020, 2:15:55 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:55.618Z Local: 2/13/2020, 2:15:55 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:55.883Z Local: 2/13/2020, 2:15:55 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-12T18:15:55.887Z Local: 2/13/2020, 2:15:55 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:55.889Z Local: 2/13/2020, 2:15:55 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:56.055Z Local: 2/13/2020, 2:15:56 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-12T18:15:56.061Z Local: 2/13/2020, 2:15:56 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:56.060Z Local: 2/13/2020, 2:15:56 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:56.083Z Local: 2/13/2020, 2:15:56 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-12T18:15:56.091Z Local: 2/13/2020, 2:15:56 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:56.092Z Local: 2/13/2020, 2:15:56 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:56.355Z Local: 2/13/2020, 2:15:56 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-12T18:15:56.360Z Local: 2/13/2020, 2:15:56 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:56.361Z Local: 2/13/2020, 2:15:56 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:56.619Z Local: 2/13/2020, 2:15:56 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-12T18:15:56.624Z Local: 2/13/2020, 2:15:56 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:56.625Z Local: 2/13/2020, 2:15:56 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:56.718Z Local: 2/13/2020, 2:15:56 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-12T18:15:56.721Z Local: 2/13/2020, 2:15:56 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:56.723Z Local: 2/13/2020, 2:15:56 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:56.839Z Local: 2/13/2020, 2:15:56 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-12T18:15:56.842Z Local: 2/13/2020, 2:15:56 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:56.844Z Local: 2/13/2020, 2:15:56 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:56.966Z Local: 2/13/2020, 2:15:56 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-12T18:15:56.969Z Local: 2/13/2020, 2:15:56 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:56.970Z Local: 2/13/2020, 2:15:56 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:57.058Z Local: 2/13/2020, 2:15:57 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-12T18:15:57.066Z Local: 2/13/2020, 2:15:57 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:57.067Z Local: 2/13/2020, 2:15:57 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:57.165Z Local: 2/13/2020, 2:15:57 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-12T18:15:57.170Z Local: 2/13/2020, 2:15:57 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:57.169Z Local: 2/13/2020, 2:15:57 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:57.509Z Local: 2/13/2020, 2:15:57 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-12T18:15:57.513Z Local: 2/13/2020, 2:15:57 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:57.514Z Local: 2/13/2020, 2:15:57 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:57.967Z Local: 2/13/2020, 2:15:57 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-12T18:15:57.976Z Local: 2/13/2020, 2:15:57 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:57.978Z Local: 2/13/2020, 2:15:57 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:58.111Z Local: 2/13/2020, 2:15:58 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-12T18:15:58.117Z Local: 2/13/2020, 2:15:58 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:58.119Z Local: 2/13/2020, 2:15:58 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:58.234Z Local: 2/13/2020, 2:15:58 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-12T18:15:58.242Z Local: 2/13/2020, 2:15:58 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:58.244Z Local: 2/13/2020, 2:15:58 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:58.360Z Local: 2/13/2020, 2:15:58 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-12T18:15:58.367Z Local: 2/13/2020, 2:15:58 AM command: SELECT, rowCount: 3 
2020-02-12T18:15:58.369Z Local: 2/13/2020, 2:15:58 AM Sending 3 rows to ::1 with  
2020-02-12T18:15:58.478Z Local: 2/13/2020, 2:15:58 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-12T18:15:58.485Z Local: 2/13/2020, 2:15:58 AM command: SELECT, rowCount: 2 
2020-02-12T18:15:58.487Z Local: 2/13/2020, 2:15:58 AM Sending 2 rows to ::1 with  
2020-02-12T18:16:54.691Z Local: 2/13/2020, 2:16:54 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T18:16:54.712Z Local: 2/13/2020, 2:16:54 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T18:16:54.715Z Local: 2/13/2020, 2:16:54 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T18:16:54.718Z Local: 2/13/2020, 2:16:54 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T18:16:54.720Z Local: 2/13/2020, 2:16:54 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T18:16:54.722Z Local: 2/13/2020, 2:16:54 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T18:16:54.724Z Local: 2/13/2020, 2:16:54 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T18:16:54.725Z Local: 2/13/2020, 2:16:54 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T18:16:54.727Z Local: 2/13/2020, 2:16:54 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T18:16:54.733Z Local: 2/13/2020, 2:16:54 AM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-12T18:16:55.098Z Local: 2/13/2020, 2:16:55 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T18:16:55.103Z Local: 2/13/2020, 2:16:55 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T18:16:55.105Z Local: 2/13/2020, 2:16:55 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T18:16:55.106Z Local: 2/13/2020, 2:16:55 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T18:16:55.107Z Local: 2/13/2020, 2:16:55 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T18:16:55.109Z Local: 2/13/2020, 2:16:55 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T18:16:55.111Z Local: 2/13/2020, 2:16:55 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T18:16:55.112Z Local: 2/13/2020, 2:16:55 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T18:16:55.119Z Local: 2/13/2020, 2:16:55 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T18:16:55.120Z Local: 2/13/2020, 2:16:55 AM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-12T18:16:55.128Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-12T18:16:55.135Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T18:16:55.137Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T18:16:55.139Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-12T18:16:55.140Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T18:16:55.142Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T18:16:55.150Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-12T18:16:55.152Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T18:16:55.154Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T18:16:55.155Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-12T18:16:55.157Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T18:16:55.158Z Local: 2/13/2020, 2:16:55 AM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-12T18:16:55.331Z Local: 2/13/2020, 2:16:55 AM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-12T18:16:55.336Z Local: 2/13/2020, 2:16:55 AM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-12T18:16:55.338Z Local: 2/13/2020, 2:16:55 AM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-12T18:16:55.350Z Local: 2/13/2020, 2:16:55 AM Server is listening on port 8000 
2020-02-12T18:16:55.458Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.463Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.465Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.481Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.501Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.505Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.507Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.510Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.512Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.519Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.521Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.523Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.527Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.552Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.556Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.559Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.564Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.561Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.567Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.569Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.571Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.574Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.578Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.585Z Local: 2/13/2020, 2:16:55 AM command: CREATE, rowCount: null 
2020-02-12T18:16:55.587Z Local: 2/13/2020, 2:16:55 AM Created posts_table 
2020-02-12T18:16:55.588Z Local: 2/13/2020, 2:16:55 AM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-12T18:16:55.595Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.597Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.610Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.622Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.623Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.624Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.625Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.628Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.627Z Local: 2/13/2020, 2:16:55 AM command: INSERT, rowCount: 1 
2020-02-12T18:16:55.635Z Local: 2/13/2020, 2:16:55 AM command: DO, rowCount: null 
2020-02-12T18:16:55.637Z Local: 2/13/2020, 2:16:55 AM Created Producer type 
2020-02-12T18:16:55.639Z Local: 2/13/2020, 2:16:55 AM command: DO, rowCount: null 
2020-02-12T18:16:55.638Z Local: 2/13/2020, 2:16:55 AM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-12T18:16:55.640Z Local: 2/13/2020, 2:16:55 AM Created Good type 
2020-02-12T18:16:55.641Z Local: 2/13/2020, 2:16:55 AM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-12T18:16:55.647Z Local: 2/13/2020, 2:16:55 AM command: DO, rowCount: null 
2020-02-12T18:16:55.648Z Local: 2/13/2020, 2:16:55 AM Created Spec type 
2020-02-12T18:16:55.649Z Local: 2/13/2020, 2:16:55 AM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-12T18:16:55.651Z Local: 2/13/2020, 2:16:55 AM command: DO, rowCount: null 
2020-02-12T18:16:55.652Z Local: 2/13/2020, 2:16:55 AM Created Section type 
2020-02-12T18:16:55.653Z Local: 2/13/2020, 2:16:55 AM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-12T18:16:55.655Z Local: 2/13/2020, 2:16:55 AM command: CREATE, rowCount: null 
2020-02-12T18:16:55.656Z Local: 2/13/2020, 2:16:55 AM Created items_table 
2020-02-12T18:16:55.657Z Local: 2/13/2020, 2:16:55 AM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-12T18:16:55.664Z Local: 2/13/2020, 2:16:55 AM command: CREATE, rowCount: null 
2020-02-12T18:16:55.666Z Local: 2/13/2020, 2:16:55 AM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-12T18:16:55.666Z Local: 2/13/2020, 2:16:55 AM Created farmers_table 
2020-02-12T18:17:50.226Z Local: 2/13/2020, 2:17:50 AM SELECT COUNT(*) FROM posts_table; 
2020-02-12T18:17:50.321Z Local: 2/13/2020, 2:17:50 AM Sending 1 rows to ::1 with  
2020-02-12T18:17:50.315Z Local: 2/13/2020, 2:17:50 AM command: SELECT, rowCount: 1 
2020-02-12T18:17:50.397Z Local: 2/13/2020, 2:17:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-12T18:17:50.403Z Local: 2/13/2020, 2:17:50 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:50.405Z Local: 2/13/2020, 2:17:50 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:50.423Z Local: 2/13/2020, 2:17:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-12T18:17:50.425Z Local: 2/13/2020, 2:17:50 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:50.426Z Local: 2/13/2020, 2:17:50 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:50.451Z Local: 2/13/2020, 2:17:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-12T18:17:50.453Z Local: 2/13/2020, 2:17:50 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:50.454Z Local: 2/13/2020, 2:17:50 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:50.485Z Local: 2/13/2020, 2:17:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-12T18:17:50.489Z Local: 2/13/2020, 2:17:50 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:50.490Z Local: 2/13/2020, 2:17:50 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:50.723Z Local: 2/13/2020, 2:17:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-12T18:17:50.728Z Local: 2/13/2020, 2:17:50 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:50.729Z Local: 2/13/2020, 2:17:50 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:50.764Z Local: 2/13/2020, 2:17:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-12T18:17:50.769Z Local: 2/13/2020, 2:17:50 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:50.770Z Local: 2/13/2020, 2:17:50 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:50.810Z Local: 2/13/2020, 2:17:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-12T18:17:50.815Z Local: 2/13/2020, 2:17:50 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:50.817Z Local: 2/13/2020, 2:17:50 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:50.860Z Local: 2/13/2020, 2:17:50 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-12T18:17:50.865Z Local: 2/13/2020, 2:17:50 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:50.867Z Local: 2/13/2020, 2:17:50 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:51.067Z Local: 2/13/2020, 2:17:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-12T18:17:51.071Z Local: 2/13/2020, 2:17:51 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:51.072Z Local: 2/13/2020, 2:17:51 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:51.212Z Local: 2/13/2020, 2:17:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-12T18:17:51.219Z Local: 2/13/2020, 2:17:51 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:51.220Z Local: 2/13/2020, 2:17:51 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:51.356Z Local: 2/13/2020, 2:17:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-12T18:17:51.359Z Local: 2/13/2020, 2:17:51 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:51.361Z Local: 2/13/2020, 2:17:51 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:51.624Z Local: 2/13/2020, 2:17:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-12T18:17:51.629Z Local: 2/13/2020, 2:17:51 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:51.630Z Local: 2/13/2020, 2:17:51 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:51.736Z Local: 2/13/2020, 2:17:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-12T18:17:51.742Z Local: 2/13/2020, 2:17:51 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:51.741Z Local: 2/13/2020, 2:17:51 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:51.851Z Local: 2/13/2020, 2:17:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-12T18:17:51.853Z Local: 2/13/2020, 2:17:51 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:51.854Z Local: 2/13/2020, 2:17:51 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:51.965Z Local: 2/13/2020, 2:17:51 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-12T18:17:51.973Z Local: 2/13/2020, 2:17:51 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:51.974Z Local: 2/13/2020, 2:17:51 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:52.185Z Local: 2/13/2020, 2:17:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-12T18:17:52.192Z Local: 2/13/2020, 2:17:52 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:52.193Z Local: 2/13/2020, 2:17:52 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:52.329Z Local: 2/13/2020, 2:17:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-12T18:17:52.338Z Local: 2/13/2020, 2:17:52 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:52.340Z Local: 2/13/2020, 2:17:52 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:52.804Z Local: 2/13/2020, 2:17:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-12T18:17:52.808Z Local: 2/13/2020, 2:17:52 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:52.809Z Local: 2/13/2020, 2:17:52 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:52.873Z Local: 2/13/2020, 2:17:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-12T18:17:52.877Z Local: 2/13/2020, 2:17:52 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:52.878Z Local: 2/13/2020, 2:17:52 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:52.910Z Local: 2/13/2020, 2:17:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-12T18:17:52.913Z Local: 2/13/2020, 2:17:52 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:52.915Z Local: 2/13/2020, 2:17:52 AM Sending 3 rows to ::1 with  
2020-02-12T18:17:52.952Z Local: 2/13/2020, 2:17:52 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-12T18:17:52.955Z Local: 2/13/2020, 2:17:52 AM command: SELECT, rowCount: 3 
2020-02-12T18:17:52.955Z Local: 2/13/2020, 2:17:52 AM Sending 3 rows to ::1 with  
2020-02-13T08:28:38.895Z Local: 2/13/2020, 4:28:38 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:28:38.919Z Local: 2/13/2020, 4:28:38 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:28:38.922Z Local: 2/13/2020, 4:28:38 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:28:38.924Z Local: 2/13/2020, 4:28:38 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:28:38.926Z Local: 2/13/2020, 4:28:38 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:28:38.927Z Local: 2/13/2020, 4:28:38 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:28:38.929Z Local: 2/13/2020, 4:28:38 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:28:38.930Z Local: 2/13/2020, 4:28:38 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:28:38.932Z Local: 2/13/2020, 4:28:38 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:28:38.936Z Local: 2/13/2020, 4:28:38 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:28:39.279Z Local: 2/13/2020, 4:28:39 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:28:39.294Z Local: 2/13/2020, 4:28:39 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:28:39.296Z Local: 2/13/2020, 4:28:39 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:28:39.311Z Local: 2/13/2020, 4:28:39 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:28:39.312Z Local: 2/13/2020, 4:28:39 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:28:39.314Z Local: 2/13/2020, 4:28:39 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:28:39.317Z Local: 2/13/2020, 4:28:39 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:28:39.321Z Local: 2/13/2020, 4:28:39 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:28:39.322Z Local: 2/13/2020, 4:28:39 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:28:39.333Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T08:28:39.318Z Local: 2/13/2020, 4:28:39 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:28:39.334Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:28:39.341Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:28:39.343Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T08:28:39.345Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:28:39.346Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:28:39.348Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T08:28:39.350Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:28:39.357Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:28:39.359Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T08:28:39.361Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:28:39.363Z Local: 2/13/2020, 4:28:39 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:28:39.477Z Local: 2/13/2020, 4:28:39 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-13T08:28:39.484Z Local: 2/13/2020, 4:28:39 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-13T08:28:39.489Z Local: 2/13/2020, 4:28:39 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-13T08:28:39.501Z Local: 2/13/2020, 4:28:39 PM Server is listening on port 8000 
2020-02-13T08:28:41.525Z Local: 2/13/2020, 4:28:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-13T08:28:41.533Z Local: 2/13/2020, 4:28:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-13T08:28:41.540Z Local: 2/13/2020, 4:28:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-13T08:28:41.547Z Local: 2/13/2020, 4:28:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-13T08:28:41.552Z Local: 2/13/2020, 4:28:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-13T08:28:41.558Z Local: 2/13/2020, 4:28:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-13T08:28:41.563Z Local: 2/13/2020, 4:28:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-13T08:28:41.573Z Local: 2/13/2020, 4:28:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-13T08:28:41.578Z Local: 2/13/2020, 4:28:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-13T08:28:41.582Z Local: 2/13/2020, 4:28:41 PM Error: Error: connect ECONNREFUSED 127.0.0.1:5432 
2020-02-13T08:29:20.039Z Local: 2/13/2020, 4:29:20 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:29:20.060Z Local: 2/13/2020, 4:29:20 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:29:20.063Z Local: 2/13/2020, 4:29:20 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:29:20.066Z Local: 2/13/2020, 4:29:20 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:29:20.069Z Local: 2/13/2020, 4:29:20 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:29:20.072Z Local: 2/13/2020, 4:29:20 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:29:20.075Z Local: 2/13/2020, 4:29:20 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:29:20.081Z Local: 2/13/2020, 4:29:20 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:29:20.083Z Local: 2/13/2020, 4:29:20 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:29:20.086Z Local: 2/13/2020, 4:29:20 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T08:29:20.342Z Local: 2/13/2020, 4:29:20 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:29:20.347Z Local: 2/13/2020, 4:29:20 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:29:20.349Z Local: 2/13/2020, 4:29:20 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:29:20.352Z Local: 2/13/2020, 4:29:20 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:29:20.354Z Local: 2/13/2020, 4:29:20 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:29:20.362Z Local: 2/13/2020, 4:29:20 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:29:20.367Z Local: 2/13/2020, 4:29:20 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:29:20.365Z Local: 2/13/2020, 4:29:20 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:29:20.371Z Local: 2/13/2020, 4:29:20 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:29:20.384Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T08:29:20.369Z Local: 2/13/2020, 4:29:20 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T08:29:20.387Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:29:20.395Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:29:20.398Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T08:29:20.400Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:29:20.403Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:29:20.412Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T08:29:20.414Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:29:20.417Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:29:20.420Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T08:29:20.428Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:29:20.431Z Local: 2/13/2020, 4:29:20 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T08:29:20.620Z Local: 2/13/2020, 4:29:20 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-13T08:29:20.633Z Local: 2/13/2020, 4:29:20 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-13T08:29:20.628Z Local: 2/13/2020, 4:29:20 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-13T08:29:20.652Z Local: 2/13/2020, 4:29:20 PM Server is listening on port 8000 
2020-02-13T08:29:20.837Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.853Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.860Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.869Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.875Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.881Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.902Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.928Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.936Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.942Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.952Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.958Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.967Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.974Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.981Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:20.990Z Local: 2/13/2020, 4:29:20 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.001Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.007Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.016Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.021Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.027Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.033Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.040Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.046Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.054Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.066Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.071Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.075Z Local: 2/13/2020, 4:29:21 PM command: CREATE, rowCount: null 
2020-02-13T08:29:21.083Z Local: 2/13/2020, 4:29:21 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-13T08:29:21.080Z Local: 2/13/2020, 4:29:21 PM Created posts_table 
2020-02-13T08:29:21.059Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.087Z Local: 2/13/2020, 4:29:21 PM command: DO, rowCount: null 
2020-02-13T08:29:21.092Z Local: 2/13/2020, 4:29:21 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-13T08:29:21.095Z Local: 2/13/2020, 4:29:21 PM command: DO, rowCount: null 
2020-02-13T08:29:21.097Z Local: 2/13/2020, 4:29:21 PM Created Producer type 
2020-02-13T08:29:21.100Z Local: 2/13/2020, 4:29:21 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-13T08:29:21.104Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.089Z Local: 2/13/2020, 4:29:21 PM Created Good type 
2020-02-13T08:29:21.107Z Local: 2/13/2020, 4:29:21 PM command: DO, rowCount: null 
2020-02-13T08:29:21.116Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.113Z Local: 2/13/2020, 4:29:21 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-13T08:29:21.118Z Local: 2/13/2020, 4:29:21 PM command: DO, rowCount: null 
2020-02-13T08:29:21.120Z Local: 2/13/2020, 4:29:21 PM Created Spec type 
2020-02-13T08:29:21.126Z Local: 2/13/2020, 4:29:21 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-13T08:29:21.109Z Local: 2/13/2020, 4:29:21 PM Created Section type 
2020-02-13T08:29:21.130Z Local: 2/13/2020, 4:29:21 PM command: CREATE, rowCount: null 
2020-02-13T08:29:21.133Z Local: 2/13/2020, 4:29:21 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-13T08:29:21.132Z Local: 2/13/2020, 4:29:21 PM Created farmers_table 
2020-02-13T08:29:21.140Z Local: 2/13/2020, 4:29:21 PM command: CREATE, rowCount: null 
2020-02-13T08:29:21.143Z Local: 2/13/2020, 4:29:21 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-13T08:29:21.141Z Local: 2/13/2020, 4:29:21 PM Created items_table 
2020-02-13T08:29:21.137Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:29:21.146Z Local: 2/13/2020, 4:29:21 PM command: INSERT, rowCount: 1 
2020-02-13T08:37:49.376Z Local: 2/13/2020, 4:37:49 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T08:37:49.513Z Local: 2/13/2020, 4:37:49 PM command: SELECT, rowCount: 1 
2020-02-13T08:37:49.520Z Local: 2/13/2020, 4:37:49 PM Sending 1 rows to ::1 with  
2020-02-13T08:37:49.628Z Local: 2/13/2020, 4:37:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T08:37:49.654Z Local: 2/13/2020, 4:37:49 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:49.660Z Local: 2/13/2020, 4:37:49 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:49.698Z Local: 2/13/2020, 4:37:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T08:37:49.704Z Local: 2/13/2020, 4:37:49 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:49.708Z Local: 2/13/2020, 4:37:49 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:49.763Z Local: 2/13/2020, 4:37:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T08:37:49.772Z Local: 2/13/2020, 4:37:49 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:49.775Z Local: 2/13/2020, 4:37:49 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:49.830Z Local: 2/13/2020, 4:37:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T08:37:49.839Z Local: 2/13/2020, 4:37:49 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:49.843Z Local: 2/13/2020, 4:37:49 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:49.894Z Local: 2/13/2020, 4:37:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T08:37:49.904Z Local: 2/13/2020, 4:37:49 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:49.908Z Local: 2/13/2020, 4:37:49 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:49.970Z Local: 2/13/2020, 4:37:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T08:37:49.980Z Local: 2/13/2020, 4:37:49 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:49.984Z Local: 2/13/2020, 4:37:49 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:50.048Z Local: 2/13/2020, 4:37:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T08:37:50.056Z Local: 2/13/2020, 4:37:50 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:50.061Z Local: 2/13/2020, 4:37:50 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:50.127Z Local: 2/13/2020, 4:37:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T08:37:50.137Z Local: 2/13/2020, 4:37:50 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:50.141Z Local: 2/13/2020, 4:37:50 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:50.242Z Local: 2/13/2020, 4:37:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T08:37:50.252Z Local: 2/13/2020, 4:37:50 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:50.255Z Local: 2/13/2020, 4:37:50 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:50.336Z Local: 2/13/2020, 4:37:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T08:37:50.349Z Local: 2/13/2020, 4:37:50 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:50.345Z Local: 2/13/2020, 4:37:50 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:50.434Z Local: 2/13/2020, 4:37:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T08:37:50.444Z Local: 2/13/2020, 4:37:50 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:50.448Z Local: 2/13/2020, 4:37:50 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:50.527Z Local: 2/13/2020, 4:37:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T08:37:50.544Z Local: 2/13/2020, 4:37:50 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:50.548Z Local: 2/13/2020, 4:37:50 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:50.789Z Local: 2/13/2020, 4:37:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T08:37:50.800Z Local: 2/13/2020, 4:37:50 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:50.804Z Local: 2/13/2020, 4:37:50 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:50.999Z Local: 2/13/2020, 4:37:50 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T08:37:51.008Z Local: 2/13/2020, 4:37:51 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:51.012Z Local: 2/13/2020, 4:37:51 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:51.159Z Local: 2/13/2020, 4:37:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T08:37:51.164Z Local: 2/13/2020, 4:37:51 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:51.166Z Local: 2/13/2020, 4:37:51 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:51.280Z Local: 2/13/2020, 4:37:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T08:37:51.286Z Local: 2/13/2020, 4:37:51 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:51.285Z Local: 2/13/2020, 4:37:51 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:51.441Z Local: 2/13/2020, 4:37:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T08:37:51.446Z Local: 2/13/2020, 4:37:51 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:51.448Z Local: 2/13/2020, 4:37:51 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:51.562Z Local: 2/13/2020, 4:37:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T08:37:51.567Z Local: 2/13/2020, 4:37:51 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:51.568Z Local: 2/13/2020, 4:37:51 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:51.706Z Local: 2/13/2020, 4:37:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T08:37:51.714Z Local: 2/13/2020, 4:37:51 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:51.715Z Local: 2/13/2020, 4:37:51 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:51.825Z Local: 2/13/2020, 4:37:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T08:37:51.832Z Local: 2/13/2020, 4:37:51 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:51.834Z Local: 2/13/2020, 4:37:51 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:51.901Z Local: 2/13/2020, 4:37:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T08:37:51.908Z Local: 2/13/2020, 4:37:51 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:51.909Z Local: 2/13/2020, 4:37:51 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:51.991Z Local: 2/13/2020, 4:37:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T08:37:51.998Z Local: 2/13/2020, 4:37:51 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:52.000Z Local: 2/13/2020, 4:37:52 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:52.088Z Local: 2/13/2020, 4:37:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T08:37:52.095Z Local: 2/13/2020, 4:37:52 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:52.097Z Local: 2/13/2020, 4:37:52 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:52.167Z Local: 2/13/2020, 4:37:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T08:37:52.173Z Local: 2/13/2020, 4:37:52 PM command: SELECT, rowCount: 3 
2020-02-13T08:37:52.175Z Local: 2/13/2020, 4:37:52 PM Sending 3 rows to ::1 with  
2020-02-13T08:37:52.246Z Local: 2/13/2020, 4:37:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T08:37:52.253Z Local: 2/13/2020, 4:37:52 PM command: SELECT, rowCount: 1 
2020-02-13T08:37:52.256Z Local: 2/13/2020, 4:37:52 PM Sending 1 rows to ::1 with  
2020-02-13T08:38:02.805Z Local: 2/13/2020, 4:38:02 PM SELECT * FROM posts_table WHERE id = '45'; 
2020-02-13T08:38:02.882Z Local: 2/13/2020, 4:38:02 PM command: SELECT, rowCount: 1 
2020-02-13T08:38:02.893Z Local: 2/13/2020, 4:38:02 PM Sending 1 rows to ::1 with  
2020-02-13T08:38:05.215Z Local: 2/13/2020, 4:38:05 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T08:38:05.226Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 1 
2020-02-13T08:38:05.229Z Local: 2/13/2020, 4:38:05 PM Sending 1 rows to ::1 with  
2020-02-13T08:38:05.260Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T08:38:05.268Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.270Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.310Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T08:38:05.315Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.319Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.366Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T08:38:05.372Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.375Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.427Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T08:38:05.437Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.440Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.503Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T08:38:05.510Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.511Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.526Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T08:38:05.528Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.529Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.549Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T08:38:05.551Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.552Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.568Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T08:38:05.569Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.570Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.587Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T08:38:05.588Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.589Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.615Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T08:38:05.617Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.617Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.649Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T08:38:05.652Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.652Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.668Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T08:38:05.670Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.671Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:05.803Z Local: 2/13/2020, 4:38:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T08:38:05.812Z Local: 2/13/2020, 4:38:05 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:05.814Z Local: 2/13/2020, 4:38:05 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:06.012Z Local: 2/13/2020, 4:38:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T08:38:06.020Z Local: 2/13/2020, 4:38:06 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:06.022Z Local: 2/13/2020, 4:38:06 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:06.222Z Local: 2/13/2020, 4:38:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T08:38:06.231Z Local: 2/13/2020, 4:38:06 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:06.233Z Local: 2/13/2020, 4:38:06 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:06.401Z Local: 2/13/2020, 4:38:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T08:38:06.409Z Local: 2/13/2020, 4:38:06 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:06.411Z Local: 2/13/2020, 4:38:06 PM Sending 3 rows to ::1 with  
2020-02-13T08:38:06.572Z Local: 2/13/2020, 4:38:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T08:38:06.579Z Local: 2/13/2020, 4:38:06 PM command: SELECT, rowCount: 3 
2020-02-13T08:38:06.580Z Local: 2/13/2020, 4:38:06 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:06.799Z Local: 2/13/2020, 4:52:06 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T08:52:06.875Z Local: 2/13/2020, 4:52:06 PM command: SELECT, rowCount: 1 
2020-02-13T08:52:06.878Z Local: 2/13/2020, 4:52:06 PM Sending 1 rows to ::1 with  
2020-02-13T08:52:07.049Z Local: 2/13/2020, 4:52:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T08:52:07.063Z Local: 2/13/2020, 4:52:07 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:07.064Z Local: 2/13/2020, 4:52:07 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:07.097Z Local: 2/13/2020, 4:52:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T08:52:07.102Z Local: 2/13/2020, 4:52:07 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:07.103Z Local: 2/13/2020, 4:52:07 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:07.154Z Local: 2/13/2020, 4:52:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T08:52:07.161Z Local: 2/13/2020, 4:52:07 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:07.162Z Local: 2/13/2020, 4:52:07 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:07.213Z Local: 2/13/2020, 4:52:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T08:52:07.219Z Local: 2/13/2020, 4:52:07 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:07.220Z Local: 2/13/2020, 4:52:07 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:07.409Z Local: 2/13/2020, 4:52:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T08:52:07.414Z Local: 2/13/2020, 4:52:07 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:07.415Z Local: 2/13/2020, 4:52:07 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:07.468Z Local: 2/13/2020, 4:52:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T08:52:07.471Z Local: 2/13/2020, 4:52:07 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:07.471Z Local: 2/13/2020, 4:52:07 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:07.532Z Local: 2/13/2020, 4:52:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T08:52:07.536Z Local: 2/13/2020, 4:52:07 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:07.537Z Local: 2/13/2020, 4:52:07 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:07.693Z Local: 2/13/2020, 4:52:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T08:52:07.697Z Local: 2/13/2020, 4:52:07 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:07.698Z Local: 2/13/2020, 4:52:07 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:07.767Z Local: 2/13/2020, 4:52:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T08:52:07.772Z Local: 2/13/2020, 4:52:07 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:07.773Z Local: 2/13/2020, 4:52:07 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:07.848Z Local: 2/13/2020, 4:52:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T08:52:07.853Z Local: 2/13/2020, 4:52:07 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:07.854Z Local: 2/13/2020, 4:52:07 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:07.936Z Local: 2/13/2020, 4:52:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T08:52:07.943Z Local: 2/13/2020, 4:52:07 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:07.944Z Local: 2/13/2020, 4:52:07 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:08.034Z Local: 2/13/2020, 4:52:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T08:52:08.040Z Local: 2/13/2020, 4:52:08 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:08.042Z Local: 2/13/2020, 4:52:08 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:08.238Z Local: 2/13/2020, 4:52:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T08:52:08.246Z Local: 2/13/2020, 4:52:08 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:08.247Z Local: 2/13/2020, 4:52:08 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:08.388Z Local: 2/13/2020, 4:52:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T08:52:08.396Z Local: 2/13/2020, 4:52:08 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:08.397Z Local: 2/13/2020, 4:52:08 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:08.529Z Local: 2/13/2020, 4:52:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T08:52:08.533Z Local: 2/13/2020, 4:52:08 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:08.535Z Local: 2/13/2020, 4:52:08 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:08.640Z Local: 2/13/2020, 4:52:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T08:52:08.644Z Local: 2/13/2020, 4:52:08 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:08.645Z Local: 2/13/2020, 4:52:08 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:08.777Z Local: 2/13/2020, 4:52:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T08:52:08.780Z Local: 2/13/2020, 4:52:08 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:08.781Z Local: 2/13/2020, 4:52:08 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:08.931Z Local: 2/13/2020, 4:52:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T08:52:08.934Z Local: 2/13/2020, 4:52:08 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:08.935Z Local: 2/13/2020, 4:52:08 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:09.070Z Local: 2/13/2020, 4:52:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T08:52:09.074Z Local: 2/13/2020, 4:52:09 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:09.075Z Local: 2/13/2020, 4:52:09 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:09.155Z Local: 2/13/2020, 4:52:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T08:52:09.159Z Local: 2/13/2020, 4:52:09 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:09.160Z Local: 2/13/2020, 4:52:09 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:09.224Z Local: 2/13/2020, 4:52:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T08:52:09.228Z Local: 2/13/2020, 4:52:09 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:09.229Z Local: 2/13/2020, 4:52:09 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:09.304Z Local: 2/13/2020, 4:52:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T08:52:09.307Z Local: 2/13/2020, 4:52:09 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:09.308Z Local: 2/13/2020, 4:52:09 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:09.394Z Local: 2/13/2020, 4:52:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T08:52:09.397Z Local: 2/13/2020, 4:52:09 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:09.397Z Local: 2/13/2020, 4:52:09 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:09.479Z Local: 2/13/2020, 4:52:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T08:52:09.482Z Local: 2/13/2020, 4:52:09 PM command: SELECT, rowCount: 3 
2020-02-13T08:52:09.482Z Local: 2/13/2020, 4:52:09 PM Sending 3 rows to ::1 with  
2020-02-13T08:52:09.570Z Local: 2/13/2020, 4:52:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T08:52:09.577Z Local: 2/13/2020, 4:52:09 PM command: SELECT, rowCount: 1 
2020-02-13T08:52:09.578Z Local: 2/13/2020, 4:52:09 PM Sending 1 rows to ::1 with  
2020-02-13T08:53:21.887Z Local: 2/13/2020, 4:53:21 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T08:53:21.926Z Local: 2/13/2020, 4:53:21 PM command: SELECT, rowCount: 1 
2020-02-13T08:53:21.930Z Local: 2/13/2020, 4:53:21 PM Sending 1 rows to ::1 with  
2020-02-13T08:53:21.996Z Local: 2/13/2020, 4:53:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T08:53:22.008Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.010Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:22.149Z Local: 2/13/2020, 4:53:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T08:53:22.152Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.153Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:22.207Z Local: 2/13/2020, 4:53:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T08:53:22.212Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.213Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:22.249Z Local: 2/13/2020, 4:53:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T08:53:22.252Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.253Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:22.429Z Local: 2/13/2020, 4:53:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T08:53:22.433Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.433Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:22.484Z Local: 2/13/2020, 4:53:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T08:53:22.489Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.490Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:22.561Z Local: 2/13/2020, 4:53:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T08:53:22.565Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.566Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:22.704Z Local: 2/13/2020, 4:53:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T08:53:22.708Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.710Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:22.780Z Local: 2/13/2020, 4:53:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T08:53:22.783Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.784Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:22.846Z Local: 2/13/2020, 4:53:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T08:53:22.849Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.850Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:22.904Z Local: 2/13/2020, 4:53:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T08:53:22.907Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.908Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:22.961Z Local: 2/13/2020, 4:53:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T08:53:22.964Z Local: 2/13/2020, 4:53:22 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:22.965Z Local: 2/13/2020, 4:53:22 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:23.056Z Local: 2/13/2020, 4:53:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T08:53:23.060Z Local: 2/13/2020, 4:53:23 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:23.061Z Local: 2/13/2020, 4:53:23 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:23.143Z Local: 2/13/2020, 4:53:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T08:53:23.146Z Local: 2/13/2020, 4:53:23 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:23.146Z Local: 2/13/2020, 4:53:23 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:23.252Z Local: 2/13/2020, 4:53:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T08:53:23.257Z Local: 2/13/2020, 4:53:23 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:23.258Z Local: 2/13/2020, 4:53:23 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:23.409Z Local: 2/13/2020, 4:53:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T08:53:23.414Z Local: 2/13/2020, 4:53:23 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:23.416Z Local: 2/13/2020, 4:53:23 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:23.586Z Local: 2/13/2020, 4:53:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T08:53:23.590Z Local: 2/13/2020, 4:53:23 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:23.591Z Local: 2/13/2020, 4:53:23 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:23.732Z Local: 2/13/2020, 4:53:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T08:53:23.736Z Local: 2/13/2020, 4:53:23 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:23.737Z Local: 2/13/2020, 4:53:23 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:23.926Z Local: 2/13/2020, 4:53:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T08:53:23.933Z Local: 2/13/2020, 4:53:23 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:23.935Z Local: 2/13/2020, 4:53:23 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:24.070Z Local: 2/13/2020, 4:53:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T08:53:24.073Z Local: 2/13/2020, 4:53:24 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:24.074Z Local: 2/13/2020, 4:53:24 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:24.136Z Local: 2/13/2020, 4:53:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T08:53:24.140Z Local: 2/13/2020, 4:53:24 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:24.141Z Local: 2/13/2020, 4:53:24 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:24.209Z Local: 2/13/2020, 4:53:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T08:53:24.213Z Local: 2/13/2020, 4:53:24 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:24.214Z Local: 2/13/2020, 4:53:24 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:24.313Z Local: 2/13/2020, 4:53:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T08:53:24.315Z Local: 2/13/2020, 4:53:24 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:24.316Z Local: 2/13/2020, 4:53:24 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:24.380Z Local: 2/13/2020, 4:53:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T08:53:24.383Z Local: 2/13/2020, 4:53:24 PM command: SELECT, rowCount: 3 
2020-02-13T08:53:24.383Z Local: 2/13/2020, 4:53:24 PM Sending 3 rows to ::1 with  
2020-02-13T08:53:24.454Z Local: 2/13/2020, 4:53:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T08:53:24.457Z Local: 2/13/2020, 4:53:24 PM command: SELECT, rowCount: 1 
2020-02-13T08:53:24.458Z Local: 2/13/2020, 4:53:24 PM Sending 1 rows to ::1 with  
2020-02-13T09:01:45.794Z Local: 2/13/2020, 5:01:45 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:01:45.831Z Local: 2/13/2020, 5:01:45 PM command: SELECT, rowCount: 1 
2020-02-13T09:01:45.833Z Local: 2/13/2020, 5:01:45 PM Sending 1 rows to ::1 with  
2020-02-13T09:01:45.901Z Local: 2/13/2020, 5:01:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:01:45.905Z Local: 2/13/2020, 5:01:45 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:45.905Z Local: 2/13/2020, 5:01:45 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:45.929Z Local: 2/13/2020, 5:01:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:01:45.933Z Local: 2/13/2020, 5:01:45 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:45.934Z Local: 2/13/2020, 5:01:45 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:45.965Z Local: 2/13/2020, 5:01:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:01:45.967Z Local: 2/13/2020, 5:01:45 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:45.968Z Local: 2/13/2020, 5:01:45 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:45.998Z Local: 2/13/2020, 5:01:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:01:46.000Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.001Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.059Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:01:46.063Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.064Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.100Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:01:46.103Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.104Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.157Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:01:46.162Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.164Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.223Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:01:46.226Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.228Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.287Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:01:46.290Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.291Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.332Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:01:46.336Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.337Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.377Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:01:46.380Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.381Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.421Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:01:46.426Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.427Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.513Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:01:46.517Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.517Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.621Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:01:46.624Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.625Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.700Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:01:46.702Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.702Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.788Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:01:46.792Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.793Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:46.934Z Local: 2/13/2020, 5:01:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:01:46.937Z Local: 2/13/2020, 5:01:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:46.938Z Local: 2/13/2020, 5:01:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:47.015Z Local: 2/13/2020, 5:01:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:01:47.018Z Local: 2/13/2020, 5:01:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:47.017Z Local: 2/13/2020, 5:01:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:47.079Z Local: 2/13/2020, 5:01:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:01:47.081Z Local: 2/13/2020, 5:01:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:47.082Z Local: 2/13/2020, 5:01:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:47.131Z Local: 2/13/2020, 5:01:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:01:47.134Z Local: 2/13/2020, 5:01:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:47.135Z Local: 2/13/2020, 5:01:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:47.175Z Local: 2/13/2020, 5:01:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:01:47.178Z Local: 2/13/2020, 5:01:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:47.179Z Local: 2/13/2020, 5:01:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:47.220Z Local: 2/13/2020, 5:01:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:01:47.222Z Local: 2/13/2020, 5:01:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:47.224Z Local: 2/13/2020, 5:01:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:47.266Z Local: 2/13/2020, 5:01:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:01:47.268Z Local: 2/13/2020, 5:01:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:47.268Z Local: 2/13/2020, 5:01:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:47.311Z Local: 2/13/2020, 5:01:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:01:47.313Z Local: 2/13/2020, 5:01:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:01:47.314Z Local: 2/13/2020, 5:01:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:01:47.354Z Local: 2/13/2020, 5:01:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:01:47.356Z Local: 2/13/2020, 5:01:47 PM command: SELECT, rowCount: 1 
2020-02-13T09:01:47.357Z Local: 2/13/2020, 5:01:47 PM Sending 1 rows to ::1 with  
2020-02-13T09:02:51.191Z Local: 2/13/2020, 5:02:51 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:02:51.238Z Local: 2/13/2020, 5:02:51 PM command: SELECT, rowCount: 1 
2020-02-13T09:02:51.240Z Local: 2/13/2020, 5:02:51 PM Sending 1 rows to ::1 with  
2020-02-13T09:02:51.301Z Local: 2/13/2020, 5:02:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:02:51.308Z Local: 2/13/2020, 5:02:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:51.309Z Local: 2/13/2020, 5:02:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:51.328Z Local: 2/13/2020, 5:02:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:02:51.334Z Local: 2/13/2020, 5:02:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:51.335Z Local: 2/13/2020, 5:02:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:51.363Z Local: 2/13/2020, 5:02:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:02:51.367Z Local: 2/13/2020, 5:02:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:51.368Z Local: 2/13/2020, 5:02:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:51.390Z Local: 2/13/2020, 5:02:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:02:51.392Z Local: 2/13/2020, 5:02:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:51.394Z Local: 2/13/2020, 5:02:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:51.550Z Local: 2/13/2020, 5:02:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:02:51.563Z Local: 2/13/2020, 5:02:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:51.566Z Local: 2/13/2020, 5:02:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:51.633Z Local: 2/13/2020, 5:02:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:02:51.651Z Local: 2/13/2020, 5:02:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:51.652Z Local: 2/13/2020, 5:02:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:51.702Z Local: 2/13/2020, 5:02:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:02:51.705Z Local: 2/13/2020, 5:02:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:51.706Z Local: 2/13/2020, 5:02:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:51.766Z Local: 2/13/2020, 5:02:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:02:51.770Z Local: 2/13/2020, 5:02:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:51.771Z Local: 2/13/2020, 5:02:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:51.834Z Local: 2/13/2020, 5:02:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:02:51.841Z Local: 2/13/2020, 5:02:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:51.842Z Local: 2/13/2020, 5:02:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:51.908Z Local: 2/13/2020, 5:02:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:02:51.913Z Local: 2/13/2020, 5:02:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:51.914Z Local: 2/13/2020, 5:02:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:51.979Z Local: 2/13/2020, 5:02:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:02:52.004Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.005Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:52.052Z Local: 2/13/2020, 5:02:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:02:52.069Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.071Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:52.220Z Local: 2/13/2020, 5:02:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:02:52.223Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.224Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:52.302Z Local: 2/13/2020, 5:02:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:02:52.309Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.310Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:52.389Z Local: 2/13/2020, 5:02:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:02:52.393Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.394Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:52.467Z Local: 2/13/2020, 5:02:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:02:52.469Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.470Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:52.639Z Local: 2/13/2020, 5:02:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:02:52.642Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.643Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:52.724Z Local: 2/13/2020, 5:02:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:02:52.727Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:52.726Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.795Z Local: 2/13/2020, 5:02:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:02:52.798Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.799Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:52.856Z Local: 2/13/2020, 5:02:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:02:52.858Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.859Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:52.907Z Local: 2/13/2020, 5:02:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:02:52.910Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.911Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:52.961Z Local: 2/13/2020, 5:02:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:02:52.966Z Local: 2/13/2020, 5:02:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:52.967Z Local: 2/13/2020, 5:02:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:53.185Z Local: 2/13/2020, 5:02:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:02:53.187Z Local: 2/13/2020, 5:02:53 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:53.188Z Local: 2/13/2020, 5:02:53 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:53.391Z Local: 2/13/2020, 5:02:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:02:53.394Z Local: 2/13/2020, 5:02:53 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:53.396Z Local: 2/13/2020, 5:02:53 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:53.640Z Local: 2/13/2020, 5:02:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:02:53.644Z Local: 2/13/2020, 5:02:53 PM command: SELECT, rowCount: 1 
2020-02-13T09:02:53.646Z Local: 2/13/2020, 5:02:53 PM Sending 1 rows to ::1 with  
2020-02-13T09:02:59.607Z Local: 2/13/2020, 5:02:59 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:02:59.613Z Local: 2/13/2020, 5:02:59 PM command: SELECT, rowCount: 1 
2020-02-13T09:02:59.615Z Local: 2/13/2020, 5:02:59 PM Sending 1 rows to ::1 with  
2020-02-13T09:02:59.774Z Local: 2/13/2020, 5:02:59 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:02:59.781Z Local: 2/13/2020, 5:02:59 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:59.783Z Local: 2/13/2020, 5:02:59 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:59.821Z Local: 2/13/2020, 5:02:59 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:02:59.824Z Local: 2/13/2020, 5:02:59 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:59.825Z Local: 2/13/2020, 5:02:59 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:59.858Z Local: 2/13/2020, 5:02:59 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:02:59.861Z Local: 2/13/2020, 5:02:59 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:59.863Z Local: 2/13/2020, 5:02:59 PM Sending 3 rows to ::1 with  
2020-02-13T09:02:59.887Z Local: 2/13/2020, 5:02:59 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:02:59.890Z Local: 2/13/2020, 5:02:59 PM command: SELECT, rowCount: 3 
2020-02-13T09:02:59.891Z Local: 2/13/2020, 5:02:59 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.070Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:03:00.075Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.077Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.139Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:03:00.144Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.146Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.208Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:03:00.213Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.215Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.284Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:03:00.288Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.288Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.336Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:03:00.339Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.340Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.382Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:03:00.385Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.386Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.434Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:03:00.437Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.438Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.476Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:03:00.481Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.482Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.576Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:03:00.581Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.580Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.693Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:03:00.700Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.699Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.841Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:03:00.846Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.849Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:00.959Z Local: 2/13/2020, 5:03:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:03:00.963Z Local: 2/13/2020, 5:03:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:00.964Z Local: 2/13/2020, 5:03:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:01.086Z Local: 2/13/2020, 5:03:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:03:01.092Z Local: 2/13/2020, 5:03:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:01.091Z Local: 2/13/2020, 5:03:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:01.207Z Local: 2/13/2020, 5:03:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:03:01.211Z Local: 2/13/2020, 5:03:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:01.213Z Local: 2/13/2020, 5:03:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:01.336Z Local: 2/13/2020, 5:03:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:03:01.341Z Local: 2/13/2020, 5:03:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:01.343Z Local: 2/13/2020, 5:03:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:01.429Z Local: 2/13/2020, 5:03:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:03:01.434Z Local: 2/13/2020, 5:03:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:01.435Z Local: 2/13/2020, 5:03:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:01.493Z Local: 2/13/2020, 5:03:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:03:01.498Z Local: 2/13/2020, 5:03:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:01.500Z Local: 2/13/2020, 5:03:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:01.555Z Local: 2/13/2020, 5:03:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:03:01.559Z Local: 2/13/2020, 5:03:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:01.561Z Local: 2/13/2020, 5:03:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:01.615Z Local: 2/13/2020, 5:03:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:03:01.617Z Local: 2/13/2020, 5:03:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:01.618Z Local: 2/13/2020, 5:03:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:01.668Z Local: 2/13/2020, 5:03:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:03:01.671Z Local: 2/13/2020, 5:03:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:03:01.672Z Local: 2/13/2020, 5:03:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:03:01.719Z Local: 2/13/2020, 5:03:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:03:01.721Z Local: 2/13/2020, 5:03:01 PM command: SELECT, rowCount: 1 
2020-02-13T09:03:01.722Z Local: 2/13/2020, 5:03:01 PM Sending 1 rows to ::1 with  
2020-02-13T09:45:21.662Z Local: 2/13/2020, 5:45:21 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:45:21.703Z Local: 2/13/2020, 5:45:21 PM command: SELECT, rowCount: 1 
2020-02-13T09:45:21.706Z Local: 2/13/2020, 5:45:21 PM Sending 1 rows to ::1 with  
2020-02-13T09:45:21.806Z Local: 2/13/2020, 5:45:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:45:21.811Z Local: 2/13/2020, 5:45:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:21.812Z Local: 2/13/2020, 5:45:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:21.834Z Local: 2/13/2020, 5:45:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:45:21.838Z Local: 2/13/2020, 5:45:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:21.841Z Local: 2/13/2020, 5:45:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:21.882Z Local: 2/13/2020, 5:45:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:45:21.887Z Local: 2/13/2020, 5:45:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:21.888Z Local: 2/13/2020, 5:45:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:21.930Z Local: 2/13/2020, 5:45:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:45:21.933Z Local: 2/13/2020, 5:45:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:21.934Z Local: 2/13/2020, 5:45:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.084Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:45:22.087Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.088Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.124Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:45:22.128Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.129Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.165Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:45:22.168Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.169Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.205Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:45:22.209Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.210Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.256Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:45:22.259Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.260Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.303Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:45:22.307Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.308Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.361Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:45:22.365Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.366Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.417Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:45:22.419Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.420Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.502Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:45:22.505Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.506Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.585Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:45:22.588Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.588Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.680Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:45:22.687Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.688Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.775Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:45:22.780Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.781Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:22.941Z Local: 2/13/2020, 5:45:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:45:22.944Z Local: 2/13/2020, 5:45:22 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:22.946Z Local: 2/13/2020, 5:45:22 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:23.018Z Local: 2/13/2020, 5:45:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:45:23.023Z Local: 2/13/2020, 5:45:23 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:23.025Z Local: 2/13/2020, 5:45:23 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:23.096Z Local: 2/13/2020, 5:45:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:45:23.099Z Local: 2/13/2020, 5:45:23 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:23.099Z Local: 2/13/2020, 5:45:23 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:23.150Z Local: 2/13/2020, 5:45:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:45:23.152Z Local: 2/13/2020, 5:45:23 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:23.153Z Local: 2/13/2020, 5:45:23 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:23.199Z Local: 2/13/2020, 5:45:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:45:23.201Z Local: 2/13/2020, 5:45:23 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:23.202Z Local: 2/13/2020, 5:45:23 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:23.252Z Local: 2/13/2020, 5:45:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:45:23.255Z Local: 2/13/2020, 5:45:23 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:23.256Z Local: 2/13/2020, 5:45:23 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:23.532Z Local: 2/13/2020, 5:45:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:45:23.544Z Local: 2/13/2020, 5:45:23 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:23.545Z Local: 2/13/2020, 5:45:23 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:23.778Z Local: 2/13/2020, 5:45:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:45:23.782Z Local: 2/13/2020, 5:45:23 PM command: SELECT, rowCount: 3 
2020-02-13T09:45:23.783Z Local: 2/13/2020, 5:45:23 PM Sending 3 rows to ::1 with  
2020-02-13T09:45:24.025Z Local: 2/13/2020, 5:45:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:45:24.028Z Local: 2/13/2020, 5:45:24 PM command: SELECT, rowCount: 1 
2020-02-13T09:45:24.029Z Local: 2/13/2020, 5:45:24 PM Sending 1 rows to ::1 with  
2020-02-13T09:45:26.929Z Local: 2/13/2020, 5:45:26 PM SELECT * FROM posts_table WHERE id = '45'; 
2020-02-13T09:45:26.945Z Local: 2/13/2020, 5:45:26 PM command: SELECT, rowCount: 1 
2020-02-13T09:45:26.947Z Local: 2/13/2020, 5:45:26 PM Sending 1 rows to ::1 with  
2020-02-13T09:45:57.983Z Local: 2/13/2020, 5:45:57 PM SELECT * FROM posts_table WHERE id = '45'; 
2020-02-13T09:45:58.025Z Local: 2/13/2020, 5:45:58 PM command: SELECT, rowCount: 1 
2020-02-13T09:45:58.027Z Local: 2/13/2020, 5:45:58 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:00.947Z Local: 2/13/2020, 5:46:00 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:46:00.958Z Local: 2/13/2020, 5:46:00 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:00.959Z Local: 2/13/2020, 5:46:00 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:00.985Z Local: 2/13/2020, 5:46:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:46:00.990Z Local: 2/13/2020, 5:46:00 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:00.991Z Local: 2/13/2020, 5:46:00 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.012Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:46:01.015Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.017Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.039Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:46:01.042Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.043Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.060Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:46:01.063Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.062Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.083Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:46:01.087Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.088Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.109Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:46:01.111Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.112Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.141Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:46:01.144Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.145Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.173Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:46:01.176Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.178Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.215Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:46:01.219Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.221Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.251Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:46:01.255Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.255Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.302Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:46:01.307Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.307Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.345Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:46:01.349Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.351Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.446Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:46:01.449Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.451Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.540Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:46:01.543Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.544Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.642Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:46:01.645Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.645Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.741Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:46:01.745Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.745Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.858Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:46:01.861Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:01.862Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.980Z Local: 2/13/2020, 5:46:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:46:01.988Z Local: 2/13/2020, 5:46:01 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:01.987Z Local: 2/13/2020, 5:46:01 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:02.094Z Local: 2/13/2020, 5:46:02 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:46:02.098Z Local: 2/13/2020, 5:46:02 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:02.099Z Local: 2/13/2020, 5:46:02 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:02.184Z Local: 2/13/2020, 5:46:02 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:46:02.187Z Local: 2/13/2020, 5:46:02 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:02.189Z Local: 2/13/2020, 5:46:02 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:02.263Z Local: 2/13/2020, 5:46:02 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:46:02.268Z Local: 2/13/2020, 5:46:02 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:02.269Z Local: 2/13/2020, 5:46:02 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:02.355Z Local: 2/13/2020, 5:46:02 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:46:02.360Z Local: 2/13/2020, 5:46:02 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:02.359Z Local: 2/13/2020, 5:46:02 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:02.648Z Local: 2/13/2020, 5:46:02 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:46:02.652Z Local: 2/13/2020, 5:46:02 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:02.654Z Local: 2/13/2020, 5:46:02 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:02.830Z Local: 2/13/2020, 5:46:02 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:46:02.835Z Local: 2/13/2020, 5:46:02 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:02.836Z Local: 2/13/2020, 5:46:02 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:03.091Z Local: 2/13/2020, 5:46:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:46:03.094Z Local: 2/13/2020, 5:46:03 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:03.094Z Local: 2/13/2020, 5:46:03 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:04.474Z Local: 2/13/2020, 5:46:04 PM SELECT * FROM posts_table WHERE id = '45'; 
2020-02-13T09:46:04.480Z Local: 2/13/2020, 5:46:04 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:04.482Z Local: 2/13/2020, 5:46:04 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:05.470Z Local: 2/13/2020, 5:46:05 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:46:05.474Z Local: 2/13/2020, 5:46:05 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:05.475Z Local: 2/13/2020, 5:46:05 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:05.490Z Local: 2/13/2020, 5:46:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:46:05.492Z Local: 2/13/2020, 5:46:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:05.493Z Local: 2/13/2020, 5:46:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:05.508Z Local: 2/13/2020, 5:46:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:46:05.515Z Local: 2/13/2020, 5:46:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:05.514Z Local: 2/13/2020, 5:46:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:05.530Z Local: 2/13/2020, 5:46:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:46:05.531Z Local: 2/13/2020, 5:46:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:05.533Z Local: 2/13/2020, 5:46:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:05.552Z Local: 2/13/2020, 5:46:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:46:05.554Z Local: 2/13/2020, 5:46:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:05.555Z Local: 2/13/2020, 5:46:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:05.700Z Local: 2/13/2020, 5:46:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:46:05.703Z Local: 2/13/2020, 5:46:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:05.704Z Local: 2/13/2020, 5:46:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:05.722Z Local: 2/13/2020, 5:46:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:46:05.727Z Local: 2/13/2020, 5:46:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:05.728Z Local: 2/13/2020, 5:46:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:05.913Z Local: 2/13/2020, 5:46:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:46:05.918Z Local: 2/13/2020, 5:46:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:05.920Z Local: 2/13/2020, 5:46:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:05.967Z Local: 2/13/2020, 5:46:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:46:05.974Z Local: 2/13/2020, 5:46:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:05.976Z Local: 2/13/2020, 5:46:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:06.037Z Local: 2/13/2020, 5:46:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:46:06.043Z Local: 2/13/2020, 5:46:06 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:06.045Z Local: 2/13/2020, 5:46:06 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:06.109Z Local: 2/13/2020, 5:46:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:46:06.112Z Local: 2/13/2020, 5:46:06 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:06.112Z Local: 2/13/2020, 5:46:06 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:06.145Z Local: 2/13/2020, 5:46:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:46:06.147Z Local: 2/13/2020, 5:46:06 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:06.148Z Local: 2/13/2020, 5:46:06 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:06.177Z Local: 2/13/2020, 5:46:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:46:06.180Z Local: 2/13/2020, 5:46:06 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:06.180Z Local: 2/13/2020, 5:46:06 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:06.272Z Local: 2/13/2020, 5:46:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:46:06.276Z Local: 2/13/2020, 5:46:06 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:06.278Z Local: 2/13/2020, 5:46:06 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:06.393Z Local: 2/13/2020, 5:46:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:46:06.396Z Local: 2/13/2020, 5:46:06 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:06.397Z Local: 2/13/2020, 5:46:06 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:06.489Z Local: 2/13/2020, 5:46:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:46:06.492Z Local: 2/13/2020, 5:46:06 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:06.493Z Local: 2/13/2020, 5:46:06 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:06.614Z Local: 2/13/2020, 5:46:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:46:06.621Z Local: 2/13/2020, 5:46:06 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:06.623Z Local: 2/13/2020, 5:46:06 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:06.798Z Local: 2/13/2020, 5:46:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:46:06.805Z Local: 2/13/2020, 5:46:06 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:06.807Z Local: 2/13/2020, 5:46:06 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:07.010Z Local: 2/13/2020, 5:46:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:46:07.018Z Local: 2/13/2020, 5:46:07 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:07.020Z Local: 2/13/2020, 5:46:07 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:07.197Z Local: 2/13/2020, 5:46:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:46:07.204Z Local: 2/13/2020, 5:46:07 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:07.206Z Local: 2/13/2020, 5:46:07 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:07.375Z Local: 2/13/2020, 5:46:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:46:07.383Z Local: 2/13/2020, 5:46:07 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:07.384Z Local: 2/13/2020, 5:46:07 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:07.483Z Local: 2/13/2020, 5:46:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:46:07.490Z Local: 2/13/2020, 5:46:07 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:07.492Z Local: 2/13/2020, 5:46:07 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:07.602Z Local: 2/13/2020, 5:46:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:46:07.608Z Local: 2/13/2020, 5:46:07 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:07.611Z Local: 2/13/2020, 5:46:07 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:07.727Z Local: 2/13/2020, 5:46:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:46:07.734Z Local: 2/13/2020, 5:46:07 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:07.737Z Local: 2/13/2020, 5:46:07 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:07.825Z Local: 2/13/2020, 5:46:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:46:07.830Z Local: 2/13/2020, 5:46:07 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:07.832Z Local: 2/13/2020, 5:46:07 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:07.930Z Local: 2/13/2020, 5:46:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:46:07.936Z Local: 2/13/2020, 5:46:07 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:07.938Z Local: 2/13/2020, 5:46:07 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:11.525Z Local: 2/13/2020, 5:46:11 PM SELECT * FROM posts_table WHERE id = '42'; 
2020-02-13T09:46:11.533Z Local: 2/13/2020, 5:46:11 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:11.536Z Local: 2/13/2020, 5:46:11 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:12.545Z Local: 2/13/2020, 5:46:12 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:46:12.562Z Local: 2/13/2020, 5:46:12 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:12.569Z Local: 2/13/2020, 5:46:12 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:13.226Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:46:13.233Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.236Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.278Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:46:13.284Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.287Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.342Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:46:13.350Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.352Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.403Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:46:13.410Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.412Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.462Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:46:13.468Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.469Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.494Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:46:13.496Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.498Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.520Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:46:13.523Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.525Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.540Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:46:13.542Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.543Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.566Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:46:13.569Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.570Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.594Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:46:13.597Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.599Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.627Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:46:13.631Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.632Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.663Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:46:13.668Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.669Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.766Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:46:13.770Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.771Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.874Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:46:13.878Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:13.879Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.976Z Local: 2/13/2020, 5:46:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:46:13.982Z Local: 2/13/2020, 5:46:13 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:13.981Z Local: 2/13/2020, 5:46:13 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:14.088Z Local: 2/13/2020, 5:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:46:14.091Z Local: 2/13/2020, 5:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:14.093Z Local: 2/13/2020, 5:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:14.205Z Local: 2/13/2020, 5:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:46:14.209Z Local: 2/13/2020, 5:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:14.211Z Local: 2/13/2020, 5:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:14.322Z Local: 2/13/2020, 5:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:46:14.327Z Local: 2/13/2020, 5:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:14.329Z Local: 2/13/2020, 5:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:14.462Z Local: 2/13/2020, 5:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:46:14.468Z Local: 2/13/2020, 5:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:14.469Z Local: 2/13/2020, 5:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:14.560Z Local: 2/13/2020, 5:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:46:14.563Z Local: 2/13/2020, 5:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:14.567Z Local: 2/13/2020, 5:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:14.625Z Local: 2/13/2020, 5:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:46:14.628Z Local: 2/13/2020, 5:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:14.629Z Local: 2/13/2020, 5:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:14.693Z Local: 2/13/2020, 5:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:46:14.698Z Local: 2/13/2020, 5:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:14.700Z Local: 2/13/2020, 5:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:14.750Z Local: 2/13/2020, 5:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:46:14.754Z Local: 2/13/2020, 5:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:14.755Z Local: 2/13/2020, 5:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:14.803Z Local: 2/13/2020, 5:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:46:14.806Z Local: 2/13/2020, 5:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:14.807Z Local: 2/13/2020, 5:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:14.854Z Local: 2/13/2020, 5:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:46:14.860Z Local: 2/13/2020, 5:46:14 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:14.862Z Local: 2/13/2020, 5:46:14 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:30.195Z Local: 2/13/2020, 5:46:30 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:46:30.288Z Local: 2/13/2020, 5:46:30 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:30.290Z Local: 2/13/2020, 5:46:30 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:30.399Z Local: 2/13/2020, 5:46:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:46:30.405Z Local: 2/13/2020, 5:46:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:30.406Z Local: 2/13/2020, 5:46:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:30.434Z Local: 2/13/2020, 5:46:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:46:30.440Z Local: 2/13/2020, 5:46:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:30.441Z Local: 2/13/2020, 5:46:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:30.480Z Local: 2/13/2020, 5:46:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:46:30.489Z Local: 2/13/2020, 5:46:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:30.490Z Local: 2/13/2020, 5:46:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:30.536Z Local: 2/13/2020, 5:46:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:46:30.539Z Local: 2/13/2020, 5:46:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:30.540Z Local: 2/13/2020, 5:46:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:30.695Z Local: 2/13/2020, 5:46:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:46:30.700Z Local: 2/13/2020, 5:46:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:30.702Z Local: 2/13/2020, 5:46:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:30.736Z Local: 2/13/2020, 5:46:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:46:30.739Z Local: 2/13/2020, 5:46:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:30.740Z Local: 2/13/2020, 5:46:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:30.774Z Local: 2/13/2020, 5:46:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:46:30.780Z Local: 2/13/2020, 5:46:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:30.779Z Local: 2/13/2020, 5:46:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:30.832Z Local: 2/13/2020, 5:46:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:46:30.836Z Local: 2/13/2020, 5:46:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:30.837Z Local: 2/13/2020, 5:46:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:30.901Z Local: 2/13/2020, 5:46:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:46:30.904Z Local: 2/13/2020, 5:46:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:30.905Z Local: 2/13/2020, 5:46:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:30.955Z Local: 2/13/2020, 5:46:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:46:30.958Z Local: 2/13/2020, 5:46:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:30.959Z Local: 2/13/2020, 5:46:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.009Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:46:31.013Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.014Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.051Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:46:31.054Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.055Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.134Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:46:31.138Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.140Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.219Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:46:31.223Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.224Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.349Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:46:31.351Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.352Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.478Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:46:31.487Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.488Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.602Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:46:31.607Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.608Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.699Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:46:31.701Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.702Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.786Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:46:31.791Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.792Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.880Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:46:31.884Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.884Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.926Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:46:31.933Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.934Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:31.980Z Local: 2/13/2020, 5:46:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:46:31.983Z Local: 2/13/2020, 5:46:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:31.984Z Local: 2/13/2020, 5:46:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:32.031Z Local: 2/13/2020, 5:46:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:46:32.034Z Local: 2/13/2020, 5:46:32 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:32.035Z Local: 2/13/2020, 5:46:32 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:32.075Z Local: 2/13/2020, 5:46:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:46:32.078Z Local: 2/13/2020, 5:46:32 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:32.079Z Local: 2/13/2020, 5:46:32 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:32.127Z Local: 2/13/2020, 5:46:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:46:32.130Z Local: 2/13/2020, 5:46:32 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:32.131Z Local: 2/13/2020, 5:46:32 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:33.428Z Local: 2/13/2020, 5:46:33 PM SELECT * FROM posts_table WHERE id = '48'; 
2020-02-13T09:46:33.438Z Local: 2/13/2020, 5:46:33 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:33.440Z Local: 2/13/2020, 5:46:33 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:35.166Z Local: 2/13/2020, 5:46:35 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:46:35.168Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:35.170Z Local: 2/13/2020, 5:46:35 PM Sending 1 rows to ::1 with  
2020-02-13T09:46:35.186Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:46:35.189Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.190Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.208Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:46:35.212Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.215Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.231Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:46:35.234Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.235Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.256Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:46:35.258Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.259Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.404Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:46:35.408Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.409Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.550Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:46:35.552Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.553Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.577Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:46:35.581Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.582Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.613Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:46:35.616Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.617Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.647Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:46:35.649Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.650Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.689Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:46:35.692Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.693Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.735Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:46:35.738Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.739Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.762Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:46:35.765Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.766Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.852Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:46:35.856Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.857Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:35.990Z Local: 2/13/2020, 5:46:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:46:35.995Z Local: 2/13/2020, 5:46:35 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:35.996Z Local: 2/13/2020, 5:46:35 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:36.128Z Local: 2/13/2020, 5:46:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:46:36.135Z Local: 2/13/2020, 5:46:36 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:36.134Z Local: 2/13/2020, 5:46:36 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:36.258Z Local: 2/13/2020, 5:46:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:46:36.265Z Local: 2/13/2020, 5:46:36 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:36.266Z Local: 2/13/2020, 5:46:36 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:36.396Z Local: 2/13/2020, 5:46:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:46:36.401Z Local: 2/13/2020, 5:46:36 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:36.402Z Local: 2/13/2020, 5:46:36 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:36.517Z Local: 2/13/2020, 5:46:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:46:36.522Z Local: 2/13/2020, 5:46:36 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:36.520Z Local: 2/13/2020, 5:46:36 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:36.621Z Local: 2/13/2020, 5:46:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:46:36.626Z Local: 2/13/2020, 5:46:36 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:36.625Z Local: 2/13/2020, 5:46:36 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:36.700Z Local: 2/13/2020, 5:46:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:46:36.704Z Local: 2/13/2020, 5:46:36 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:36.703Z Local: 2/13/2020, 5:46:36 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:36.754Z Local: 2/13/2020, 5:46:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:46:36.758Z Local: 2/13/2020, 5:46:36 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:36.759Z Local: 2/13/2020, 5:46:36 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:36.826Z Local: 2/13/2020, 5:46:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:46:36.832Z Local: 2/13/2020, 5:46:36 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:36.833Z Local: 2/13/2020, 5:46:36 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:36.886Z Local: 2/13/2020, 5:46:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:46:36.890Z Local: 2/13/2020, 5:46:36 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:36.889Z Local: 2/13/2020, 5:46:36 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:36.963Z Local: 2/13/2020, 5:46:36 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:46:36.967Z Local: 2/13/2020, 5:46:36 PM command: SELECT, rowCount: 3 
2020-02-13T09:46:36.968Z Local: 2/13/2020, 5:46:36 PM Sending 3 rows to ::1 with  
2020-02-13T09:46:37.082Z Local: 2/13/2020, 5:46:37 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:46:37.088Z Local: 2/13/2020, 5:46:37 PM command: SELECT, rowCount: 1 
2020-02-13T09:46:37.093Z Local: 2/13/2020, 5:46:37 PM Sending 1 rows to ::1 with  
2020-02-13T09:47:45.745Z Local: 2/13/2020, 5:47:45 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:47:45.808Z Local: 2/13/2020, 5:47:45 PM command: SELECT, rowCount: 1 
2020-02-13T09:47:45.811Z Local: 2/13/2020, 5:47:45 PM Sending 1 rows to ::1 with  
2020-02-13T09:47:45.999Z Local: 2/13/2020, 5:47:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:47:46.006Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.007Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.036Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:47:46.040Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.041Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.073Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:47:46.076Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.077Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.103Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:47:46.107Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.108Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.272Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:47:46.278Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.277Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.319Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:47:46.324Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.325Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.369Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:47:46.373Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.374Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.423Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:47:46.426Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.427Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.483Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:47:46.487Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.489Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.526Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:47:46.529Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.530Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.602Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:47:46.606Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.607Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.666Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:47:46.671Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.672Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.761Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:47:46.765Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.766Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.857Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:47:46.860Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.861Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:46.948Z Local: 2/13/2020, 5:47:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:47:46.953Z Local: 2/13/2020, 5:47:46 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:46.955Z Local: 2/13/2020, 5:47:46 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:47.058Z Local: 2/13/2020, 5:47:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:47:47.060Z Local: 2/13/2020, 5:47:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:47.061Z Local: 2/13/2020, 5:47:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:47.177Z Local: 2/13/2020, 5:47:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:47:47.185Z Local: 2/13/2020, 5:47:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:47.186Z Local: 2/13/2020, 5:47:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:47.286Z Local: 2/13/2020, 5:47:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:47:47.291Z Local: 2/13/2020, 5:47:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:47.291Z Local: 2/13/2020, 5:47:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:47.395Z Local: 2/13/2020, 5:47:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:47:47.400Z Local: 2/13/2020, 5:47:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:47.402Z Local: 2/13/2020, 5:47:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:47.487Z Local: 2/13/2020, 5:47:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:47:47.492Z Local: 2/13/2020, 5:47:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:47.494Z Local: 2/13/2020, 5:47:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:47.561Z Local: 2/13/2020, 5:47:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:47:47.565Z Local: 2/13/2020, 5:47:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:47.566Z Local: 2/13/2020, 5:47:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:47.629Z Local: 2/13/2020, 5:47:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:47:47.633Z Local: 2/13/2020, 5:47:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:47.634Z Local: 2/13/2020, 5:47:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:47.821Z Local: 2/13/2020, 5:47:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:47:47.823Z Local: 2/13/2020, 5:47:47 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:47.824Z Local: 2/13/2020, 5:47:47 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:48.026Z Local: 2/13/2020, 5:47:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:47:48.028Z Local: 2/13/2020, 5:47:48 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:48.029Z Local: 2/13/2020, 5:47:48 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:48.160Z Local: 2/13/2020, 5:47:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:47:48.164Z Local: 2/13/2020, 5:47:48 PM command: SELECT, rowCount: 1 
2020-02-13T09:47:48.166Z Local: 2/13/2020, 5:47:48 PM Sending 1 rows to ::1 with  
2020-02-13T09:47:49.882Z Local: 2/13/2020, 5:47:49 PM SELECT * FROM posts_table WHERE id = '46'; 
2020-02-13T09:47:49.886Z Local: 2/13/2020, 5:47:49 PM command: SELECT, rowCount: 1 
2020-02-13T09:47:49.888Z Local: 2/13/2020, 5:47:49 PM Sending 1 rows to ::1 with  
2020-02-13T09:47:52.417Z Local: 2/13/2020, 5:47:52 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:47:52.420Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 1 
2020-02-13T09:47:52.420Z Local: 2/13/2020, 5:47:52 PM Sending 1 rows to ::1 with  
2020-02-13T09:47:52.439Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:47:52.441Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.443Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.458Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:47:52.462Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.463Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.476Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:47:52.479Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.480Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.500Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:47:52.502Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.503Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.520Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:47:52.522Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.522Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.541Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:47:52.542Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.543Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.561Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:47:52.564Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.565Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.586Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:47:52.590Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.589Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.615Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:47:52.618Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.619Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.645Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:47:52.649Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.650Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.686Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:47:52.688Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.689Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.709Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:47:52.716Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.717Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.782Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:47:52.784Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.785Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.852Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:47:52.854Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:52.853Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.928Z Local: 2/13/2020, 5:47:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:47:52.931Z Local: 2/13/2020, 5:47:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:52.932Z Local: 2/13/2020, 5:47:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:53.016Z Local: 2/13/2020, 5:47:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:47:53.019Z Local: 2/13/2020, 5:47:53 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:53.020Z Local: 2/13/2020, 5:47:53 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:53.122Z Local: 2/13/2020, 5:47:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:47:53.125Z Local: 2/13/2020, 5:47:53 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:53.126Z Local: 2/13/2020, 5:47:53 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:53.214Z Local: 2/13/2020, 5:47:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:47:53.217Z Local: 2/13/2020, 5:47:53 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:53.218Z Local: 2/13/2020, 5:47:53 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:53.343Z Local: 2/13/2020, 5:47:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:47:53.345Z Local: 2/13/2020, 5:47:53 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:53.346Z Local: 2/13/2020, 5:47:53 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:53.441Z Local: 2/13/2020, 5:47:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:47:53.443Z Local: 2/13/2020, 5:47:53 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:53.444Z Local: 2/13/2020, 5:47:53 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:53.491Z Local: 2/13/2020, 5:47:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:47:53.494Z Local: 2/13/2020, 5:47:53 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:53.495Z Local: 2/13/2020, 5:47:53 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:53.547Z Local: 2/13/2020, 5:47:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:47:53.551Z Local: 2/13/2020, 5:47:53 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:53.552Z Local: 2/13/2020, 5:47:53 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:53.613Z Local: 2/13/2020, 5:47:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:47:53.617Z Local: 2/13/2020, 5:47:53 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:53.618Z Local: 2/13/2020, 5:47:53 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:53.669Z Local: 2/13/2020, 5:47:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:47:53.672Z Local: 2/13/2020, 5:47:53 PM command: SELECT, rowCount: 3 
2020-02-13T09:47:53.673Z Local: 2/13/2020, 5:47:53 PM Sending 3 rows to ::1 with  
2020-02-13T09:47:53.721Z Local: 2/13/2020, 5:47:53 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:47:53.724Z Local: 2/13/2020, 5:47:53 PM command: SELECT, rowCount: 1 
2020-02-13T09:47:53.724Z Local: 2/13/2020, 5:47:53 PM Sending 1 rows to ::1 with  
2020-02-13T09:50:29.570Z Local: 2/13/2020, 5:50:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:50:29.612Z Local: 2/13/2020, 5:50:29 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:29.616Z Local: 2/13/2020, 5:50:29 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:29.638Z Local: 2/13/2020, 5:50:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:50:29.642Z Local: 2/13/2020, 5:50:29 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:29.643Z Local: 2/13/2020, 5:50:29 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:29.677Z Local: 2/13/2020, 5:50:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:50:29.682Z Local: 2/13/2020, 5:50:29 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:29.684Z Local: 2/13/2020, 5:50:29 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:29.724Z Local: 2/13/2020, 5:50:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:50:29.728Z Local: 2/13/2020, 5:50:29 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:29.729Z Local: 2/13/2020, 5:50:29 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:29.887Z Local: 2/13/2020, 5:50:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:50:29.889Z Local: 2/13/2020, 5:50:29 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:29.890Z Local: 2/13/2020, 5:50:29 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.065Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:50:30.070Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.071Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.112Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:50:30.117Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.118Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.152Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:50:30.154Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.155Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.194Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:50:30.197Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.198Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.235Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:50:30.238Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.238Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.276Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:50:30.280Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.279Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.320Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:50:30.324Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.323Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.395Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:50:30.397Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.398Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.466Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:50:30.468Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.469Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.559Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:50:30.564Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.563Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.638Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:50:30.640Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.642Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.724Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:50:30.728Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.729Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.852Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:50:30.854Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.855Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.919Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:50:30.921Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.922Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:30.970Z Local: 2/13/2020, 5:50:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:50:30.974Z Local: 2/13/2020, 5:50:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:30.975Z Local: 2/13/2020, 5:50:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:31.025Z Local: 2/13/2020, 5:50:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:50:31.029Z Local: 2/13/2020, 5:50:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:31.031Z Local: 2/13/2020, 5:50:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:31.078Z Local: 2/13/2020, 5:50:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:50:31.083Z Local: 2/13/2020, 5:50:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:31.084Z Local: 2/13/2020, 5:50:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:31.268Z Local: 2/13/2020, 5:50:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:50:31.272Z Local: 2/13/2020, 5:50:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:50:31.272Z Local: 2/13/2020, 5:50:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:50:31.679Z Local: 2/13/2020, 5:50:31 PM SELECT * FROM posts_table WHERE id = '44'; 
2020-02-13T09:50:31.684Z Local: 2/13/2020, 5:50:31 PM command: SELECT, rowCount: 1 
2020-02-13T09:50:31.686Z Local: 2/13/2020, 5:50:31 PM Sending 1 rows to ::1 with  
2020-02-13T09:51:22.483Z Local: 2/13/2020, 5:51:22 PM SELECT * FROM posts_table WHERE id = '44'; 
2020-02-13T09:51:22.529Z Local: 2/13/2020, 5:51:22 PM command: SELECT, rowCount: 1 
2020-02-13T09:51:22.532Z Local: 2/13/2020, 5:51:22 PM Sending 1 rows to ::1 with  
2020-02-13T09:51:25.954Z Local: 2/13/2020, 5:51:25 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:51:25.960Z Local: 2/13/2020, 5:51:25 PM command: SELECT, rowCount: 1 
2020-02-13T09:51:25.961Z Local: 2/13/2020, 5:51:25 PM Sending 1 rows to ::1 with  
2020-02-13T09:51:25.978Z Local: 2/13/2020, 5:51:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:51:25.983Z Local: 2/13/2020, 5:51:25 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:25.984Z Local: 2/13/2020, 5:51:25 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.001Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:51:26.004Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.005Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.028Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:51:26.030Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.031Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.053Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:51:26.057Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.058Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.084Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:51:26.088Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.089Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.119Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:51:26.123Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.124Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.158Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:51:26.161Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.162Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.200Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:51:26.204Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.203Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.248Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:51:26.250Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.251Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.290Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:51:26.293Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.294Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.331Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:51:26.334Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.334Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.367Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:51:26.371Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.371Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.446Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:51:26.450Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.451Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.519Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:51:26.522Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.522Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.602Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:51:26.608Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.610Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.711Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:51:26.716Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:26.717Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.948Z Local: 2/13/2020, 5:51:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:51:26.954Z Local: 2/13/2020, 5:51:26 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:26.953Z Local: 2/13/2020, 5:51:26 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:27.070Z Local: 2/13/2020, 5:51:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:51:27.076Z Local: 2/13/2020, 5:51:27 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:27.077Z Local: 2/13/2020, 5:51:27 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:27.187Z Local: 2/13/2020, 5:51:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:51:27.192Z Local: 2/13/2020, 5:51:27 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:27.193Z Local: 2/13/2020, 5:51:27 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:27.277Z Local: 2/13/2020, 5:51:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:51:27.281Z Local: 2/13/2020, 5:51:27 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:27.283Z Local: 2/13/2020, 5:51:27 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:27.338Z Local: 2/13/2020, 5:51:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:51:27.344Z Local: 2/13/2020, 5:51:27 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:27.343Z Local: 2/13/2020, 5:51:27 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:27.394Z Local: 2/13/2020, 5:51:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:51:27.400Z Local: 2/13/2020, 5:51:27 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:27.401Z Local: 2/13/2020, 5:51:27 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:27.455Z Local: 2/13/2020, 5:51:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:51:27.460Z Local: 2/13/2020, 5:51:27 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:27.461Z Local: 2/13/2020, 5:51:27 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:27.512Z Local: 2/13/2020, 5:51:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:51:27.515Z Local: 2/13/2020, 5:51:27 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:27.516Z Local: 2/13/2020, 5:51:27 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:27.554Z Local: 2/13/2020, 5:51:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:51:27.557Z Local: 2/13/2020, 5:51:27 PM command: SELECT, rowCount: 1 
2020-02-13T09:51:27.557Z Local: 2/13/2020, 5:51:27 PM Sending 1 rows to ::1 with  
2020-02-13T09:51:57.188Z Local: 2/13/2020, 5:51:57 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:51:57.230Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 1 
2020-02-13T09:51:57.232Z Local: 2/13/2020, 5:51:57 PM Sending 1 rows to ::1 with  
2020-02-13T09:51:57.324Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:51:57.333Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.334Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:57.356Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:51:57.369Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.372Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:57.415Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:51:57.423Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.424Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:57.471Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:51:57.475Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.477Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:57.639Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:51:57.643Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.644Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:57.679Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:51:57.683Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.684Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:57.720Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:51:57.723Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.724Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:57.759Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:51:57.762Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.763Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:57.815Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:51:57.820Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.820Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:57.859Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:51:57.862Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.863Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:57.908Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:51:57.910Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.911Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:57.950Z Local: 2/13/2020, 5:51:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:51:57.953Z Local: 2/13/2020, 5:51:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:57.953Z Local: 2/13/2020, 5:51:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:58.021Z Local: 2/13/2020, 5:51:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:51:58.023Z Local: 2/13/2020, 5:51:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:58.025Z Local: 2/13/2020, 5:51:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:58.102Z Local: 2/13/2020, 5:51:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:51:58.105Z Local: 2/13/2020, 5:51:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:58.105Z Local: 2/13/2020, 5:51:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:58.184Z Local: 2/13/2020, 5:51:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:51:58.186Z Local: 2/13/2020, 5:51:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:58.187Z Local: 2/13/2020, 5:51:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:58.269Z Local: 2/13/2020, 5:51:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:51:58.273Z Local: 2/13/2020, 5:51:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:58.274Z Local: 2/13/2020, 5:51:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:58.379Z Local: 2/13/2020, 5:51:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:51:58.385Z Local: 2/13/2020, 5:51:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:58.386Z Local: 2/13/2020, 5:51:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:58.470Z Local: 2/13/2020, 5:51:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:51:58.473Z Local: 2/13/2020, 5:51:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:58.474Z Local: 2/13/2020, 5:51:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:58.551Z Local: 2/13/2020, 5:51:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:51:58.557Z Local: 2/13/2020, 5:51:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:58.558Z Local: 2/13/2020, 5:51:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:58.621Z Local: 2/13/2020, 5:51:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:51:58.623Z Local: 2/13/2020, 5:51:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:58.624Z Local: 2/13/2020, 5:51:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:58.684Z Local: 2/13/2020, 5:51:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:51:58.687Z Local: 2/13/2020, 5:51:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:58.688Z Local: 2/13/2020, 5:51:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:58.751Z Local: 2/13/2020, 5:51:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:51:58.754Z Local: 2/13/2020, 5:51:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:58.755Z Local: 2/13/2020, 5:51:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:58.983Z Local: 2/13/2020, 5:51:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:51:58.987Z Local: 2/13/2020, 5:51:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:58.988Z Local: 2/13/2020, 5:51:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:59.229Z Local: 2/13/2020, 5:51:59 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:51:59.235Z Local: 2/13/2020, 5:51:59 PM command: SELECT, rowCount: 3 
2020-02-13T09:51:59.237Z Local: 2/13/2020, 5:51:59 PM Sending 3 rows to ::1 with  
2020-02-13T09:51:59.493Z Local: 2/13/2020, 5:51:59 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:51:59.496Z Local: 2/13/2020, 5:51:59 PM command: SELECT, rowCount: 1 
2020-02-13T09:51:59.497Z Local: 2/13/2020, 5:51:59 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:12.037Z Local: 2/13/2020, 5:52:12 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:52:12.088Z Local: 2/13/2020, 5:52:12 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:12.091Z Local: 2/13/2020, 5:52:12 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:12.184Z Local: 2/13/2020, 5:52:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:52:12.189Z Local: 2/13/2020, 5:52:12 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:12.190Z Local: 2/13/2020, 5:52:12 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:20.469Z Local: 2/13/2020, 5:52:20 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:52:20.474Z Local: 2/13/2020, 5:52:20 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:20.475Z Local: 2/13/2020, 5:52:20 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:20.600Z Local: 2/13/2020, 5:52:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:52:20.604Z Local: 2/13/2020, 5:52:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:20.605Z Local: 2/13/2020, 5:52:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:30.329Z Local: 2/13/2020, 5:52:30 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:52:30.331Z Local: 2/13/2020, 5:52:30 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:30.332Z Local: 2/13/2020, 5:52:30 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:30.440Z Local: 2/13/2020, 5:52:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:52:30.444Z Local: 2/13/2020, 5:52:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:30.444Z Local: 2/13/2020, 5:52:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:30.525Z Local: 2/13/2020, 5:52:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:52:30.528Z Local: 2/13/2020, 5:52:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:30.529Z Local: 2/13/2020, 5:52:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:30.607Z Local: 2/13/2020, 5:52:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:52:30.611Z Local: 2/13/2020, 5:52:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:30.612Z Local: 2/13/2020, 5:52:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:30.674Z Local: 2/13/2020, 5:52:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:52:30.678Z Local: 2/13/2020, 5:52:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:30.679Z Local: 2/13/2020, 5:52:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:30.811Z Local: 2/13/2020, 5:52:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:52:30.814Z Local: 2/13/2020, 5:52:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:30.815Z Local: 2/13/2020, 5:52:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:30.868Z Local: 2/13/2020, 5:52:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:52:30.872Z Local: 2/13/2020, 5:52:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:30.873Z Local: 2/13/2020, 5:52:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:30.936Z Local: 2/13/2020, 5:52:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:52:30.942Z Local: 2/13/2020, 5:52:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:30.943Z Local: 2/13/2020, 5:52:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:31.137Z Local: 2/13/2020, 5:52:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:52:31.143Z Local: 2/13/2020, 5:52:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:31.145Z Local: 2/13/2020, 5:52:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:31.272Z Local: 2/13/2020, 5:52:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:52:31.276Z Local: 2/13/2020, 5:52:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:31.277Z Local: 2/13/2020, 5:52:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:31.342Z Local: 2/13/2020, 5:52:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:52:31.345Z Local: 2/13/2020, 5:52:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:31.346Z Local: 2/13/2020, 5:52:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:31.425Z Local: 2/13/2020, 5:52:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:52:31.427Z Local: 2/13/2020, 5:52:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:31.428Z Local: 2/13/2020, 5:52:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:31.484Z Local: 2/13/2020, 5:52:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:52:31.488Z Local: 2/13/2020, 5:52:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:31.489Z Local: 2/13/2020, 5:52:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:31.602Z Local: 2/13/2020, 5:52:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:52:31.606Z Local: 2/13/2020, 5:52:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:31.605Z Local: 2/13/2020, 5:52:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:31.732Z Local: 2/13/2020, 5:52:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:52:31.735Z Local: 2/13/2020, 5:52:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:31.736Z Local: 2/13/2020, 5:52:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:31.882Z Local: 2/13/2020, 5:52:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:52:31.885Z Local: 2/13/2020, 5:52:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:31.886Z Local: 2/13/2020, 5:52:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:32.034Z Local: 2/13/2020, 5:52:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:52:32.039Z Local: 2/13/2020, 5:52:32 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:32.040Z Local: 2/13/2020, 5:52:32 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:32.184Z Local: 2/13/2020, 5:52:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:52:32.188Z Local: 2/13/2020, 5:52:32 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:32.187Z Local: 2/13/2020, 5:52:32 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:32.308Z Local: 2/13/2020, 5:52:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:52:32.312Z Local: 2/13/2020, 5:52:32 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:32.311Z Local: 2/13/2020, 5:52:32 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:32.448Z Local: 2/13/2020, 5:52:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:52:32.454Z Local: 2/13/2020, 5:52:32 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:32.456Z Local: 2/13/2020, 5:52:32 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:32.561Z Local: 2/13/2020, 5:52:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:52:32.563Z Local: 2/13/2020, 5:52:32 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:32.564Z Local: 2/13/2020, 5:52:32 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:32.633Z Local: 2/13/2020, 5:52:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:52:32.636Z Local: 2/13/2020, 5:52:32 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:32.636Z Local: 2/13/2020, 5:52:32 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:32.737Z Local: 2/13/2020, 5:52:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:52:32.740Z Local: 2/13/2020, 5:52:32 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:32.742Z Local: 2/13/2020, 5:52:32 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:32.822Z Local: 2/13/2020, 5:52:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:52:32.824Z Local: 2/13/2020, 5:52:32 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:32.825Z Local: 2/13/2020, 5:52:32 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:32.902Z Local: 2/13/2020, 5:52:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:52:32.904Z Local: 2/13/2020, 5:52:32 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:32.905Z Local: 2/13/2020, 5:52:32 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:32.982Z Local: 2/13/2020, 5:52:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:52:32.985Z Local: 2/13/2020, 5:52:32 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:32.986Z Local: 2/13/2020, 5:52:32 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:33.546Z Local: 2/13/2020, 5:52:33 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T09:52:33.560Z Local: 2/13/2020, 5:52:33 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:33.566Z Local: 2/13/2020, 5:52:33 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:38.028Z Local: 2/13/2020, 5:52:38 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:52:38.038Z Local: 2/13/2020, 5:52:38 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:38.041Z Local: 2/13/2020, 5:52:38 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:38.116Z Local: 2/13/2020, 5:52:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:52:38.125Z Local: 2/13/2020, 5:52:38 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:38.128Z Local: 2/13/2020, 5:52:38 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:38.209Z Local: 2/13/2020, 5:52:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:52:38.217Z Local: 2/13/2020, 5:52:38 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:38.220Z Local: 2/13/2020, 5:52:38 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:38.273Z Local: 2/13/2020, 5:52:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:52:38.277Z Local: 2/13/2020, 5:52:38 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:38.278Z Local: 2/13/2020, 5:52:38 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:38.311Z Local: 2/13/2020, 5:52:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:52:38.314Z Local: 2/13/2020, 5:52:38 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:38.315Z Local: 2/13/2020, 5:52:38 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:38.543Z Local: 2/13/2020, 5:52:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:52:38.551Z Local: 2/13/2020, 5:52:38 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:38.553Z Local: 2/13/2020, 5:52:38 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:38.662Z Local: 2/13/2020, 5:52:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:52:38.671Z Local: 2/13/2020, 5:52:38 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:38.672Z Local: 2/13/2020, 5:52:38 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:38.743Z Local: 2/13/2020, 5:52:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:52:38.748Z Local: 2/13/2020, 5:52:38 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:38.749Z Local: 2/13/2020, 5:52:38 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:38.911Z Local: 2/13/2020, 5:52:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:52:38.914Z Local: 2/13/2020, 5:52:38 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:38.915Z Local: 2/13/2020, 5:52:38 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:38.963Z Local: 2/13/2020, 5:52:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:52:38.966Z Local: 2/13/2020, 5:52:38 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:38.966Z Local: 2/13/2020, 5:52:38 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:39.019Z Local: 2/13/2020, 5:52:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:52:39.021Z Local: 2/13/2020, 5:52:39 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:39.023Z Local: 2/13/2020, 5:52:39 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:39.081Z Local: 2/13/2020, 5:52:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:52:39.083Z Local: 2/13/2020, 5:52:39 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:39.084Z Local: 2/13/2020, 5:52:39 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:39.132Z Local: 2/13/2020, 5:52:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:52:39.136Z Local: 2/13/2020, 5:52:39 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:39.135Z Local: 2/13/2020, 5:52:39 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:39.265Z Local: 2/13/2020, 5:52:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:52:39.269Z Local: 2/13/2020, 5:52:39 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:39.270Z Local: 2/13/2020, 5:52:39 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:39.409Z Local: 2/13/2020, 5:52:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:52:39.414Z Local: 2/13/2020, 5:52:39 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:39.415Z Local: 2/13/2020, 5:52:39 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:39.559Z Local: 2/13/2020, 5:52:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:52:39.564Z Local: 2/13/2020, 5:52:39 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:39.565Z Local: 2/13/2020, 5:52:39 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:39.722Z Local: 2/13/2020, 5:52:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:52:39.728Z Local: 2/13/2020, 5:52:39 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:39.729Z Local: 2/13/2020, 5:52:39 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:39.884Z Local: 2/13/2020, 5:52:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:52:39.889Z Local: 2/13/2020, 5:52:39 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:39.891Z Local: 2/13/2020, 5:52:39 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:40.033Z Local: 2/13/2020, 5:52:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:52:40.038Z Local: 2/13/2020, 5:52:40 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:40.037Z Local: 2/13/2020, 5:52:40 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:40.203Z Local: 2/13/2020, 5:52:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:52:40.209Z Local: 2/13/2020, 5:52:40 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:40.210Z Local: 2/13/2020, 5:52:40 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:40.342Z Local: 2/13/2020, 5:52:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:52:40.346Z Local: 2/13/2020, 5:52:40 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:40.347Z Local: 2/13/2020, 5:52:40 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:40.423Z Local: 2/13/2020, 5:52:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:52:40.426Z Local: 2/13/2020, 5:52:40 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:40.427Z Local: 2/13/2020, 5:52:40 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:40.512Z Local: 2/13/2020, 5:52:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:52:40.514Z Local: 2/13/2020, 5:52:40 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:40.515Z Local: 2/13/2020, 5:52:40 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:40.587Z Local: 2/13/2020, 5:52:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:52:40.589Z Local: 2/13/2020, 5:52:40 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:40.590Z Local: 2/13/2020, 5:52:40 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:40.653Z Local: 2/13/2020, 5:52:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:52:40.656Z Local: 2/13/2020, 5:52:40 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:40.657Z Local: 2/13/2020, 5:52:40 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:40.725Z Local: 2/13/2020, 5:52:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:52:40.728Z Local: 2/13/2020, 5:52:40 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:40.729Z Local: 2/13/2020, 5:52:40 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:48.069Z Local: 2/13/2020, 5:52:48 PM SELECT * FROM posts_table WHERE id = '41'; 
2020-02-13T09:52:48.098Z Local: 2/13/2020, 5:52:48 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:48.102Z Local: 2/13/2020, 5:52:48 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:51.759Z Local: 2/13/2020, 5:52:51 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:52:51.774Z Local: 2/13/2020, 5:52:51 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:51.787Z Local: 2/13/2020, 5:52:51 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:51.828Z Local: 2/13/2020, 5:52:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:52:51.835Z Local: 2/13/2020, 5:52:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:51.838Z Local: 2/13/2020, 5:52:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:51.916Z Local: 2/13/2020, 5:52:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:52:51.924Z Local: 2/13/2020, 5:52:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:51.926Z Local: 2/13/2020, 5:52:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:51.962Z Local: 2/13/2020, 5:52:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:52:51.966Z Local: 2/13/2020, 5:52:51 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:51.968Z Local: 2/13/2020, 5:52:51 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.003Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:52:52.008Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.009Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.044Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:52:52.047Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.049Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.090Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:52:52.093Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.094Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.138Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:52:52.140Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.141Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.181Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:52:52.184Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.184Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.237Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:52:52.240Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.241Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.289Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:52:52.292Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.293Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.334Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:52:52.338Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.339Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.386Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:52:52.391Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.390Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.504Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:52:52.507Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.508Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.620Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:52:52.624Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.625Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.765Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:52:52.769Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.771Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:52.912Z Local: 2/13/2020, 5:52:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:52:52.915Z Local: 2/13/2020, 5:52:52 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:52.917Z Local: 2/13/2020, 5:52:52 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:53.016Z Local: 2/13/2020, 5:52:53 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T09:52:53.020Z Local: 2/13/2020, 5:52:53 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:53.031Z Local: 2/13/2020, 5:52:53 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:55.436Z Local: 2/13/2020, 5:52:55 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:52:55.443Z Local: 2/13/2020, 5:52:55 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:55.446Z Local: 2/13/2020, 5:52:55 PM Sending 1 rows to ::1 with  
2020-02-13T09:52:55.503Z Local: 2/13/2020, 5:52:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:52:55.511Z Local: 2/13/2020, 5:52:55 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:55.514Z Local: 2/13/2020, 5:52:55 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:55.592Z Local: 2/13/2020, 5:52:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:52:55.600Z Local: 2/13/2020, 5:52:55 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:55.603Z Local: 2/13/2020, 5:52:55 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:55.651Z Local: 2/13/2020, 5:52:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:52:55.655Z Local: 2/13/2020, 5:52:55 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:55.656Z Local: 2/13/2020, 5:52:55 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:55.691Z Local: 2/13/2020, 5:52:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:52:55.695Z Local: 2/13/2020, 5:52:55 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:55.696Z Local: 2/13/2020, 5:52:55 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:55.851Z Local: 2/13/2020, 5:52:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:52:55.856Z Local: 2/13/2020, 5:52:55 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:55.857Z Local: 2/13/2020, 5:52:55 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:55.916Z Local: 2/13/2020, 5:52:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:52:55.921Z Local: 2/13/2020, 5:52:55 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:55.923Z Local: 2/13/2020, 5:52:55 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:55.983Z Local: 2/13/2020, 5:52:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:52:55.987Z Local: 2/13/2020, 5:52:55 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:55.988Z Local: 2/13/2020, 5:52:55 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:56.153Z Local: 2/13/2020, 5:52:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:52:56.156Z Local: 2/13/2020, 5:52:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:56.157Z Local: 2/13/2020, 5:52:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:56.229Z Local: 2/13/2020, 5:52:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:52:56.232Z Local: 2/13/2020, 5:52:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:56.233Z Local: 2/13/2020, 5:52:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:56.300Z Local: 2/13/2020, 5:52:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:52:56.303Z Local: 2/13/2020, 5:52:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:56.304Z Local: 2/13/2020, 5:52:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:56.353Z Local: 2/13/2020, 5:52:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:52:56.356Z Local: 2/13/2020, 5:52:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:56.357Z Local: 2/13/2020, 5:52:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:56.412Z Local: 2/13/2020, 5:52:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:52:56.416Z Local: 2/13/2020, 5:52:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:56.415Z Local: 2/13/2020, 5:52:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:56.540Z Local: 2/13/2020, 5:52:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:52:56.544Z Local: 2/13/2020, 5:52:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:56.545Z Local: 2/13/2020, 5:52:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:56.694Z Local: 2/13/2020, 5:52:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:52:56.699Z Local: 2/13/2020, 5:52:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:56.701Z Local: 2/13/2020, 5:52:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:56.851Z Local: 2/13/2020, 5:52:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:52:56.857Z Local: 2/13/2020, 5:52:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:56.858Z Local: 2/13/2020, 5:52:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:57.007Z Local: 2/13/2020, 5:52:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:52:57.012Z Local: 2/13/2020, 5:52:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:57.014Z Local: 2/13/2020, 5:52:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:57.174Z Local: 2/13/2020, 5:52:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:52:57.177Z Local: 2/13/2020, 5:52:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:57.179Z Local: 2/13/2020, 5:52:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:57.331Z Local: 2/13/2020, 5:52:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:52:57.337Z Local: 2/13/2020, 5:52:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:57.339Z Local: 2/13/2020, 5:52:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:57.492Z Local: 2/13/2020, 5:52:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:52:57.496Z Local: 2/13/2020, 5:52:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:57.497Z Local: 2/13/2020, 5:52:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:57.612Z Local: 2/13/2020, 5:52:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:52:57.615Z Local: 2/13/2020, 5:52:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:57.616Z Local: 2/13/2020, 5:52:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:57.680Z Local: 2/13/2020, 5:52:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:52:57.683Z Local: 2/13/2020, 5:52:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:57.685Z Local: 2/13/2020, 5:52:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:57.858Z Local: 2/13/2020, 5:52:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:52:57.862Z Local: 2/13/2020, 5:52:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:57.863Z Local: 2/13/2020, 5:52:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:57.922Z Local: 2/13/2020, 5:52:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:52:57.924Z Local: 2/13/2020, 5:52:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:57.925Z Local: 2/13/2020, 5:52:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:57.990Z Local: 2/13/2020, 5:52:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:52:57.992Z Local: 2/13/2020, 5:52:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:52:57.993Z Local: 2/13/2020, 5:52:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:52:58.060Z Local: 2/13/2020, 5:52:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:52:58.063Z Local: 2/13/2020, 5:52:58 PM command: SELECT, rowCount: 1 
2020-02-13T09:52:58.064Z Local: 2/13/2020, 5:52:58 PM Sending 1 rows to ::1 with  
2020-02-13T09:53:03.180Z Local: 2/13/2020, 5:53:03 PM SELECT * FROM posts_table WHERE id = '31'; 
2020-02-13T09:53:03.187Z Local: 2/13/2020, 5:53:03 PM command: SELECT, rowCount: 1 
2020-02-13T09:53:03.256Z Local: 2/13/2020, 5:53:03 PM Sending 1 rows to ::1 with  
2020-02-13T09:53:51.929Z Local: 2/13/2020, 5:53:51 PM SELECT * FROM posts_table WHERE id = '31'; 
2020-02-13T09:53:51.968Z Local: 2/13/2020, 5:53:51 PM command: SELECT, rowCount: 1 
2020-02-13T09:53:51.984Z Local: 2/13/2020, 5:53:51 PM Sending 1 rows to ::1 with  
2020-02-13T09:53:56.298Z Local: 2/13/2020, 5:53:56 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:53:56.302Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 1 
2020-02-13T09:53:56.304Z Local: 2/13/2020, 5:53:56 PM Sending 1 rows to ::1 with  
2020-02-13T09:53:56.330Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:53:56.334Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.335Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:56.356Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:53:56.358Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.360Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:56.389Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:53:56.393Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.393Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:56.420Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:53:56.424Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.425Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:56.468Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:53:56.472Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.473Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:56.514Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:53:56.517Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.518Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:56.559Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:53:56.562Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.563Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:56.613Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:53:56.615Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.616Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:56.676Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:53:56.679Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.680Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:56.756Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:53:56.760Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.761Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:56.843Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:53:56.846Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.847Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:56.925Z Local: 2/13/2020, 5:53:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:53:56.950Z Local: 2/13/2020, 5:53:56 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:56.951Z Local: 2/13/2020, 5:53:56 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:57.062Z Local: 2/13/2020, 5:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:53:57.066Z Local: 2/13/2020, 5:53:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:57.067Z Local: 2/13/2020, 5:53:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:57.163Z Local: 2/13/2020, 5:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:53:57.166Z Local: 2/13/2020, 5:53:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:57.166Z Local: 2/13/2020, 5:53:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:57.290Z Local: 2/13/2020, 5:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:53:57.295Z Local: 2/13/2020, 5:53:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:57.296Z Local: 2/13/2020, 5:53:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:57.414Z Local: 2/13/2020, 5:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:53:57.417Z Local: 2/13/2020, 5:53:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:57.418Z Local: 2/13/2020, 5:53:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:57.565Z Local: 2/13/2020, 5:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:53:57.569Z Local: 2/13/2020, 5:53:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:57.570Z Local: 2/13/2020, 5:53:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:57.671Z Local: 2/13/2020, 5:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:53:57.673Z Local: 2/13/2020, 5:53:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:57.674Z Local: 2/13/2020, 5:53:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:57.754Z Local: 2/13/2020, 5:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:53:57.757Z Local: 2/13/2020, 5:53:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:57.758Z Local: 2/13/2020, 5:53:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:57.833Z Local: 2/13/2020, 5:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:53:57.835Z Local: 2/13/2020, 5:53:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:57.836Z Local: 2/13/2020, 5:53:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:57.908Z Local: 2/13/2020, 5:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:53:57.912Z Local: 2/13/2020, 5:53:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:57.913Z Local: 2/13/2020, 5:53:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:57.987Z Local: 2/13/2020, 5:53:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:53:57.992Z Local: 2/13/2020, 5:53:57 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:57.993Z Local: 2/13/2020, 5:53:57 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:58.066Z Local: 2/13/2020, 5:53:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:53:58.069Z Local: 2/13/2020, 5:53:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:58.070Z Local: 2/13/2020, 5:53:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:58.145Z Local: 2/13/2020, 5:53:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:53:58.147Z Local: 2/13/2020, 5:53:58 PM command: SELECT, rowCount: 3 
2020-02-13T09:53:58.148Z Local: 2/13/2020, 5:53:58 PM Sending 3 rows to ::1 with  
2020-02-13T09:53:58.234Z Local: 2/13/2020, 5:53:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:53:58.238Z Local: 2/13/2020, 5:53:58 PM command: SELECT, rowCount: 1 
2020-02-13T09:53:58.239Z Local: 2/13/2020, 5:53:58 PM Sending 1 rows to ::1 with  
2020-02-13T09:54:01.067Z Local: 2/13/2020, 5:54:01 PM SELECT * FROM posts_table WHERE id = '45'; 
2020-02-13T09:54:01.071Z Local: 2/13/2020, 5:54:01 PM command: SELECT, rowCount: 1 
2020-02-13T09:54:01.075Z Local: 2/13/2020, 5:54:01 PM Sending 1 rows to ::1 with  
2020-02-13T09:54:03.239Z Local: 2/13/2020, 5:54:03 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:54:03.245Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 1 
2020-02-13T09:54:03.246Z Local: 2/13/2020, 5:54:03 PM Sending 1 rows to ::1 with  
2020-02-13T09:54:03.263Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:54:03.264Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.265Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.293Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:54:03.296Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.297Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.332Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:54:03.335Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.336Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.378Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:54:03.382Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.383Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.422Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:54:03.427Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.428Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.471Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:54:03.473Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.474Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.526Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:54:03.529Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.530Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.570Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:54:03.574Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.576Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.626Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:54:03.630Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.630Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.686Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:54:03.689Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.690Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.742Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:54:03.748Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.749Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.801Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:54:03.804Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.805Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:03.926Z Local: 2/13/2020, 5:54:03 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:54:03.930Z Local: 2/13/2020, 5:54:03 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:03.932Z Local: 2/13/2020, 5:54:03 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:04.084Z Local: 2/13/2020, 5:54:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:54:04.090Z Local: 2/13/2020, 5:54:04 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:04.092Z Local: 2/13/2020, 5:54:04 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:04.267Z Local: 2/13/2020, 5:54:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:54:04.273Z Local: 2/13/2020, 5:54:04 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:04.275Z Local: 2/13/2020, 5:54:04 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:04.423Z Local: 2/13/2020, 5:54:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:54:04.427Z Local: 2/13/2020, 5:54:04 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:04.428Z Local: 2/13/2020, 5:54:04 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:04.582Z Local: 2/13/2020, 5:54:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:54:04.586Z Local: 2/13/2020, 5:54:04 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:04.588Z Local: 2/13/2020, 5:54:04 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:04.736Z Local: 2/13/2020, 5:54:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:54:04.742Z Local: 2/13/2020, 5:54:04 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:04.743Z Local: 2/13/2020, 5:54:04 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:04.898Z Local: 2/13/2020, 5:54:04 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:54:04.902Z Local: 2/13/2020, 5:54:04 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:04.904Z Local: 2/13/2020, 5:54:04 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:05.032Z Local: 2/13/2020, 5:54:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:54:05.038Z Local: 2/13/2020, 5:54:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:05.040Z Local: 2/13/2020, 5:54:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:05.116Z Local: 2/13/2020, 5:54:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:54:05.119Z Local: 2/13/2020, 5:54:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:05.119Z Local: 2/13/2020, 5:54:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:05.191Z Local: 2/13/2020, 5:54:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:54:05.194Z Local: 2/13/2020, 5:54:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:05.195Z Local: 2/13/2020, 5:54:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:05.258Z Local: 2/13/2020, 5:54:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:54:05.261Z Local: 2/13/2020, 5:54:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:05.262Z Local: 2/13/2020, 5:54:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:05.322Z Local: 2/13/2020, 5:54:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:54:05.323Z Local: 2/13/2020, 5:54:05 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:05.324Z Local: 2/13/2020, 5:54:05 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:05.386Z Local: 2/13/2020, 5:54:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:54:05.390Z Local: 2/13/2020, 5:54:05 PM command: SELECT, rowCount: 1 
2020-02-13T09:54:05.391Z Local: 2/13/2020, 5:54:05 PM Sending 1 rows to ::1 with  
2020-02-13T09:54:19.815Z Local: 2/13/2020, 5:54:19 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:54:19.871Z Local: 2/13/2020, 5:54:19 PM Sending 1 rows to ::1 with  
2020-02-13T09:54:19.870Z Local: 2/13/2020, 5:54:19 PM command: SELECT, rowCount: 1 
2020-02-13T09:54:19.998Z Local: 2/13/2020, 5:54:19 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:54:20.002Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.003Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.039Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:54:20.043Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.044Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.091Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:54:20.093Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.094Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.143Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:54:20.145Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.146Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.284Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:54:20.288Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.288Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.331Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:54:20.335Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.336Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.385Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:54:20.388Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.392Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.449Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:54:20.452Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.453Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.509Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:54:20.511Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.512Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.569Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:54:20.572Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.573Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.632Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:54:20.635Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.636Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.697Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:54:20.701Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.702Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.792Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:54:20.794Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.795Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.886Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:54:20.889Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.889Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:20.985Z Local: 2/13/2020, 5:54:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:54:20.988Z Local: 2/13/2020, 5:54:20 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:20.988Z Local: 2/13/2020, 5:54:20 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:21.076Z Local: 2/13/2020, 5:54:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:54:21.079Z Local: 2/13/2020, 5:54:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:21.080Z Local: 2/13/2020, 5:54:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:21.176Z Local: 2/13/2020, 5:54:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:54:21.179Z Local: 2/13/2020, 5:54:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:21.180Z Local: 2/13/2020, 5:54:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:21.280Z Local: 2/13/2020, 5:54:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:54:21.283Z Local: 2/13/2020, 5:54:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:21.284Z Local: 2/13/2020, 5:54:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:21.392Z Local: 2/13/2020, 5:54:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:54:21.395Z Local: 2/13/2020, 5:54:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:21.397Z Local: 2/13/2020, 5:54:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:21.482Z Local: 2/13/2020, 5:54:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:54:21.486Z Local: 2/13/2020, 5:54:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:21.487Z Local: 2/13/2020, 5:54:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:21.569Z Local: 2/13/2020, 5:54:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:54:21.572Z Local: 2/13/2020, 5:54:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:21.573Z Local: 2/13/2020, 5:54:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:21.653Z Local: 2/13/2020, 5:54:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:54:21.656Z Local: 2/13/2020, 5:54:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:21.657Z Local: 2/13/2020, 5:54:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:21.746Z Local: 2/13/2020, 5:54:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:54:21.748Z Local: 2/13/2020, 5:54:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:21.749Z Local: 2/13/2020, 5:54:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:21.833Z Local: 2/13/2020, 5:54:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:54:21.836Z Local: 2/13/2020, 5:54:21 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:21.836Z Local: 2/13/2020, 5:54:21 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:21.925Z Local: 2/13/2020, 5:54:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:54:21.927Z Local: 2/13/2020, 5:54:21 PM command: SELECT, rowCount: 1 
2020-02-13T09:54:21.928Z Local: 2/13/2020, 5:54:21 PM Sending 1 rows to ::1 with  
2020-02-13T09:54:29.369Z Local: 2/13/2020, 5:54:29 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T09:54:29.372Z Local: 2/13/2020, 5:54:29 PM command: SELECT, rowCount: 1 
2020-02-13T09:54:29.373Z Local: 2/13/2020, 5:54:29 PM Sending 1 rows to ::1 with  
2020-02-13T09:54:29.563Z Local: 2/13/2020, 5:54:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T09:54:29.567Z Local: 2/13/2020, 5:54:29 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:29.568Z Local: 2/13/2020, 5:54:29 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:29.617Z Local: 2/13/2020, 5:54:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T09:54:29.620Z Local: 2/13/2020, 5:54:29 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:29.621Z Local: 2/13/2020, 5:54:29 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:29.664Z Local: 2/13/2020, 5:54:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T09:54:29.670Z Local: 2/13/2020, 5:54:29 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:29.671Z Local: 2/13/2020, 5:54:29 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:29.715Z Local: 2/13/2020, 5:54:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T09:54:29.719Z Local: 2/13/2020, 5:54:29 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:29.721Z Local: 2/13/2020, 5:54:29 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:29.874Z Local: 2/13/2020, 5:54:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T09:54:29.877Z Local: 2/13/2020, 5:54:29 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:29.878Z Local: 2/13/2020, 5:54:29 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:29.944Z Local: 2/13/2020, 5:54:29 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T09:54:29.957Z Local: 2/13/2020, 5:54:29 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:29.958Z Local: 2/13/2020, 5:54:29 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:30.034Z Local: 2/13/2020, 5:54:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T09:54:30.038Z Local: 2/13/2020, 5:54:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:30.039Z Local: 2/13/2020, 5:54:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:30.114Z Local: 2/13/2020, 5:54:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T09:54:30.117Z Local: 2/13/2020, 5:54:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:30.118Z Local: 2/13/2020, 5:54:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:30.205Z Local: 2/13/2020, 5:54:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T09:54:30.209Z Local: 2/13/2020, 5:54:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:30.208Z Local: 2/13/2020, 5:54:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:30.280Z Local: 2/13/2020, 5:54:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T09:54:30.284Z Local: 2/13/2020, 5:54:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:30.286Z Local: 2/13/2020, 5:54:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:30.359Z Local: 2/13/2020, 5:54:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T09:54:30.361Z Local: 2/13/2020, 5:54:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:30.362Z Local: 2/13/2020, 5:54:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:30.421Z Local: 2/13/2020, 5:54:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T09:54:30.425Z Local: 2/13/2020, 5:54:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:30.426Z Local: 2/13/2020, 5:54:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:30.526Z Local: 2/13/2020, 5:54:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T09:54:30.530Z Local: 2/13/2020, 5:54:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:30.530Z Local: 2/13/2020, 5:54:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:30.625Z Local: 2/13/2020, 5:54:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T09:54:30.628Z Local: 2/13/2020, 5:54:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:30.629Z Local: 2/13/2020, 5:54:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:30.715Z Local: 2/13/2020, 5:54:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T09:54:30.719Z Local: 2/13/2020, 5:54:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:30.718Z Local: 2/13/2020, 5:54:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:30.811Z Local: 2/13/2020, 5:54:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T09:54:30.815Z Local: 2/13/2020, 5:54:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:30.816Z Local: 2/13/2020, 5:54:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:30.955Z Local: 2/13/2020, 5:54:30 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T09:54:30.958Z Local: 2/13/2020, 5:54:30 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:30.959Z Local: 2/13/2020, 5:54:30 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:31.053Z Local: 2/13/2020, 5:54:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T09:54:31.056Z Local: 2/13/2020, 5:54:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:31.057Z Local: 2/13/2020, 5:54:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:31.140Z Local: 2/13/2020, 5:54:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T09:54:31.142Z Local: 2/13/2020, 5:54:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:31.143Z Local: 2/13/2020, 5:54:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:31.221Z Local: 2/13/2020, 5:54:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T09:54:31.224Z Local: 2/13/2020, 5:54:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:31.224Z Local: 2/13/2020, 5:54:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:31.291Z Local: 2/13/2020, 5:54:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T09:54:31.293Z Local: 2/13/2020, 5:54:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:31.293Z Local: 2/13/2020, 5:54:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:31.359Z Local: 2/13/2020, 5:54:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T09:54:31.362Z Local: 2/13/2020, 5:54:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:31.362Z Local: 2/13/2020, 5:54:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:31.440Z Local: 2/13/2020, 5:54:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T09:54:31.442Z Local: 2/13/2020, 5:54:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:31.443Z Local: 2/13/2020, 5:54:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:31.520Z Local: 2/13/2020, 5:54:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T09:54:31.523Z Local: 2/13/2020, 5:54:31 PM command: SELECT, rowCount: 3 
2020-02-13T09:54:31.524Z Local: 2/13/2020, 5:54:31 PM Sending 3 rows to ::1 with  
2020-02-13T09:54:31.604Z Local: 2/13/2020, 5:54:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T09:54:31.606Z Local: 2/13/2020, 5:54:31 PM command: SELECT, rowCount: 1 
2020-02-13T09:54:31.607Z Local: 2/13/2020, 5:54:31 PM Sending 1 rows to ::1 with  
2020-02-13T10:06:40.505Z Local: 2/13/2020, 6:06:40 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:06:40.542Z Local: 2/13/2020, 6:06:40 PM command: SELECT, rowCount: 1 
2020-02-13T10:06:40.544Z Local: 2/13/2020, 6:06:40 PM Sending 1 rows to ::1 with  
2020-02-13T10:06:40.599Z Local: 2/13/2020, 6:06:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:06:40.602Z Local: 2/13/2020, 6:06:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:40.603Z Local: 2/13/2020, 6:06:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:40.728Z Local: 2/13/2020, 6:06:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:06:40.732Z Local: 2/13/2020, 6:06:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:40.733Z Local: 2/13/2020, 6:06:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:40.783Z Local: 2/13/2020, 6:06:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:06:40.786Z Local: 2/13/2020, 6:06:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:40.787Z Local: 2/13/2020, 6:06:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:40.996Z Local: 2/13/2020, 6:06:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:06:40.998Z Local: 2/13/2020, 6:06:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:40.999Z Local: 2/13/2020, 6:06:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.047Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:06:41.050Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.051Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.100Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:06:41.102Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.103Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.151Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:06:41.155Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.156Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.210Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:06:41.213Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.214Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.283Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:06:41.286Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.288Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.351Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:06:41.355Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.356Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.423Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:06:41.426Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.427Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.499Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:06:41.503Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.506Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.625Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:06:41.628Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.629Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.734Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:06:41.737Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.738Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.841Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:06:41.844Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.845Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:41.969Z Local: 2/13/2020, 6:06:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:06:41.972Z Local: 2/13/2020, 6:06:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:41.973Z Local: 2/13/2020, 6:06:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:42.081Z Local: 2/13/2020, 6:06:42 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:06:42.084Z Local: 2/13/2020, 6:06:42 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:42.085Z Local: 2/13/2020, 6:06:42 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:42.181Z Local: 2/13/2020, 6:06:42 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:06:42.184Z Local: 2/13/2020, 6:06:42 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:42.185Z Local: 2/13/2020, 6:06:42 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:42.274Z Local: 2/13/2020, 6:06:42 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:06:42.278Z Local: 2/13/2020, 6:06:42 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:42.277Z Local: 2/13/2020, 6:06:42 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:42.356Z Local: 2/13/2020, 6:06:42 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:06:42.358Z Local: 2/13/2020, 6:06:42 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:42.359Z Local: 2/13/2020, 6:06:42 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:42.429Z Local: 2/13/2020, 6:06:42 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:06:42.433Z Local: 2/13/2020, 6:06:42 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:42.433Z Local: 2/13/2020, 6:06:42 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:42.503Z Local: 2/13/2020, 6:06:42 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:06:42.507Z Local: 2/13/2020, 6:06:42 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:42.507Z Local: 2/13/2020, 6:06:42 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:42.583Z Local: 2/13/2020, 6:06:42 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:06:42.586Z Local: 2/13/2020, 6:06:42 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:42.587Z Local: 2/13/2020, 6:06:42 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:42.657Z Local: 2/13/2020, 6:06:42 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:06:42.659Z Local: 2/13/2020, 6:06:42 PM command: SELECT, rowCount: 3 
2020-02-13T10:06:42.660Z Local: 2/13/2020, 6:06:42 PM Sending 3 rows to ::1 with  
2020-02-13T10:06:42.739Z Local: 2/13/2020, 6:06:42 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:06:42.742Z Local: 2/13/2020, 6:06:42 PM command: SELECT, rowCount: 1 
2020-02-13T10:06:42.743Z Local: 2/13/2020, 6:06:42 PM Sending 1 rows to ::1 with  
2020-02-13T10:25:19.903Z Local: 2/13/2020, 6:25:19 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:25:19.937Z Local: 2/13/2020, 6:25:19 PM command: SELECT, rowCount: 1 
2020-02-13T10:25:19.939Z Local: 2/13/2020, 6:25:19 PM Sending 1 rows to ::1 with  
2020-02-13T10:25:25.884Z Local: 2/13/2020, 6:25:25 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:25:25.887Z Local: 2/13/2020, 6:25:25 PM command: SELECT, rowCount: 1 
2020-02-13T10:25:25.888Z Local: 2/13/2020, 6:25:25 PM Sending 1 rows to ::1 with  
2020-02-13T10:25:26.053Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:25:26.056Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.057Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.111Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:25:26.114Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.116Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.162Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:25:26.166Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.167Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.210Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:25:26.214Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.217Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.373Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:25:26.375Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.376Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.424Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:25:26.427Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.428Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.483Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:25:26.486Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.487Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.540Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:25:26.543Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.543Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.609Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:25:26.612Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.613Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.667Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:25:26.671Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.672Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.731Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:25:26.734Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.735Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.802Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:25:26.805Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.806Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.896Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:25:26.899Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:26.898Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.990Z Local: 2/13/2020, 6:25:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:25:26.992Z Local: 2/13/2020, 6:25:26 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:26.993Z Local: 2/13/2020, 6:25:26 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:27.087Z Local: 2/13/2020, 6:25:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:25:27.090Z Local: 2/13/2020, 6:25:27 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:27.091Z Local: 2/13/2020, 6:25:27 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:27.193Z Local: 2/13/2020, 6:25:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:25:27.197Z Local: 2/13/2020, 6:25:27 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:27.196Z Local: 2/13/2020, 6:25:27 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:27.306Z Local: 2/13/2020, 6:25:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:25:27.313Z Local: 2/13/2020, 6:25:27 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:27.312Z Local: 2/13/2020, 6:25:27 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:27.424Z Local: 2/13/2020, 6:25:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:25:27.428Z Local: 2/13/2020, 6:25:27 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:27.429Z Local: 2/13/2020, 6:25:27 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:27.540Z Local: 2/13/2020, 6:25:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:25:27.542Z Local: 2/13/2020, 6:25:27 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:27.543Z Local: 2/13/2020, 6:25:27 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:27.706Z Local: 2/13/2020, 6:25:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:25:27.710Z Local: 2/13/2020, 6:25:27 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:27.709Z Local: 2/13/2020, 6:25:27 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:27.799Z Local: 2/13/2020, 6:25:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:25:27.802Z Local: 2/13/2020, 6:25:27 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:27.803Z Local: 2/13/2020, 6:25:27 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:27.873Z Local: 2/13/2020, 6:25:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:25:27.876Z Local: 2/13/2020, 6:25:27 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:27.877Z Local: 2/13/2020, 6:25:27 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:27.956Z Local: 2/13/2020, 6:25:27 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:25:27.959Z Local: 2/13/2020, 6:25:27 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:27.959Z Local: 2/13/2020, 6:25:27 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:28.037Z Local: 2/13/2020, 6:25:28 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:25:28.040Z Local: 2/13/2020, 6:25:28 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:28.041Z Local: 2/13/2020, 6:25:28 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:28.129Z Local: 2/13/2020, 6:25:28 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:25:28.135Z Local: 2/13/2020, 6:25:28 PM command: SELECT, rowCount: 1 
2020-02-13T10:25:28.136Z Local: 2/13/2020, 6:25:28 PM Sending 1 rows to ::1 with  
2020-02-13T10:25:36.753Z Local: 2/13/2020, 6:25:36 PM SELECT * FROM posts_table WHERE id = '69'; 
2020-02-13T10:25:36.758Z Local: 2/13/2020, 6:25:36 PM command: SELECT, rowCount: 1 
2020-02-13T10:25:36.759Z Local: 2/13/2020, 6:25:36 PM Sending 1 rows to ::1 with  
2020-02-13T10:25:40.045Z Local: 2/13/2020, 6:25:40 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:25:40.050Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 1 
2020-02-13T10:25:40.051Z Local: 2/13/2020, 6:25:40 PM Sending 1 rows to ::1 with  
2020-02-13T10:25:40.073Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:25:40.076Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.077Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.100Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:25:40.102Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.103Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.144Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:25:40.147Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.148Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.186Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:25:40.190Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.191Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.228Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:25:40.231Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.232Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.274Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:25:40.277Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.279Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.332Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:25:40.335Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.336Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.387Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:25:40.390Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.391Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.448Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:25:40.451Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.452Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.507Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:25:40.511Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.511Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.582Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:25:40.585Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.586Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.635Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:25:40.638Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.639Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.723Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:25:40.726Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.726Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.825Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:25:40.828Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.829Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:40.925Z Local: 2/13/2020, 6:25:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:25:40.928Z Local: 2/13/2020, 6:25:40 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:40.929Z Local: 2/13/2020, 6:25:40 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:41.018Z Local: 2/13/2020, 6:25:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:25:41.019Z Local: 2/13/2020, 6:25:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:41.020Z Local: 2/13/2020, 6:25:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:41.147Z Local: 2/13/2020, 6:25:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:25:41.149Z Local: 2/13/2020, 6:25:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:41.151Z Local: 2/13/2020, 6:25:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:41.249Z Local: 2/13/2020, 6:25:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:25:41.252Z Local: 2/13/2020, 6:25:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:41.253Z Local: 2/13/2020, 6:25:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:41.343Z Local: 2/13/2020, 6:25:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:25:41.345Z Local: 2/13/2020, 6:25:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:41.346Z Local: 2/13/2020, 6:25:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:41.431Z Local: 2/13/2020, 6:25:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:25:41.433Z Local: 2/13/2020, 6:25:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:41.434Z Local: 2/13/2020, 6:25:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:41.497Z Local: 2/13/2020, 6:25:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:25:41.501Z Local: 2/13/2020, 6:25:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:41.502Z Local: 2/13/2020, 6:25:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:41.582Z Local: 2/13/2020, 6:25:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:25:41.584Z Local: 2/13/2020, 6:25:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:41.585Z Local: 2/13/2020, 6:25:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:41.653Z Local: 2/13/2020, 6:25:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:25:41.655Z Local: 2/13/2020, 6:25:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:41.656Z Local: 2/13/2020, 6:25:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:41.726Z Local: 2/13/2020, 6:25:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:25:41.729Z Local: 2/13/2020, 6:25:41 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:41.731Z Local: 2/13/2020, 6:25:41 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:41.801Z Local: 2/13/2020, 6:25:41 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:25:41.804Z Local: 2/13/2020, 6:25:41 PM command: SELECT, rowCount: 1 
2020-02-13T10:25:41.805Z Local: 2/13/2020, 6:25:41 PM Sending 1 rows to ::1 with  
2020-02-13T10:25:42.950Z Local: 2/13/2020, 6:25:42 PM SELECT * FROM posts_table WHERE id = '70'; 
2020-02-13T10:25:42.953Z Local: 2/13/2020, 6:25:42 PM command: SELECT, rowCount: 1 
2020-02-13T10:25:42.954Z Local: 2/13/2020, 6:25:42 PM Sending 1 rows to ::1 with  
2020-02-13T10:25:45.353Z Local: 2/13/2020, 6:25:45 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:25:45.366Z Local: 2/13/2020, 6:25:45 PM command: SELECT, rowCount: 1 
2020-02-13T10:25:45.368Z Local: 2/13/2020, 6:25:45 PM Sending 1 rows to ::1 with  
2020-02-13T10:25:45.385Z Local: 2/13/2020, 6:25:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:25:45.387Z Local: 2/13/2020, 6:25:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:45.389Z Local: 2/13/2020, 6:25:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:45.408Z Local: 2/13/2020, 6:25:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:25:45.411Z Local: 2/13/2020, 6:25:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:45.413Z Local: 2/13/2020, 6:25:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:45.450Z Local: 2/13/2020, 6:25:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:25:45.454Z Local: 2/13/2020, 6:25:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:45.455Z Local: 2/13/2020, 6:25:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:45.612Z Local: 2/13/2020, 6:25:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:25:45.615Z Local: 2/13/2020, 6:25:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:45.616Z Local: 2/13/2020, 6:25:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:45.645Z Local: 2/13/2020, 6:25:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:25:45.649Z Local: 2/13/2020, 6:25:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:45.650Z Local: 2/13/2020, 6:25:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:45.684Z Local: 2/13/2020, 6:25:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:25:45.712Z Local: 2/13/2020, 6:25:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:45.713Z Local: 2/13/2020, 6:25:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:45.748Z Local: 2/13/2020, 6:25:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:25:45.751Z Local: 2/13/2020, 6:25:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:45.751Z Local: 2/13/2020, 6:25:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:45.889Z Local: 2/13/2020, 6:25:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:25:45.891Z Local: 2/13/2020, 6:25:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:45.892Z Local: 2/13/2020, 6:25:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:45.925Z Local: 2/13/2020, 6:25:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:25:45.927Z Local: 2/13/2020, 6:25:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:45.928Z Local: 2/13/2020, 6:25:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:45.982Z Local: 2/13/2020, 6:25:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:25:45.984Z Local: 2/13/2020, 6:25:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:45.985Z Local: 2/13/2020, 6:25:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:46.032Z Local: 2/13/2020, 6:25:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:25:46.035Z Local: 2/13/2020, 6:25:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:46.035Z Local: 2/13/2020, 6:25:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:46.078Z Local: 2/13/2020, 6:25:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:25:46.081Z Local: 2/13/2020, 6:25:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:46.083Z Local: 2/13/2020, 6:25:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:46.186Z Local: 2/13/2020, 6:25:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:25:46.187Z Local: 2/13/2020, 6:25:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:46.188Z Local: 2/13/2020, 6:25:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:46.279Z Local: 2/13/2020, 6:25:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:25:46.286Z Local: 2/13/2020, 6:25:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:46.287Z Local: 2/13/2020, 6:25:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:46.382Z Local: 2/13/2020, 6:25:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:25:46.385Z Local: 2/13/2020, 6:25:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:46.386Z Local: 2/13/2020, 6:25:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:46.473Z Local: 2/13/2020, 6:25:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:25:46.476Z Local: 2/13/2020, 6:25:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:46.476Z Local: 2/13/2020, 6:25:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:46.576Z Local: 2/13/2020, 6:25:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:25:46.580Z Local: 2/13/2020, 6:25:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:46.580Z Local: 2/13/2020, 6:25:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:46.676Z Local: 2/13/2020, 6:25:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:25:46.683Z Local: 2/13/2020, 6:25:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:46.684Z Local: 2/13/2020, 6:25:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:46.786Z Local: 2/13/2020, 6:25:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:25:46.789Z Local: 2/13/2020, 6:25:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:46.790Z Local: 2/13/2020, 6:25:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:46.864Z Local: 2/13/2020, 6:25:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:25:46.867Z Local: 2/13/2020, 6:25:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:46.868Z Local: 2/13/2020, 6:25:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:46.933Z Local: 2/13/2020, 6:25:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:25:46.935Z Local: 2/13/2020, 6:25:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:46.936Z Local: 2/13/2020, 6:25:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:47.006Z Local: 2/13/2020, 6:25:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:25:47.009Z Local: 2/13/2020, 6:25:47 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:47.010Z Local: 2/13/2020, 6:25:47 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:47.081Z Local: 2/13/2020, 6:25:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:25:47.084Z Local: 2/13/2020, 6:25:47 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:47.084Z Local: 2/13/2020, 6:25:47 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:47.153Z Local: 2/13/2020, 6:25:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:25:47.156Z Local: 2/13/2020, 6:25:47 PM command: SELECT, rowCount: 3 
2020-02-13T10:25:47.157Z Local: 2/13/2020, 6:25:47 PM Sending 3 rows to ::1 with  
2020-02-13T10:25:47.235Z Local: 2/13/2020, 6:25:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:25:47.237Z Local: 2/13/2020, 6:25:47 PM command: SELECT, rowCount: 1 
2020-02-13T10:25:47.238Z Local: 2/13/2020, 6:25:47 PM Sending 1 rows to ::1 with  
2020-02-13T10:25:54.423Z Local: 2/13/2020, 6:25:54 PM SELECT * FROM posts_table WHERE id = '31'; 
2020-02-13T10:25:54.440Z Local: 2/13/2020, 6:25:54 PM Sending 1 rows to ::1 with  
2020-02-13T10:25:54.434Z Local: 2/13/2020, 6:25:54 PM command: SELECT, rowCount: 1 
2020-02-13T10:27:03.017Z Local: 2/13/2020, 6:27:03 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:27:03.051Z Local: 2/13/2020, 6:27:03 PM command: SELECT, rowCount: 1 
2020-02-13T10:27:03.053Z Local: 2/13/2020, 6:27:03 PM Sending 1 rows to ::1 with  
2020-02-13T10:27:03.142Z Local: 2/13/2020, 6:27:03 PM SELECT * FROM posts_table WHERE id = '31'; 
2020-02-13T10:27:03.171Z Local: 2/13/2020, 6:27:03 PM command: SELECT, rowCount: 1 
2020-02-13T10:27:03.181Z Local: 2/13/2020, 6:27:03 PM Sending 1 rows to ::1 with  
2020-02-13T10:27:07.290Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:27:07.295Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.297Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:07.329Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:27:07.333Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.335Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:07.371Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:27:07.374Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.375Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:07.410Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:27:07.414Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.415Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:07.573Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:27:07.576Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.577Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:07.621Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:27:07.623Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.624Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:07.671Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:27:07.673Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.674Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:07.731Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:27:07.733Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.734Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:07.797Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:27:07.799Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.800Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:07.861Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:27:07.865Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.866Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:07.932Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:27:07.935Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.935Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:07.992Z Local: 2/13/2020, 6:27:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:27:07.996Z Local: 2/13/2020, 6:27:07 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:07.997Z Local: 2/13/2020, 6:27:07 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:08.105Z Local: 2/13/2020, 6:27:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:27:08.110Z Local: 2/13/2020, 6:27:08 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:08.112Z Local: 2/13/2020, 6:27:08 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:08.216Z Local: 2/13/2020, 6:27:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:27:08.219Z Local: 2/13/2020, 6:27:08 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:08.220Z Local: 2/13/2020, 6:27:08 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:08.327Z Local: 2/13/2020, 6:27:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:27:08.331Z Local: 2/13/2020, 6:27:08 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:08.331Z Local: 2/13/2020, 6:27:08 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:08.420Z Local: 2/13/2020, 6:27:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:27:08.422Z Local: 2/13/2020, 6:27:08 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:08.423Z Local: 2/13/2020, 6:27:08 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:08.541Z Local: 2/13/2020, 6:27:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:27:08.544Z Local: 2/13/2020, 6:27:08 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:08.545Z Local: 2/13/2020, 6:27:08 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:08.647Z Local: 2/13/2020, 6:27:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:27:08.650Z Local: 2/13/2020, 6:27:08 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:08.651Z Local: 2/13/2020, 6:27:08 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:08.763Z Local: 2/13/2020, 6:27:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:27:08.765Z Local: 2/13/2020, 6:27:08 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:08.766Z Local: 2/13/2020, 6:27:08 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:08.857Z Local: 2/13/2020, 6:27:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:27:08.859Z Local: 2/13/2020, 6:27:08 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:08.860Z Local: 2/13/2020, 6:27:08 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:08.937Z Local: 2/13/2020, 6:27:08 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:27:08.940Z Local: 2/13/2020, 6:27:08 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:08.940Z Local: 2/13/2020, 6:27:08 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:09.013Z Local: 2/13/2020, 6:27:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:27:09.017Z Local: 2/13/2020, 6:27:09 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:09.018Z Local: 2/13/2020, 6:27:09 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:09.107Z Local: 2/13/2020, 6:27:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:27:09.144Z Local: 2/13/2020, 6:27:09 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:09.146Z Local: 2/13/2020, 6:27:09 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:09.195Z Local: 2/13/2020, 6:27:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:27:09.197Z Local: 2/13/2020, 6:27:09 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:09.198Z Local: 2/13/2020, 6:27:09 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:09.285Z Local: 2/13/2020, 6:27:09 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:27:09.287Z Local: 2/13/2020, 6:27:09 PM command: SELECT, rowCount: 1 
2020-02-13T10:27:09.288Z Local: 2/13/2020, 6:27:09 PM Sending 1 rows to ::1 with  
2020-02-13T10:27:09.652Z Local: 2/13/2020, 6:27:09 PM SELECT * FROM posts_table WHERE id = '69'; 
2020-02-13T10:27:09.662Z Local: 2/13/2020, 6:27:09 PM command: SELECT, rowCount: 1 
2020-02-13T10:27:09.668Z Local: 2/13/2020, 6:27:09 PM Sending 1 rows to ::1 with  
2020-02-13T10:27:12.062Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:27:12.074Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.075Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.098Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:27:12.100Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.101Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.164Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:27:12.167Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.167Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.198Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:27:12.201Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.201Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.350Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:27:12.352Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.353Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.385Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:27:12.388Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.388Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.433Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:27:12.436Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.437Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.487Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:27:12.490Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.491Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.655Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:27:12.658Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.659Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.711Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:27:12.714Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.715Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.767Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:27:12.770Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.772Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.823Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:27:12.827Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.828Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:12.920Z Local: 2/13/2020, 6:27:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:27:12.923Z Local: 2/13/2020, 6:27:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:12.923Z Local: 2/13/2020, 6:27:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.068Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:27:13.083Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:13.084Z Local: 2/13/2020, 6:27:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.174Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:27:13.179Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:13.180Z Local: 2/13/2020, 6:27:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.260Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:27:13.262Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:13.264Z Local: 2/13/2020, 6:27:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.364Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:27:13.366Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:13.367Z Local: 2/13/2020, 6:27:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.449Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:27:13.452Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:13.453Z Local: 2/13/2020, 6:27:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.550Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:27:13.553Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:13.554Z Local: 2/13/2020, 6:27:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.626Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:27:13.629Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:13.629Z Local: 2/13/2020, 6:27:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.696Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:27:13.699Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:13.700Z Local: 2/13/2020, 6:27:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.765Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:27:13.768Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:13.769Z Local: 2/13/2020, 6:27:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.832Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:27:13.835Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:13.836Z Local: 2/13/2020, 6:27:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.916Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:27:13.919Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:27:13.920Z Local: 2/13/2020, 6:27:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:27:13.991Z Local: 2/13/2020, 6:27:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:27:13.994Z Local: 2/13/2020, 6:27:13 PM command: SELECT, rowCount: 1 
2020-02-13T10:27:13.994Z Local: 2/13/2020, 6:27:13 PM Sending 1 rows to ::1 with  
2020-02-13T10:29:33.561Z Local: 2/13/2020, 6:29:33 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:29:33.604Z Local: 2/13/2020, 6:29:33 PM command: SELECT, rowCount: 1 
2020-02-13T10:29:33.622Z Local: 2/13/2020, 6:29:33 PM Sending 1 rows to ::1 with  
2020-02-13T10:29:33.773Z Local: 2/13/2020, 6:29:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:29:33.778Z Local: 2/13/2020, 6:29:33 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:33.779Z Local: 2/13/2020, 6:29:33 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:33.859Z Local: 2/13/2020, 6:29:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:29:33.862Z Local: 2/13/2020, 6:29:33 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:33.863Z Local: 2/13/2020, 6:29:33 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:33.917Z Local: 2/13/2020, 6:29:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:29:33.921Z Local: 2/13/2020, 6:29:33 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:33.922Z Local: 2/13/2020, 6:29:33 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:33.955Z Local: 2/13/2020, 6:29:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:29:33.958Z Local: 2/13/2020, 6:29:33 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:33.958Z Local: 2/13/2020, 6:29:33 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.072Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:29:34.074Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.075Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.108Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:29:34.111Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.112Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.150Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:29:34.155Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.156Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.197Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:29:34.199Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.200Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.256Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:29:34.259Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.260Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.303Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:29:34.305Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.306Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.365Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:29:34.371Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.371Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.435Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:29:34.442Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.442Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.532Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:29:34.537Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.537Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.627Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:29:34.631Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.631Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.715Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:29:34.719Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.719Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.793Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:29:34.795Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.796Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.896Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:29:34.899Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:34.900Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.973Z Local: 2/13/2020, 6:29:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:29:34.976Z Local: 2/13/2020, 6:29:34 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:34.975Z Local: 2/13/2020, 6:29:34 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:35.043Z Local: 2/13/2020, 6:29:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:29:35.045Z Local: 2/13/2020, 6:29:35 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:35.045Z Local: 2/13/2020, 6:29:35 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:35.092Z Local: 2/13/2020, 6:29:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:29:35.095Z Local: 2/13/2020, 6:29:35 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:35.095Z Local: 2/13/2020, 6:29:35 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:35.142Z Local: 2/13/2020, 6:29:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:29:35.145Z Local: 2/13/2020, 6:29:35 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:35.145Z Local: 2/13/2020, 6:29:35 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:35.193Z Local: 2/13/2020, 6:29:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:29:35.198Z Local: 2/13/2020, 6:29:35 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:35.199Z Local: 2/13/2020, 6:29:35 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:35.251Z Local: 2/13/2020, 6:29:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:29:35.253Z Local: 2/13/2020, 6:29:35 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:35.254Z Local: 2/13/2020, 6:29:35 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:35.306Z Local: 2/13/2020, 6:29:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:29:35.308Z Local: 2/13/2020, 6:29:35 PM command: SELECT, rowCount: 3 
2020-02-13T10:29:35.309Z Local: 2/13/2020, 6:29:35 PM Sending 3 rows to ::1 with  
2020-02-13T10:29:35.371Z Local: 2/13/2020, 6:29:35 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:29:35.372Z Local: 2/13/2020, 6:29:35 PM command: SELECT, rowCount: 1 
2020-02-13T10:29:35.373Z Local: 2/13/2020, 6:29:35 PM Sending 1 rows to ::1 with  
2020-02-13T10:31:22.612Z Local: 2/13/2020, 6:31:22 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:31:22.678Z Local: 2/13/2020, 6:31:22 PM command: SELECT, rowCount: 1 
2020-02-13T10:31:22.690Z Local: 2/13/2020, 6:31:22 PM Sending 1 rows to ::1 with  
2020-02-13T10:31:22.697Z Local: 2/13/2020, 6:31:22 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:31:22.704Z Local: 2/13/2020, 6:31:22 PM Sending 1 rows to ::1 with  
2020-02-13T10:31:22.703Z Local: 2/13/2020, 6:31:22 PM command: SELECT, rowCount: 1 
2020-02-13T10:31:22.875Z Local: 2/13/2020, 6:31:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:31:22.881Z Local: 2/13/2020, 6:31:22 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:22.882Z Local: 2/13/2020, 6:31:22 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:22.972Z Local: 2/13/2020, 6:31:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:31:22.980Z Local: 2/13/2020, 6:31:22 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:22.981Z Local: 2/13/2020, 6:31:22 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.022Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:31:23.024Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.025Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.070Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:31:23.074Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.075Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.200Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:31:23.202Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.202Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.238Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:31:23.240Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.241Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.280Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:31:23.282Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.283Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.332Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:31:23.335Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.336Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.390Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:31:23.392Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.393Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.440Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:31:23.443Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.443Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.501Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:31:23.504Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.504Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.565Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:31:23.568Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.568Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.646Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:31:23.648Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.649Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.741Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:31:23.745Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.746Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.816Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:31:23.817Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.818Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.882Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:31:23.884Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.885Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:23.958Z Local: 2/13/2020, 6:31:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:31:23.961Z Local: 2/13/2020, 6:31:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:23.961Z Local: 2/13/2020, 6:31:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:24.023Z Local: 2/13/2020, 6:31:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:31:24.026Z Local: 2/13/2020, 6:31:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:24.028Z Local: 2/13/2020, 6:31:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:24.095Z Local: 2/13/2020, 6:31:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:31:24.097Z Local: 2/13/2020, 6:31:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:24.098Z Local: 2/13/2020, 6:31:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:24.153Z Local: 2/13/2020, 6:31:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:31:24.155Z Local: 2/13/2020, 6:31:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:24.156Z Local: 2/13/2020, 6:31:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:24.202Z Local: 2/13/2020, 6:31:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:31:24.205Z Local: 2/13/2020, 6:31:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:24.205Z Local: 2/13/2020, 6:31:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:24.267Z Local: 2/13/2020, 6:31:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:31:24.269Z Local: 2/13/2020, 6:31:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:24.269Z Local: 2/13/2020, 6:31:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:24.385Z Local: 2/13/2020, 6:31:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:31:24.387Z Local: 2/13/2020, 6:31:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:24.387Z Local: 2/13/2020, 6:31:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:24.469Z Local: 2/13/2020, 6:31:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:31:24.472Z Local: 2/13/2020, 6:31:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:24.472Z Local: 2/13/2020, 6:31:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:24.546Z Local: 2/13/2020, 6:31:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:31:24.549Z Local: 2/13/2020, 6:31:24 PM command: SELECT, rowCount: 1 
2020-02-13T10:31:24.550Z Local: 2/13/2020, 6:31:24 PM Sending 1 rows to ::1 with  
2020-02-13T10:31:55.700Z Local: 2/13/2020, 6:31:55 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:31:55.727Z Local: 2/13/2020, 6:31:55 PM command: SELECT, rowCount: 1 
2020-02-13T10:31:55.750Z Local: 2/13/2020, 6:31:55 PM Sending 1 rows to ::1 with  
2020-02-13T10:31:55.762Z Local: 2/13/2020, 6:31:55 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:31:55.783Z Local: 2/13/2020, 6:31:55 PM Sending 1 rows to ::1 with  
2020-02-13T10:31:55.782Z Local: 2/13/2020, 6:31:55 PM command: SELECT, rowCount: 1 
2020-02-13T10:31:55.897Z Local: 2/13/2020, 6:31:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:31:55.900Z Local: 2/13/2020, 6:31:55 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:55.900Z Local: 2/13/2020, 6:31:55 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:55.959Z Local: 2/13/2020, 6:31:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:31:55.961Z Local: 2/13/2020, 6:31:55 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:55.962Z Local: 2/13/2020, 6:31:55 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:55.993Z Local: 2/13/2020, 6:31:55 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:31:55.995Z Local: 2/13/2020, 6:31:55 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:55.995Z Local: 2/13/2020, 6:31:55 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.023Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:31:56.026Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.027Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.129Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:31:56.131Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.132Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.161Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:31:56.163Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.164Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.197Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:31:56.199Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.200Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.243Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:31:56.247Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.247Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.307Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:31:56.309Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.309Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.353Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:31:56.356Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.357Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.398Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:31:56.401Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.401Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.445Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:31:56.448Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.448Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.628Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:31:56.630Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.631Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.700Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:31:56.702Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.703Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.761Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:31:56.868Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.868Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:56.927Z Local: 2/13/2020, 6:31:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:31:56.929Z Local: 2/13/2020, 6:31:56 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:56.929Z Local: 2/13/2020, 6:31:56 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:57.000Z Local: 2/13/2020, 6:31:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:31:57.003Z Local: 2/13/2020, 6:31:57 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:57.003Z Local: 2/13/2020, 6:31:57 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:57.069Z Local: 2/13/2020, 6:31:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:31:57.074Z Local: 2/13/2020, 6:31:57 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:57.075Z Local: 2/13/2020, 6:31:57 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:57.142Z Local: 2/13/2020, 6:31:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:31:57.144Z Local: 2/13/2020, 6:31:57 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:57.145Z Local: 2/13/2020, 6:31:57 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:57.202Z Local: 2/13/2020, 6:31:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:31:57.206Z Local: 2/13/2020, 6:31:57 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:57.205Z Local: 2/13/2020, 6:31:57 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:57.258Z Local: 2/13/2020, 6:31:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:31:57.260Z Local: 2/13/2020, 6:31:57 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:57.260Z Local: 2/13/2020, 6:31:57 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:57.312Z Local: 2/13/2020, 6:31:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:31:57.314Z Local: 2/13/2020, 6:31:57 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:57.314Z Local: 2/13/2020, 6:31:57 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:57.373Z Local: 2/13/2020, 6:31:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:31:57.375Z Local: 2/13/2020, 6:31:57 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:57.376Z Local: 2/13/2020, 6:31:57 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:57.428Z Local: 2/13/2020, 6:31:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:31:57.430Z Local: 2/13/2020, 6:31:57 PM command: SELECT, rowCount: 3 
2020-02-13T10:31:57.431Z Local: 2/13/2020, 6:31:57 PM Sending 3 rows to ::1 with  
2020-02-13T10:31:57.494Z Local: 2/13/2020, 6:31:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:31:57.496Z Local: 2/13/2020, 6:31:57 PM command: SELECT, rowCount: 1 
2020-02-13T10:31:57.497Z Local: 2/13/2020, 6:31:57 PM Sending 1 rows to ::1 with  
2020-02-13T10:32:22.807Z Local: 2/13/2020, 6:32:22 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:32:22.838Z Local: 2/13/2020, 6:32:22 PM command: SELECT, rowCount: 1 
2020-02-13T10:32:22.840Z Local: 2/13/2020, 6:32:22 PM Sending 1 rows to ::1 with  
2020-02-13T10:32:23.022Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:32:23.024Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.025Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.070Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:32:23.073Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.074Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.134Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:32:23.136Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.137Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.167Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:32:23.171Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.170Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.307Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:32:23.309Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.310Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.348Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:32:23.352Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.353Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.396Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:32:23.398Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.399Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.453Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:32:23.457Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.457Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.524Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:32:23.527Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.527Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.584Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:32:23.587Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.588Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.634Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:32:23.636Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.637Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.689Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:32:23.692Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.693Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.774Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:32:23.775Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.776Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.855Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:32:23.858Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.858Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:23.940Z Local: 2/13/2020, 6:32:23 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:32:23.943Z Local: 2/13/2020, 6:32:23 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:23.944Z Local: 2/13/2020, 6:32:23 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:24.030Z Local: 2/13/2020, 6:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:32:24.033Z Local: 2/13/2020, 6:32:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:24.034Z Local: 2/13/2020, 6:32:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:24.119Z Local: 2/13/2020, 6:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:32:24.122Z Local: 2/13/2020, 6:32:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:24.122Z Local: 2/13/2020, 6:32:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:24.187Z Local: 2/13/2020, 6:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:32:24.189Z Local: 2/13/2020, 6:32:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:24.190Z Local: 2/13/2020, 6:32:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:24.257Z Local: 2/13/2020, 6:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:32:24.260Z Local: 2/13/2020, 6:32:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:24.260Z Local: 2/13/2020, 6:32:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:24.313Z Local: 2/13/2020, 6:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:32:24.315Z Local: 2/13/2020, 6:32:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:24.316Z Local: 2/13/2020, 6:32:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:24.365Z Local: 2/13/2020, 6:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:32:24.369Z Local: 2/13/2020, 6:32:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:24.370Z Local: 2/13/2020, 6:32:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:24.433Z Local: 2/13/2020, 6:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:32:24.436Z Local: 2/13/2020, 6:32:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:24.437Z Local: 2/13/2020, 6:32:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:24.507Z Local: 2/13/2020, 6:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:32:24.509Z Local: 2/13/2020, 6:32:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:24.510Z Local: 2/13/2020, 6:32:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:24.564Z Local: 2/13/2020, 6:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:32:24.567Z Local: 2/13/2020, 6:32:24 PM command: SELECT, rowCount: 3 
2020-02-13T10:32:24.568Z Local: 2/13/2020, 6:32:24 PM Sending 3 rows to ::1 with  
2020-02-13T10:32:24.626Z Local: 2/13/2020, 6:32:24 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:32:24.628Z Local: 2/13/2020, 6:32:24 PM command: SELECT, rowCount: 1 
2020-02-13T10:32:24.629Z Local: 2/13/2020, 6:32:24 PM Sending 1 rows to ::1 with  
2020-02-13T10:33:43.843Z Local: 2/13/2020, 6:33:43 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:33:43.870Z Local: 2/13/2020, 6:33:43 PM command: SELECT, rowCount: 1 
2020-02-13T10:33:43.872Z Local: 2/13/2020, 6:33:43 PM Sending 1 rows to ::1 with  
2020-02-13T10:33:43.937Z Local: 2/13/2020, 6:33:43 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:33:43.955Z Local: 2/13/2020, 6:33:43 PM command: SELECT, rowCount: 1 
2020-02-13T10:33:43.956Z Local: 2/13/2020, 6:33:43 PM Sending 1 rows to ::1 with  
2020-02-13T10:33:44.083Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:33:44.088Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.089Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.139Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:33:44.143Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.144Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.190Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:33:44.193Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.193Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.227Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:33:44.231Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.231Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.378Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:33:44.380Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.381Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.432Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:33:44.437Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.438Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.482Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:33:44.487Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.488Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.536Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:33:44.538Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.539Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.586Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:33:44.589Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.590Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.635Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:33:44.637Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.638Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.683Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:33:44.686Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.687Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.733Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:33:44.737Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.738Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.811Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:33:44.813Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.814Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.891Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:33:44.894Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.895Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:44.976Z Local: 2/13/2020, 6:33:44 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:33:44.978Z Local: 2/13/2020, 6:33:44 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:44.979Z Local: 2/13/2020, 6:33:44 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:45.046Z Local: 2/13/2020, 6:33:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:33:45.049Z Local: 2/13/2020, 6:33:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:45.050Z Local: 2/13/2020, 6:33:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:45.143Z Local: 2/13/2020, 6:33:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:33:45.145Z Local: 2/13/2020, 6:33:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:45.146Z Local: 2/13/2020, 6:33:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:45.230Z Local: 2/13/2020, 6:33:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:33:45.234Z Local: 2/13/2020, 6:33:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:45.233Z Local: 2/13/2020, 6:33:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:45.306Z Local: 2/13/2020, 6:33:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:33:45.308Z Local: 2/13/2020, 6:33:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:45.308Z Local: 2/13/2020, 6:33:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:45.363Z Local: 2/13/2020, 6:33:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:33:45.366Z Local: 2/13/2020, 6:33:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:45.367Z Local: 2/13/2020, 6:33:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:45.416Z Local: 2/13/2020, 6:33:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:33:45.420Z Local: 2/13/2020, 6:33:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:45.421Z Local: 2/13/2020, 6:33:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:45.472Z Local: 2/13/2020, 6:33:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:33:45.474Z Local: 2/13/2020, 6:33:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:45.474Z Local: 2/13/2020, 6:33:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:45.531Z Local: 2/13/2020, 6:33:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:33:45.535Z Local: 2/13/2020, 6:33:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:45.535Z Local: 2/13/2020, 6:33:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:45.595Z Local: 2/13/2020, 6:33:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:33:45.597Z Local: 2/13/2020, 6:33:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:33:45.597Z Local: 2/13/2020, 6:33:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:33:45.647Z Local: 2/13/2020, 6:33:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:33:45.649Z Local: 2/13/2020, 6:33:45 PM command: SELECT, rowCount: 1 
2020-02-13T10:33:45.650Z Local: 2/13/2020, 6:33:45 PM Sending 1 rows to ::1 with  
2020-02-13T10:34:11.700Z Local: 2/13/2020, 6:34:11 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:34:11.751Z Local: 2/13/2020, 6:34:11 PM command: SELECT, rowCount: 1 
2020-02-13T10:34:11.752Z Local: 2/13/2020, 6:34:11 PM Sending 1 rows to ::1 with  
2020-02-13T10:34:11.829Z Local: 2/13/2020, 6:34:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:34:11.832Z Local: 2/13/2020, 6:34:11 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:11.832Z Local: 2/13/2020, 6:34:11 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:11.881Z Local: 2/13/2020, 6:34:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:34:11.884Z Local: 2/13/2020, 6:34:11 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:11.884Z Local: 2/13/2020, 6:34:11 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:11.926Z Local: 2/13/2020, 6:34:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:34:11.937Z Local: 2/13/2020, 6:34:11 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:11.938Z Local: 2/13/2020, 6:34:11 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:11.966Z Local: 2/13/2020, 6:34:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:34:11.968Z Local: 2/13/2020, 6:34:11 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:11.969Z Local: 2/13/2020, 6:34:11 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.087Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:34:12.089Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.090Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.120Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:34:12.122Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.122Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.156Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:34:12.158Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.159Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.226Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:34:12.238Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.239Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.291Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:34:12.295Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.296Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.352Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:34:12.355Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.355Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.421Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:34:12.423Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.424Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.481Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:34:12.483Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.484Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.548Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:34:12.551Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.551Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.636Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:34:12.639Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.639Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.706Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:34:12.708Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.709Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.791Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:34:12.793Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.794Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.892Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:34:12.895Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.896Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:12.990Z Local: 2/13/2020, 6:34:12 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:34:12.993Z Local: 2/13/2020, 6:34:12 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:12.994Z Local: 2/13/2020, 6:34:12 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:13.053Z Local: 2/13/2020, 6:34:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:34:13.056Z Local: 2/13/2020, 6:34:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:13.055Z Local: 2/13/2020, 6:34:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:13.111Z Local: 2/13/2020, 6:34:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:34:13.115Z Local: 2/13/2020, 6:34:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:13.116Z Local: 2/13/2020, 6:34:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:13.162Z Local: 2/13/2020, 6:34:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:34:13.164Z Local: 2/13/2020, 6:34:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:13.165Z Local: 2/13/2020, 6:34:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:13.209Z Local: 2/13/2020, 6:34:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:34:13.214Z Local: 2/13/2020, 6:34:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:13.215Z Local: 2/13/2020, 6:34:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:13.275Z Local: 2/13/2020, 6:34:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:34:13.278Z Local: 2/13/2020, 6:34:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:13.277Z Local: 2/13/2020, 6:34:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:13.331Z Local: 2/13/2020, 6:34:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:34:13.333Z Local: 2/13/2020, 6:34:13 PM command: SELECT, rowCount: 3 
2020-02-13T10:34:13.334Z Local: 2/13/2020, 6:34:13 PM Sending 3 rows to ::1 with  
2020-02-13T10:34:13.391Z Local: 2/13/2020, 6:34:13 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:34:13.394Z Local: 2/13/2020, 6:34:13 PM command: SELECT, rowCount: 1 
2020-02-13T10:34:13.395Z Local: 2/13/2020, 6:34:13 PM Sending 1 rows to ::1 with  
2020-02-13T10:34:15.075Z Local: 2/13/2020, 6:34:15 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T10:34:15.084Z Local: 2/13/2020, 6:34:15 PM Sending 1 rows to ::1 with  
2020-02-13T10:34:15.082Z Local: 2/13/2020, 6:34:15 PM command: SELECT, rowCount: 1 
2020-02-13T10:39:31.743Z Local: 2/13/2020, 6:39:31 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T10:39:31.812Z Local: 2/13/2020, 6:39:31 PM command: SELECT, rowCount: 1 
2020-02-13T10:39:31.815Z Local: 2/13/2020, 6:39:31 PM Sending 1 rows to ::1 with  
2020-02-13T10:39:37.628Z Local: 2/13/2020, 6:39:37 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T10:39:37.633Z Local: 2/13/2020, 6:39:37 PM command: SELECT, rowCount: 1 
2020-02-13T10:39:37.634Z Local: 2/13/2020, 6:39:37 PM Sending 1 rows to ::1 with  
2020-02-13T10:39:44.324Z Local: 2/13/2020, 6:39:44 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:39:44.327Z Local: 2/13/2020, 6:39:44 PM command: SELECT, rowCount: 1 
2020-02-13T10:39:44.328Z Local: 2/13/2020, 6:39:44 PM Sending 1 rows to ::1 with  
2020-02-13T10:40:52.941Z Local: 2/13/2020, 6:40:52 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:40:53.020Z Local: 2/13/2020, 6:40:53 PM command: SELECT, rowCount: 1 
2020-02-13T10:40:53.021Z Local: 2/13/2020, 6:40:53 PM Sending 1 rows to ::1 with  
2020-02-13T10:40:53.108Z Local: 2/13/2020, 6:40:53 PM Warning: undefined = NaN is not a Integer 
2020-02-13T10:41:31.841Z Local: 2/13/2020, 6:41:31 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:41:31.944Z Local: 2/13/2020, 6:41:31 PM command: SELECT, rowCount: 1 
2020-02-13T10:41:31.947Z Local: 2/13/2020, 6:41:31 PM Sending 1 rows to ::1 with  
2020-02-13T10:42:52.656Z Local: 2/13/2020, 6:42:52 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:42:52.685Z Local: 2/13/2020, 6:42:52 PM command: SELECT, rowCount: 1 
2020-02-13T10:42:52.686Z Local: 2/13/2020, 6:42:52 PM Sending 1 rows to ::1 with  
2020-02-13T10:43:17.071Z Local: 2/13/2020, 6:43:17 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:43:17.100Z Local: 2/13/2020, 6:43:17 PM command: SELECT, rowCount: 1 
2020-02-13T10:43:17.102Z Local: 2/13/2020, 6:43:17 PM Sending 1 rows to ::1 with  
2020-02-13T10:43:23.582Z Local: 2/13/2020, 6:43:23 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:43:23.586Z Local: 2/13/2020, 6:43:23 PM command: SELECT, rowCount: 1 
2020-02-13T10:43:23.587Z Local: 2/13/2020, 6:43:23 PM Sending 1 rows to ::1 with  
2020-02-13T10:44:31.441Z Local: 2/13/2020, 6:44:31 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:44:31.563Z Local: 2/13/2020, 6:44:31 PM command: SELECT, rowCount: 1 
2020-02-13T10:44:31.565Z Local: 2/13/2020, 6:44:31 PM Sending 1 rows to ::1 with  
2020-02-13T10:44:31.647Z Local: 2/13/2020, 6:44:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:44:31.652Z Local: 2/13/2020, 6:44:31 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:31.653Z Local: 2/13/2020, 6:44:31 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:31.671Z Local: 2/13/2020, 6:44:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:44:31.675Z Local: 2/13/2020, 6:44:31 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:31.676Z Local: 2/13/2020, 6:44:31 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:31.701Z Local: 2/13/2020, 6:44:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:44:31.703Z Local: 2/13/2020, 6:44:31 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:31.704Z Local: 2/13/2020, 6:44:31 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:31.742Z Local: 2/13/2020, 6:44:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:44:31.745Z Local: 2/13/2020, 6:44:31 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:31.745Z Local: 2/13/2020, 6:44:31 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:31.876Z Local: 2/13/2020, 6:44:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:44:31.878Z Local: 2/13/2020, 6:44:31 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:31.879Z Local: 2/13/2020, 6:44:31 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:31.911Z Local: 2/13/2020, 6:44:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:44:31.913Z Local: 2/13/2020, 6:44:31 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:31.914Z Local: 2/13/2020, 6:44:31 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:31.952Z Local: 2/13/2020, 6:44:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:44:31.957Z Local: 2/13/2020, 6:44:31 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:31.956Z Local: 2/13/2020, 6:44:31 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.005Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:44:32.008Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.008Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.119Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:44:32.123Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.124Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.164Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:44:32.166Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.167Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.217Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:44:32.220Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.220Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.270Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:44:32.273Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.274Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.350Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:44:32.352Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.353Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.443Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:44:32.446Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.447Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.522Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:44:32.526Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.526Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.618Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:44:32.623Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.624Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.720Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:44:32.723Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.724Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.821Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:44:32.824Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.823Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.900Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:44:32.902Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.902Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:32.958Z Local: 2/13/2020, 6:44:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:44:32.959Z Local: 2/13/2020, 6:44:32 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:32.960Z Local: 2/13/2020, 6:44:32 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:33.017Z Local: 2/13/2020, 6:44:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:44:33.019Z Local: 2/13/2020, 6:44:33 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:33.019Z Local: 2/13/2020, 6:44:33 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:33.071Z Local: 2/13/2020, 6:44:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:44:33.073Z Local: 2/13/2020, 6:44:33 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:33.074Z Local: 2/13/2020, 6:44:33 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:33.143Z Local: 2/13/2020, 6:44:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:44:33.145Z Local: 2/13/2020, 6:44:33 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:33.146Z Local: 2/13/2020, 6:44:33 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:33.206Z Local: 2/13/2020, 6:44:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:44:33.208Z Local: 2/13/2020, 6:44:33 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:33.209Z Local: 2/13/2020, 6:44:33 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:33.271Z Local: 2/13/2020, 6:44:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:44:33.274Z Local: 2/13/2020, 6:44:33 PM command: SELECT, rowCount: 1 
2020-02-13T10:44:33.275Z Local: 2/13/2020, 6:44:33 PM Sending 1 rows to ::1 with  
2020-02-13T10:44:38.156Z Local: 2/13/2020, 6:44:38 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:44:38.161Z Local: 2/13/2020, 6:44:38 PM Sending 1 rows to ::1 with  
2020-02-13T10:44:38.160Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 1 
2020-02-13T10:44:38.349Z Local: 2/13/2020, 6:44:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:44:38.351Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:38.351Z Local: 2/13/2020, 6:44:38 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:38.404Z Local: 2/13/2020, 6:44:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:44:38.408Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:38.409Z Local: 2/13/2020, 6:44:38 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:38.450Z Local: 2/13/2020, 6:44:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:44:38.452Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:38.453Z Local: 2/13/2020, 6:44:38 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:38.482Z Local: 2/13/2020, 6:44:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:44:38.485Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:38.486Z Local: 2/13/2020, 6:44:38 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:38.619Z Local: 2/13/2020, 6:44:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:44:38.623Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:38.624Z Local: 2/13/2020, 6:44:38 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:38.649Z Local: 2/13/2020, 6:44:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:44:38.652Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:38.653Z Local: 2/13/2020, 6:44:38 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:38.698Z Local: 2/13/2020, 6:44:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:44:38.701Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:38.701Z Local: 2/13/2020, 6:44:38 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:38.745Z Local: 2/13/2020, 6:44:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:44:38.748Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:38.748Z Local: 2/13/2020, 6:44:38 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:38.819Z Local: 2/13/2020, 6:44:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:44:38.824Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:38.825Z Local: 2/13/2020, 6:44:38 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:38.878Z Local: 2/13/2020, 6:44:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:44:38.881Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:38.882Z Local: 2/13/2020, 6:44:38 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:38.962Z Local: 2/13/2020, 6:44:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:44:38.965Z Local: 2/13/2020, 6:44:38 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:38.966Z Local: 2/13/2020, 6:44:38 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.035Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:44:39.038Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.039Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.126Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:44:39.129Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.129Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.220Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:44:39.224Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.225Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.304Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:44:39.307Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.308Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.387Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:44:39.391Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.391Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.464Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:44:39.466Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.467Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.539Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:44:39.541Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.541Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.602Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:44:39.605Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.606Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.675Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:44:39.677Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.677Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.726Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:44:39.728Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.729Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.775Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:44:39.777Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.778Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.838Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:44:39.840Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.841Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.892Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:44:39.894Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:39.895Z Local: 2/13/2020, 6:44:39 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:39.949Z Local: 2/13/2020, 6:44:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:44:39.951Z Local: 2/13/2020, 6:44:39 PM command: SELECT, rowCount: 1 
2020-02-13T10:44:39.951Z Local: 2/13/2020, 6:44:39 PM Sending 1 rows to ::1 with  
2020-02-13T10:44:42.468Z Local: 2/13/2020, 6:44:42 PM SELECT * FROM posts_table WHERE id = '70'; 
2020-02-13T10:44:42.474Z Local: 2/13/2020, 6:44:42 PM command: SELECT, rowCount: 1 
2020-02-13T10:44:42.475Z Local: 2/13/2020, 6:44:42 PM Sending 1 rows to ::1 with  
2020-02-13T10:44:45.111Z Local: 2/13/2020, 6:44:45 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:44:45.114Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 1 
2020-02-13T10:44:45.115Z Local: 2/13/2020, 6:44:45 PM Sending 1 rows to ::1 with  
2020-02-13T10:44:45.132Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:44:45.137Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.138Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.150Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:44:45.151Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.153Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.178Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:44:45.180Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.181Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.198Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:44:45.199Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.200Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.225Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:44:45.227Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.228Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.257Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:44:45.259Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.260Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.283Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:44:45.285Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.287Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.322Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:44:45.326Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.327Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.365Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:44:45.368Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.367Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.402Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:44:45.405Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.405Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.446Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:44:45.449Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.449Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.484Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:44:45.488Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.488Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.541Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:44:45.544Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.543Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.599Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:44:45.601Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.601Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.659Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:44:45.661Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.662Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.727Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:44:45.729Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.730Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.794Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:44:45.796Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.797Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.866Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:44:45.869Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.870Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.927Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:44:45.929Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.930Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:45.989Z Local: 2/13/2020, 6:44:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:44:45.992Z Local: 2/13/2020, 6:44:45 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:45.993Z Local: 2/13/2020, 6:44:45 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:46.042Z Local: 2/13/2020, 6:44:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:44:46.044Z Local: 2/13/2020, 6:44:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:46.045Z Local: 2/13/2020, 6:44:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:46.101Z Local: 2/13/2020, 6:44:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:44:46.105Z Local: 2/13/2020, 6:44:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:46.105Z Local: 2/13/2020, 6:44:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:46.178Z Local: 2/13/2020, 6:44:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:44:46.181Z Local: 2/13/2020, 6:44:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:46.182Z Local: 2/13/2020, 6:44:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:46.244Z Local: 2/13/2020, 6:44:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:44:46.246Z Local: 2/13/2020, 6:44:46 PM command: SELECT, rowCount: 3 
2020-02-13T10:44:46.247Z Local: 2/13/2020, 6:44:46 PM Sending 3 rows to ::1 with  
2020-02-13T10:44:46.310Z Local: 2/13/2020, 6:44:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:44:46.312Z Local: 2/13/2020, 6:44:46 PM command: SELECT, rowCount: 1 
2020-02-13T10:44:46.313Z Local: 2/13/2020, 6:44:46 PM Sending 1 rows to ::1 with  
2020-02-13T10:44:53.375Z Local: 2/13/2020, 6:44:53 PM SELECT * FROM posts_table WHERE id = '31'; 
2020-02-13T10:44:53.377Z Local: 2/13/2020, 6:44:53 PM command: SELECT, rowCount: 1 
2020-02-13T10:44:53.385Z Local: 2/13/2020, 6:44:53 PM Sending 1 rows to ::1 with  
2020-02-13T10:45:18.691Z Local: 2/13/2020, 6:45:18 PM SELECT * FROM posts_table WHERE id = '31'; 
2020-02-13T10:45:18.808Z Local: 2/13/2020, 6:45:18 PM command: SELECT, rowCount: 1 
2020-02-13T10:45:18.813Z Local: 2/13/2020, 6:45:18 PM Sending 1 rows to ::1 with  
2020-02-13T10:46:11.962Z Local: 2/13/2020, 6:46:11 PM SELECT * FROM posts_table WHERE id = '31'; 
2020-02-13T10:46:11.987Z Local: 2/13/2020, 6:46:11 PM command: SELECT, rowCount: 1 
2020-02-13T10:46:11.995Z Local: 2/13/2020, 6:46:11 PM Sending 1 rows to ::1 with  
2020-02-13T10:46:14.690Z Local: 2/13/2020, 6:46:14 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:46:14.694Z Local: 2/13/2020, 6:46:14 PM command: SELECT, rowCount: 1 
2020-02-13T10:46:14.695Z Local: 2/13/2020, 6:46:14 PM Sending 1 rows to ::1 with  
2020-02-13T10:46:14.723Z Local: 2/13/2020, 6:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:46:14.725Z Local: 2/13/2020, 6:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:14.725Z Local: 2/13/2020, 6:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:14.742Z Local: 2/13/2020, 6:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:46:14.745Z Local: 2/13/2020, 6:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:14.746Z Local: 2/13/2020, 6:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:14.773Z Local: 2/13/2020, 6:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:46:14.775Z Local: 2/13/2020, 6:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:14.776Z Local: 2/13/2020, 6:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:14.802Z Local: 2/13/2020, 6:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:46:14.805Z Local: 2/13/2020, 6:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:14.806Z Local: 2/13/2020, 6:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:14.912Z Local: 2/13/2020, 6:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:46:14.915Z Local: 2/13/2020, 6:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:14.916Z Local: 2/13/2020, 6:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:14.947Z Local: 2/13/2020, 6:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:46:14.949Z Local: 2/13/2020, 6:46:14 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:14.950Z Local: 2/13/2020, 6:46:14 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:14.992Z Local: 2/13/2020, 6:46:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:46:15.015Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.016Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.120Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:46:15.123Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.123Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.161Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:46:15.164Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.164Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.204Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:46:15.206Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.207Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.246Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:46:15.248Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.249Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.294Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:46:15.296Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.297Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.363Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:46:15.365Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.365Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.439Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:46:15.442Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.441Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.502Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:46:15.505Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.506Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.565Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:46:15.567Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.568Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.655Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:46:15.658Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.657Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.748Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:46:15.750Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.751Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.826Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:46:15.828Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.829Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.882Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:46:15.883Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.884Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.931Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:46:15.933Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.933Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:15.983Z Local: 2/13/2020, 6:46:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:46:15.986Z Local: 2/13/2020, 6:46:15 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:15.986Z Local: 2/13/2020, 6:46:15 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:16.059Z Local: 2/13/2020, 6:46:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:46:16.061Z Local: 2/13/2020, 6:46:16 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:16.062Z Local: 2/13/2020, 6:46:16 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:16.144Z Local: 2/13/2020, 6:46:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:46:16.146Z Local: 2/13/2020, 6:46:16 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:16.146Z Local: 2/13/2020, 6:46:16 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:16.199Z Local: 2/13/2020, 6:46:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:46:16.201Z Local: 2/13/2020, 6:46:16 PM command: SELECT, rowCount: 1 
2020-02-13T10:46:16.202Z Local: 2/13/2020, 6:46:16 PM Sending 1 rows to ::1 with  
2020-02-13T10:46:18.875Z Local: 2/13/2020, 6:46:18 PM SELECT * FROM posts_table WHERE id = '55'; 
2020-02-13T10:46:18.877Z Local: 2/13/2020, 6:46:18 PM command: SELECT, rowCount: 1 
2020-02-13T10:46:18.878Z Local: 2/13/2020, 6:46:18 PM Sending 1 rows to ::1 with  
2020-02-13T10:46:20.972Z Local: 2/13/2020, 6:46:20 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T10:46:20.975Z Local: 2/13/2020, 6:46:20 PM Sending 1 rows to ::1 with  
2020-02-13T10:46:20.974Z Local: 2/13/2020, 6:46:20 PM command: SELECT, rowCount: 1 
2020-02-13T10:46:20.996Z Local: 2/13/2020, 6:46:20 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T10:46:20.998Z Local: 2/13/2020, 6:46:20 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:20.998Z Local: 2/13/2020, 6:46:20 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.013Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T10:46:21.015Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.016Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.045Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T10:46:21.048Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.049Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.077Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T10:46:21.080Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.080Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.105Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T10:46:21.108Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.108Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.133Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T10:46:21.137Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.138Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.171Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T10:46:21.173Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.174Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.207Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T10:46:21.209Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.209Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.244Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T10:46:21.247Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.249Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.286Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T10:46:21.288Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.289Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.327Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T10:46:21.330Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.331Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.369Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T10:46:21.371Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.372Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.424Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T10:46:21.426Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.427Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.483Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T10:46:21.486Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.487Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.549Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T10:46:21.551Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.552Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.614Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T10:46:21.616Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.616Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.679Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T10:46:21.680Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.681Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.748Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T10:46:21.751Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.752Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.807Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T10:46:21.809Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.810Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.866Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T10:46:21.869Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.870Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.911Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T10:46:21.914Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.914Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:21.962Z Local: 2/13/2020, 6:46:21 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T10:46:21.964Z Local: 2/13/2020, 6:46:21 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:21.965Z Local: 2/13/2020, 6:46:21 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:22.015Z Local: 2/13/2020, 6:46:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T10:46:22.018Z Local: 2/13/2020, 6:46:22 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:22.018Z Local: 2/13/2020, 6:46:22 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:22.080Z Local: 2/13/2020, 6:46:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T10:46:22.081Z Local: 2/13/2020, 6:46:22 PM command: SELECT, rowCount: 3 
2020-02-13T10:46:22.082Z Local: 2/13/2020, 6:46:22 PM Sending 3 rows to ::1 with  
2020-02-13T10:46:22.137Z Local: 2/13/2020, 6:46:22 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T10:46:22.139Z Local: 2/13/2020, 6:46:22 PM command: SELECT, rowCount: 1 
2020-02-13T10:46:22.140Z Local: 2/13/2020, 6:46:22 PM Sending 1 rows to ::1 with  
2020-02-13T12:14:10.014Z Local: 2/13/2020, 8:14:10 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T12:14:10.199Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 1 
2020-02-13T12:14:10.202Z Local: 2/13/2020, 8:14:10 PM Sending 1 rows to ::1 with  
2020-02-13T12:14:10.275Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:14:10.288Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.288Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.316Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:14:10.318Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.319Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.351Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:14:10.354Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.355Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.388Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:14:10.392Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.393Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.516Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:14:10.518Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.519Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.553Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:14:10.556Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.556Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.597Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:14:10.616Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.617Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.667Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:14:10.670Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.670Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.727Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:14:10.731Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.732Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.782Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:14:10.783Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.784Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.832Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:14:10.833Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.834Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.885Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:14:10.889Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:10.890Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.968Z Local: 2/13/2020, 8:14:10 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:14:10.970Z Local: 2/13/2020, 8:14:10 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:10.970Z Local: 2/13/2020, 8:14:10 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.043Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:14:11.045Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.046Z Local: 2/13/2020, 8:14:11 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:11.121Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:14:11.123Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.124Z Local: 2/13/2020, 8:14:11 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:11.193Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:14:11.195Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.196Z Local: 2/13/2020, 8:14:11 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:11.274Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:14:11.277Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.277Z Local: 2/13/2020, 8:14:11 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:11.358Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:14:11.363Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.363Z Local: 2/13/2020, 8:14:11 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:11.433Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:14:11.435Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.436Z Local: 2/13/2020, 8:14:11 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:11.497Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:14:11.499Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.499Z Local: 2/13/2020, 8:14:11 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:11.556Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:14:11.559Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.560Z Local: 2/13/2020, 8:14:11 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:11.622Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:14:11.625Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.626Z Local: 2/13/2020, 8:14:11 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:11.723Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:14:11.731Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.732Z Local: 2/13/2020, 8:14:11 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:11.813Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:14:11.817Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 3 
2020-02-13T12:14:11.817Z Local: 2/13/2020, 8:14:11 PM Sending 3 rows to ::1 with  
2020-02-13T12:14:11.919Z Local: 2/13/2020, 8:14:11 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:14:11.923Z Local: 2/13/2020, 8:14:11 PM command: SELECT, rowCount: 1 
2020-02-13T12:14:11.923Z Local: 2/13/2020, 8:14:11 PM Sending 1 rows to ::1 with  
2020-02-13T12:15:33.470Z Local: 2/13/2020, 8:15:33 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T12:15:33.496Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 1 
2020-02-13T12:15:33.498Z Local: 2/13/2020, 8:15:33 PM Sending 1 rows to ::1 with  
2020-02-13T12:15:33.508Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:15:33.511Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.512Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:33.530Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:15:33.533Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:33.532Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.559Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:15:33.563Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.564Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:33.588Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:15:33.590Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.591Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:33.621Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:15:33.624Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.624Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:33.655Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:15:33.658Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.659Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:33.703Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:15:33.706Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.707Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:33.747Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:15:33.749Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.750Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:33.786Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:15:33.787Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.788Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:33.823Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:15:33.825Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.826Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:33.879Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:15:33.881Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.882Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:33.920Z Local: 2/13/2020, 8:15:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:15:33.923Z Local: 2/13/2020, 8:15:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:33.923Z Local: 2/13/2020, 8:15:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.004Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:15:34.006Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.006Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.071Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:15:34.074Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.074Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.145Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:15:34.147Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.148Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.204Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:15:34.207Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.207Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.297Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:15:34.299Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.299Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.367Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:15:34.370Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.371Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.440Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:15:34.442Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.442Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.501Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:15:34.503Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.503Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.546Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:15:34.548Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.548Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.595Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:15:34.598Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.598Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.652Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:15:34.655Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.656Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.703Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:15:34.705Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 3 
2020-02-13T12:15:34.706Z Local: 2/13/2020, 8:15:34 PM Sending 3 rows to ::1 with  
2020-02-13T12:15:34.751Z Local: 2/13/2020, 8:15:34 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:15:34.753Z Local: 2/13/2020, 8:15:34 PM command: SELECT, rowCount: 1 
2020-02-13T12:15:34.754Z Local: 2/13/2020, 8:15:34 PM Sending 1 rows to ::1 with  
2020-02-13T12:15:35.611Z Local: 2/13/2020, 8:15:35 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T12:15:35.627Z Local: 2/13/2020, 8:15:35 PM command: SELECT, rowCount: 1 
2020-02-13T12:15:35.628Z Local: 2/13/2020, 8:15:35 PM Sending 1 rows to ::1 with  
2020-02-13T12:16:21.398Z Local: 2/13/2020, 8:16:21 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T12:16:21.529Z Local: 2/13/2020, 8:16:21 PM command: SELECT, rowCount: 1 
2020-02-13T12:16:21.531Z Local: 2/13/2020, 8:16:21 PM Sending 1 rows to ::1 with  
2020-02-13T12:16:25.323Z Local: 2/13/2020, 8:16:25 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T12:16:25.325Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 1 
2020-02-13T12:16:25.326Z Local: 2/13/2020, 8:16:25 PM Sending 1 rows to ::1 with  
2020-02-13T12:16:25.350Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:16:25.354Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.354Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.370Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:16:25.374Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.375Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.403Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:16:25.405Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.406Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.435Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:16:25.437Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.438Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.470Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:16:25.472Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.473Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.506Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:16:25.508Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.508Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.552Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:16:25.555Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.556Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.589Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:16:25.592Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.592Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.630Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:16:25.634Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.635Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.679Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:16:25.682Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.684Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.732Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:16:25.734Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.735Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.770Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:16:25.772Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.773Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.850Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:16:25.854Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.855Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:25.931Z Local: 2/13/2020, 8:16:25 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:16:25.935Z Local: 2/13/2020, 8:16:25 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:25.936Z Local: 2/13/2020, 8:16:25 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:26.001Z Local: 2/13/2020, 8:16:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:16:26.004Z Local: 2/13/2020, 8:16:26 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:26.004Z Local: 2/13/2020, 8:16:26 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:26.062Z Local: 2/13/2020, 8:16:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:16:26.064Z Local: 2/13/2020, 8:16:26 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:26.065Z Local: 2/13/2020, 8:16:26 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:26.139Z Local: 2/13/2020, 8:16:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:16:26.141Z Local: 2/13/2020, 8:16:26 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:26.141Z Local: 2/13/2020, 8:16:26 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:26.227Z Local: 2/13/2020, 8:16:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:16:26.229Z Local: 2/13/2020, 8:16:26 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:26.230Z Local: 2/13/2020, 8:16:26 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:26.309Z Local: 2/13/2020, 8:16:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:16:26.312Z Local: 2/13/2020, 8:16:26 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:26.312Z Local: 2/13/2020, 8:16:26 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:26.366Z Local: 2/13/2020, 8:16:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:16:26.368Z Local: 2/13/2020, 8:16:26 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:26.369Z Local: 2/13/2020, 8:16:26 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:26.410Z Local: 2/13/2020, 8:16:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:16:26.412Z Local: 2/13/2020, 8:16:26 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:26.413Z Local: 2/13/2020, 8:16:26 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:26.478Z Local: 2/13/2020, 8:16:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:16:26.480Z Local: 2/13/2020, 8:16:26 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:26.482Z Local: 2/13/2020, 8:16:26 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:26.542Z Local: 2/13/2020, 8:16:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:16:26.545Z Local: 2/13/2020, 8:16:26 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:26.545Z Local: 2/13/2020, 8:16:26 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:26.607Z Local: 2/13/2020, 8:16:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:16:26.609Z Local: 2/13/2020, 8:16:26 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:26.609Z Local: 2/13/2020, 8:16:26 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:26.664Z Local: 2/13/2020, 8:16:26 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:16:26.666Z Local: 2/13/2020, 8:16:26 PM command: SELECT, rowCount: 1 
2020-02-13T12:16:26.667Z Local: 2/13/2020, 8:16:26 PM Sending 1 rows to ::1 with  
2020-02-13T12:16:47.231Z Local: 2/13/2020, 8:16:47 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T12:16:47.305Z Local: 2/13/2020, 8:16:47 PM command: SELECT, rowCount: 1 
2020-02-13T12:16:47.355Z Local: 2/13/2020, 8:16:47 PM Sending 1 rows to ::1 with  
2020-02-13T12:16:47.492Z Local: 2/13/2020, 8:16:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:16:47.504Z Local: 2/13/2020, 8:16:47 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:47.505Z Local: 2/13/2020, 8:16:47 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:47.534Z Local: 2/13/2020, 8:16:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:16:47.536Z Local: 2/13/2020, 8:16:47 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:47.536Z Local: 2/13/2020, 8:16:47 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:47.568Z Local: 2/13/2020, 8:16:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:16:47.571Z Local: 2/13/2020, 8:16:47 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:47.572Z Local: 2/13/2020, 8:16:47 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:47.601Z Local: 2/13/2020, 8:16:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:16:47.604Z Local: 2/13/2020, 8:16:47 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:47.604Z Local: 2/13/2020, 8:16:47 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:47.714Z Local: 2/13/2020, 8:16:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:16:47.717Z Local: 2/13/2020, 8:16:47 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:47.718Z Local: 2/13/2020, 8:16:47 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:47.752Z Local: 2/13/2020, 8:16:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:16:47.755Z Local: 2/13/2020, 8:16:47 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:47.756Z Local: 2/13/2020, 8:16:47 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:47.794Z Local: 2/13/2020, 8:16:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:16:47.799Z Local: 2/13/2020, 8:16:47 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:47.799Z Local: 2/13/2020, 8:16:47 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:47.868Z Local: 2/13/2020, 8:16:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:16:47.873Z Local: 2/13/2020, 8:16:47 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:47.874Z Local: 2/13/2020, 8:16:47 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:47.945Z Local: 2/13/2020, 8:16:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:16:47.948Z Local: 2/13/2020, 8:16:47 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:47.949Z Local: 2/13/2020, 8:16:47 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.000Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:16:48.004Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.003Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.055Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:16:48.058Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.058Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.111Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:16:48.115Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.116Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.308Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:16:48.310Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.310Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.374Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:16:48.376Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.377Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.467Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:16:48.470Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.470Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.547Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:16:48.550Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.550Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.631Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:16:48.634Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.634Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.695Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:16:48.697Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.698Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.757Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:16:48.759Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.759Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.813Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:16:48.815Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.816Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.862Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:16:48.866Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.867Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.910Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:16:48.913Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:48.913Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.962Z Local: 2/13/2020, 8:16:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:16:48.964Z Local: 2/13/2020, 8:16:48 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:48.965Z Local: 2/13/2020, 8:16:48 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:49.014Z Local: 2/13/2020, 8:16:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:16:49.016Z Local: 2/13/2020, 8:16:49 PM command: SELECT, rowCount: 3 
2020-02-13T12:16:49.017Z Local: 2/13/2020, 8:16:49 PM Sending 3 rows to ::1 with  
2020-02-13T12:16:49.062Z Local: 2/13/2020, 8:16:49 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:16:49.064Z Local: 2/13/2020, 8:16:49 PM command: SELECT, rowCount: 1 
2020-02-13T12:16:49.064Z Local: 2/13/2020, 8:16:49 PM Sending 1 rows to ::1 with  
2020-02-13T12:16:55.184Z Local: 2/13/2020, 8:16:55 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T12:16:55.196Z Local: 2/13/2020, 8:16:55 PM command: SELECT, rowCount: 1 
2020-02-13T12:16:55.198Z Local: 2/13/2020, 8:16:55 PM Sending 1 rows to ::1 with  
2020-02-13T12:17:44.676Z Local: 2/13/2020, 8:17:44 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T12:17:44.700Z Local: 2/13/2020, 8:17:44 PM command: SELECT, rowCount: 1 
2020-02-13T12:17:44.702Z Local: 2/13/2020, 8:17:44 PM Sending 1 rows to ::1 with  
2020-02-13T12:17:51.046Z Local: 2/13/2020, 8:17:51 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T12:17:51.050Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 1 
2020-02-13T12:17:51.051Z Local: 2/13/2020, 8:17:51 PM Sending 1 rows to ::1 with  
2020-02-13T12:17:51.074Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:17:51.077Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.078Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.094Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:17:51.096Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.097Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.129Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:17:51.131Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.132Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.158Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:17:51.161Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.162Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.193Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:17:51.196Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.196Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.228Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:17:51.230Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.231Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.279Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:17:51.285Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.287Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.324Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:17:51.326Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.327Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.368Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:17:51.370Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.370Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.413Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:17:51.416Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.417Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.475Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:17:51.477Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.478Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.522Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:17:51.525Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.525Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.591Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:17:51.596Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.595Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.675Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:17:51.678Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.677Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.746Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:17:51.749Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.750Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.827Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:17:51.829Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.830Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:51.901Z Local: 2/13/2020, 8:17:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:17:51.903Z Local: 2/13/2020, 8:17:51 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:51.903Z Local: 2/13/2020, 8:17:51 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:52.005Z Local: 2/13/2020, 8:17:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:17:52.007Z Local: 2/13/2020, 8:17:52 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:52.007Z Local: 2/13/2020, 8:17:52 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:52.070Z Local: 2/13/2020, 8:17:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:17:52.072Z Local: 2/13/2020, 8:17:52 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:52.073Z Local: 2/13/2020, 8:17:52 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:52.132Z Local: 2/13/2020, 8:17:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:17:52.136Z Local: 2/13/2020, 8:17:52 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:52.135Z Local: 2/13/2020, 8:17:52 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:52.190Z Local: 2/13/2020, 8:17:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:17:52.193Z Local: 2/13/2020, 8:17:52 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:52.193Z Local: 2/13/2020, 8:17:52 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:52.259Z Local: 2/13/2020, 8:17:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:17:52.261Z Local: 2/13/2020, 8:17:52 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:52.262Z Local: 2/13/2020, 8:17:52 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:52.328Z Local: 2/13/2020, 8:17:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:17:52.330Z Local: 2/13/2020, 8:17:52 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:52.331Z Local: 2/13/2020, 8:17:52 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:52.382Z Local: 2/13/2020, 8:17:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:17:52.384Z Local: 2/13/2020, 8:17:52 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:52.385Z Local: 2/13/2020, 8:17:52 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:52.433Z Local: 2/13/2020, 8:17:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:17:52.435Z Local: 2/13/2020, 8:17:52 PM command: SELECT, rowCount: 1 
2020-02-13T12:17:52.436Z Local: 2/13/2020, 8:17:52 PM Sending 1 rows to ::1 with  
2020-02-13T12:17:56.390Z Local: 2/13/2020, 8:17:56 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T12:17:56.392Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 1 
2020-02-13T12:17:56.394Z Local: 2/13/2020, 8:17:56 PM Sending 1 rows to ::1 with  
2020-02-13T12:17:56.410Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:17:56.413Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.414Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.430Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:17:56.432Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.433Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.455Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:17:56.457Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.458Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.479Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:17:56.482Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.483Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.507Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:17:56.509Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.510Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.536Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:17:56.539Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.539Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.566Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:17:56.568Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.569Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.597Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:17:56.601Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.601Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.634Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:17:56.636Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.637Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.671Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:17:56.672Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.673Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.710Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:17:56.713Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.713Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.750Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:17:56.752Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.753Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.812Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:17:56.815Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.816Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.873Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:17:56.875Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:56.876Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.949Z Local: 2/13/2020, 8:17:56 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:17:56.952Z Local: 2/13/2020, 8:17:56 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:56.951Z Local: 2/13/2020, 8:17:56 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:57.022Z Local: 2/13/2020, 8:17:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:17:57.024Z Local: 2/13/2020, 8:17:57 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:57.025Z Local: 2/13/2020, 8:17:57 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:57.093Z Local: 2/13/2020, 8:17:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:17:57.096Z Local: 2/13/2020, 8:17:57 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:57.095Z Local: 2/13/2020, 8:17:57 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:57.157Z Local: 2/13/2020, 8:17:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:17:57.160Z Local: 2/13/2020, 8:17:57 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:57.160Z Local: 2/13/2020, 8:17:57 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:57.229Z Local: 2/13/2020, 8:17:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:17:57.231Z Local: 2/13/2020, 8:17:57 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:57.231Z Local: 2/13/2020, 8:17:57 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:57.284Z Local: 2/13/2020, 8:17:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:17:57.285Z Local: 2/13/2020, 8:17:57 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:57.286Z Local: 2/13/2020, 8:17:57 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:57.335Z Local: 2/13/2020, 8:17:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:17:57.338Z Local: 2/13/2020, 8:17:57 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:57.338Z Local: 2/13/2020, 8:17:57 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:57.389Z Local: 2/13/2020, 8:17:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:17:57.391Z Local: 2/13/2020, 8:17:57 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:57.392Z Local: 2/13/2020, 8:17:57 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:57.445Z Local: 2/13/2020, 8:17:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:17:57.448Z Local: 2/13/2020, 8:17:57 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:57.449Z Local: 2/13/2020, 8:17:57 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:57.501Z Local: 2/13/2020, 8:17:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:17:57.503Z Local: 2/13/2020, 8:17:57 PM command: SELECT, rowCount: 3 
2020-02-13T12:17:57.504Z Local: 2/13/2020, 8:17:57 PM Sending 3 rows to ::1 with  
2020-02-13T12:17:57.562Z Local: 2/13/2020, 8:17:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:17:57.565Z Local: 2/13/2020, 8:17:57 PM command: SELECT, rowCount: 1 
2020-02-13T12:17:57.565Z Local: 2/13/2020, 8:17:57 PM Sending 1 rows to ::1 with  
2020-02-13T12:17:58.007Z Local: 2/13/2020, 8:17:58 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T12:17:58.010Z Local: 2/13/2020, 8:17:58 PM command: SELECT, rowCount: 1 
2020-02-13T12:17:58.011Z Local: 2/13/2020, 8:17:58 PM Sending 1 rows to ::1 with  
2020-02-13T12:18:16.993Z Local: 2/13/2020, 8:18:16 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T12:18:17.130Z Local: 2/13/2020, 8:18:17 PM command: SELECT, rowCount: 1 
2020-02-13T12:18:17.131Z Local: 2/13/2020, 8:18:17 PM Sending 1 rows to ::1 with  
2020-02-13T12:18:27.012Z Local: 2/13/2020, 8:18:27 PM SELECT * FROM posts_table WHERE id = '73'; 
2020-02-13T12:18:27.015Z Local: 2/13/2020, 8:18:27 PM command: SELECT, rowCount: 1 
2020-02-13T12:18:27.016Z Local: 2/13/2020, 8:18:27 PM Sending 1 rows to ::1 with  
2020-02-13T12:18:31.772Z Local: 2/13/2020, 8:18:31 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T12:18:31.776Z Local: 2/13/2020, 8:18:31 PM command: SELECT, rowCount: 1 
2020-02-13T12:18:31.777Z Local: 2/13/2020, 8:18:31 PM Sending 1 rows to ::1 with  
2020-02-13T12:18:31.805Z Local: 2/13/2020, 8:18:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:18:31.808Z Local: 2/13/2020, 8:18:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:31.809Z Local: 2/13/2020, 8:18:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:31.824Z Local: 2/13/2020, 8:18:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:18:31.828Z Local: 2/13/2020, 8:18:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:31.829Z Local: 2/13/2020, 8:18:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:31.856Z Local: 2/13/2020, 8:18:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:18:31.859Z Local: 2/13/2020, 8:18:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:31.860Z Local: 2/13/2020, 8:18:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:31.931Z Local: 2/13/2020, 8:18:31 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:18:31.976Z Local: 2/13/2020, 8:18:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:31.978Z Local: 2/13/2020, 8:18:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.002Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:18:32.014Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.016Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.054Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:18:32.059Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.060Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.107Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:18:32.112Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.112Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.155Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:18:32.157Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.159Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.211Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:18:32.214Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.213Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.266Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:18:32.269Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.270Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.314Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:18:32.316Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.317Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.354Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:18:32.358Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.359Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.418Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:18:32.421Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.420Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.506Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:18:32.509Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.509Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.581Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:18:32.583Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.584Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.646Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:18:32.648Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.649Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.750Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:18:32.753Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.753Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.826Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:18:32.829Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.829Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:32.917Z Local: 2/13/2020, 8:18:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:18:32.919Z Local: 2/13/2020, 8:18:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:32.920Z Local: 2/13/2020, 8:18:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:33.007Z Local: 2/13/2020, 8:18:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:18:33.012Z Local: 2/13/2020, 8:18:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:33.013Z Local: 2/13/2020, 8:18:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:33.074Z Local: 2/13/2020, 8:18:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:18:33.078Z Local: 2/13/2020, 8:18:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:33.078Z Local: 2/13/2020, 8:18:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:33.134Z Local: 2/13/2020, 8:18:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:18:33.137Z Local: 2/13/2020, 8:18:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:33.136Z Local: 2/13/2020, 8:18:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:33.190Z Local: 2/13/2020, 8:18:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:18:33.193Z Local: 2/13/2020, 8:18:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:33.193Z Local: 2/13/2020, 8:18:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:33.246Z Local: 2/13/2020, 8:18:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:18:33.248Z Local: 2/13/2020, 8:18:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:33.249Z Local: 2/13/2020, 8:18:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:33.311Z Local: 2/13/2020, 8:18:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:18:33.314Z Local: 2/13/2020, 8:18:33 PM Sending 1 rows to ::1 with  
2020-02-13T12:18:33.314Z Local: 2/13/2020, 8:18:33 PM command: SELECT, rowCount: 1 
2020-02-13T12:18:35.945Z Local: 2/13/2020, 8:18:35 PM SELECT * FROM posts_table WHERE id = '67'; 
2020-02-13T12:18:35.947Z Local: 2/13/2020, 8:18:35 PM command: SELECT, rowCount: 1 
2020-02-13T12:18:35.948Z Local: 2/13/2020, 8:18:35 PM Sending 1 rows to ::1 with  
2020-02-13T12:18:38.248Z Local: 2/13/2020, 8:18:38 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T12:18:38.250Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 1 
2020-02-13T12:18:38.251Z Local: 2/13/2020, 8:18:38 PM Sending 1 rows to ::1 with  
2020-02-13T12:18:38.267Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:18:38.269Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.270Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.287Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:18:38.289Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.288Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.313Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:18:38.316Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.317Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.340Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:18:38.344Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.345Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.366Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:18:38.368Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.369Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.403Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:18:38.406Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.407Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.439Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:18:38.442Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.442Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.472Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:18:38.475Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.475Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.503Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:18:38.506Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.507Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.549Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:18:38.551Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.552Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.584Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:18:38.586Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.586Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.618Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:18:38.621Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.622Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.683Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:18:38.686Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.686Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.741Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:18:38.744Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.743Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.801Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:18:38.803Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.803Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.859Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:18:38.861Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.862Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.927Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:18:38.929Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.930Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:38.989Z Local: 2/13/2020, 8:18:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:18:38.992Z Local: 2/13/2020, 8:18:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:38.992Z Local: 2/13/2020, 8:18:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:39.052Z Local: 2/13/2020, 8:18:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:18:39.054Z Local: 2/13/2020, 8:18:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:39.055Z Local: 2/13/2020, 8:18:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:39.111Z Local: 2/13/2020, 8:18:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:18:39.113Z Local: 2/13/2020, 8:18:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:39.114Z Local: 2/13/2020, 8:18:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:39.154Z Local: 2/13/2020, 8:18:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:18:39.157Z Local: 2/13/2020, 8:18:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:39.158Z Local: 2/13/2020, 8:18:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:39.211Z Local: 2/13/2020, 8:18:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:18:39.213Z Local: 2/13/2020, 8:18:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:39.214Z Local: 2/13/2020, 8:18:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:39.271Z Local: 2/13/2020, 8:18:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:18:39.273Z Local: 2/13/2020, 8:18:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:39.274Z Local: 2/13/2020, 8:18:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:39.331Z Local: 2/13/2020, 8:18:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:18:39.333Z Local: 2/13/2020, 8:18:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:18:39.334Z Local: 2/13/2020, 8:18:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:18:39.377Z Local: 2/13/2020, 8:18:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:18:39.380Z Local: 2/13/2020, 8:18:39 PM Sending 1 rows to ::1 with  
2020-02-13T12:18:39.379Z Local: 2/13/2020, 8:18:39 PM command: SELECT, rowCount: 1 
2020-02-13T12:19:38.315Z Local: 2/13/2020, 8:19:38 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T12:19:38.342Z Local: 2/13/2020, 8:19:38 PM command: SELECT, rowCount: 1 
2020-02-13T12:19:38.370Z Local: 2/13/2020, 8:19:38 PM Sending 1 rows to ::1 with  
2020-02-13T12:19:38.518Z Local: 2/13/2020, 8:19:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:19:38.522Z Local: 2/13/2020, 8:19:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:38.522Z Local: 2/13/2020, 8:19:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:38.599Z Local: 2/13/2020, 8:19:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:19:38.601Z Local: 2/13/2020, 8:19:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:38.602Z Local: 2/13/2020, 8:19:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:38.646Z Local: 2/13/2020, 8:19:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:19:38.651Z Local: 2/13/2020, 8:19:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:38.653Z Local: 2/13/2020, 8:19:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:38.686Z Local: 2/13/2020, 8:19:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:19:38.688Z Local: 2/13/2020, 8:19:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:38.689Z Local: 2/13/2020, 8:19:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:38.807Z Local: 2/13/2020, 8:19:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:19:38.809Z Local: 2/13/2020, 8:19:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:38.810Z Local: 2/13/2020, 8:19:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:38.845Z Local: 2/13/2020, 8:19:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:19:38.850Z Local: 2/13/2020, 8:19:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:38.851Z Local: 2/13/2020, 8:19:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:38.887Z Local: 2/13/2020, 8:19:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:19:38.889Z Local: 2/13/2020, 8:19:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:38.889Z Local: 2/13/2020, 8:19:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:38.934Z Local: 2/13/2020, 8:19:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:19:38.936Z Local: 2/13/2020, 8:19:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:38.936Z Local: 2/13/2020, 8:19:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:38.986Z Local: 2/13/2020, 8:19:38 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:19:38.989Z Local: 2/13/2020, 8:19:38 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:38.989Z Local: 2/13/2020, 8:19:38 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.049Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:19:39.055Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.056Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.132Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:19:39.137Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.138Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.202Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:19:39.205Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.206Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.285Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:19:39.287Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.288Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.367Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:19:39.370Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.371Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.490Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:19:39.492Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.493Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.599Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:19:39.602Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.603Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.704Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:19:39.707Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.707Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.779Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:19:39.781Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.782Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.851Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:19:39.854Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.854Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.915Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:19:39.917Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.918Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:39.966Z Local: 2/13/2020, 8:19:39 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:19:39.968Z Local: 2/13/2020, 8:19:39 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:39.969Z Local: 2/13/2020, 8:19:39 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:40.019Z Local: 2/13/2020, 8:19:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:19:40.021Z Local: 2/13/2020, 8:19:40 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:40.022Z Local: 2/13/2020, 8:19:40 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:40.072Z Local: 2/13/2020, 8:19:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:19:40.074Z Local: 2/13/2020, 8:19:40 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:40.074Z Local: 2/13/2020, 8:19:40 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:40.133Z Local: 2/13/2020, 8:19:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:19:40.135Z Local: 2/13/2020, 8:19:40 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:40.136Z Local: 2/13/2020, 8:19:40 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:40.194Z Local: 2/13/2020, 8:19:40 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:19:40.197Z Local: 2/13/2020, 8:19:40 PM command: SELECT, rowCount: 1 
2020-02-13T12:19:40.198Z Local: 2/13/2020, 8:19:40 PM Sending 1 rows to ::1 with  
2020-02-13T12:19:42.248Z Local: 2/13/2020, 8:19:42 PM SELECT * FROM posts_table WHERE id = '62'; 
2020-02-13T12:19:42.252Z Local: 2/13/2020, 8:19:42 PM command: SELECT, rowCount: 1 
2020-02-13T12:19:42.253Z Local: 2/13/2020, 8:19:42 PM Sending 1 rows to ::1 with  
2020-02-13T12:19:45.319Z Local: 2/13/2020, 8:19:45 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T12:19:45.323Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 1 
2020-02-13T12:19:45.323Z Local: 2/13/2020, 8:19:45 PM Sending 1 rows to ::1 with  
2020-02-13T12:19:45.341Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:19:45.344Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.345Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.359Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:19:45.362Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.362Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.385Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:19:45.386Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.387Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.410Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:19:45.413Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.414Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.439Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:19:45.442Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.443Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.473Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:19:45.477Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.479Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.510Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:19:45.513Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.514Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.551Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:19:45.553Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.554Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.588Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:19:45.590Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.591Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.631Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:19:45.633Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.634Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.682Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:19:45.685Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.686Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.733Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:19:45.736Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.737Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.805Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:19:45.807Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.808Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.885Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:19:45.888Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.889Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:45.973Z Local: 2/13/2020, 8:19:45 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:19:45.977Z Local: 2/13/2020, 8:19:45 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:45.978Z Local: 2/13/2020, 8:19:45 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:46.063Z Local: 2/13/2020, 8:19:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:19:46.067Z Local: 2/13/2020, 8:19:46 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:46.067Z Local: 2/13/2020, 8:19:46 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:46.146Z Local: 2/13/2020, 8:19:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:19:46.148Z Local: 2/13/2020, 8:19:46 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:46.149Z Local: 2/13/2020, 8:19:46 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:46.215Z Local: 2/13/2020, 8:19:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:19:46.217Z Local: 2/13/2020, 8:19:46 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:46.218Z Local: 2/13/2020, 8:19:46 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:46.281Z Local: 2/13/2020, 8:19:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:19:46.283Z Local: 2/13/2020, 8:19:46 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:46.284Z Local: 2/13/2020, 8:19:46 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:46.337Z Local: 2/13/2020, 8:19:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:19:46.340Z Local: 2/13/2020, 8:19:46 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:46.339Z Local: 2/13/2020, 8:19:46 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:46.392Z Local: 2/13/2020, 8:19:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:19:46.395Z Local: 2/13/2020, 8:19:46 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:46.396Z Local: 2/13/2020, 8:19:46 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:46.445Z Local: 2/13/2020, 8:19:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:19:46.446Z Local: 2/13/2020, 8:19:46 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:46.447Z Local: 2/13/2020, 8:19:46 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:46.496Z Local: 2/13/2020, 8:19:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:19:46.499Z Local: 2/13/2020, 8:19:46 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:46.499Z Local: 2/13/2020, 8:19:46 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:46.547Z Local: 2/13/2020, 8:19:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:19:46.549Z Local: 2/13/2020, 8:19:46 PM command: SELECT, rowCount: 3 
2020-02-13T12:19:46.549Z Local: 2/13/2020, 8:19:46 PM Sending 3 rows to ::1 with  
2020-02-13T12:19:46.597Z Local: 2/13/2020, 8:19:46 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:19:46.599Z Local: 2/13/2020, 8:19:46 PM command: SELECT, rowCount: 1 
2020-02-13T12:19:46.600Z Local: 2/13/2020, 8:19:46 PM Sending 1 rows to ::1 with  
2020-02-13T12:19:50.997Z Local: 2/13/2020, 8:19:50 PM SELECT * FROM posts_table WHERE id = '31'; 
2020-02-13T12:19:51.000Z Local: 2/13/2020, 8:19:51 PM command: SELECT, rowCount: 1 
2020-02-13T12:19:51.008Z Local: 2/13/2020, 8:19:51 PM Sending 1 rows to ::1 with  
2020-02-13T12:20:38.814Z Local: 2/13/2020, 8:20:38 PM SELECT * FROM posts_table WHERE id = '31'; 
2020-02-13T12:20:38.852Z Local: 2/13/2020, 8:20:38 PM command: SELECT, rowCount: 1 
2020-02-13T12:20:38.857Z Local: 2/13/2020, 8:20:38 PM Sending 1 rows to ::1 with  
2020-02-13T12:26:32.165Z Local: 2/13/2020, 8:26:32 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T12:26:32.200Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 1 
2020-02-13T12:26:32.201Z Local: 2/13/2020, 8:26:32 PM Sending 1 rows to ::1 with  
2020-02-13T12:26:32.213Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:26:32.222Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.223Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.241Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:26:32.243Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.242Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.271Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:26:32.272Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.273Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.300Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:26:32.302Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.302Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.334Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:26:32.336Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.337Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.377Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:26:32.382Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.383Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.423Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:26:32.426Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.427Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.469Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:26:32.472Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.472Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.513Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:26:32.515Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.517Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.563Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:26:32.566Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.567Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.615Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:26:32.617Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.618Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.665Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:26:32.668Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.669Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.748Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:26:32.750Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.751Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.824Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:26:32.826Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.826Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.888Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:26:32.890Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.891Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:32.958Z Local: 2/13/2020, 8:26:32 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:26:32.960Z Local: 2/13/2020, 8:26:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:32.960Z Local: 2/13/2020, 8:26:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:33.048Z Local: 2/13/2020, 8:26:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:26:33.050Z Local: 2/13/2020, 8:26:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:33.051Z Local: 2/13/2020, 8:26:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:33.124Z Local: 2/13/2020, 8:26:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:26:33.126Z Local: 2/13/2020, 8:26:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:33.127Z Local: 2/13/2020, 8:26:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:33.206Z Local: 2/13/2020, 8:26:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:26:33.208Z Local: 2/13/2020, 8:26:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:33.209Z Local: 2/13/2020, 8:26:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:33.259Z Local: 2/13/2020, 8:26:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:26:33.261Z Local: 2/13/2020, 8:26:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:33.262Z Local: 2/13/2020, 8:26:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:33.314Z Local: 2/13/2020, 8:26:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:26:33.316Z Local: 2/13/2020, 8:26:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:33.317Z Local: 2/13/2020, 8:26:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:33.373Z Local: 2/13/2020, 8:26:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:26:33.374Z Local: 2/13/2020, 8:26:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:33.375Z Local: 2/13/2020, 8:26:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:33.439Z Local: 2/13/2020, 8:26:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:26:33.441Z Local: 2/13/2020, 8:26:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:33.442Z Local: 2/13/2020, 8:26:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:33.498Z Local: 2/13/2020, 8:26:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:26:33.499Z Local: 2/13/2020, 8:26:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:26:33.500Z Local: 2/13/2020, 8:26:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:26:33.554Z Local: 2/13/2020, 8:26:33 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:26:33.556Z Local: 2/13/2020, 8:26:33 PM command: SELECT, rowCount: 1 
2020-02-13T12:26:33.557Z Local: 2/13/2020, 8:26:33 PM Sending 1 rows to ::1 with  
2020-02-13T12:27:16.491Z Local: 2/13/2020, 8:27:16 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T12:27:16.654Z Local: 2/13/2020, 8:27:16 PM command: SELECT, rowCount: 1 
2020-02-13T12:27:16.679Z Local: 2/13/2020, 8:27:16 PM Sending 1 rows to ::1 with  
2020-02-13T12:27:16.740Z Local: 2/13/2020, 8:27:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:27:16.758Z Local: 2/13/2020, 8:27:16 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:16.758Z Local: 2/13/2020, 8:27:16 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:16.774Z Local: 2/13/2020, 8:27:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:27:16.779Z Local: 2/13/2020, 8:27:16 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:16.780Z Local: 2/13/2020, 8:27:16 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:16.803Z Local: 2/13/2020, 8:27:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:27:16.807Z Local: 2/13/2020, 8:27:16 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:16.808Z Local: 2/13/2020, 8:27:16 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:16.838Z Local: 2/13/2020, 8:27:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:27:16.842Z Local: 2/13/2020, 8:27:16 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:16.843Z Local: 2/13/2020, 8:27:16 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:16.875Z Local: 2/13/2020, 8:27:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:27:16.879Z Local: 2/13/2020, 8:27:16 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:16.880Z Local: 2/13/2020, 8:27:16 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:16.911Z Local: 2/13/2020, 8:27:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:27:16.915Z Local: 2/13/2020, 8:27:16 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:16.916Z Local: 2/13/2020, 8:27:16 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:16.965Z Local: 2/13/2020, 8:27:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:27:16.974Z Local: 2/13/2020, 8:27:16 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:16.975Z Local: 2/13/2020, 8:27:16 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.031Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:27:17.039Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.039Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.104Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:27:17.110Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.111Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.169Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:27:17.175Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.175Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.227Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:27:17.232Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.232Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.292Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:27:17.325Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.335Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.368Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:27:17.373Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.374Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.431Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:27:17.437Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.438Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.501Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:27:17.507Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.508Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.574Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:27:17.579Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.580Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.651Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:27:17.658Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.658Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.761Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:27:17.767Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.767Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.828Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:27:17.833Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.833Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.882Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:27:17.888Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.889Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:17.945Z Local: 2/13/2020, 8:27:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:27:17.952Z Local: 2/13/2020, 8:27:17 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:17.953Z Local: 2/13/2020, 8:27:17 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.007Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:27:18.013Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.014Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.077Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:27:18.082Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.082Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.141Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:27:18.145Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.145Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.215Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:27:18.218Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.219Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.280Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T12:27:18.284Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.285Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.347Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T12:27:18.351Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.352Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.411Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T12:27:18.415Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.416Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.488Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T12:27:18.491Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.492Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.555Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T12:27:18.560Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.561Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.631Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T12:27:18.636Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.637Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.714Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T12:27:18.718Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.719Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.795Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T12:27:18.800Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.800Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.867Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T12:27:18.872Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.873Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:18.940Z Local: 2/13/2020, 8:27:18 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T12:27:18.944Z Local: 2/13/2020, 8:27:18 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:18.945Z Local: 2/13/2020, 8:27:18 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:19.018Z Local: 2/13/2020, 8:27:19 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T12:27:19.020Z Local: 2/13/2020, 8:27:19 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:19.021Z Local: 2/13/2020, 8:27:19 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:19.103Z Local: 2/13/2020, 8:27:19 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T12:27:19.107Z Local: 2/13/2020, 8:27:19 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:19.108Z Local: 2/13/2020, 8:27:19 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:19.182Z Local: 2/13/2020, 8:27:19 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T12:27:19.188Z Local: 2/13/2020, 8:27:19 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:19.189Z Local: 2/13/2020, 8:27:19 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:19.268Z Local: 2/13/2020, 8:27:19 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T12:27:19.272Z Local: 2/13/2020, 8:27:19 PM command: SELECT, rowCount: 3 
2020-02-13T12:27:19.272Z Local: 2/13/2020, 8:27:19 PM Sending 3 rows to ::1 with  
2020-02-13T12:27:19.353Z Local: 2/13/2020, 8:27:19 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T12:27:19.356Z Local: 2/13/2020, 8:27:19 PM command: SELECT, rowCount: 1 
2020-02-13T12:27:19.357Z Local: 2/13/2020, 8:27:19 PM Sending 1 rows to ::1 with  
2020-02-13T12:30:30.879Z Local: 2/13/2020, 8:30:30 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T12:30:30.946Z Local: 2/13/2020, 8:30:30 PM command: SELECT, rowCount: 1 
2020-02-13T12:30:30.948Z Local: 2/13/2020, 8:30:30 PM Sending 1 rows to ::1 with  
2020-02-13T12:30:31.009Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T12:30:31.016Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.017Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.092Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T12:30:31.096Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.097Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.135Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T12:30:31.139Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.140Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.165Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T12:30:31.170Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.170Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.208Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T12:30:31.213Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.214Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.255Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T12:30:31.259Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.260Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.293Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T12:30:31.297Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.298Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.333Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T12:30:31.338Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.337Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.386Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T12:30:31.390Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.391Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.435Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T12:30:31.440Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.441Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.485Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T12:30:31.489Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.490Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.559Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T12:30:31.565Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.565Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.617Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T12:30:31.622Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.623Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.678Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T12:30:31.683Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.684Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.734Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T12:30:31.739Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.739Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.802Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T12:30:31.807Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.808Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.878Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T12:30:31.887Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.888Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:31.962Z Local: 2/13/2020, 8:30:31 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T12:30:31.972Z Local: 2/13/2020, 8:30:31 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:31.973Z Local: 2/13/2020, 8:30:31 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.025Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T12:30:32.034Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.035Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.100Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T12:30:32.106Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.106Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.176Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T12:30:32.181Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.182Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.234Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T12:30:32.239Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.240Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.299Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T12:30:32.304Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.304Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.364Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T12:30:32.369Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.370Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.433Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T12:30:32.435Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.436Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.499Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T12:30:32.502Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.501Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.569Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T12:30:32.576Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.577Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.639Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T12:30:32.644Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.645Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.714Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T12:30:32.720Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.721Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.781Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T12:30:32.785Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.785Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.853Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T12:30:32.860Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:32.859Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.926Z Local: 2/13/2020, 8:30:32 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T12:30:32.930Z Local: 2/13/2020, 8:30:32 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:32.932Z Local: 2/13/2020, 8:30:32 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:33.003Z Local: 2/13/2020, 8:30:33 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T12:30:33.008Z Local: 2/13/2020, 8:30:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:33.008Z Local: 2/13/2020, 8:30:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:33.077Z Local: 2/13/2020, 8:30:33 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T12:30:33.084Z Local: 2/13/2020, 8:30:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:33.085Z Local: 2/13/2020, 8:30:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:33.155Z Local: 2/13/2020, 8:30:33 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T12:30:33.160Z Local: 2/13/2020, 8:30:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:33.160Z Local: 2/13/2020, 8:30:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:33.227Z Local: 2/13/2020, 8:30:33 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T12:30:33.233Z Local: 2/13/2020, 8:30:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:33.234Z Local: 2/13/2020, 8:30:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:33.313Z Local: 2/13/2020, 8:30:33 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T12:30:33.320Z Local: 2/13/2020, 8:30:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:33.321Z Local: 2/13/2020, 8:30:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:33.392Z Local: 2/13/2020, 8:30:33 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T12:30:33.395Z Local: 2/13/2020, 8:30:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:33.395Z Local: 2/13/2020, 8:30:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:33.471Z Local: 2/13/2020, 8:30:33 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T12:30:33.476Z Local: 2/13/2020, 8:30:33 PM command: SELECT, rowCount: 3 
2020-02-13T12:30:33.476Z Local: 2/13/2020, 8:30:33 PM Sending 3 rows to ::1 with  
2020-02-13T12:30:33.556Z Local: 2/13/2020, 8:30:33 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T12:30:33.559Z Local: 2/13/2020, 8:30:33 PM command: SELECT, rowCount: 1 
2020-02-13T12:30:33.560Z Local: 2/13/2020, 8:30:33 PM Sending 1 rows to ::1 with  
2020-02-13T12:53:02.075Z Local: 2/13/2020, 8:53:02 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T12:53:02.086Z Local: 2/13/2020, 8:53:02 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T12:53:02.129Z Local: 2/13/2020, 8:53:02 PM command: SELECT, rowCount: 1 
2020-02-13T12:53:02.132Z Local: 2/13/2020, 8:53:02 PM Sending 1 rows to ::1 with  
2020-02-13T12:53:02.144Z Local: 2/13/2020, 8:53:02 PM command: SELECT, rowCount: 1 
2020-02-13T12:53:02.145Z Local: 2/13/2020, 8:53:02 PM Sending 1 rows to ::1 with  
2020-02-13T12:53:51.513Z Local: 2/13/2020, 8:53:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T12:53:51.516Z Local: 2/13/2020, 8:53:51 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T12:53:51.548Z Local: 2/13/2020, 8:53:51 PM command: SELECT, rowCount: 1 
2020-02-13T12:53:51.549Z Local: 2/13/2020, 8:53:51 PM Sending 1 rows to ::1 with  
2020-02-13T12:53:51.552Z Local: 2/13/2020, 8:53:51 PM command: SELECT, rowCount: 1 
2020-02-13T12:53:51.553Z Local: 2/13/2020, 8:53:51 PM Sending 1 rows to ::1 with  
2020-02-13T12:54:53.766Z Local: 2/13/2020, 8:54:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T12:54:53.771Z Local: 2/13/2020, 8:54:53 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T12:54:53.818Z Local: 2/13/2020, 8:54:53 PM command: SELECT, rowCount: 1 
2020-02-13T12:54:53.820Z Local: 2/13/2020, 8:54:53 PM Sending 1 rows to ::1 with  
2020-02-13T12:54:53.835Z Local: 2/13/2020, 8:54:53 PM command: SELECT, rowCount: 1 
2020-02-13T12:54:53.836Z Local: 2/13/2020, 8:54:53 PM Sending 1 rows to ::1 with  
2020-02-13T12:58:39.196Z Local: 2/13/2020, 8:58:39 PM Warning: DbItem.queryItemList count = NaN is not a Integer 
2020-02-13T12:58:39.259Z Local: 2/13/2020, 8:58:39 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T12:58:39.265Z Local: 2/13/2020, 8:58:39 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T12:58:39.300Z Local: 2/13/2020, 8:58:39 PM command: SELECT, rowCount: 1 
2020-02-13T12:58:39.301Z Local: 2/13/2020, 8:58:39 PM Sending 1 rows to ::1 with  
2020-02-13T12:58:39.307Z Local: 2/13/2020, 8:58:39 PM command: SELECT, rowCount: 1 
2020-02-13T12:58:39.308Z Local: 2/13/2020, 8:58:39 PM Sending 1 rows to ::1 with  
2020-02-13T12:59:05.191Z Local: 2/13/2020, 8:59:05 PM Warning: DbItem.queryItemList count = NaN is not a Integer 
2020-02-13T12:59:05.247Z Local: 2/13/2020, 8:59:05 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T12:59:05.250Z Local: 2/13/2020, 8:59:05 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T12:59:05.285Z Local: 2/13/2020, 8:59:05 PM command: SELECT, rowCount: 1 
2020-02-13T12:59:05.287Z Local: 2/13/2020, 8:59:05 PM Sending 1 rows to ::1 with  
2020-02-13T12:59:05.293Z Local: 2/13/2020, 8:59:05 PM command: SELECT, rowCount: 1 
2020-02-13T12:59:05.294Z Local: 2/13/2020, 8:59:05 PM Sending 1 rows to ::1 with  
2020-02-13T12:59:16.334Z Local: 2/13/2020, 8:59:16 PM Warning: DbItem.queryItemList count = NaN is not a Integer 
2020-02-13T12:59:16.390Z Local: 2/13/2020, 8:59:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T12:59:16.396Z Local: 2/13/2020, 8:59:16 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T12:59:16.430Z Local: 2/13/2020, 8:59:16 PM command: SELECT, rowCount: 1 
2020-02-13T12:59:16.432Z Local: 2/13/2020, 8:59:16 PM Sending 1 rows to ::1 with  
2020-02-13T12:59:16.438Z Local: 2/13/2020, 8:59:16 PM command: SELECT, rowCount: 1 
2020-02-13T12:59:16.439Z Local: 2/13/2020, 8:59:16 PM Sending 1 rows to ::1 with  
2020-02-13T12:59:30.015Z Local: 2/13/2020, 8:59:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T12:59:30.056Z Local: 2/13/2020, 8:59:30 PM command: SELECT, rowCount: 1 
2020-02-13T12:59:30.059Z Local: 2/13/2020, 8:59:30 PM Sending 1 rows to ::1 with  
2020-02-13T12:59:30.096Z Local: 2/13/2020, 8:59:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T12:59:30.099Z Local: 2/13/2020, 8:59:30 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T12:59:30.102Z Local: 2/13/2020, 8:59:30 PM Sending 1 rows to ::1 with  
2020-02-13T12:59:30.101Z Local: 2/13/2020, 8:59:30 PM command: SELECT, rowCount: 1 
2020-02-13T12:59:30.134Z Local: 2/13/2020, 8:59:30 PM command: SELECT, rowCount: 1 
2020-02-13T12:59:30.137Z Local: 2/13/2020, 8:59:30 PM Sending 1 rows to ::1 with  
2020-02-13T13:11:34.246Z Local: 2/13/2020, 9:11:34 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:11:34.275Z Local: 2/13/2020, 9:11:34 PM command: SELECT, rowCount: 1 
2020-02-13T13:11:34.276Z Local: 2/13/2020, 9:11:34 PM Sending 1 rows to ::1 with  
2020-02-13T13:11:34.345Z Local: 2/13/2020, 9:11:34 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:11:34.348Z Local: 2/13/2020, 9:11:34 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T13:11:34.349Z Local: 2/13/2020, 9:11:34 PM command: SELECT, rowCount: 1 
2020-02-13T13:11:34.350Z Local: 2/13/2020, 9:11:34 PM Sending 1 rows to ::1 with  
2020-02-13T13:11:34.375Z Local: 2/13/2020, 9:11:34 PM command: SELECT, rowCount: 1 
2020-02-13T13:11:34.376Z Local: 2/13/2020, 9:11:34 PM Sending 1 rows to ::1 with  
2020-02-13T13:12:34.638Z Local: 2/13/2020, 9:12:34 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:12:34.667Z Local: 2/13/2020, 9:12:34 PM command: SELECT, rowCount: 1 
2020-02-13T13:12:34.671Z Local: 2/13/2020, 9:12:34 PM Sending 1 rows to ::1 with  
2020-02-13T13:12:34.751Z Local: 2/13/2020, 9:12:34 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:12:34.756Z Local: 2/13/2020, 9:12:34 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T13:12:34.757Z Local: 2/13/2020, 9:12:34 PM command: SELECT, rowCount: 1 
2020-02-13T13:12:34.758Z Local: 2/13/2020, 9:12:34 PM Sending 1 rows to ::1 with  
2020-02-13T13:12:34.786Z Local: 2/13/2020, 9:12:34 PM command: SELECT, rowCount: 1 
2020-02-13T13:12:34.788Z Local: 2/13/2020, 9:12:34 PM Sending 1 rows to ::1 with  
2020-02-13T13:16:51.443Z Local: 2/13/2020, 9:16:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:16:51.521Z Local: 2/13/2020, 9:16:51 PM command: SELECT, rowCount: 1 
2020-02-13T13:16:51.523Z Local: 2/13/2020, 9:16:51 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-13T13:17:49.516Z Local: 2/13/2020, 9:17:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:17:49.566Z Local: 2/13/2020, 9:17:49 PM command: SELECT, rowCount: 1 
2020-02-13T13:17:49.568Z Local: 2/13/2020, 9:17:49 PM Sending 1 rows to ::1 with  
2020-02-13T13:17:49.711Z Local: 2/13/2020, 9:17:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:17:49.716Z Local: 2/13/2020, 9:17:49 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T13:17:49.717Z Local: 2/13/2020, 9:17:49 PM command: SELECT, rowCount: 1 
2020-02-13T13:17:49.718Z Local: 2/13/2020, 9:17:49 PM Sending 1 rows to ::1 with  
2020-02-13T13:17:49.761Z Local: 2/13/2020, 9:17:49 PM command: SELECT, rowCount: 1 
2020-02-13T13:17:49.763Z Local: 2/13/2020, 9:17:49 PM Sending 1 rows to ::1 with  
2020-02-13T13:17:50.257Z Local: 2/13/2020, 9:17:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:17:50.263Z Local: 2/13/2020, 9:17:50 PM command: SELECT, rowCount: 1 
2020-02-13T13:17:50.264Z Local: 2/13/2020, 9:17:50 PM Sending 1 rows to ::ffff:127.0.0.1 with  
2020-02-13T13:29:13.835Z Local: 2/13/2020, 9:29:13 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:29:13.842Z Local: 2/13/2020, 9:29:13 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T13:29:13.897Z Local: 2/13/2020, 9:29:13 PM command: SELECT, rowCount: 1 
2020-02-13T13:29:13.901Z Local: 2/13/2020, 9:29:13 PM Sending 1 rows to ::1 with  
2020-02-13T13:29:13.911Z Local: 2/13/2020, 9:29:13 PM command: SELECT, rowCount: 1 
2020-02-13T13:29:13.914Z Local: 2/13/2020, 9:29:13 PM Sending 1 rows to ::1 with  
2020-02-13T13:29:14.022Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T13:29:14.027Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.028Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.114Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T13:29:14.123Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.124Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.172Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T13:29:14.176Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.177Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.221Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T13:29:14.227Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.227Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.249Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T13:29:14.258Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.258Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.289Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T13:29:14.299Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.302Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.344Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T13:29:14.356Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.350Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.402Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T13:29:14.407Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.407Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.459Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T13:29:14.464Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.464Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.508Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T13:29:14.512Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.512Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.565Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T13:29:14.571Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.571Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.610Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T13:29:14.616Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.617Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.673Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T13:29:14.685Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.686Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.757Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T13:29:14.764Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.765Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:14.836Z Local: 2/13/2020, 9:29:14 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T13:29:14.937Z Local: 2/13/2020, 9:29:14 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:14.938Z Local: 2/13/2020, 9:29:14 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:15.042Z Local: 2/13/2020, 9:29:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T13:29:15.108Z Local: 2/13/2020, 9:29:15 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:15.110Z Local: 2/13/2020, 9:29:15 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:15.146Z Local: 2/13/2020, 9:29:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T13:29:15.152Z Local: 2/13/2020, 9:29:15 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:15.153Z Local: 2/13/2020, 9:29:15 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:15.239Z Local: 2/13/2020, 9:29:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T13:29:15.244Z Local: 2/13/2020, 9:29:15 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:15.245Z Local: 2/13/2020, 9:29:15 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:15.301Z Local: 2/13/2020, 9:29:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T13:29:15.311Z Local: 2/13/2020, 9:29:15 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:15.312Z Local: 2/13/2020, 9:29:15 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:15.376Z Local: 2/13/2020, 9:29:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T13:29:15.385Z Local: 2/13/2020, 9:29:15 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:15.384Z Local: 2/13/2020, 9:29:15 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:15.459Z Local: 2/13/2020, 9:29:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T13:29:15.479Z Local: 2/13/2020, 9:29:15 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:15.479Z Local: 2/13/2020, 9:29:15 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:15.565Z Local: 2/13/2020, 9:29:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T13:29:15.595Z Local: 2/13/2020, 9:29:15 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:15.612Z Local: 2/13/2020, 9:29:15 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:15.660Z Local: 2/13/2020, 9:29:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T13:29:15.666Z Local: 2/13/2020, 9:29:15 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:15.667Z Local: 2/13/2020, 9:29:15 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:15.743Z Local: 2/13/2020, 9:29:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T13:29:15.749Z Local: 2/13/2020, 9:29:15 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:15.748Z Local: 2/13/2020, 9:29:15 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:15.825Z Local: 2/13/2020, 9:29:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T13:29:15.831Z Local: 2/13/2020, 9:29:15 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:15.832Z Local: 2/13/2020, 9:29:15 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:15.904Z Local: 2/13/2020, 9:29:15 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T13:29:15.911Z Local: 2/13/2020, 9:29:15 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:15.912Z Local: 2/13/2020, 9:29:15 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:16.002Z Local: 2/13/2020, 9:29:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T13:29:16.012Z Local: 2/13/2020, 9:29:16 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:16.013Z Local: 2/13/2020, 9:29:16 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:16.098Z Local: 2/13/2020, 9:29:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T13:29:16.105Z Local: 2/13/2020, 9:29:16 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:16.106Z Local: 2/13/2020, 9:29:16 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:16.188Z Local: 2/13/2020, 9:29:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T13:29:16.194Z Local: 2/13/2020, 9:29:16 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:16.194Z Local: 2/13/2020, 9:29:16 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:16.287Z Local: 2/13/2020, 9:29:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T13:29:16.292Z Local: 2/13/2020, 9:29:16 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:16.293Z Local: 2/13/2020, 9:29:16 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:16.380Z Local: 2/13/2020, 9:29:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T13:29:16.385Z Local: 2/13/2020, 9:29:16 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:16.386Z Local: 2/13/2020, 9:29:16 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:16.470Z Local: 2/13/2020, 9:29:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T13:29:16.478Z Local: 2/13/2020, 9:29:16 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:16.477Z Local: 2/13/2020, 9:29:16 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:16.572Z Local: 2/13/2020, 9:29:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T13:29:16.578Z Local: 2/13/2020, 9:29:16 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:16.579Z Local: 2/13/2020, 9:29:16 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:16.661Z Local: 2/13/2020, 9:29:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T13:29:16.666Z Local: 2/13/2020, 9:29:16 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:16.667Z Local: 2/13/2020, 9:29:16 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:16.764Z Local: 2/13/2020, 9:29:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T13:29:16.768Z Local: 2/13/2020, 9:29:16 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:16.769Z Local: 2/13/2020, 9:29:16 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:16.862Z Local: 2/13/2020, 9:29:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T13:29:16.869Z Local: 2/13/2020, 9:29:16 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:16.870Z Local: 2/13/2020, 9:29:16 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:16.947Z Local: 2/13/2020, 9:29:16 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T13:29:16.952Z Local: 2/13/2020, 9:29:16 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:16.953Z Local: 2/13/2020, 9:29:16 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:17.054Z Local: 2/13/2020, 9:29:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T13:29:17.061Z Local: 2/13/2020, 9:29:17 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:17.061Z Local: 2/13/2020, 9:29:17 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:17.149Z Local: 2/13/2020, 9:29:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T13:29:17.155Z Local: 2/13/2020, 9:29:17 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:17.156Z Local: 2/13/2020, 9:29:17 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:17.245Z Local: 2/13/2020, 9:29:17 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T13:29:17.249Z Local: 2/13/2020, 9:29:17 PM command: SELECT, rowCount: 1 
2020-02-13T13:29:17.249Z Local: 2/13/2020, 9:29:17 PM Sending 1 rows to ::1 with  
2020-02-13T13:29:21.950Z Local: 2/13/2020, 9:29:21 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:29:21.954Z Local: 2/13/2020, 9:29:21 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T13:29:21.955Z Local: 2/13/2020, 9:29:21 PM command: SELECT, rowCount: 1 
2020-02-13T13:29:21.956Z Local: 2/13/2020, 9:29:21 PM Sending 1 rows to ::1 with  
2020-02-13T13:29:21.959Z Local: 2/13/2020, 9:29:21 PM command: SELECT, rowCount: 1 
2020-02-13T13:29:21.959Z Local: 2/13/2020, 9:29:21 PM Sending 1 rows to ::1 with  
2020-02-13T13:29:22.112Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T13:29:22.116Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.117Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.197Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T13:29:22.204Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.205Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.261Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T13:29:22.268Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.269Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.324Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T13:29:22.331Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.331Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.382Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T13:29:22.389Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.389Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.433Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T13:29:22.440Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.441Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.499Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T13:29:22.506Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.506Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.563Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T13:29:22.572Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.573Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.629Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T13:29:22.636Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.638Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.690Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T13:29:22.697Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.698Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.759Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T13:29:22.763Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.764Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.831Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T13:29:22.839Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.840Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.900Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T13:29:22.906Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.907Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:22.974Z Local: 2/13/2020, 9:29:22 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T13:29:22.980Z Local: 2/13/2020, 9:29:22 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:22.981Z Local: 2/13/2020, 9:29:22 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.038Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T13:29:23.042Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.043Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.108Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T13:29:23.112Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.115Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.193Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T13:29:23.197Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.198Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.274Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T13:29:23.278Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.279Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.340Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T13:29:23.345Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.345Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.411Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T13:29:23.415Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.417Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.477Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T13:29:23.482Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.482Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.576Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T13:29:23.596Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.597Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.665Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T13:29:23.674Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.675Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.761Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T13:29:23.765Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.767Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.841Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T13:29:23.847Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.848Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:23.924Z Local: 2/13/2020, 9:29:23 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T13:29:23.928Z Local: 2/13/2020, 9:29:23 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:23.929Z Local: 2/13/2020, 9:29:23 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.015Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T13:29:24.026Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.027Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.118Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T13:29:24.124Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.124Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.200Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T13:29:24.204Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.205Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.289Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T13:29:24.293Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.293Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.369Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T13:29:24.373Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.374Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.451Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T13:29:24.455Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.456Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.528Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T13:29:24.533Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.534Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.607Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T13:29:24.613Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.614Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.695Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T13:29:24.702Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.703Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.778Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T13:29:24.782Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.784Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.858Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T13:29:24.864Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.864Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:24.947Z Local: 2/13/2020, 9:29:24 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T13:29:24.952Z Local: 2/13/2020, 9:29:24 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:24.954Z Local: 2/13/2020, 9:29:24 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:25.039Z Local: 2/13/2020, 9:29:25 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T13:29:25.045Z Local: 2/13/2020, 9:29:25 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:25.046Z Local: 2/13/2020, 9:29:25 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:25.124Z Local: 2/13/2020, 9:29:25 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T13:29:25.128Z Local: 2/13/2020, 9:29:25 PM command: SELECT, rowCount: 1 
2020-02-13T13:29:25.128Z Local: 2/13/2020, 9:29:25 PM Sending 1 rows to ::1 with  
2020-02-13T13:29:35.893Z Local: 2/13/2020, 9:29:35 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:29:35.895Z Local: 2/13/2020, 9:29:35 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T13:29:35.924Z Local: 2/13/2020, 9:29:35 PM command: SELECT, rowCount: 1 
2020-02-13T13:29:35.925Z Local: 2/13/2020, 9:29:35 PM Sending 1 rows to ::1 with  
2020-02-13T13:29:35.936Z Local: 2/13/2020, 9:29:35 PM command: SELECT, rowCount: 1 
2020-02-13T13:29:35.937Z Local: 2/13/2020, 9:29:35 PM Sending 1 rows to ::1 with  
2020-02-13T13:29:36.039Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T13:29:36.043Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.044Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.085Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T13:29:36.090Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.091Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.112Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T13:29:36.119Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.119Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.137Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T13:29:36.140Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.141Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.162Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T13:29:36.168Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.169Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.200Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T13:29:36.205Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.206Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.235Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T13:29:36.240Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.240Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.274Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T13:29:36.279Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.280Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.321Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T13:29:36.327Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.328Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.361Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T13:29:36.368Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.370Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.404Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T13:29:36.409Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.410Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.439Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T13:29:36.443Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.444Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.475Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T13:29:36.479Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.480Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.519Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T13:29:36.523Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.524Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.558Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T13:29:36.562Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.563Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.602Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T13:29:36.606Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.607Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.643Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T13:29:36.652Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.651Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.694Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T13:29:36.700Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.701Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.732Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T13:29:36.738Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.739Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.769Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T13:29:36.775Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.775Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.819Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T13:29:36.829Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.830Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.876Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T13:29:36.882Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.883Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.931Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T13:29:36.939Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.939Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:36.979Z Local: 2/13/2020, 9:29:36 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T13:29:36.987Z Local: 2/13/2020, 9:29:36 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:36.987Z Local: 2/13/2020, 9:29:36 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.035Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T13:29:37.040Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.041Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.085Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T13:29:37.090Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.090Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.136Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T13:29:37.141Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.141Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.184Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T13:29:37.189Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.189Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.239Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T13:29:37.243Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.244Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.291Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T13:29:37.296Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.296Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.359Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T13:29:37.364Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.366Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.412Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T13:29:37.419Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.419Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.470Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T13:29:37.475Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.475Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.522Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T13:29:37.526Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.527Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.576Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T13:29:37.581Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.583Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.636Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T13:29:37.641Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.641Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.686Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T13:29:37.691Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.692Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.745Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T13:29:37.752Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.753Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.803Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T13:29:37.808Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 3 
2020-02-13T13:29:37.809Z Local: 2/13/2020, 9:29:37 PM Sending 3 rows to ::1 with  
2020-02-13T13:29:37.861Z Local: 2/13/2020, 9:29:37 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T13:29:37.865Z Local: 2/13/2020, 9:29:37 PM command: SELECT, rowCount: 1 
2020-02-13T13:29:37.866Z Local: 2/13/2020, 9:29:37 PM Sending 1 rows to ::1 with  
2020-02-13T13:32:48.289Z Local: 2/13/2020, 9:32:48 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T13:32:48.308Z Local: 2/13/2020, 9:32:48 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T13:32:48.309Z Local: 2/13/2020, 9:32:48 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T13:32:48.311Z Local: 2/13/2020, 9:32:48 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T13:32:48.312Z Local: 2/13/2020, 9:32:48 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T13:32:48.313Z Local: 2/13/2020, 9:32:48 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T13:32:48.315Z Local: 2/13/2020, 9:32:48 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T13:32:48.316Z Local: 2/13/2020, 9:32:48 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T13:32:48.317Z Local: 2/13/2020, 9:32:48 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T13:32:48.318Z Local: 2/13/2020, 9:32:48 PM INSERT INTO posts_table(title, subtitle, author, content, cover_img) VALUES('Test Title', 'Test Subtile', 'Test Author', '# Remarkable...', 'child.jpg') RETURNING id; 
2020-02-13T13:32:48.484Z Local: 2/13/2020, 9:32:48 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T13:32:48.486Z Local: 2/13/2020, 9:32:48 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T13:32:48.488Z Local: 2/13/2020, 9:32:48 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T13:32:48.487Z Local: 2/13/2020, 9:32:48 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T13:32:48.489Z Local: 2/13/2020, 9:32:48 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T13:32:48.489Z Local: 2/13/2020, 9:32:48 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T13:32:48.490Z Local: 2/13/2020, 9:32:48 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T13:32:48.491Z Local: 2/13/2020, 9:32:48 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T13:32:48.491Z Local: 2/13/2020, 9:32:48 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T13:32:48.492Z Local: 2/13/2020, 9:32:48 PM 
INSERT INTO items_table(
name,
producer,
price,
unit,
description,
spec,
cover_img,
imgs)
VALUES('Green Tea', json_populate_record(null::Producer, '{"id":3,"name":"Lin"}'), '500', 'NTD', '# Traditional Flavor', ARRAY( SELECT json_populate_record(null::Spec, json_array_elements('[{"property":"100g","value":"Heavily Baked","comment":"Strongest"},{"property":"100g","value":"Heavily Baked","comment":"Strongest"}]'))), 'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","tea.jpg","child.jpg"]'))) RETURNING id; 
2020-02-13T13:32:48.496Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T13:32:48.498Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T13:32:48.498Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T13:32:48.499Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T13:32:48.500Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T13:32:48.501Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T13:32:48.501Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T13:32:48.502Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T13:32:48.503Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T13:32:48.504Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Da', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', null
        ) RETURNING id; 
2020-02-13T13:32:48.504Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Ui', 'Taiwan', 'Taiwan', 'Nantou', 'LuGu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T13:32:48.505Z Local: 2/13/2020, 9:32:48 PM INSERT INTO farmers_table(
        name,
        country,
        province,
        county,
        township,
        village,
        road,
        slogan,
        description,
        content,
        items,
        cover_img,
        imgs)
        VALUES('Dai3', 'Taiwan', 'Taiwan', 'Nantou', 'Lu/Gu', 
        'FongHuang', 'indus.rd', 'Universal Best Tea', '# Best Tea Ever', 
        ARRAY(SELECT json_populate_record(null::Section, json_array_elements('[{"title":"The Best","subtitle":"Best","description":"Universal Best Better Tea","img":"tea.jpg"},{"title":"The Better","subtitle":"Better","description":"Universal Better Tea","img":"tea_tree.jpg"}]'))), 
        ARRAY(SELECT json_populate_record(null::Good, json_array_elements('[{"id":2,"name":"Green Tea"},{"id":1,"name":"Oolong Tea"}]'))), 
        'farmer1.jpg', ARRAY(SELECT json_array_elements_text('["hill1.jpg","hill2.jpg","child.jpg"]'))
        ) RETURNING id; 
2020-02-13T13:32:48.576Z Local: 2/13/2020, 9:32:48 PM CREATE TABLE IF NOT EXISTS posts_table(id serial PRIMARY KEY NOT NULL,title TEXT NOT NULL,subtitle TEXT NOT NULL,author TEXT NOT NULL,content TEXT NOT NULL,cover_img TEXT,create_on TIMESTAMP default current_timestamp, latest_modify TIMESTAMP default current_timestamp) 
2020-02-13T13:32:48.578Z Local: 2/13/2020, 9:32:48 PM 
    DO $$ BEGIN
        CREATE TYPE Producer AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-13T13:32:48.579Z Local: 2/13/2020, 9:32:48 PM DO $$ BEGIN
        CREATE TYPE Good AS (id INTEGER, name TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-13T13:32:48.583Z Local: 2/13/2020, 9:32:48 PM Server is listening on port 8000 
2020-02-13T13:32:48.641Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.643Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.648Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.657Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.668Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.667Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.669Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.670Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.676Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.678Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.686Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.687Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.690Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.689Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.697Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.698Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.700Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.702Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.703Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.704Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.705Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.707Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.708Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.709Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.711Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.716Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.714Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.716Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.715Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.717Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.718Z Local: 2/13/2020, 9:32:48 PM command: CREATE, rowCount: null 
2020-02-13T13:32:48.719Z Local: 2/13/2020, 9:32:48 PM Created posts_table 
2020-02-13T13:32:48.720Z Local: 2/13/2020, 9:32:48 PM post_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-13T13:32:48.729Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.738Z Local: 2/13/2020, 9:32:48 PM command: INSERT, rowCount: 1 
2020-02-13T13:32:48.739Z Local: 2/13/2020, 9:32:48 PM command: DO, rowCount: null 
2020-02-13T13:32:48.740Z Local: 2/13/2020, 9:32:48 PM Created Producer type 
2020-02-13T13:32:48.740Z Local: 2/13/2020, 9:32:48 PM 
    DO $$ BEGIN
        CREATE TYPE Spec AS (property TEXT, value TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-13T13:32:48.742Z Local: 2/13/2020, 9:32:48 PM command: DO, rowCount: null 
2020-02-13T13:32:48.745Z Local: 2/13/2020, 9:32:48 PM Created Good type 
2020-02-13T13:32:48.746Z Local: 2/13/2020, 9:32:48 PM DO $$ BEGIN
        CREATE TYPE Section AS (title TEXT, subtitle TEXT, description TEXT, img TEXT);
    EXCEPTION
        WHEN duplicate_object THEN null;
    END $$; 
2020-02-13T13:32:48.747Z Local: 2/13/2020, 9:32:48 PM command: DO, rowCount: null 
2020-02-13T13:32:48.749Z Local: 2/13/2020, 9:32:48 PM 
    CREATE TABLE IF NOT EXISTS items_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    producer Producer NOT NULL,
    price NUMERIC NOT NULL,
    unit TEXT NOT NULL,
    description TEXT NOT NULL,
    spec Spec ARRAY,
    cover_img TEXT NOT NULL, 
    imgs TEXT[], 
    create_on TIMESTAMP default current_timestamp); 
2020-02-13T13:32:48.748Z Local: 2/13/2020, 9:32:48 PM Created Spec type 
2020-02-13T13:32:48.750Z Local: 2/13/2020, 9:32:48 PM command: DO, rowCount: null 
2020-02-13T13:32:48.751Z Local: 2/13/2020, 9:32:48 PM Created Section type 
2020-02-13T13:32:48.751Z Local: 2/13/2020, 9:32:48 PM CREATE TABLE IF NOT EXISTS farmers_table(
    id serial PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    country TEXT NOT NULL,
    province TEXT NOT NULL,
    county TEXT NOT NULL,
    township TEXT NOT NULL,
    village TEXT NOT NULL,
    road TEXT NOT NULL,
    slogan TEXT,
    description TEXT NOT NULL,
    content Section ARRAY NOT NULL,
    items Good ARRAY,
    cover_img TEXT NOT NULL,
    imgs TEXT[],
    create_on TIMESTAMP default current_timestamp,
    latest_modify TIMESTAMP default current_timestamp) 
2020-02-13T13:32:48.753Z Local: 2/13/2020, 9:32:48 PM command: CREATE, rowCount: null 
2020-02-13T13:32:48.757Z Local: 2/13/2020, 9:32:48 PM Created items_table 
2020-02-13T13:32:48.757Z Local: 2/13/2020, 9:32:48 PM item_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-13T13:32:48.759Z Local: 2/13/2020, 9:32:48 PM command: CREATE, rowCount: null 
2020-02-13T13:32:48.760Z Local: 2/13/2020, 9:32:48 PM Created farmers_table 
2020-02-13T13:32:48.761Z Local: 2/13/2020, 9:32:48 PM farmer_action is mounted By function(req, res, next) {
    app.handle(req, res, next);
  } 
2020-02-13T13:32:55.923Z Local: 2/13/2020, 9:32:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:32:55.927Z Local: 2/13/2020, 9:32:55 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T13:32:55.930Z Local: 2/13/2020, 9:32:55 PM command: SELECT, rowCount: 1 
2020-02-13T13:32:55.945Z Local: 2/13/2020, 9:32:55 PM command: SELECT, rowCount: 1 
2020-02-13T13:32:55.931Z Local: 2/13/2020, 9:32:55 PM Sending 1 rows to ::1 with  
2020-02-13T13:32:55.950Z Local: 2/13/2020, 9:32:55 PM Sending 1 rows to ::1 with  
2020-02-13T13:32:56.060Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T13:32:56.065Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.066Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.092Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T13:32:56.099Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.100Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.136Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T13:32:56.144Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.145Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.181Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T13:32:56.187Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.188Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.234Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T13:32:56.242Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.243Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.277Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T13:32:56.284Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.285Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.322Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T13:32:56.330Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.331Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.378Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T13:32:56.384Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.384Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.436Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T13:32:56.445Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.446Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.483Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T13:32:56.489Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.489Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.537Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T13:32:56.544Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.545Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.597Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T13:32:56.603Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.603Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.657Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T13:32:56.663Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.664Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.736Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T13:32:56.742Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.743Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.786Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T13:32:56.793Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.794Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.848Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T13:32:56.852Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.853Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.906Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T13:32:56.912Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.913Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:56.967Z Local: 2/13/2020, 9:32:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T13:32:56.972Z Local: 2/13/2020, 9:32:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:56.973Z Local: 2/13/2020, 9:32:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.019Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T13:32:57.023Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.024Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.071Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T13:32:57.076Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.077Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.132Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T13:32:57.138Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.138Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.187Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T13:32:57.194Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.194Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.266Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T13:32:57.271Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.271Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.347Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T13:32:57.352Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.353Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.418Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T13:32:57.423Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.423Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.483Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T13:32:57.487Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.488Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.545Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T13:32:57.550Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.551Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.611Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T13:32:57.614Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.615Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.676Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T13:32:57.680Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.681Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.738Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T13:32:57.744Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.745Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.816Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T13:32:57.823Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.824Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.889Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T13:32:57.895Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.896Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:57.954Z Local: 2/13/2020, 9:32:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T13:32:57.961Z Local: 2/13/2020, 9:32:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:57.962Z Local: 2/13/2020, 9:32:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:58.051Z Local: 2/13/2020, 9:32:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T13:32:58.060Z Local: 2/13/2020, 9:32:58 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:58.061Z Local: 2/13/2020, 9:32:58 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:58.132Z Local: 2/13/2020, 9:32:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T13:32:58.137Z Local: 2/13/2020, 9:32:58 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:58.138Z Local: 2/13/2020, 9:32:58 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:58.207Z Local: 2/13/2020, 9:32:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T13:32:58.213Z Local: 2/13/2020, 9:32:58 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:58.213Z Local: 2/13/2020, 9:32:58 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:58.302Z Local: 2/13/2020, 9:32:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T13:32:58.308Z Local: 2/13/2020, 9:32:58 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:58.309Z Local: 2/13/2020, 9:32:58 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:58.395Z Local: 2/13/2020, 9:32:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T13:32:58.411Z Local: 2/13/2020, 9:32:58 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:58.409Z Local: 2/13/2020, 9:32:58 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:58.506Z Local: 2/13/2020, 9:32:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T13:32:58.512Z Local: 2/13/2020, 9:32:58 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:58.513Z Local: 2/13/2020, 9:32:58 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:58.595Z Local: 2/13/2020, 9:32:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T13:32:58.601Z Local: 2/13/2020, 9:32:58 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:58.602Z Local: 2/13/2020, 9:32:58 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:58.685Z Local: 2/13/2020, 9:32:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 120; 
2020-02-13T13:32:58.690Z Local: 2/13/2020, 9:32:58 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:58.691Z Local: 2/13/2020, 9:32:58 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:58.786Z Local: 2/13/2020, 9:32:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 123; 
2020-02-13T13:32:58.793Z Local: 2/13/2020, 9:32:58 PM command: SELECT, rowCount: 3 
2020-02-13T13:32:58.794Z Local: 2/13/2020, 9:32:58 PM Sending 3 rows to ::1 with  
2020-02-13T13:32:58.895Z Local: 2/13/2020, 9:32:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 126; 
2020-02-13T13:32:58.901Z Local: 2/13/2020, 9:32:58 PM command: SELECT, rowCount: 2 
2020-02-13T13:32:58.902Z Local: 2/13/2020, 9:32:58 PM Sending 2 rows to ::1 with  
2020-02-13T13:36:39.966Z Local: 2/13/2020, 9:36:39 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:36:39.971Z Local: 2/13/2020, 9:36:39 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T13:36:40.020Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 1 
2020-02-13T13:36:40.021Z Local: 2/13/2020, 9:36:40 PM Sending 1 rows to ::1 with  
2020-02-13T13:36:40.023Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 1 
2020-02-13T13:36:40.024Z Local: 2/13/2020, 9:36:40 PM Sending 1 rows to ::1 with  
2020-02-13T13:36:40.031Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T13:36:40.038Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.039Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.053Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T13:36:40.056Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.057Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.077Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T13:36:40.082Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.083Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.112Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T13:36:40.120Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.120Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.140Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T13:36:40.145Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.146Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.172Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T13:36:40.177Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.178Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.206Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T13:36:40.213Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.214Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.249Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T13:36:40.255Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.256Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.292Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T13:36:40.298Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.299Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.337Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T13:36:40.345Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.346Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.382Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T13:36:40.388Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.387Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.431Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T13:36:40.438Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.439Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.475Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T13:36:40.480Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.481Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.520Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T13:36:40.526Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.527Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.575Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T13:36:40.581Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.582Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.633Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T13:36:40.640Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.640Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.682Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T13:36:40.686Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.687Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.731Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T13:36:40.736Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.737Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.783Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T13:36:40.790Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.791Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.841Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T13:36:40.846Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.847Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.892Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T13:36:40.897Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.898Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.939Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T13:36:40.944Z Local: 2/13/2020, 9:36:40 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:40.945Z Local: 2/13/2020, 9:36:40 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:40.993Z Local: 2/13/2020, 9:36:40 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T13:36:41.001Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.002Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.054Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T13:36:41.058Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.059Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.107Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T13:36:41.111Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.111Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.189Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T13:36:41.194Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.195Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.244Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T13:36:41.251Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.251Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.310Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T13:36:41.319Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.320Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.377Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T13:36:41.383Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.384Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.443Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T13:36:41.449Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.450Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.508Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T13:36:41.511Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.511Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.575Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T13:36:41.580Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.581Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.642Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T13:36:41.645Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.646Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.726Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T13:36:41.733Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.732Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.792Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T13:36:41.795Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.795Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.863Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T13:36:41.868Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.869Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:41.933Z Local: 2/13/2020, 9:36:41 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T13:36:41.937Z Local: 2/13/2020, 9:36:41 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:41.938Z Local: 2/13/2020, 9:36:41 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:42.009Z Local: 2/13/2020, 9:36:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T13:36:42.016Z Local: 2/13/2020, 9:36:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:42.017Z Local: 2/13/2020, 9:36:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:42.085Z Local: 2/13/2020, 9:36:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T13:36:42.090Z Local: 2/13/2020, 9:36:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:42.091Z Local: 2/13/2020, 9:36:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:42.158Z Local: 2/13/2020, 9:36:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T13:36:42.161Z Local: 2/13/2020, 9:36:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:42.162Z Local: 2/13/2020, 9:36:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:42.236Z Local: 2/13/2020, 9:36:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 120; 
2020-02-13T13:36:42.240Z Local: 2/13/2020, 9:36:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:42.241Z Local: 2/13/2020, 9:36:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:42.312Z Local: 2/13/2020, 9:36:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 123; 
2020-02-13T13:36:42.317Z Local: 2/13/2020, 9:36:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:36:42.317Z Local: 2/13/2020, 9:36:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:36:42.398Z Local: 2/13/2020, 9:36:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 126; 
2020-02-13T13:36:42.420Z Local: 2/13/2020, 9:36:42 PM command: SELECT, rowCount: 2 
2020-02-13T13:36:42.421Z Local: 2/13/2020, 9:36:42 PM Sending 2 rows to ::1 with  
2020-02-13T13:39:27.150Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:39:27.155Z Local: 2/13/2020, 9:39:27 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T13:39:27.196Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 1 
2020-02-13T13:39:27.198Z Local: 2/13/2020, 9:39:27 PM Sending 1 rows to ::1 with  
2020-02-13T13:39:27.219Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 1 
2020-02-13T13:39:27.220Z Local: 2/13/2020, 9:39:27 PM Sending 1 rows to ::1 with  
2020-02-13T13:39:27.323Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T13:39:27.336Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:27.337Z Local: 2/13/2020, 9:39:27 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:27.396Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T13:39:27.415Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:27.416Z Local: 2/13/2020, 9:39:27 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:27.486Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T13:39:27.490Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:27.491Z Local: 2/13/2020, 9:39:27 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:27.544Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T13:39:27.552Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:27.553Z Local: 2/13/2020, 9:39:27 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:27.611Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T13:39:27.618Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:27.619Z Local: 2/13/2020, 9:39:27 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:27.654Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T13:39:27.661Z Local: 2/13/2020, 9:39:27 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:27.660Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:27.705Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T13:39:27.711Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:27.712Z Local: 2/13/2020, 9:39:27 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:27.760Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T13:39:27.769Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:27.770Z Local: 2/13/2020, 9:39:27 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:27.826Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T13:39:27.835Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:27.837Z Local: 2/13/2020, 9:39:27 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:27.889Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T13:39:27.897Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:27.897Z Local: 2/13/2020, 9:39:27 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:27.969Z Local: 2/13/2020, 9:39:27 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T13:39:27.976Z Local: 2/13/2020, 9:39:27 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:27.975Z Local: 2/13/2020, 9:39:27 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.038Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T13:39:28.047Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.048Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:28.124Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T13:39:28.130Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.131Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:28.221Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T13:39:28.227Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:28.226Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.311Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T13:39:28.331Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.333Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:28.455Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T13:39:28.467Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.469Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:28.561Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T13:39:28.568Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.569Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:28.635Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T13:39:28.641Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.642Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:28.691Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T13:39:28.699Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.700Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:28.750Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T13:39:28.756Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:28.755Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.816Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T13:39:28.822Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.823Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:28.878Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T13:39:28.886Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.887Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:28.954Z Local: 2/13/2020, 9:39:28 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T13:39:28.959Z Local: 2/13/2020, 9:39:28 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:28.960Z Local: 2/13/2020, 9:39:28 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.021Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T13:39:29.026Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.027Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.090Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T13:39:29.095Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.097Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.158Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T13:39:29.164Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.165Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.238Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T13:39:29.250Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.250Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.305Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T13:39:29.311Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.312Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.387Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T13:39:29.392Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.393Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.463Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T13:39:29.467Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.467Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.536Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T13:39:29.540Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.540Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.618Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T13:39:29.622Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.623Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.691Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T13:39:29.694Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.695Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.758Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T13:39:29.762Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.763Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.851Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T13:39:29.854Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.855Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:29.928Z Local: 2/13/2020, 9:39:29 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T13:39:29.933Z Local: 2/13/2020, 9:39:29 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:29.936Z Local: 2/13/2020, 9:39:29 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:30.007Z Local: 2/13/2020, 9:39:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T13:39:30.013Z Local: 2/13/2020, 9:39:30 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:30.012Z Local: 2/13/2020, 9:39:30 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:30.079Z Local: 2/13/2020, 9:39:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T13:39:30.084Z Local: 2/13/2020, 9:39:30 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:30.085Z Local: 2/13/2020, 9:39:30 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:30.168Z Local: 2/13/2020, 9:39:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T13:39:30.172Z Local: 2/13/2020, 9:39:30 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:30.173Z Local: 2/13/2020, 9:39:30 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:30.237Z Local: 2/13/2020, 9:39:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T13:39:30.241Z Local: 2/13/2020, 9:39:30 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:30.242Z Local: 2/13/2020, 9:39:30 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:30.308Z Local: 2/13/2020, 9:39:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 120; 
2020-02-13T13:39:30.314Z Local: 2/13/2020, 9:39:30 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:30.315Z Local: 2/13/2020, 9:39:30 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:30.391Z Local: 2/13/2020, 9:39:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 123; 
2020-02-13T13:39:30.395Z Local: 2/13/2020, 9:39:30 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:30.396Z Local: 2/13/2020, 9:39:30 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:30.481Z Local: 2/13/2020, 9:39:30 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 126; 
2020-02-13T13:39:30.486Z Local: 2/13/2020, 9:39:30 PM command: SELECT, rowCount: 2 
2020-02-13T13:39:30.487Z Local: 2/13/2020, 9:39:30 PM Sending 2 rows to ::1 with  
2020-02-13T13:39:42.101Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:39:42.105Z Local: 2/13/2020, 9:39:42 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T13:39:42.141Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 1 
2020-02-13T13:39:42.147Z Local: 2/13/2020, 9:39:42 PM Sending 1 rows to ::1 with  
2020-02-13T13:39:42.154Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 1 
2020-02-13T13:39:42.155Z Local: 2/13/2020, 9:39:42 PM Sending 1 rows to ::1 with  
2020-02-13T13:39:42.240Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T13:39:42.249Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.250Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.295Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T13:39:42.302Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.303Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.334Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T13:39:42.349Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.350Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.384Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T13:39:42.393Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.399Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.457Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T13:39:42.465Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.465Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.503Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T13:39:42.510Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.511Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.548Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T13:39:42.553Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.554Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.624Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T13:39:42.637Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.638Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.702Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T13:39:42.708Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.709Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.766Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T13:39:42.773Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.772Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.827Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T13:39:42.834Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.835Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.888Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T13:39:42.895Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.896Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:42.950Z Local: 2/13/2020, 9:39:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T13:39:42.955Z Local: 2/13/2020, 9:39:42 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:42.956Z Local: 2/13/2020, 9:39:42 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.028Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T13:39:43.034Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.034Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.116Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T13:39:43.121Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.122Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.183Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T13:39:43.188Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.188Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.242Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T13:39:43.248Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.249Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.307Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T13:39:43.315Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.315Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.366Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T13:39:43.372Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.371Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.425Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T13:39:43.435Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.435Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.488Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T13:39:43.494Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.496Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.542Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T13:39:43.548Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.549Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.609Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T13:39:43.615Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.615Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.666Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T13:39:43.671Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.672Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.730Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T13:39:43.736Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.736Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.793Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T13:39:43.799Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.798Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.854Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T13:39:43.859Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.875Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:43.936Z Local: 2/13/2020, 9:39:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T13:39:43.946Z Local: 2/13/2020, 9:39:43 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:43.947Z Local: 2/13/2020, 9:39:43 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.012Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T13:39:44.017Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.018Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.082Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T13:39:44.086Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.086Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.151Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T13:39:44.157Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.157Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.222Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T13:39:44.228Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.230Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.300Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T13:39:44.304Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.305Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.380Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T13:39:44.384Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.385Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.452Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T13:39:44.456Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.457Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.551Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T13:39:44.555Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.556Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.622Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T13:39:44.627Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.628Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.697Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T13:39:44.703Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.703Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.767Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T13:39:44.771Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.772Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.845Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T13:39:44.848Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.849Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:44.929Z Local: 2/13/2020, 9:39:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 120; 
2020-02-13T13:39:44.932Z Local: 2/13/2020, 9:39:44 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:44.933Z Local: 2/13/2020, 9:39:44 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:45.046Z Local: 2/13/2020, 9:39:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 123; 
2020-02-13T13:39:45.051Z Local: 2/13/2020, 9:39:45 PM command: SELECT, rowCount: 3 
2020-02-13T13:39:45.052Z Local: 2/13/2020, 9:39:45 PM Sending 3 rows to ::1 with  
2020-02-13T13:39:45.132Z Local: 2/13/2020, 9:39:45 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 126; 
2020-02-13T13:39:45.135Z Local: 2/13/2020, 9:39:45 PM command: SELECT, rowCount: 2 
2020-02-13T13:39:45.136Z Local: 2/13/2020, 9:39:45 PM Sending 2 rows to ::1 with  
2020-02-13T13:46:54.406Z Local: 2/13/2020, 9:46:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T13:46:54.411Z Local: 2/13/2020, 9:46:54 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T13:46:54.447Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 1 
2020-02-13T13:46:54.449Z Local: 2/13/2020, 9:46:54 PM Sending 1 rows to ::1 with  
2020-02-13T13:46:54.488Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 1 
2020-02-13T13:46:54.490Z Local: 2/13/2020, 9:46:54 PM Sending 1 rows to ::1 with  
2020-02-13T13:46:54.598Z Local: 2/13/2020, 9:46:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T13:46:54.605Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:54.605Z Local: 2/13/2020, 9:46:54 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:54.622Z Local: 2/13/2020, 9:46:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T13:46:54.629Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:54.630Z Local: 2/13/2020, 9:46:54 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:54.656Z Local: 2/13/2020, 9:46:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T13:46:54.663Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:54.664Z Local: 2/13/2020, 9:46:54 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:54.712Z Local: 2/13/2020, 9:46:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T13:46:54.715Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:54.717Z Local: 2/13/2020, 9:46:54 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:54.748Z Local: 2/13/2020, 9:46:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T13:46:54.755Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:54.755Z Local: 2/13/2020, 9:46:54 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:54.785Z Local: 2/13/2020, 9:46:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T13:46:54.791Z Local: 2/13/2020, 9:46:54 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:54.790Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:54.847Z Local: 2/13/2020, 9:46:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T13:46:54.852Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:54.853Z Local: 2/13/2020, 9:46:54 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:54.884Z Local: 2/13/2020, 9:46:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T13:46:54.899Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:54.899Z Local: 2/13/2020, 9:46:54 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:54.938Z Local: 2/13/2020, 9:46:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T13:46:54.944Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:54.945Z Local: 2/13/2020, 9:46:54 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:54.982Z Local: 2/13/2020, 9:46:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T13:46:54.985Z Local: 2/13/2020, 9:46:54 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:54.985Z Local: 2/13/2020, 9:46:54 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.025Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T13:46:55.031Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.031Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.069Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T13:46:55.073Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.074Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.109Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T13:46:55.114Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.115Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.156Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T13:46:55.160Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.160Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.203Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T13:46:55.206Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.207Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.255Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T13:46:55.261Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.262Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.305Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T13:46:55.311Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.312Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.362Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T13:46:55.368Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.369Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.409Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T13:46:55.415Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.416Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.463Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T13:46:55.467Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.468Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.509Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T13:46:55.514Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.514Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.562Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T13:46:55.567Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.568Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.619Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T13:46:55.626Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.626Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.673Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T13:46:55.680Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.681Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.739Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T13:46:55.748Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.749Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.807Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T13:46:55.812Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.813Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.872Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T13:46:55.876Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.877Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:55.934Z Local: 2/13/2020, 9:46:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T13:46:55.939Z Local: 2/13/2020, 9:46:55 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:55.939Z Local: 2/13/2020, 9:46:55 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.005Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T13:46:56.012Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.013Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.069Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T13:46:56.075Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.076Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.136Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T13:46:56.141Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.142Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.212Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T13:46:56.216Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.217Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.287Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T13:46:56.294Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.295Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.361Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T13:46:56.403Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.404Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.455Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T13:46:56.464Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.465Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.542Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T13:46:56.547Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.548Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.622Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T13:46:56.630Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.631Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.704Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T13:46:56.710Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.711Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.785Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T13:46:56.789Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.790Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.860Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T13:46:56.865Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.866Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:56.945Z Local: 2/13/2020, 9:46:56 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 120; 
2020-02-13T13:46:56.950Z Local: 2/13/2020, 9:46:56 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:56.951Z Local: 2/13/2020, 9:46:56 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:57.019Z Local: 2/13/2020, 9:46:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 123; 
2020-02-13T13:46:57.025Z Local: 2/13/2020, 9:46:57 PM command: SELECT, rowCount: 3 
2020-02-13T13:46:57.026Z Local: 2/13/2020, 9:46:57 PM Sending 3 rows to ::1 with  
2020-02-13T13:46:57.099Z Local: 2/13/2020, 9:46:57 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 126; 
2020-02-13T13:46:57.102Z Local: 2/13/2020, 9:46:57 PM command: SELECT, rowCount: 2 
2020-02-13T13:46:57.103Z Local: 2/13/2020, 9:46:57 PM Sending 2 rows to ::1 with  
2020-02-13T13:50:11.628Z Local: 2/13/2020, 9:50:11 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '128'; 
2020-02-13T13:50:11.687Z Local: 2/13/2020, 9:50:11 PM command: SELECT, rowCount: 1 
2020-02-13T13:50:11.700Z Local: 2/13/2020, 9:50:11 PM Sending 1 rows to ::1 with  
2020-02-13T13:56:33.201Z Local: 2/13/2020, 9:56:33 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '128'; 
2020-02-13T13:56:33.234Z Local: 2/13/2020, 9:56:33 PM command: SELECT, rowCount: 1 
2020-02-13T13:56:33.235Z Local: 2/13/2020, 9:56:33 PM Sending 1 rows to ::1 with  
2020-02-13T13:57:08.746Z Local: 2/13/2020, 9:57:08 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '128'; 
2020-02-13T13:57:08.780Z Local: 2/13/2020, 9:57:08 PM command: SELECT, rowCount: 1 
2020-02-13T13:57:08.782Z Local: 2/13/2020, 9:57:08 PM Sending 1 rows to ::1 with  
2020-02-13T13:57:15.931Z Local: 2/13/2020, 9:57:15 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '128'; 
2020-02-13T13:57:15.941Z Local: 2/13/2020, 9:57:15 PM command: SELECT, rowCount: 1 
2020-02-13T13:57:15.942Z Local: 2/13/2020, 9:57:15 PM Sending 1 rows to ::1 with  
2020-02-13T14:25:47.682Z Local: 2/13/2020, 10:25:47 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '128'; 
2020-02-13T14:25:47.796Z Local: 2/13/2020, 10:25:47 PM command: SELECT, rowCount: 1 
2020-02-13T14:25:47.800Z Local: 2/13/2020, 10:25:47 PM Sending 1 rows to ::1 with  
2020-02-13T14:25:55.743Z Local: 2/13/2020, 10:25:55 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '128'; 
2020-02-13T14:25:55.754Z Local: 2/13/2020, 10:25:55 PM command: SELECT, rowCount: 1 
2020-02-13T14:25:55.760Z Local: 2/13/2020, 10:25:55 PM Sending 1 rows to ::1 with  
2020-02-13T15:06:47.417Z Local: 2/13/2020, 11:06:47 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T15:06:47.512Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 1 
2020-02-13T15:06:47.515Z Local: 2/13/2020, 11:06:47 PM Sending 1 rows to ::1 with  
2020-02-13T15:06:47.528Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:06:47.537Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.539Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.554Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:06:47.555Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.557Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.575Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:06:47.579Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.580Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.602Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:06:47.604Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.605Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.632Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:06:47.635Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.636Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.666Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:06:47.669Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.669Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.701Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:06:47.705Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.706Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.736Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:06:47.739Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.740Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.786Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:06:47.793Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.794Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.828Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:06:47.833Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.834Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.871Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:06:47.873Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.874Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.910Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:06:47.915Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.916Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:47.957Z Local: 2/13/2020, 11:06:47 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:06:47.961Z Local: 2/13/2020, 11:06:47 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:47.962Z Local: 2/13/2020, 11:06:47 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.012Z Local: 2/13/2020, 11:06:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:06:48.019Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.020Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.052Z Local: 2/13/2020, 11:06:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:06:48.056Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.057Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.117Z Local: 2/13/2020, 11:06:48 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:06:48.120Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.121Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.209Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T15:06:48.213Z Local: 2/13/2020, 11:06:48 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T15:06:48.247Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 1 
2020-02-13T15:06:48.249Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 1 
2020-02-13T15:06:48.248Z Local: 2/13/2020, 11:06:48 PM Sending 1 rows to ::1 with  
2020-02-13T15:06:48.250Z Local: 2/13/2020, 11:06:48 PM Sending 1 rows to ::1 with  
2020-02-13T15:06:48.255Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:06:48.265Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.266Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.276Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:06:48.280Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.281Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.309Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:06:48.319Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.320Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.344Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:06:48.350Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.352Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.370Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:06:48.374Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.375Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.402Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:06:48.405Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.407Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.428Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:06:48.433Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.434Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.461Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:06:48.469Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.470Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.504Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:06:48.512Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.514Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.541Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:06:48.556Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.557Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.590Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:06:48.599Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.600Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.637Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:06:48.644Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.645Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.683Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:06:48.689Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.689Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.727Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:06:48.737Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.738Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.767Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:06:48.773Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.774Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.821Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:06:48.828Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.829Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.865Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T15:06:48.871Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.871Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.911Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T15:06:48.919Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.919Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:48.963Z Local: 2/13/2020, 11:06:48 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T15:06:48.971Z Local: 2/13/2020, 11:06:48 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:48.972Z Local: 2/13/2020, 11:06:48 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.020Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T15:06:49.030Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.031Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.086Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T15:06:49.094Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.096Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.140Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T15:06:49.149Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.150Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.199Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T15:06:49.205Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.206Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.261Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T15:06:49.268Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.269Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.324Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T15:06:49.339Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.341Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.386Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T15:06:49.392Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.393Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.474Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T15:06:49.484Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.485Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.543Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T15:06:49.553Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.554Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.601Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T15:06:49.608Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.609Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.648Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T15:06:49.654Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.655Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.696Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T15:06:49.702Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.703Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.744Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T15:06:49.750Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.751Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.813Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T15:06:49.822Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.822Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.876Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T15:06:49.884Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.885Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:49.952Z Local: 2/13/2020, 11:06:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T15:06:49.958Z Local: 2/13/2020, 11:06:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:49.960Z Local: 2/13/2020, 11:06:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:50.017Z Local: 2/13/2020, 11:06:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T15:06:50.024Z Local: 2/13/2020, 11:06:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:50.025Z Local: 2/13/2020, 11:06:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:50.081Z Local: 2/13/2020, 11:06:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T15:06:50.087Z Local: 2/13/2020, 11:06:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:50.088Z Local: 2/13/2020, 11:06:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:50.143Z Local: 2/13/2020, 11:06:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T15:06:50.154Z Local: 2/13/2020, 11:06:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:50.153Z Local: 2/13/2020, 11:06:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:50.210Z Local: 2/13/2020, 11:06:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T15:06:50.220Z Local: 2/13/2020, 11:06:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:50.221Z Local: 2/13/2020, 11:06:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:50.283Z Local: 2/13/2020, 11:06:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T15:06:50.289Z Local: 2/13/2020, 11:06:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:50.290Z Local: 2/13/2020, 11:06:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:50.374Z Local: 2/13/2020, 11:06:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 120; 
2020-02-13T15:06:50.385Z Local: 2/13/2020, 11:06:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:50.386Z Local: 2/13/2020, 11:06:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:50.453Z Local: 2/13/2020, 11:06:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 123; 
2020-02-13T15:06:50.462Z Local: 2/13/2020, 11:06:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:06:50.464Z Local: 2/13/2020, 11:06:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:06:50.553Z Local: 2/13/2020, 11:06:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 126; 
2020-02-13T15:06:50.562Z Local: 2/13/2020, 11:06:50 PM command: SELECT, rowCount: 2 
2020-02-13T15:06:50.563Z Local: 2/13/2020, 11:06:50 PM Sending 2 rows to ::1 with  
2020-02-13T15:07:05.535Z Local: 2/13/2020, 11:07:05 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T15:07:05.571Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 1 
2020-02-13T15:07:05.572Z Local: 2/13/2020, 11:07:05 PM Sending 1 rows to ::1 with  
2020-02-13T15:07:05.583Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:07:05.585Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.585Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.598Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:07:05.599Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.600Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.613Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:07:05.614Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.615Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.630Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:07:05.631Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.632Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.668Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:07:05.671Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.672Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.715Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:07:05.719Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.720Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.737Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:07:05.742Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.744Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.770Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:07:05.779Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.780Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.800Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:07:05.801Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.802Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.819Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:07:05.822Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.824Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.850Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:07:05.852Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.853Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.886Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:07:05.891Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.892Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.921Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:07:05.924Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.925Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.949Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:07:05.956Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.958Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:05.988Z Local: 2/13/2020, 11:07:05 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:07:05.995Z Local: 2/13/2020, 11:07:05 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:05.996Z Local: 2/13/2020, 11:07:05 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:06.067Z Local: 2/13/2020, 11:07:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:07:06.072Z Local: 2/13/2020, 11:07:06 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:06.073Z Local: 2/13/2020, 11:07:06 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:06.158Z Local: 2/13/2020, 11:07:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T15:07:06.162Z Local: 2/13/2020, 11:07:06 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:06.163Z Local: 2/13/2020, 11:07:06 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:06.239Z Local: 2/13/2020, 11:07:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T15:07:06.244Z Local: 2/13/2020, 11:07:06 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:06.245Z Local: 2/13/2020, 11:07:06 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:06.329Z Local: 2/13/2020, 11:07:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T15:07:06.333Z Local: 2/13/2020, 11:07:06 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:06.334Z Local: 2/13/2020, 11:07:06 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:06.440Z Local: 2/13/2020, 11:07:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T15:07:06.447Z Local: 2/13/2020, 11:07:06 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:06.448Z Local: 2/13/2020, 11:07:06 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:06.698Z Local: 2/13/2020, 11:07:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T15:07:06.701Z Local: 2/13/2020, 11:07:06 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:06.702Z Local: 2/13/2020, 11:07:06 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:06.806Z Local: 2/13/2020, 11:07:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T15:07:06.813Z Local: 2/13/2020, 11:07:06 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:06.814Z Local: 2/13/2020, 11:07:06 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:06.901Z Local: 2/13/2020, 11:07:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T15:07:06.907Z Local: 2/13/2020, 11:07:06 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:06.908Z Local: 2/13/2020, 11:07:06 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:06.969Z Local: 2/13/2020, 11:07:06 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T15:07:06.973Z Local: 2/13/2020, 11:07:06 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:06.975Z Local: 2/13/2020, 11:07:06 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:07.068Z Local: 2/13/2020, 11:07:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T15:07:07.071Z Local: 2/13/2020, 11:07:07 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:07.072Z Local: 2/13/2020, 11:07:07 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:07.135Z Local: 2/13/2020, 11:07:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 75; 
2020-02-13T15:07:07.138Z Local: 2/13/2020, 11:07:07 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:07.139Z Local: 2/13/2020, 11:07:07 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:07.213Z Local: 2/13/2020, 11:07:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 78; 
2020-02-13T15:07:07.217Z Local: 2/13/2020, 11:07:07 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:07.218Z Local: 2/13/2020, 11:07:07 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:07.573Z Local: 2/13/2020, 11:07:07 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 81; 
2020-02-13T15:07:07.578Z Local: 2/13/2020, 11:07:07 PM command: SELECT, rowCount: 2 
2020-02-13T15:07:07.579Z Local: 2/13/2020, 11:07:07 PM Sending 2 rows to ::1 with  
2020-02-13T15:07:12.441Z Local: 2/13/2020, 11:07:12 PM SELECT * FROM posts_table WHERE id = '51'; 
2020-02-13T15:07:12.448Z Local: 2/13/2020, 11:07:12 PM command: SELECT, rowCount: 1 
2020-02-13T15:07:12.450Z Local: 2/13/2020, 11:07:12 PM Sending 1 rows to ::1 with  
2020-02-13T15:07:14.693Z Local: 2/13/2020, 11:07:14 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T15:07:14.699Z Local: 2/13/2020, 11:07:14 PM command: SELECT, rowCount: 1 
2020-02-13T15:07:14.700Z Local: 2/13/2020, 11:07:14 PM Sending 1 rows to ::1 with  
2020-02-13T15:07:14.717Z Local: 2/13/2020, 11:07:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:07:14.724Z Local: 2/13/2020, 11:07:14 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:14.725Z Local: 2/13/2020, 11:07:14 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:14.735Z Local: 2/13/2020, 11:07:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:07:14.737Z Local: 2/13/2020, 11:07:14 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:14.738Z Local: 2/13/2020, 11:07:14 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:14.762Z Local: 2/13/2020, 11:07:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:07:14.764Z Local: 2/13/2020, 11:07:14 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:14.765Z Local: 2/13/2020, 11:07:14 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:14.784Z Local: 2/13/2020, 11:07:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:07:14.786Z Local: 2/13/2020, 11:07:14 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:14.791Z Local: 2/13/2020, 11:07:14 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:14.822Z Local: 2/13/2020, 11:07:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:07:14.826Z Local: 2/13/2020, 11:07:14 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:14.827Z Local: 2/13/2020, 11:07:14 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:14.846Z Local: 2/13/2020, 11:07:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:07:14.849Z Local: 2/13/2020, 11:07:14 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:14.851Z Local: 2/13/2020, 11:07:14 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:14.869Z Local: 2/13/2020, 11:07:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:07:14.871Z Local: 2/13/2020, 11:07:14 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:14.872Z Local: 2/13/2020, 11:07:14 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:14.900Z Local: 2/13/2020, 11:07:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:07:14.903Z Local: 2/13/2020, 11:07:14 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:14.905Z Local: 2/13/2020, 11:07:14 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:14.932Z Local: 2/13/2020, 11:07:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:07:14.935Z Local: 2/13/2020, 11:07:14 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:14.936Z Local: 2/13/2020, 11:07:14 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:14.979Z Local: 2/13/2020, 11:07:14 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:07:14.982Z Local: 2/13/2020, 11:07:14 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:14.982Z Local: 2/13/2020, 11:07:14 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.040Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:07:15.044Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.045Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.085Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:07:15.092Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.093Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.125Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:07:15.128Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.129Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.164Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:07:15.166Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.167Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.210Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:07:15.214Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.215Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.273Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:07:15.279Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.280Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.358Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T15:07:15.362Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.363Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.444Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T15:07:15.447Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.448Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.550Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T15:07:15.552Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.556Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.655Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T15:07:15.662Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.662Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.748Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T15:07:15.750Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.751Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.856Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T15:07:15.862Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.863Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:15.968Z Local: 2/13/2020, 11:07:15 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T15:07:15.973Z Local: 2/13/2020, 11:07:15 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:15.975Z Local: 2/13/2020, 11:07:15 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:16.021Z Local: 2/13/2020, 11:07:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T15:07:16.026Z Local: 2/13/2020, 11:07:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:16.027Z Local: 2/13/2020, 11:07:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:16.086Z Local: 2/13/2020, 11:07:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T15:07:16.089Z Local: 2/13/2020, 11:07:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:16.090Z Local: 2/13/2020, 11:07:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:16.129Z Local: 2/13/2020, 11:07:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 75; 
2020-02-13T15:07:16.131Z Local: 2/13/2020, 11:07:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:16.132Z Local: 2/13/2020, 11:07:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:16.179Z Local: 2/13/2020, 11:07:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 78; 
2020-02-13T15:07:16.183Z Local: 2/13/2020, 11:07:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:16.184Z Local: 2/13/2020, 11:07:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:16.254Z Local: 2/13/2020, 11:07:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 81; 
2020-02-13T15:07:16.258Z Local: 2/13/2020, 11:07:16 PM command: SELECT, rowCount: 2 
2020-02-13T15:07:16.259Z Local: 2/13/2020, 11:07:16 PM Sending 2 rows to ::1 with  
2020-02-13T15:07:19.787Z Local: 2/13/2020, 11:07:19 PM SELECT * FROM posts_table WHERE id = '40'; 
2020-02-13T15:07:19.790Z Local: 2/13/2020, 11:07:19 PM command: SELECT, rowCount: 1 
2020-02-13T15:07:19.820Z Local: 2/13/2020, 11:07:19 PM Sending 1 rows to ::1 with  
2020-02-13T15:07:51.233Z Local: 2/13/2020, 11:07:51 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T15:07:51.269Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 1 
2020-02-13T15:07:51.271Z Local: 2/13/2020, 11:07:51 PM Sending 1 rows to ::1 with  
2020-02-13T15:07:51.277Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:07:51.279Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.282Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.294Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:07:51.297Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.299Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.319Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:07:51.322Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.323Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.345Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:07:51.353Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.351Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.373Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:07:51.374Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.375Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.392Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:07:51.394Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.398Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.414Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:07:51.419Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.421Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.444Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:07:51.446Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.451Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.481Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:07:51.486Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.487Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.521Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:07:51.524Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.524Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.552Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:07:51.556Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.556Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.574Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:07:51.576Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.577Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.604Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:07:51.607Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.608Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.635Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:07:51.638Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.639Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.657Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:07:51.658Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.659Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.726Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:07:51.728Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.729Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.797Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T15:07:51.803Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.804Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.875Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T15:07:51.877Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.878Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:51.962Z Local: 2/13/2020, 11:07:51 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T15:07:51.968Z Local: 2/13/2020, 11:07:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:51.969Z Local: 2/13/2020, 11:07:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:52.050Z Local: 2/13/2020, 11:07:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T15:07:52.052Z Local: 2/13/2020, 11:07:52 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:52.053Z Local: 2/13/2020, 11:07:52 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:52.226Z Local: 2/13/2020, 11:07:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T15:07:52.239Z Local: 2/13/2020, 11:07:52 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:52.241Z Local: 2/13/2020, 11:07:52 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:52.326Z Local: 2/13/2020, 11:07:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T15:07:52.329Z Local: 2/13/2020, 11:07:52 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:52.330Z Local: 2/13/2020, 11:07:52 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:52.411Z Local: 2/13/2020, 11:07:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T15:07:52.418Z Local: 2/13/2020, 11:07:52 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:52.420Z Local: 2/13/2020, 11:07:52 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:52.470Z Local: 2/13/2020, 11:07:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T15:07:52.475Z Local: 2/13/2020, 11:07:52 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:52.475Z Local: 2/13/2020, 11:07:52 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:52.538Z Local: 2/13/2020, 11:07:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T15:07:52.541Z Local: 2/13/2020, 11:07:52 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:52.541Z Local: 2/13/2020, 11:07:52 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:52.580Z Local: 2/13/2020, 11:07:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 75; 
2020-02-13T15:07:52.585Z Local: 2/13/2020, 11:07:52 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:52.587Z Local: 2/13/2020, 11:07:52 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:52.625Z Local: 2/13/2020, 11:07:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 78; 
2020-02-13T15:07:52.637Z Local: 2/13/2020, 11:07:52 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:52.638Z Local: 2/13/2020, 11:07:52 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:52.689Z Local: 2/13/2020, 11:07:52 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 81; 
2020-02-13T15:07:52.692Z Local: 2/13/2020, 11:07:52 PM command: SELECT, rowCount: 2 
2020-02-13T15:07:52.693Z Local: 2/13/2020, 11:07:52 PM Sending 2 rows to ::1 with  
2020-02-13T15:07:53.511Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T15:07:53.520Z Local: 2/13/2020, 11:07:53 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T15:07:53.539Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 1 
2020-02-13T15:07:53.542Z Local: 2/13/2020, 11:07:53 PM Sending 1 rows to ::1 with  
2020-02-13T15:07:53.575Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 1 
2020-02-13T15:07:53.577Z Local: 2/13/2020, 11:07:53 PM Sending 1 rows to ::1 with  
2020-02-13T15:07:53.587Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:07:53.591Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.591Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.604Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:07:53.606Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.607Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.624Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:07:53.632Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.633Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.647Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:07:53.651Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.652Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.669Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:07:53.672Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.673Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.686Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:07:53.688Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.689Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.705Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:07:53.708Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.709Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.732Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:07:53.737Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.738Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.757Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:07:53.760Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.760Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.787Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:07:53.792Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.793Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.812Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:07:53.820Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.821Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.838Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:07:53.841Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.842Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.861Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:07:53.865Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.867Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.892Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:07:53.899Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.900Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.927Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:07:53.934Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.936Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.967Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:07:53.972Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.973Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:53.991Z Local: 2/13/2020, 11:07:53 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T15:07:53.994Z Local: 2/13/2020, 11:07:53 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:53.998Z Local: 2/13/2020, 11:07:53 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.028Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T15:07:54.037Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.037Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.070Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T15:07:54.076Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.077Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.113Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T15:07:54.121Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.122Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.155Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T15:07:54.160Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.160Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.196Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T15:07:54.204Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.204Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.241Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T15:07:54.247Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.248Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.289Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T15:07:54.294Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.294Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.337Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T15:07:54.343Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.343Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.386Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T15:07:54.391Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.391Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.437Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T15:07:54.444Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.445Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.494Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T15:07:54.507Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.508Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.553Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T15:07:54.558Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.558Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.594Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T15:07:54.602Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.603Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.643Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T15:07:54.650Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.651Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.681Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T15:07:54.684Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.685Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.718Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T15:07:54.725Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.726Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.767Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T15:07:54.772Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.773Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.808Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T15:07:54.811Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.813Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.854Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T15:07:54.859Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.860Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.901Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T15:07:54.908Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.909Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.951Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T15:07:54.956Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.956Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:54.992Z Local: 2/13/2020, 11:07:54 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T15:07:54.998Z Local: 2/13/2020, 11:07:54 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:54.999Z Local: 2/13/2020, 11:07:54 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:55.034Z Local: 2/13/2020, 11:07:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T15:07:55.039Z Local: 2/13/2020, 11:07:55 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:55.040Z Local: 2/13/2020, 11:07:55 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:55.071Z Local: 2/13/2020, 11:07:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 120; 
2020-02-13T15:07:55.075Z Local: 2/13/2020, 11:07:55 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:55.076Z Local: 2/13/2020, 11:07:55 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:55.127Z Local: 2/13/2020, 11:07:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 123; 
2020-02-13T15:07:55.133Z Local: 2/13/2020, 11:07:55 PM command: SELECT, rowCount: 3 
2020-02-13T15:07:55.134Z Local: 2/13/2020, 11:07:55 PM Sending 3 rows to ::1 with  
2020-02-13T15:07:55.191Z Local: 2/13/2020, 11:07:55 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 126; 
2020-02-13T15:07:55.197Z Local: 2/13/2020, 11:07:55 PM command: SELECT, rowCount: 2 
2020-02-13T15:07:55.198Z Local: 2/13/2020, 11:07:55 PM Sending 2 rows to ::1 with  
2020-02-13T15:07:55.490Z Local: 2/13/2020, 11:07:55 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '85'; 
2020-02-13T15:07:55.503Z Local: 2/13/2020, 11:07:55 PM command: SELECT, rowCount: 1 
2020-02-13T15:07:55.504Z Local: 2/13/2020, 11:07:55 PM Sending 1 rows to ::1 with  
2020-02-13T15:08:42.270Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T15:08:42.276Z Local: 2/13/2020, 11:08:42 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T15:08:42.315Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 1 
2020-02-13T15:08:42.317Z Local: 2/13/2020, 11:08:42 PM Sending 1 rows to ::1 with  
2020-02-13T15:08:42.325Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 1 
2020-02-13T15:08:42.329Z Local: 2/13/2020, 11:08:42 PM Sending 1 rows to ::1 with  
2020-02-13T15:08:42.337Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:08:42.343Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.344Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.357Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:08:42.361Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.363Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.378Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:08:42.381Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.381Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.399Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:08:42.407Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.408Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.433Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:08:42.440Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.441Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.466Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:08:42.474Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.475Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.508Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:08:42.513Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.514Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.547Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:08:42.558Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.561Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.586Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:08:42.593Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.594Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.624Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:08:42.630Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.631Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.666Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:08:42.673Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.674Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.710Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:08:42.717Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.717Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.751Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:08:42.759Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.760Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.801Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:08:42.808Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.809Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.840Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:08:42.845Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.846Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.889Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:08:42.899Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.900Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.945Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T15:08:42.950Z Local: 2/13/2020, 11:08:42 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:42.951Z Local: 2/13/2020, 11:08:42 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:42.995Z Local: 2/13/2020, 11:08:42 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T15:08:43.000Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.001Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.051Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T15:08:43.062Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.062Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.102Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T15:08:43.111Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.112Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.162Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T15:08:43.168Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.169Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.237Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T15:08:43.246Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.248Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.340Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T15:08:43.348Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.349Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.396Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T15:08:43.403Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.404Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.461Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T15:08:43.468Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.469Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.528Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T15:08:43.535Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.536Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.598Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T15:08:43.606Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.607Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.662Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T15:08:43.668Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.669Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.736Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T15:08:43.744Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.744Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.810Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T15:08:43.816Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.817Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.887Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T15:08:43.895Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.896Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:43.978Z Local: 2/13/2020, 11:08:43 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T15:08:43.986Z Local: 2/13/2020, 11:08:43 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:43.988Z Local: 2/13/2020, 11:08:43 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:44.059Z Local: 2/13/2020, 11:08:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T15:08:44.065Z Local: 2/13/2020, 11:08:44 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:44.066Z Local: 2/13/2020, 11:08:44 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:44.149Z Local: 2/13/2020, 11:08:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T15:08:44.158Z Local: 2/13/2020, 11:08:44 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:44.159Z Local: 2/13/2020, 11:08:44 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:44.230Z Local: 2/13/2020, 11:08:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T15:08:44.239Z Local: 2/13/2020, 11:08:44 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:44.240Z Local: 2/13/2020, 11:08:44 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:44.325Z Local: 2/13/2020, 11:08:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T15:08:44.331Z Local: 2/13/2020, 11:08:44 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:44.332Z Local: 2/13/2020, 11:08:44 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:44.394Z Local: 2/13/2020, 11:08:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T15:08:44.400Z Local: 2/13/2020, 11:08:44 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:44.401Z Local: 2/13/2020, 11:08:44 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:44.465Z Local: 2/13/2020, 11:08:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T15:08:44.474Z Local: 2/13/2020, 11:08:44 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:44.476Z Local: 2/13/2020, 11:08:44 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:44.541Z Local: 2/13/2020, 11:08:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T15:08:44.547Z Local: 2/13/2020, 11:08:44 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:44.548Z Local: 2/13/2020, 11:08:44 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:44.603Z Local: 2/13/2020, 11:08:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T15:08:44.611Z Local: 2/13/2020, 11:08:44 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:44.612Z Local: 2/13/2020, 11:08:44 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:44.674Z Local: 2/13/2020, 11:08:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 120; 
2020-02-13T15:08:44.680Z Local: 2/13/2020, 11:08:44 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:44.681Z Local: 2/13/2020, 11:08:44 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:44.740Z Local: 2/13/2020, 11:08:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 123; 
2020-02-13T15:08:44.750Z Local: 2/13/2020, 11:08:44 PM command: SELECT, rowCount: 3 
2020-02-13T15:08:44.750Z Local: 2/13/2020, 11:08:44 PM Sending 3 rows to ::1 with  
2020-02-13T15:08:44.810Z Local: 2/13/2020, 11:08:44 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 126; 
2020-02-13T15:08:44.816Z Local: 2/13/2020, 11:08:44 PM command: SELECT, rowCount: 2 
2020-02-13T15:08:44.817Z Local: 2/13/2020, 11:08:44 PM Sending 2 rows to ::1 with  
2020-02-13T15:17:16.481Z Local: 2/13/2020, 11:17:16 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T15:17:16.511Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 1 
2020-02-13T15:17:16.512Z Local: 2/13/2020, 11:17:16 PM Sending 1 rows to ::1 with  
2020-02-13T15:17:16.525Z Local: 2/13/2020, 11:17:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:17:16.528Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:16.529Z Local: 2/13/2020, 11:17:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:16.547Z Local: 2/13/2020, 11:17:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:17:16.549Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:16.549Z Local: 2/13/2020, 11:17:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:16.574Z Local: 2/13/2020, 11:17:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:17:16.577Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:16.578Z Local: 2/13/2020, 11:17:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:16.597Z Local: 2/13/2020, 11:17:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:17:16.605Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:16.606Z Local: 2/13/2020, 11:17:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:16.647Z Local: 2/13/2020, 11:17:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:17:16.650Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:16.651Z Local: 2/13/2020, 11:17:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:16.691Z Local: 2/13/2020, 11:17:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:17:16.697Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:16.698Z Local: 2/13/2020, 11:17:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:16.741Z Local: 2/13/2020, 11:17:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:17:16.747Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:16.748Z Local: 2/13/2020, 11:17:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:16.813Z Local: 2/13/2020, 11:17:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:17:16.817Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:16.818Z Local: 2/13/2020, 11:17:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:16.864Z Local: 2/13/2020, 11:17:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:17:16.866Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:16.867Z Local: 2/13/2020, 11:17:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:16.911Z Local: 2/13/2020, 11:17:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:17:16.913Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:16.914Z Local: 2/13/2020, 11:17:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:16.972Z Local: 2/13/2020, 11:17:16 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:17:16.978Z Local: 2/13/2020, 11:17:16 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:16.979Z Local: 2/13/2020, 11:17:16 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:17.032Z Local: 2/13/2020, 11:17:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:17:17.038Z Local: 2/13/2020, 11:17:17 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:17.039Z Local: 2/13/2020, 11:17:17 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:17.096Z Local: 2/13/2020, 11:17:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:17:17.098Z Local: 2/13/2020, 11:17:17 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:17.098Z Local: 2/13/2020, 11:17:17 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:17.149Z Local: 2/13/2020, 11:17:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:17:17.152Z Local: 2/13/2020, 11:17:17 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:17.153Z Local: 2/13/2020, 11:17:17 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:17.196Z Local: 2/13/2020, 11:17:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:17:17.201Z Local: 2/13/2020, 11:17:17 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:17.203Z Local: 2/13/2020, 11:17:17 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:17.288Z Local: 2/13/2020, 11:17:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:17:17.295Z Local: 2/13/2020, 11:17:17 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:17.295Z Local: 2/13/2020, 11:17:17 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:17.380Z Local: 2/13/2020, 11:17:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T15:17:17.384Z Local: 2/13/2020, 11:17:17 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:17.385Z Local: 2/13/2020, 11:17:17 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:17.460Z Local: 2/13/2020, 11:17:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T15:17:17.467Z Local: 2/13/2020, 11:17:17 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:17.472Z Local: 2/13/2020, 11:17:17 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:17.558Z Local: 2/13/2020, 11:17:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T15:17:17.562Z Local: 2/13/2020, 11:17:17 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:17.563Z Local: 2/13/2020, 11:17:17 PM Sending 3 rows to ::1 with  
2020-02-13T15:17:17.644Z Local: 2/13/2020, 11:17:17 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T15:17:17.647Z Local: 2/13/2020, 11:17:17 PM command: SELECT, rowCount: 3 
2020-02-13T15:17:17.648Z Local: 2/13/2020, 11:17:17 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.343Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T15:22:49.351Z Local: 2/13/2020, 11:22:49 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T15:22:49.390Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 1 
2020-02-13T15:22:49.394Z Local: 2/13/2020, 11:22:49 PM Sending 1 rows to ::1 with  
2020-02-13T15:22:49.416Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 1 
2020-02-13T15:22:49.417Z Local: 2/13/2020, 11:22:49 PM Sending 1 rows to ::1 with  
2020-02-13T15:22:49.429Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:22:49.435Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.437Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.464Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:22:49.472Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.473Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.496Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:22:49.502Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.505Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.530Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:22:49.540Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.541Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.566Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:22:49.573Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.574Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.607Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:22:49.613Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.614Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.656Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:22:49.665Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.665Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.703Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:22:49.711Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.712Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.762Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:22:49.770Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.771Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.817Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:22:49.824Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.826Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.871Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:22:49.879Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.880Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.929Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:22:49.937Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.938Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:49.987Z Local: 2/13/2020, 11:22:49 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:22:49.998Z Local: 2/13/2020, 11:22:49 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:49.999Z Local: 2/13/2020, 11:22:49 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.079Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:22:50.086Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.087Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.140Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:22:50.147Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.147Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.212Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:22:50.221Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.222Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.283Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T15:22:50.301Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.303Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.378Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T15:22:50.386Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.387Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.459Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T15:22:50.469Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.476Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.522Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T15:22:50.530Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.532Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.590Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T15:22:50.602Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.604Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.677Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T15:22:50.688Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.689Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.767Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T15:22:50.776Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.777Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.817Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T15:22:50.824Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.825Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.881Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T15:22:50.890Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.891Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:50.943Z Local: 2/13/2020, 11:22:50 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T15:22:50.950Z Local: 2/13/2020, 11:22:50 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:50.950Z Local: 2/13/2020, 11:22:50 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.008Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T15:22:51.017Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.017Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.079Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T15:22:51.085Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.087Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.165Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T15:22:51.177Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.178Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.245Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T15:22:51.251Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.252Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.308Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T15:22:51.315Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.316Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.375Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T15:22:51.381Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.382Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.436Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T15:22:51.445Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.446Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.503Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T15:22:51.515Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.516Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.575Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 102; 
2020-02-13T15:22:51.582Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.582Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.641Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 105; 
2020-02-13T15:22:51.648Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.648Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.700Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 108; 
2020-02-13T15:22:51.711Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.712Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.787Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 111; 
2020-02-13T15:22:51.794Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.795Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.857Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 114; 
2020-02-13T15:22:51.863Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.864Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.918Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 117; 
2020-02-13T15:22:51.926Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.927Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:51.980Z Local: 2/13/2020, 11:22:51 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 120; 
2020-02-13T15:22:51.988Z Local: 2/13/2020, 11:22:51 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:51.989Z Local: 2/13/2020, 11:22:51 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:52.052Z Local: 2/13/2020, 11:22:52 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 123; 
2020-02-13T15:22:52.061Z Local: 2/13/2020, 11:22:52 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:52.062Z Local: 2/13/2020, 11:22:52 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:52.128Z Local: 2/13/2020, 11:22:52 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 126; 
2020-02-13T15:22:52.137Z Local: 2/13/2020, 11:22:52 PM command: SELECT, rowCount: 2 
2020-02-13T15:22:52.138Z Local: 2/13/2020, 11:22:52 PM Sending 2 rows to ::1 with  
2020-02-13T15:22:55.858Z Local: 2/13/2020, 11:22:55 PM SELECT 
    id,
    name,
    row_to_json(producer) AS producer,
    price,
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on 
    FROM items_table WHERE id = '85'; 
2020-02-13T15:22:55.862Z Local: 2/13/2020, 11:22:55 PM Sending 1 rows to ::1 with  
2020-02-13T15:22:55.861Z Local: 2/13/2020, 11:22:55 PM command: SELECT, rowCount: 1 
2020-02-13T15:22:58.600Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 1 OFFSET 3; 
2020-02-13T15:22:58.606Z Local: 2/13/2020, 11:22:58 PM SELECT COUNT(*) FROM items_table; 
2020-02-13T15:22:58.607Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 1 
2020-02-13T15:22:58.608Z Local: 2/13/2020, 11:22:58 PM Sending 1 rows to ::1 with  
2020-02-13T15:22:58.612Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 1 
2020-02-13T15:22:58.618Z Local: 2/13/2020, 11:22:58 PM Sending 1 rows to ::1 with  
2020-02-13T15:22:58.631Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:22:58.635Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.638Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.645Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:22:58.652Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.651Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.664Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:22:58.667Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.668Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.682Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:22:58.687Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.691Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.704Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:22:58.709Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.710Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.732Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:22:58.743Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.744Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.773Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:22:58.778Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.778Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.799Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:22:58.810Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.811Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.831Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:22:58.834Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.836Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.877Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:22:58.881Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.882Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.913Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:22:58.919Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.920Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.950Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:22:58.959Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.960Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:58.987Z Local: 2/13/2020, 11:22:58 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:22:58.992Z Local: 2/13/2020, 11:22:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:58.993Z Local: 2/13/2020, 11:22:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.020Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:22:59.027Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.027Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.059Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:22:59.065Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.066Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.107Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:22:59.112Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.113Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.161Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 48; 
2020-02-13T15:22:59.168Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.169Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.210Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 51; 
2020-02-13T15:22:59.215Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.216Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.257Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 54; 
2020-02-13T15:22:59.263Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.263Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.309Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 57; 
2020-02-13T15:22:59.315Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.314Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.363Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 60; 
2020-02-13T15:22:59.369Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.370Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.411Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 63; 
2020-02-13T15:22:59.417Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.418Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.469Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 66; 
2020-02-13T15:22:59.476Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.477Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.524Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 69; 
2020-02-13T15:22:59.530Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.530Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.585Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 72; 
2020-02-13T15:22:59.594Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.595Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.630Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 75; 
2020-02-13T15:22:59.637Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.639Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.680Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 78; 
2020-02-13T15:22:59.688Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.690Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.728Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 81; 
2020-02-13T15:22:59.734Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.736Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.779Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 84; 
2020-02-13T15:22:59.782Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.783Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.824Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 87; 
2020-02-13T15:22:59.829Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.830Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.873Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 90; 
2020-02-13T15:22:59.878Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.879Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:22:59.943Z Local: 2/13/2020, 11:22:59 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 93; 
2020-02-13T15:22:59.951Z Local: 2/13/2020, 11:22:59 PM command: SELECT, rowCount: 3 
2020-02-13T15:22:59.953Z Local: 2/13/2020, 11:22:59 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.025Z Local: 2/13/2020, 11:23:00 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 96; 
2020-02-13T15:23:00.030Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.031Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.076Z Local: 2/13/2020, 11:23:00 PM SELECT 
    id, 
    name,
    row_to_json(producer) AS producer, 
    price, 
    unit,
    description,
    array_to_json(spec) AS spec,
    cover_img,
    array_to_json(imgs) AS imgs,
    create_on
    FROM items_table AS items_table ORDER BY create_on DESC LIMIT 3 OFFSET 99; 
2020-02-13T15:23:00.081Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.081Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.123Z Local: 2/13/2020, 11:23:00 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T15:23:00.127Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 1 
2020-02-13T15:23:00.128Z Local: 2/13/2020, 11:23:00 PM Sending 1 rows to ::1 with  
2020-02-13T15:23:00.159Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:23:00.163Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.163Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.177Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:23:00.179Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.180Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.197Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:23:00.199Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.200Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.334Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:23:00.340Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.341Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.359Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:23:00.362Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.363Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.386Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:23:00.391Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.392Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.530Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:23:00.532Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.535Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.559Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:23:00.562Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.563Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.586Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:23:00.591Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.591Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.622Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:23:00.628Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.629Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.650Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:23:00.654Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.655Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.680Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:23:00.684Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.683Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.704Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:23:00.708Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.709Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.740Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:23:00.744Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.745Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.781Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:23:00.787Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.788Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.850Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:23:00.853Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.854Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.925Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T15:23:00.927Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.927Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:00.997Z Local: 2/13/2020, 11:23:00 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T15:23:00.998Z Local: 2/13/2020, 11:23:00 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:00.999Z Local: 2/13/2020, 11:23:00 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:01.080Z Local: 2/13/2020, 11:23:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T15:23:01.081Z Local: 2/13/2020, 11:23:01 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:01.082Z Local: 2/13/2020, 11:23:01 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:01.303Z Local: 2/13/2020, 11:23:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T15:23:01.307Z Local: 2/13/2020, 11:23:01 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:01.307Z Local: 2/13/2020, 11:23:01 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:01.387Z Local: 2/13/2020, 11:23:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T15:23:01.391Z Local: 2/13/2020, 11:23:01 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:01.392Z Local: 2/13/2020, 11:23:01 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:01.459Z Local: 2/13/2020, 11:23:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T15:23:01.461Z Local: 2/13/2020, 11:23:01 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:01.460Z Local: 2/13/2020, 11:23:01 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:01.530Z Local: 2/13/2020, 11:23:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T15:23:01.531Z Local: 2/13/2020, 11:23:01 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:01.532Z Local: 2/13/2020, 11:23:01 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:01.575Z Local: 2/13/2020, 11:23:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T15:23:01.578Z Local: 2/13/2020, 11:23:01 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:01.578Z Local: 2/13/2020, 11:23:01 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:01.626Z Local: 2/13/2020, 11:23:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T15:23:01.628Z Local: 2/13/2020, 11:23:01 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:01.629Z Local: 2/13/2020, 11:23:01 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:01.662Z Local: 2/13/2020, 11:23:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 75; 
2020-02-13T15:23:01.664Z Local: 2/13/2020, 11:23:01 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:01.665Z Local: 2/13/2020, 11:23:01 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:01.707Z Local: 2/13/2020, 11:23:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 78; 
2020-02-13T15:23:01.709Z Local: 2/13/2020, 11:23:01 PM command: SELECT, rowCount: 3 
2020-02-13T15:23:01.710Z Local: 2/13/2020, 11:23:01 PM Sending 3 rows to ::1 with  
2020-02-13T15:23:01.894Z Local: 2/13/2020, 11:23:01 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 81; 
2020-02-13T15:23:01.898Z Local: 2/13/2020, 11:23:01 PM command: SELECT, rowCount: 2 
2020-02-13T15:23:01.899Z Local: 2/13/2020, 11:23:01 PM Sending 2 rows to ::1 with  
2020-02-13T15:23:12.675Z Local: 2/13/2020, 11:23:12 PM SELECT * FROM posts_table WHERE id = '28'; 
2020-02-13T15:23:12.710Z Local: 2/13/2020, 11:23:12 PM command: SELECT, rowCount: 1 
2020-02-13T15:23:12.713Z Local: 2/13/2020, 11:23:12 PM Sending 1 rows to ::1 with  
2020-02-13T15:39:57.196Z Local: 2/13/2020, 11:39:57 PM SELECT COUNT(*) FROM posts_table; 
2020-02-13T15:39:57.284Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 1 
2020-02-13T15:39:57.286Z Local: 2/13/2020, 11:39:57 PM Sending 1 rows to ::1 with  
2020-02-13T15:39:57.296Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T15:39:57.305Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.307Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.319Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T15:39:57.324Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.325Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.338Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T15:39:57.340Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.341Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.358Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T15:39:57.360Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.361Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.379Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T15:39:57.381Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.382Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.405Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T15:39:57.407Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.408Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.442Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T15:39:57.444Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.445Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.474Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T15:39:57.477Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.478Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.518Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T15:39:57.524Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.525Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.551Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T15:39:57.555Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.556Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.581Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T15:39:57.584Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.586Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.607Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T15:39:57.610Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.611Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.643Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T15:39:57.646Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.647Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.682Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T15:39:57.687Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.689Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.721Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T15:39:57.727Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.728Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.792Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T15:39:57.795Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.796Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.881Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T15:39:57.886Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.888Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:57.976Z Local: 2/13/2020, 11:39:57 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T15:39:57.978Z Local: 2/13/2020, 11:39:57 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:57.979Z Local: 2/13/2020, 11:39:57 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:58.065Z Local: 2/13/2020, 11:39:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T15:39:58.071Z Local: 2/13/2020, 11:39:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:58.072Z Local: 2/13/2020, 11:39:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:58.159Z Local: 2/13/2020, 11:39:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T15:39:58.161Z Local: 2/13/2020, 11:39:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:58.162Z Local: 2/13/2020, 11:39:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:58.261Z Local: 2/13/2020, 11:39:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T15:39:58.264Z Local: 2/13/2020, 11:39:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:58.263Z Local: 2/13/2020, 11:39:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:58.364Z Local: 2/13/2020, 11:39:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T15:39:58.369Z Local: 2/13/2020, 11:39:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:58.371Z Local: 2/13/2020, 11:39:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:58.475Z Local: 2/13/2020, 11:39:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T15:39:58.477Z Local: 2/13/2020, 11:39:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:58.478Z Local: 2/13/2020, 11:39:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:58.540Z Local: 2/13/2020, 11:39:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T15:39:58.544Z Local: 2/13/2020, 11:39:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:58.552Z Local: 2/13/2020, 11:39:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:58.606Z Local: 2/13/2020, 11:39:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T15:39:58.609Z Local: 2/13/2020, 11:39:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:58.610Z Local: 2/13/2020, 11:39:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:58.671Z Local: 2/13/2020, 11:39:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 75; 
2020-02-13T15:39:58.674Z Local: 2/13/2020, 11:39:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:58.675Z Local: 2/13/2020, 11:39:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:58.740Z Local: 2/13/2020, 11:39:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 78; 
2020-02-13T15:39:58.743Z Local: 2/13/2020, 11:39:58 PM command: SELECT, rowCount: 3 
2020-02-13T15:39:58.744Z Local: 2/13/2020, 11:39:58 PM Sending 3 rows to ::1 with  
2020-02-13T15:39:58.813Z Local: 2/13/2020, 11:39:58 PM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 81; 
2020-02-13T15:39:58.828Z Local: 2/13/2020, 11:39:58 PM command: SELECT, rowCount: 2 
2020-02-13T15:39:58.829Z Local: 2/13/2020, 11:39:58 PM Sending 2 rows to ::1 with  
2020-02-13T16:59:13.988Z Local: 2/14/2020, 12:59:13 AM SELECT COUNT(*) FROM posts_table; 
2020-02-13T16:59:14.796Z Local: 2/14/2020, 12:59:14 AM command: SELECT, rowCount: 1 
2020-02-13T16:59:14.798Z Local: 2/14/2020, 12:59:14 AM Sending 1 rows to ::1 with  
2020-02-13T16:59:14.821Z Local: 2/14/2020, 12:59:14 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T16:59:14.895Z Local: 2/14/2020, 12:59:14 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:14.896Z Local: 2/14/2020, 12:59:14 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:14.907Z Local: 2/14/2020, 12:59:14 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T16:59:14.914Z Local: 2/14/2020, 12:59:14 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:14.914Z Local: 2/14/2020, 12:59:14 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:14.930Z Local: 2/14/2020, 12:59:14 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T16:59:14.931Z Local: 2/14/2020, 12:59:14 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:14.932Z Local: 2/14/2020, 12:59:14 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:14.955Z Local: 2/14/2020, 12:59:14 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T16:59:14.959Z Local: 2/14/2020, 12:59:14 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:14.960Z Local: 2/14/2020, 12:59:14 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:14.984Z Local: 2/14/2020, 12:59:14 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T16:59:14.986Z Local: 2/14/2020, 12:59:14 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:14.987Z Local: 2/14/2020, 12:59:14 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.011Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T16:59:15.014Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.014Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.049Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T16:59:15.052Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.055Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.083Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T16:59:15.086Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.087Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.123Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T16:59:15.129Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.131Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.167Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T16:59:15.169Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.170Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.214Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T16:59:15.218Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.220Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.262Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T16:59:15.267Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.268Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.311Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T16:59:15.314Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.315Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.353Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T16:59:15.358Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.359Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.400Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T16:59:15.404Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.404Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.476Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T16:59:15.481Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.483Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.559Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T16:59:15.562Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.563Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.641Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T16:59:15.646Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.648Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.746Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T16:59:15.750Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.751Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:15.862Z Local: 2/14/2020, 12:59:15 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T16:59:15.866Z Local: 2/14/2020, 12:59:15 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:15.867Z Local: 2/14/2020, 12:59:15 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:16.239Z Local: 2/14/2020, 12:59:16 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T16:59:16.248Z Local: 2/14/2020, 12:59:16 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:16.248Z Local: 2/14/2020, 12:59:16 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:16.333Z Local: 2/14/2020, 12:59:16 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T16:59:16.336Z Local: 2/14/2020, 12:59:16 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:16.337Z Local: 2/14/2020, 12:59:16 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:16.405Z Local: 2/14/2020, 12:59:16 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T16:59:16.408Z Local: 2/14/2020, 12:59:16 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:16.409Z Local: 2/14/2020, 12:59:16 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:16.448Z Local: 2/14/2020, 12:59:16 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T16:59:16.451Z Local: 2/14/2020, 12:59:16 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:16.452Z Local: 2/14/2020, 12:59:16 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:16.504Z Local: 2/14/2020, 12:59:16 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T16:59:16.510Z Local: 2/14/2020, 12:59:16 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:16.509Z Local: 2/14/2020, 12:59:16 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:16.554Z Local: 2/14/2020, 12:59:16 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 75; 
2020-02-13T16:59:16.557Z Local: 2/14/2020, 12:59:16 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:16.559Z Local: 2/14/2020, 12:59:16 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:16.595Z Local: 2/14/2020, 12:59:16 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 78; 
2020-02-13T16:59:16.597Z Local: 2/14/2020, 12:59:16 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:16.598Z Local: 2/14/2020, 12:59:16 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:16.644Z Local: 2/14/2020, 12:59:16 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 81; 
2020-02-13T16:59:16.648Z Local: 2/14/2020, 12:59:16 AM command: SELECT, rowCount: 2 
2020-02-13T16:59:16.649Z Local: 2/14/2020, 12:59:16 AM Sending 2 rows to ::1 with  
2020-02-13T16:59:17.912Z Local: 2/14/2020, 12:59:17 AM SELECT * FROM posts_table WHERE id = '54'; 
2020-02-13T16:59:17.916Z Local: 2/14/2020, 12:59:17 AM command: SELECT, rowCount: 1 
2020-02-13T16:59:17.919Z Local: 2/14/2020, 12:59:17 AM Sending 1 rows to ::1 with  
2020-02-13T16:59:20.543Z Local: 2/14/2020, 12:59:20 AM SELECT COUNT(*) FROM posts_table; 
2020-02-13T16:59:20.546Z Local: 2/14/2020, 12:59:20 AM Sending 1 rows to ::1 with  
2020-02-13T16:59:20.546Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 1 
2020-02-13T16:59:20.560Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 0; 
2020-02-13T16:59:20.563Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.564Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.577Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 3; 
2020-02-13T16:59:20.585Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.587Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.609Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 6; 
2020-02-13T16:59:20.613Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.615Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.637Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 9; 
2020-02-13T16:59:20.639Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.644Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.671Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 12; 
2020-02-13T16:59:20.678Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.682Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.710Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 15; 
2020-02-13T16:59:20.717Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.718Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.752Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 18; 
2020-02-13T16:59:20.759Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.760Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.790Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 21; 
2020-02-13T16:59:20.795Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.796Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.825Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 24; 
2020-02-13T16:59:20.829Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.830Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.871Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 27; 
2020-02-13T16:59:20.875Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.877Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.906Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 30; 
2020-02-13T16:59:20.911Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.912Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.936Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 33; 
2020-02-13T16:59:20.938Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.940Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:20.969Z Local: 2/14/2020, 12:59:20 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 36; 
2020-02-13T16:59:20.972Z Local: 2/14/2020, 12:59:20 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:20.974Z Local: 2/14/2020, 12:59:20 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:21.014Z Local: 2/14/2020, 12:59:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 39; 
2020-02-13T16:59:21.017Z Local: 2/14/2020, 12:59:21 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:21.018Z Local: 2/14/2020, 12:59:21 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:21.066Z Local: 2/14/2020, 12:59:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 42; 
2020-02-13T16:59:21.070Z Local: 2/14/2020, 12:59:21 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:21.071Z Local: 2/14/2020, 12:59:21 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:21.140Z Local: 2/14/2020, 12:59:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 45; 
2020-02-13T16:59:21.143Z Local: 2/14/2020, 12:59:21 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:21.147Z Local: 2/14/2020, 12:59:21 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:21.233Z Local: 2/14/2020, 12:59:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 48; 
2020-02-13T16:59:21.236Z Local: 2/14/2020, 12:59:21 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:21.237Z Local: 2/14/2020, 12:59:21 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:21.355Z Local: 2/14/2020, 12:59:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 51; 
2020-02-13T16:59:21.361Z Local: 2/14/2020, 12:59:21 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:21.363Z Local: 2/14/2020, 12:59:21 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:21.848Z Local: 2/14/2020, 12:59:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 54; 
2020-02-13T16:59:21.852Z Local: 2/14/2020, 12:59:21 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:21.853Z Local: 2/14/2020, 12:59:21 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:21.918Z Local: 2/14/2020, 12:59:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 57; 
2020-02-13T16:59:21.920Z Local: 2/14/2020, 12:59:21 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:21.921Z Local: 2/14/2020, 12:59:21 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:21.997Z Local: 2/14/2020, 12:59:21 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 60; 
2020-02-13T16:59:21.999Z Local: 2/14/2020, 12:59:21 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:22.000Z Local: 2/14/2020, 12:59:22 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:22.083Z Local: 2/14/2020, 12:59:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 63; 
2020-02-13T16:59:22.086Z Local: 2/14/2020, 12:59:22 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:22.087Z Local: 2/14/2020, 12:59:22 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:22.160Z Local: 2/14/2020, 12:59:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 66; 
2020-02-13T16:59:22.164Z Local: 2/14/2020, 12:59:22 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:22.165Z Local: 2/14/2020, 12:59:22 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:22.213Z Local: 2/14/2020, 12:59:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 69; 
2020-02-13T16:59:22.216Z Local: 2/14/2020, 12:59:22 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:22.217Z Local: 2/14/2020, 12:59:22 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:22.281Z Local: 2/14/2020, 12:59:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 72; 
2020-02-13T16:59:22.283Z Local: 2/14/2020, 12:59:22 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:22.284Z Local: 2/14/2020, 12:59:22 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:22.356Z Local: 2/14/2020, 12:59:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 75; 
2020-02-13T16:59:22.364Z Local: 2/14/2020, 12:59:22 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:22.366Z Local: 2/14/2020, 12:59:22 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:22.436Z Local: 2/14/2020, 12:59:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 78; 
2020-02-13T16:59:22.442Z Local: 2/14/2020, 12:59:22 AM command: SELECT, rowCount: 3 
2020-02-13T16:59:22.444Z Local: 2/14/2020, 12:59:22 AM Sending 3 rows to ::1 with  
2020-02-13T16:59:22.671Z Local: 2/14/2020, 12:59:22 AM SELECT * FROM posts_table ORDER BY latest_modify DESC LIMIT 3 OFFSET 81; 
2020-02-13T16:59:22.680Z Local: 2/14/2020, 12:59:22 AM command: SELECT, rowCount: 2 
2020-02-13T16:59:22.681Z Local: 2/14/2020, 12:59:22 AM Sending 2 rows to ::1 with  
